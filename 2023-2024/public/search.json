[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Derniers cours",
    "section": "",
    "text": "Chapitre 1: Programme et variables\n\n\n\n2SNT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 2: Conditions\n\n\n\n2SNT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 3: Boucles et fonctions\n\n\n\n2SNT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPartie 1: Les données structurées\n\n\n\n2SNT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPartie 2: Internet\n\n\n\n2SNT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPartie 3: Le Web\n\n\n\n2SNT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPartie 4: Localisation, cartographie et mobilité\n\n\n\n2SNT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPartie 5: La photographie numérique\n\n\n\n2SNT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPartie 6: Les réseaux sociaux\n\n\n\n2SNT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPartie 7: Informatique embarquée\n\n\n\n2SNT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 1: Quelques dates marquantes de l’histoire de l’informatique\n\n\n\n1NSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 2: Technologie et théorie\n\n\n\n1NSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 1: Représentation des entiers naturels\n\n\n\n1NSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 2: Représentation des entiers relatifs\n\n\n\n1NSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 3: Représentation des nombres à virgule\n\n\n\n1NSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 4: Représentation des textes\n\n\n\n1NSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 5: Les booléens\n\n\n\n1NSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 1: Introduction aux tableaux\n\n\n\n1NSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 2: Usages avancés des tableaux\n\n\n\n1NSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 3: Dictionnaires\n\n\n\n1NSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 1: Tables de données\n\n\n\n1NSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 2: Utilisation de la librairie pandas\n\n\n\n1NSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 1: Généralités sur le web\n\n\n\n1NSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 2: Ecriture d’une page HTML\n\n\n\n1NSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 3: Mise en forme avec CSS\n\n\n\n1NSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 4: Gestion des événements en javascript\n\n\n\n1NSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 5: Formulaire d’une page web\n\n\n\n1NSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 6: Interaction client–serveur\n\n\n\n1NSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 1: Architecture d’un ordinateur\n\n\n\n1NSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 2: Jeu d’instructions du processeur\n\n\n\n1NSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 3: Systèmes d’exploitation\n\n\n\n1NSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 4: Réseaux\n\n\n\n1NSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 5: Robotique\n\n\n\n1NSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 6: Circuits combinatoires*\n\n\n\n1NSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 1: Les ingrédients d’un algorithme\n\n\n\n1NSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 2: Types\n\n\n\n1NSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 3: Entrées et sorties\n\n\n\n1NSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 4: Conditions\n\n\n\n1NSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 5: Boucles\n\n\n\n1NSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 6: Fonctions\n\n\n\n1NSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 7: Comparaisons de langages\n\n\n\n1NSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 8: Mise au point d’un programme\n\n\n\n1NSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 1: Parcours séquentiel d’un tableau\n\n\n\n1NSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 2: Algorithmes de recherche\n\n\n\n1NSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 3: Algorithmes de tri\n\n\n\n1NSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 4: Algorithmes gloutons\n\n\n\n1NSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 5: Algorithme des k plus proches voisins\n\n\n\n1NSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 0: Révisions\n\n\n\nTNSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 1: Interface et implémentation\n\n\n\nTNSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 2: Programmation objet\n\n\n\nTNSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 3: Structures linéaires: piles, files\n\n\n\nTNSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 4: Arbres\n\n\n\nTNSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 5: Graphes*\n\n\n\nTNSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 1: Les bases de données relationnelles\n\n\n\nTNSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 2: Schéma relationnel\n\n\n\nTNSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 3: Langage SQL\n\n\n\nTNSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 1: Système sur puce\n\n\n\nTNSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 2: Gestion des processus par un système d’exploitation\n\n\n\nTNSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 3: Protocoles de routage\n\n\n\nTNSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 4: Sécurisation des communications*\n\n\n\nTNSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 1: Modules et documentation\n\n\n\nTNSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 2: Mise au point des programmes\n\n\n\nTNSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 3: Fonctions récursives\n\n\n\nTNSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 4: Paradigmes de programmation*\n\n\n\nTNSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 5: Notion de programme*\n\n\n\nTNSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 0: Rappels\n\n\n\nTNSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 1: Algorithmes sur les arbres binaires\n\n\n\nTNSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 2: Diviser pour régner\n\n\n\nTNSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 3: Algorithmes sur les graphes*\n\n\n\nTNSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 4: Programmation dynamique*\n\n\n\nTNSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 5: Recherche textuelle*\n\n\n\nTNSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExercices\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nQuiz\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 1: L’atmosphère terrestre et la vie\n\n\n\nTSCI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 2: La complexité du système climatique\n\n\n\nTSCI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 3: Le climat du futur\n\n\n\nTSCI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 4: Énergie choix de développement et futur climatique\n\n\n\nTSCI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 5: Deux siècles d’énergie électrique\n\n\n\nTSCI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 6: Les atouts de l’électricité\n\n\n\nTSCI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 7: Optimisation du transport de l’électricité\n\n\n\nTSCI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 8: Choix énergétiques et impacts sur les sociétés\n\n\n\nTSCI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 10: L’évolution comme grille de lecture du monde\n\n\n\nTSCI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 11: L’évolution humaine\n\n\n\nTSCI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 12: Les modèles démographiques\n\n\n\nTSCI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 13: L’intelligence artificielle\n\n\n\nTSCI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 9: La biodiversité et son évolution\n\n\n\nTSCI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAucun article correspondant"
  },
  {
    "objectID": "1g/nsi/index.html",
    "href": "1g/nsi/index.html",
    "title": "NSI",
    "section": "",
    "text": "Partie 1: Histoire de l’informatique\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPartie 2: Représentation des données : types et valeurs de base\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPartie 3: Représentation des données : types construits\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPartie 4: Traitement de données en tables\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPartie 5: Interactions entre l’homme et la machine sur le Web\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPartie 6: Architectures matérielles et systèmes d’exploitation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPartie 7: Langages et programmation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPartie 8: Algorithmique\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAucun article correspondant",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI"
    ]
  },
  {
    "objectID": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/5-robotique/index.html",
    "href": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/5-robotique/index.html",
    "title": "Chapitre 5: Robotique",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nPériphériques d’entrée et de sortie\nInterface Homme- Machine (IHM)\nIdentifier le rôle des capteurs et actionneurs.\nRéaliser par programmation une IHM répondant à un cahier des charges donné.\nLes activités peuvent être développées sur des objets connectés, des systèmes embarqués ou robots.\nDans ce chapitre, nous allons aborder l’utilisation de périphériques d’entrée et de sortie dans le cadre de la robotique en utilisant des robots éducatifs Lego NXT.\nA la différence d’un simple ordinateur, les robots sont capables d’interagir avec le monde extérieur en utilisant:\nPour vous aider tout au long de cette partie, vous disposez de la notice du robot en anglais auquel le texte du TP se réfère.\nCependant, si vous n’êtes pas à l’aise avec l’anglais, l’association robotique de Sophia-Antipolis pobot.org propose également un excellent tutoriel pour utiliser le robot nxt.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 6: Architectures matérielles et systèmes d’exploitation",
      "Chapitre 5: Robotique"
    ]
  },
  {
    "objectID": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/5-robotique/index.html#réaliser-le-montage-du-robot",
    "href": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/5-robotique/index.html#réaliser-le-montage-du-robot",
    "title": "Chapitre 5: Robotique",
    "section": "1 Réaliser le montage du robot",
    "text": "1 Réaliser le montage du robot\nLe robot est peut-être en partie monté, utiliser l’image suivante pour le vérifier. Si besoin vous référer à la notice officielle.\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nrobot chenillard\n\n\nMettre en place les capteurs\n\nde contact (vers l’avant du robot)\nde couleur (vers le sol, à 0,5 cm du sol environ)\n\n[[plus|S’il vous reste du temps]] | |- Réaliser les tests de fonctionnement de ces capteurs proposés dans la notice (aux pages 26 et 27) |- Pour faire de la place en mémoire, effacer les programmes ajoutés par les élèves avant vous: menu NXT Files (my files)",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 6: Architectures matérielles et systèmes d’exploitation",
      "Chapitre 5: Robotique"
    ]
  },
  {
    "objectID": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/5-robotique/index.html#utilisation-du-logciel-ev3",
    "href": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/5-robotique/index.html#utilisation-du-logciel-ev3",
    "title": "Chapitre 5: Robotique",
    "section": "2 Utilisation du logciel EV3",
    "text": "2 Utilisation du logciel EV3\nVous allez apprendre à configurer un projet dans le logiciel EV3, puis réaliserez quelques tests sur vos capteurs avant de créer votre premier programme, le très classique suiveur de lignes.\nN’oubliez pas de prendre des notes au fur et à mesure de vos avancées.\n\n2.1 Configuration du projet\n\nLancer le logiciel EV3. Cliquer sur l’onglet + en haut à gauche pour démarrer un nouveau projet.\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\ndémarrer projet\n\n\nConnecter le robot sur un port USB à l’aide d’un câble approprié. Démarrer le robot pour qu’il soit détecté par le logiciel\nOuvrir l’aide EV3 et suivre le tutoriel sur les généralités.\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\ngénéralités\n\n\nSur la “Page du Matériel” : lire attentivement les explications pour renseigner les ports sur lesquels vous avez branchés les 2 moteurs (B et C), le gros moteur central (A), le capteur de contact (port 1 ou 2) et le capteur de couleur (port3)\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\npage du matériel\n\n\nConfigurez le projet dans la fenêtre matériel avec ces renseignements\n\n\n\n2.2 Réalisation des tests\n\nRéalisez alors des tests sur votre robot et lire les valeurs affichées pour le capteur de contact, lorsqu’il est :\nenfoncé\nrelâché\nRéalisez les tests sur votre robot et lire les valeurs affichées pour le capteur de couleur lorsque l’on dispose sous le capteur un objet de couleur\nbleu\nvert\nrouge\njaune\nRéalisez les tests sur ce même capteur de couleur, mais en mode “mesure d’intensité ambiante”. Noter la valeur lorsque l’on dispose devant le capteur un objet :\nBlanc\nNoir\nRefaire le même test, mais cette fois ci en mode “mesure d’intensité réfléchie” (le capteur émettant de la lumière rouge)\nConsignez tous vos résultats par écrit dans votre cahier : capteurs, ports, conditions d’essais, résultats\nSur la page de l’aide : Programmes : Familiarisez vous avec la programmation par “briques”\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nprogrammation briques",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 6: Architectures matérielles et systèmes d’exploitation",
      "Chapitre 5: Robotique"
    ]
  },
  {
    "objectID": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/5-robotique/index.html#le-suiveur-de-ligne",
    "href": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/5-robotique/index.html#le-suiveur-de-ligne",
    "title": "Chapitre 5: Robotique",
    "section": "3 Le suiveur de ligne",
    "text": "3 Le suiveur de ligne\nLe texte original du TP est à l’adresse suivante :\nhttp://www.sitedunxt.fr/articles/articles-4-9-3+faire-du-suivi-de-ligne.php\nLe TP proposé ici a été adapté pour le logiciel EV3, plus récent.\nLe principe de notre programme sera le suivant. Initialement, le robot sera placé de telle sorte qu’il soit centré sur la ligne noire. Le capteur de lumière se trouvant juste au dessus de celle-ci.\nNous allons faire avancer notre robot tout en le faisant tourner d’un côté ou d’un autre.\nLorsqu’il détectera une couleur noire, il avancera en tournant vers la droite. De ce fait, ce léger virage déplacera le capteur de lumière vers un côté de la ligne et il se retrouvera à un moment au dessus de la couleur blanche.\nLe robot aura tout simplement sorti de l’axe de la ligne.\nLorsqu’il détectera une autre couleur que le noir, comme par exemple la couleur blanche de la planche de test, il avancera en tournant cette fois ci vers la gauche.\nAinsi, le robot reviendra vers l’axe de la ligne noire et il aura avancé car les deux roues auront tournées dans le même sens sur une courte distance.\nLe capteur repassant au dessus de la ligne noire, il aura donc fait un cycle complet, à savoir, être sur la ligne puis s’en éloigner et enfin revenir vers cette même ligne.\nLe cœur du programme est là. Il ne suffira plus qu’à faire effectuer ce cycle au robot de manière permanente.\n\n3.1 Réalisation du programme\nCommençons par placer une boucle infinie au début de notre programme. En effet, le suivi de ligne va se faire en permanence :\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nboucle infinie\n\n\nPuis, placez à l’intérieur de cette boucle un bloc “Commutation” paramétré sur le capteur de couleur et réglé sur la couleur noire :\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\ncapteurTest\n\n\nVous devez ici choisir l’option Capteur photosensible du paramètre Action et sélectionner le signe &lt; (plus petit que) dans le paramètre Comparer, en sélectionnant le bouton de gauche représenté par une lumière sombre, de manière à indiquer au bloc “Commutation” d’exécuter le rayon de séquence supérieur (b) condition vrai[/b]) lorsque le capteur de lumière renverra une valeur de luminosité inférieur à la valeur de déclenchement indiqué dans le champ de saisie situé à droite. Cette valeur de déclenchement a une valeur de 50 par défaut. Vous pouvez changer ce réglage.\nSi le capteur identifie devant lui une couleur noire, celle de la ligne, la condition est vrai et le bloc “Commutation” exécutera le bloc placé sur le rayon de séquence supérieur.\nNous allons utiliser un bloc “Déplacement et direction” pour contrôler les deux moteurs de propulsion et le configurer de tel manière que le robot tourne vers la droite : Dans la partie supérieure du bloc de commutation, ajouter le bloc et paramétrer la direction (ici, j’ai choisi 30° de sorte que le robot continue à avancer et ne fasse pas que virer)\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nmoteurs\n\n\nPuis le déplacement vers la gauche : partie inférieure du bloc.\nComme il est là, le programme pourrait fonctionner correctement.\nSi le capteur mesure une valeur inférieure à 50, c’est à dire qu’une couleur sombre comme la couleur noire de la ligne se trouve en face de lui, le rayon de séquence supérieur est exécuté es le robot avance en tournant vers la droite.\nSi le capteur mesure une valeur supérieure à 50, c’est à dire qu’une couleur claire comme la couleur blanche de la planche de test se trouve en face de lui, le rayon de séquence inférieur est exécuté et le robot avance en tournant vers la gauche.\nToutes les valeurs renvoyées par le capteur de lumière se trouvant supérieure à ce seuil, c’est à dire dans la plage de valeur allant de 50 à 100, sont considérées comme faisant parties de la catégorie des couleurs claires. De même, toutes les valeurs inférieures à ce seuil allant de 0 à 49 sont considérées comme des couleurs sombres.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 6: Architectures matérielles et systèmes d’exploitation",
      "Chapitre 5: Robotique"
    ]
  },
  {
    "objectID": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/5-robotique/index.html#comment-utiliser-des-variables-dans-le-logiciel-ev3",
    "href": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/5-robotique/index.html#comment-utiliser-des-variables-dans-le-logiciel-ev3",
    "title": "Chapitre 5: Robotique",
    "section": "4 Comment utiliser des variables dans le logiciel EV3?",
    "text": "4 Comment utiliser des variables dans le logiciel EV3?\nTexte adapté du site du NXT :\nhttp://www.sitedunxt.fr/articles/articles-4-25-2+les-variables-et-les-constantes.php\nDans cette partie du tutoriel consacrée au NXT-G, nous allons aborder le sujet très important que sont les variables et les constantes.\nC’est grâce à ces variables notamment que vos programmes pourront être encore plus complexes et intelligents.\nContrairement au langage Python, dans EV3, la déclaration de variable est obligatoire et doit être faite avant toutes utilisations des variables.\nSi vous ne faites pas de déclaration de variable, vous ne pourrez tous simplement pas utiliser cette variable dans votre programme.\n\nPour déclarer une variable, il faut utiliser le bloc « Variable » (rouge), et cliquer dans le coin supérieur droit : Un menu affiche alors « Ajouter variable »\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nlumière1\n\n\nRenseigner alors le nom de la variable, par exemple « lumiere » pour notre exemple.\nLe bouton en bas à gauche du bloc de configuration vous permet de préciser l’action :\n\n“Lire” la valeur contenue dans celle-ci ou pour “Ecrire” une valeur dans cette même variable.\n“Ecrire”, le bloc “Variable” mémorise la valeur que vous entrez dans le champ nommé “Valeur” juste en dessous.\n\nIci, vous sélectionnerez « écrire » et choisirez le type : « Numérique »\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nlumière2\n\n\n\nAjouter un bloc « boucle » avec répétition infinie.\nAjouter un bloc de mesure de couleur (capteur de couleur)\nAjouter à nouveau le bloc variable « lumiere ». Si un fil de données est connecté au bloc “Variable”, la valeur transporté par ce fil de données est mémorisé dans la variable : connectez alors les 2 derniers blocs comme sur le schéma suivant :\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nlumière3\n\n\nLorsque vous choisissez l’option “Lire”, le bloc “Variable” vous restitue la valeur de cette variable par l’intermédiaire d’un fil de données que vous pouvez utiliser dans votre programme.\nIci, la valeur mesurée par le capteur est mise dans la variable lumiere\n\nModifier ensuite le bloc capteur de couleur pour réaliser une mesure de l’intensité ambiante. Il faudra refaire le fil de données qui se sera effacé.\n\nCompléter alors le programme avec les blocs :\n\n« attendre ». Paramétrer sur 5s.\n« Variable » : Paramétrer pour lire la valeur « numérique » de la variable « lumiere »\n« Texte » : prolonger le fil de données depuis le bloc variable précédent et le relier à A.\n« Afficher » : Le texte à afficher est dans le coin supérieur droit. Choisissez “Relié” comme valeur d’entrée Texte dans le coin supérieur droit du bloc pour afficher une valeur d’entrée Texte acceptant un fil de données. Relier ce fil de données dans la partie inférieure du bloc comme sur le schéma suivant.\n« Attendre » : paramétrer sur 10s\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nlumièrecomplet\n\n\n\n4.1 Pour aller plus loin\nUtiliser le fil de variable avec un sélecteur :\nrappel : pour utiliser une variable : il faut d’abord la déclarer (bloc de variable : écrire)\nPuis lire son contenu\nEt enfin, créer un fil de variable depuis le bloc lecture vers le bloc sélecteur, comme sur le schéma ci dessous :\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\ndétecteur de lumière\n\n\nOn peut utiliser ce morceau de programme pour un projet : détection et recherche de la lumière par exemple : le robot devra retrouver la source de lumière à l’aide de conditions tests que vous devrez établir.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 6: Architectures matérielles et systèmes d’exploitation",
      "Chapitre 5: Robotique"
    ]
  },
  {
    "objectID": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/index.html",
    "href": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/index.html",
    "title": "Partie 6: Architectures matérielles et systèmes d’exploitation",
    "section": "",
    "text": "Chapitre 1: Architecture d’un ordinateur\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 2: Jeu d’instructions du processeur\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 3: Systèmes d’exploitation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 4: Réseaux\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 5: Robotique\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 6: Circuits combinatoires*\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAucun article correspondant",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 6: Architectures matérielles et systèmes d’exploitation"
    ]
  },
  {
    "objectID": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/3-systemes-dexploitation/index.html",
    "href": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/3-systemes-dexploitation/index.html",
    "title": "Chapitre 3: Systèmes d’exploitation",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nSystèmes d’exploitation\nIdentifier les fonctions d’un système d’exploitation.\nUtiliser les commandes de base en ligne de commande.\nGérer les droits et permissions d’accès aux fichiers.\nLes différences entre systèmes d’exploitation libres et propriétaires sont évoquées.\nLes élèves utilisent un système d’exploitation libre.\nIl ne s’agit pas d’une étude théorique des systèmes d’exploitation.\nVoici une courte vidéo de l’institut Mines-Télécom présentant l’histoire des systèmes d’exploitation.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 6: Architectures matérielles et systèmes d’exploitation",
      "Chapitre 3: Systèmes d’exploitation"
    ]
  },
  {
    "objectID": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/3-systemes-dexploitation/index.html#responsabilités-du-système-dexploitation",
    "href": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/3-systemes-dexploitation/index.html#responsabilités-du-système-dexploitation",
    "title": "Chapitre 3: Systèmes d’exploitation",
    "section": "1 Responsabilités du système d’exploitation",
    "text": "1 Responsabilités du système d’exploitation\nLe système d’exploitation a les responsabilités suivantes:\n\nGérer le lancement des diverses applications et donner l’illusion que l’ordinateur est multitâche grâce à l’utilisation de processus;\nidentifier les utilisateurs;\ngérer l’organisation du disque dur et de ses fichiers;\ncontrôler l’accès aux données du disque dur et ressources de l’ordinateur.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 6: Architectures matérielles et systèmes d’exploitation",
      "Chapitre 3: Systèmes d’exploitation"
    ]
  },
  {
    "objectID": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/3-systemes-dexploitation/index.html#émulation-dun-système-linux-grâce-à-jslinux",
    "href": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/3-systemes-dexploitation/index.html#émulation-dun-système-linux-grâce-à-jslinux",
    "title": "Chapitre 3: Systèmes d’exploitation",
    "section": "2 Émulation d’un système Linux grâce à JSlinux",
    "text": "2 Émulation d’un système Linux grâce à JSlinux\nComme nous avons au lycée un système d’exploitation Windows et que le programme officiel demande de travailler sous Linux, nous allons faire le TP de ce chapitre directement dans le navigateur grâce à l’émulateur de système mis au point par Fabrice Bellard accessible à l’adresse :\nhttps://bellard.org/jslinux/vm.html?url=alpine-x86.cfg&mem=192\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nEmulateur JS Linux\n\n\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nUne fois le terminal lancé:\n\nLui demander qui êtes-vous avec la commande: whoami\nAjouter un mot de passe à l’utilisateur root(administrateur du système): passwd root.\nAjouter un nouvel utilisateur: adduser ada, et lui donner un mot de passe de votre choix.\nSur votre ordinateur, télécharger ce fichier zip: https://framagit.org/lyceum/flask-csv/-/archive/master/flask-csv-master.zip puis l’importer grâce à l’icône Upload Files.\nDans l’émulateur Jslinux, déplacer l’archive dans le répertoire /home/ada\n\ndézipper grâce à la commande: unzip flask-csv-master.zip -d /home/ada\nChanger d’utilisateur: su ada.\nSe déplacer dans son dossier utilisateur: cd /home/ada",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 6: Architectures matérielles et systèmes d’exploitation",
      "Chapitre 3: Systèmes d’exploitation"
    ]
  },
  {
    "objectID": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/3-systemes-dexploitation/index.html#quelques-commandes-de-base",
    "href": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/3-systemes-dexploitation/index.html#quelques-commandes-de-base",
    "title": "Chapitre 3: Systèmes d’exploitation",
    "section": "3 Quelques commandes de base",
    "text": "3 Quelques commandes de base\n\n3.1 Où suis-je? pwd\npwd renvoie le dossier courant.\nPar défaut quand on ouvre un terminal on se trouve dans son dossier $HOME:\n\n/home/username pour l’utilisateur username\n/root/ si vous êtes root, l’utilisateur administrateur du système.\n\n\n\n3.2 Naviguer dans le système de fichiers ls et cd\n\nls liste les fichiers et répertoires du dossier courant.\nls chemin/vers/dossier: liste les fichiers et répertoires du dossier donné en argument.\n\nOn peut également se déplacer dans le système de fichiers avec cd pour change directory.\n\ncd root\n\n\n\n3.3 Chemins absolus et relatifs\nLes chemins d’accès peuvent être spécifiées de deux façons:\n\nChemin absolu: commence par un / et précise le chemin complet à partir de la racine du système de fichier. Ex: cd /usr/share/applications\nChemin relatif: pas de slash au début(ou un point: ./) on part du répertoire courant:\n\ncd Music ou cd ./Music\ncd .. pour remonter d’un dossier\ncd ../Documents pour remonter d’un dossier et aller dans le dossier Documents\n\n\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\n\nReprésenter l’arbre des fichiers du dossier flask-csv-master.\nPour chaque fichier indiquer sa taille.\n\n\n\n\n\n\n\n\n3.4 Manipuler les répertoires et fichiers\n\nmkdir rep: crée le répertoire rep (make directory).\ntouch file: crée le fichier file.\ncat fichier: affiche le contenu du fichier file.\n\n\n\n3.5 Connaître les droits sur les fichiers ls -l\nL’option -l pour long précise dans sa sortie:\npermission    type    utilisateur propriétaire    groupe propriétaire    taille    date   nom\nlocalhost:~$ ls -l /home/ada/flask-csv-master\ntotal 20\n-rw-r--r--    1 root     root          1064 Mar 12 15:43 LICENSE\n-rw-r--r--    1 root     root          1456 Mar 12 15:43 README.md\n-rw-r--r--    1 root     root            89 Mar 12 15:43 data.csv\n-rw-r--r--    1 root     root          2227 Mar 12 15:43 flask-csv.py\ndrwxrwxrwx    2 root     root           183 Mar 12 15:43 pages\nLes droits sont sous la forme d rwx rwx rwx.\n\nd indique qu’il s’agit d’un dossier\nr: droit de lecture\nw: droit d’écriture\nx: droit d’exécution\n\nIl y a trois groupes de droits dans l’ordre:\n\nutilisateur\ngroupe\nautres\n\n\n\n-rw-r--r--: fichier avec droit de lecture et d’écriture pour l’utilisateur propriétaire, mais uniquement des droits de lecture pour les membres du groupe propriétaire et les autres utilisateurs.\ndrwxr-xr-x: dossier avec droit de lecture, écriture et exécution pour l’utilisateur propriétaire, mais uniquement des droits de lecture et d’exécution pour les membres du groupe propriétaire et les autres utilisateurs.\n\n\n\nSignifications des droits\n\n\nDroits\nFichier\nDossier\n\n\n\n\nLecture (r)\nLire le contenu du fichier\nAfficher le contenu du répertoire\n\n\nÉcriture (w)\nModifier le fichier\nCréer, supprimer et changer de nom des fichiers qu’il contient\n\n\nExécution (x)\nExécuter le fichier si c’est un programme.\nTraverser le répertoire\n\n\n\n\n\n3.6 Gérer les droits avec chmod\nUn utilisateur a le droit de faire un chmod sur un fichier :\n\ns’il est root ;\nou s’il est le propriétaire du fichier en question.\n\nArticle Wikipédia sur chmod\nLes options passées à la commande chmod sont indiquées comme ceci :\nchmod options modes fichiers\nPour un fichier : chmod [u g o a] [+ - =] [r w x] nom_du_fichier\nPour le contenu d’un répertoire (de façon récursive) : chmod -R [u g o a] [+ - =] [r w x] nom_du_répertoire\nLes lettres u g o a designe les types de propriétaires concernés:\n\nu propriétaire (user)\ng groupe (group)\no les autres (others)\na tous (all)\n\nLes lettres + - = désignent les changements d’état: + et - pour ajouter ou retirer un type de droit aux droits courants, et l’opérateur = pour les écraser.\nLes lettres r w x désignent les permissions: read, write, execute.\n\nDans le cas précédent si l’on souhaite que tous les utilisateurs du groupe docker puissent lire et écrire dans le fichier brouillon.ipynb, on lance la commande chmod g+w sur le fichier:\n\nchmod g+w Documents/git/2heoinfo/flask-csv/brouillon.ipynb\nOn peut alors vérifier le changement de droits avec ls -l\nada@coolerarch:~$ ls -l Documents/git/2heoinfo/flask-csv/\ntotal 28\n-rw-rw-r-- 1 ada docker 2690  4 juil. 10:39 brouillon.ipynb\n...\n\n\n\n\n\n\n\nEn plus: Écriture octale\n\n\n\n\n\n\nPour modifier toutes les permission d’une seule commande, on utilise la notation octale. \n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nLes commandes sont alors condensées pour préciser tous les droits: - chmod 755 mon_dossier donne au propriétaire tous les droits, aux membres du groupe et aux autres les droits de lecture et d’accès. C’est un droit utilisé traditionnellement sur les répertoires. - chmod 644 mon_fichier donne au propriétaire les droits de modification et lecture, aux membres du groupe et aux autres uniquement les droits de lecture. C’est un droit utilisé traditionnellement sur les fichiers.\n\n\n\n\n\n\n\n3.7 Gérer les propriétaires avec chown\nL’utilisateur racine(root) peut changer le propriétaire d’un fichier ou d’un dossier(de l’anglais change owner)\nArticle Wikipédia sur chmod\nLa syntaxe générale de la commande est:\nchown [-hHLPR] [utilisateur][:groupe] cible1 [cible2 ..]\n\n\nRendre l’utilisateur john propriétaire du fichier toto.txt: chown john /home/jane/toto.txt\nPour modifier le propriétaire de tout le contenu d’un dossier : chown -Rf utilisateur1 /home/dossier1\nPour modifier l’utilisateur et le groupe: chown ada:prof /home/jane/toto.txt\n\n\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nRendre l’utilisateur ada propriétaire de tous les fichiers et dossiers de son répertoire HOME: /home/ada.\nVérifier le changement avec ls -l.\n\n\n\n\n\n\n\nInformatique pour tous en classes préparatoires aux grandes écoles de Benjamin Wack\nArticles Wikipédia sur les OS et les commandes UNIX chmod, chown.\nCours sur pixees.fr\n\nCrédit image Golftheman, CC BY-SA 3.0, Lien",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 6: Architectures matérielles et systèmes d’exploitation",
      "Chapitre 3: Systèmes d’exploitation"
    ]
  },
  {
    "objectID": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/4-reseaux/quiz/index.html",
    "href": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/4-reseaux/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "1. L'adresse IP du site http://www.education.gouv.fr est 185.75.143.24.\n\n   Quel dispositif permet d'associer l'adresse IP et l'URL http://www.education.gouv.fr? \n\n   - [ ] un routeur \n   - [x] un serveur DNS \n   - [ ] un serveur de temps \n   - [ ] un serveur Web \n\n1. On cherche à connaitre l’itinéraire vers une destination sur un réseau. On utilisera la commande : \n\n   - [ ] `ping`\n   - [x] `traceroute`\n   - [ ] `ipconfig`\n   - [ ] `arp`\n\n1. Vivien télécharge un logiciel à partir d’un site commercial. Le transfert par Internet du logiciel a débuté entre le \n   serveur (machine S) et son domicile (machine V). On a représenté des routeurs A, B, C, D et E et les liens existants. \n   Les paquets IP suivent le chemin passant par les routeurs A, B, C et E. \n   Durant un orage, la foudre frappe et détruit le serveur C par lequel transitent les paquets correspondant au \n   fichier que télécharge Vivien. Que se passe-t-il? \n\n   - [ ] la liaison étant coupée, le serveur ne sera plus accessible \n   - [x] le téléchargement n’est pas interrompu, car les paquets peuvent transiter par le routeur D \n   - [ ] le téléchargement est interrompu, Vivien doit redémarrer une nouvelle connexion à partir de zéro \n   - [ ] le téléchargement se poursuit, mais des données seront perdues.\n\n\n1. Dans un réseau informatique, que peut-on dire de la transmission de données par paquets? \n\n   - [ ] cela empêche l’interception des données transmises \n   - [ ] cela garantit que toutes les données empruntent le même chemin \n   - [x] cela assure une utilisation efficace des liens de connexion \n   - [ ] cela nécessite la réservation d’un chemin entre l’émetteur et le récepteur\n\n1. Comment s'appelle l'ensemble des règles qui régissent les échanges sur Internet? \n\n   - [ ] les couches \n   - [ ] le wifi \n   - [x] les protocoles \n   - [ ] les commutateurs \n\n1. Quel matériel permet d'interconnecter des réseaux entre eux : \n\n   - [x] un routeur \n   - [ ] un commutateur (ou switch ) \n   - [ ] un interconnecteur \n   - [ ] un serveur \n\n1. Dans le protocole de communication IP : \n\n   - [ ] Les données sont envoyées en une seule partie. \n   - [ ] Les données sont envoyées en plusieurs parties qui suivent le même itinéraire au sein du\n     réseau.\n   - [ ] Les données sont envoyées en plusieurs parties qui suivent des itinéraires différents au\n     sein du réseau et arrivent à destination en respectant l’ordre de leur envoi.\n   - [x] Les données sont envoyées en plusieurs parties qui suivent des itinéraires différents au\n     sein du réseau et arrivent à destination dans un ordre quelconque.\n\n 9. Dans un terminal sous Linux, à quoi sert la commande `traceroute`? \n\n   - [ ] à afficher un itinéraire routier entre deux villes \n   - [ ] c'est un synonyme pour la commande ping \n   - [x] à afficher le chemin suivi par des paquets à travers un protocole IP \n   - [ ] à suivre pas à pas l'exécution d'un programme \n\n1. Quelle est l’utilité de la commande `ping` dans un réseau informatique? \n\n   - [ ] établir un réseau privé virtuel \n   - [x] tester si la connexion peut être établie avec une machine distante \n   - [ ] obtenir la route suivie par un paquet dans le réseau \n   - [ ] mesurer les performances d'une machine distante \n\n1. Dans un établissement scolaire, tous les ordinateurs sont reliés au réseau local par\n   l'intermédiaire de câbles Ethernet. Il n'existe pas de liaisons sans fil. Dans chaque salle\n   d'ordinateurs, les machines sont reliées à un commutateur. Chaque commutateur est relié par un\n   câble jusqu'à la salle où se situe le serveur contrôleur de domaine et la passerelle internet\n   (routeur). Vous êtes connectés sur un ordinateur d'une de ces salles d'ordinateurs avec votre\n   classe. Tout à coup, plus personne n'a accès à Internet, mais toutes les ressources locales de\n   l'établissement sont toujours accessibles. Parmi ces quatre propositions, laquelle est la plus\n   vraisemblable?\n\n   - [ ] Un de vos camarades a débranché accidentellement le câble Ethernet de votre machine. \n   - [ ] Le routeur de l'étage est indisponible (il a été débranché ou est en panne). \n   - [ ] Le commutateur de la salle est indisponible (il a été débranché ou est en panne). \n   - [x] La passerelle internet de l'établissement est indisponible (elle a été débranchée ou est en panne).\n\n1. Parmi les adresses suivantes, laquelle est une adresse Ethernet(MAC) non valide? \n\n   - [ ] 8D:A9:D5:67:E6:F3 \n   - [ ] 8d:a9:d5:67:e6:f3 \n   - [x] 8H:A9:D5:67:E6:F3 \n   - [ ] FF:A9:D5:67:E6:F3 \n\n1. Quel protocole permet d’attribuer dynamiquement une adresse IP? \n\n   - [ ] UDP \n   - [ ] HTTP \n   - [x] DHCP \n   - [ ] DNS\n\n1. Vous soupçonnez que des paquets se perdent entre votre ordinateur et leur destination. \n   Quelle commande utiliseriez-vous pour trouver la source du problème efficacement? \n\n   - [x] ping \n   - [ ] ipconfig \n   - [ ] traceroute \n   - [ ] nslookup\n\n1. Sur la configuration IP d’une machine nommée MACH01 on peut lire : \n   \nadresse Ipv4 : 172.16.100.201 Masque de sous-réseau : 255.255.0.0 Passerelle : 172.16.0.254 ```\nSur la configuration IP d’une machine nommée MACH02 on peut lire :\nadresse Ipv4 : 172.16.100.202 \nMasque de sous-réseau : 255.255.0.0 \nPasserelle : 172.16.0.254 \nDepuis la machine MACH02, à l’aide de quelle commande peut-on tester le dialogue entre ces deux machines?\n\nping 172.16.100.201\nping 172.16.100.202\nping 172.16.100.254\nping 255.255.0.0\n\n\nQuel matériel permet d’interconnecter des ordinateurs entre eux :\n\nun routeur\nun commutateur (ou switch )\nun interconnecteur\nun serveur\n\nDans quel but le protocole du bit alterné peut-il être utilisé?\n\nPour chiffrer des données lors de transmission de données sur un réseau\nPour détecter des pertes de paquets de données lors de transmission de données sur un réseau\nPour créer des paquets de données lors de transmission de données sur un réseau\nPour envoyer les paquets de données à la bonne l’adresse IP de la machine de destination\n\nParmi les adresses suivantes, laquelle est une adresse IP non valide?\n\n1.2.3.4\n192.168.23.242\n127.3.87.256\n10.1.64.42\n\n\n```",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 6: Architectures matérielles et systèmes d’exploitation",
      "Chapitre 4: Réseaux",
      "Quiz"
    ]
  },
  {
    "objectID": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/4-reseaux/exo/index.html",
    "href": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/4-reseaux/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Faire le TP suivant:\nhttp://portail.lyc-la-martiniere-diderot.ac-lyon.fr/srv1/co/activiteapprentissage_Filius.html\nQui utilise le logiciel Filius téléchargeable ici.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 6: Architectures matérielles et systèmes d’exploitation",
      "Chapitre 4: Réseaux",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/4-reseaux/exo/index.html#simulation-dun-réseau-avec-filius",
    "href": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/4-reseaux/exo/index.html#simulation-dun-réseau-avec-filius",
    "title": "Exercices",
    "section": "",
    "text": "Faire le TP suivant:\nhttp://portail.lyc-la-martiniere-diderot.ac-lyon.fr/srv1/co/activiteapprentissage_Filius.html\nQui utilise le logiciel Filius téléchargeable ici.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 6: Architectures matérielles et systèmes d’exploitation",
      "Chapitre 4: Réseaux",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/2-jeu-dinstructions-du-processeur/index.html",
    "href": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/2-jeu-dinstructions-du-processeur/index.html",
    "title": "Chapitre 2: Jeu d’instructions du processeur",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nModèle d’architecture séquentielle (von Neumann)\nDérouler l’exécution d’une séquence d’instructions simples du type langage machine.\nDes activités débranchées sont proposées.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 6: Architectures matérielles et systèmes d’exploitation",
      "Chapitre 2: Jeu d’instructions du processeur"
    ]
  },
  {
    "objectID": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/2-jeu-dinstructions-du-processeur/index.html#les-divers-éléments-de-la-simulation",
    "href": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/2-jeu-dinstructions-du-processeur/index.html#les-divers-éléments-de-la-simulation",
    "title": "Chapitre 2: Jeu d’instructions du processeur",
    "section": "1 Les divers éléments de la simulation",
    "text": "1 Les divers éléments de la simulation\nOn utilisera dans ce cours une version modifiée de la simulation de Lorenzo Gianni sous licence MIT.\nhttps://apps.lyceum.fr/vnsim\nOutre la RAM, le processeur ne possède qu’un très petit nombre de cases mémoires très rapides appelées des registres dont la capacité dépasse rarement quelques dizaines d’octets pour des raisons de coût et de place. Source Wikipédia\n\n1.1 La mémoire (RAM)\n\n\n\n\n\n\nLa mémoire vive contient plusieurs milliards de circuits mémoires un bit, qui sont organisés en cases mémoires de huit, seize, trente-deux, soixante-quatre bits. Chaque case a une adresse unique, leur nombre détermine la capacité de la mémoire vive de l’ordinateur.\n\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nLa mémoire est située à droite est séparée en deux parties: le programme et ses instructions à gauche(adresses 0 à 99) et les variables(adresses 100 et suivantes) avec leurs données à droite.\n\n\n\n\n\n\n\n1.2 L’unité de commande (RI et CP)\n\n\n\n\n\n\nL’unité de commande contient deux registres pour stocker son état d’exécution:\n\nLe registre d’instruction (RI) stocke l’instruction du programme provenant de la mémoire programme actuellement exécutée.\nLe compteur de programme stocke la ligne du programme actuellement exécutée, après son exécution ce compteur est incrémenté de 1 (sauf en cas de saut: JMP).\n\n\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nL’unité de commande possède deux registres: le registre d’instructions et le compteur de programme.\n\n\n\n\n\n\n\n1.3 L’unité arithmétique et logique (UAL)\n\n\n\n\n\n\nL’unité arithmétique et logique est composée de transistors assemblés de façon à lui permettre de réaliser un petit nombre d’opérations simples (arithmétique: + -, logique booléenne: & | !), mais à réaliser ces opérations très rapidement.\nLe résultat des opérations est stocké dans un registre appelé accumulateur (ACC).\n\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nLe résultat des opérations des circuits calculatoires de l’UAL est stocké dans l’accumulateur pour l’exécution de calculs ultérieurs ou pour être renvoyé vers la mémoire.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 6: Architectures matérielles et systèmes d’exploitation",
      "Chapitre 2: Jeu d’instructions du processeur"
    ]
  },
  {
    "objectID": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/2-jeu-dinstructions-du-processeur/index.html#programmer-en-assembleur",
    "href": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/2-jeu-dinstructions-du-processeur/index.html#programmer-en-assembleur",
    "title": "Chapitre 2: Jeu d’instructions du processeur",
    "section": "2 Programmer en assembleur",
    "text": "2 Programmer en assembleur\nLes cellules mémoire du programme sont stockées sous forme binaire, on les représente cependant sous forme textuelle. Un compilateur les convertit ensuite sous forme binaire pour les stocker dans la mémoire programme. Cette représentation textuelle est appelée le langage assembleur.\nLe jeu d’instructions de notre simulateur est résumé ci-dessous.\n\n\n\n Accès mémoire\n\n\n\n\nLOAD var / LOAD #nb\nTransfère dans l’accumulateur la valeur de la variable var présente dans la mémoire ou directement le nombre nb.\n\n\n\nSTORE var\nTransfère le contenu de l’accumulateur dans l’adresse mémoire associée à la variable var.\n\n\n\n\n\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nÉcrire un programme qui permet de stocker quatre valeurs 2, 3, 5, 7 dans les cases mémoires d’adresse 100(variable X), 101(Y), 102(Z), 103(W).\nNe pas oublier d’ajouter l’instruction HALT en fin du programme pour arrêter l’incrémentation du CP.\n\n\n\n\n\n\n\n\n\n Opérations arithmétiques\n\n\n\n\nADD var / ADD #nb\nAdditionne au contenu de l’accumulateur la valeur de la variable var de la mémoire ou directement le nombre nb et renvoie dans l’accumulateur le résultat.\n\n\nSUB var / SUB #nb\nSoustrait au contenu de l’accumulateur la valeur de la variable var de la mémoire ou directement le nombre nb et renvoie dans l’accumulateur le résultat.\n\n\n\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nCompléter le programme de l’application précédente pour additionner les quatre nombres contenus dans les cases mémoires X, Y, Z et W et de stocker le résultat de cette addition dans la case mémoire 104(N).\n\n\n\n\n\n\n\n\n\n Opération logique\n\n\n\n\nCMP adr / CMP #nb\nCompare le contenu de l’accumulateur à la valeur de la variable var de la mémoire ou au nombre nb et renvoie dans l’accumulateur le résultat -1,0 ou 1 selon le résultat de la comparaison: inférieur, égal ou supérieur.\n\n\n\n\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nCompléter le programme de l’application précédente pour comparer le contenu des cases mémoires X et N et de stocker le résultat de cette comparaison dans la case mémoire 6(R).\n\n\n\n\n\n\n\n\n\n\n\n\nAjouter des étiquettes aux lignes du programme\n\n\n\nPour pouvoir réaliser des boucles ou sauter des lignes en fonction de conditions, on utilise des instructions de saut JMP qui permettront de se déplacer vers une ligne spécifique du programme ou vers une ligne précédée d’une étiquette inf: LOAD X ici l’étiquette est inf on peut s’y rendre avec JMP inf.\n\n\n\n\n\n Contrôle du programme: Conditions, boucles, commentaires…\n\n\n\n\nJMP étiquette / JMP n\nTransfère dans le compteur de programme CP le numéro de ligne n ou le numéro de la ligne avec l’étiquette étiquette.\n\n\n\nJMPZ étiquette / JMPZ n\nTransfère uniquement si le contenu de l’accumulateur est nul dans le compteur de programme CP le numéro de ligne n ou le numéro de la ligne avec l’étiquette étiquette.\n\n\n\nJMPN étiquette / JMPN n\nTransfère uniquement si le contenu de l’accumulateur est négatif dans le compteur de programme CP le numéro de ligne n ou le numéro de la ligne avec l’étiquette étiquette.\n\n\n\nJMPP étiquette / JMPP n\nTransfère uniquement si le contenu de l’accumulateur est positif dans le compteur de programme CP le numéro de ligne n ou le numéro de la ligne avec l’étiquette étiquette.\n\n\n\nHALT\nStoppe l’exécution du programme.\n\n\n\n// commentaire\nLigne de commentaire non exécutée.\n\n\n\nINSTRUCTION X ; commentaire de ligne\nOn peut ajouter des commentaires de lignes avec un point virgule.\n\n\n\n\n\n\n\n\n\n\n\nApplication: Multiplication d'entiers positifs\n\n\n\n\n\n\nStocker deux entiers positifs quelconques dans les variables X et Y, puis sans utiliser l’opérateur MUL, réaliser l’opération X×YX\\times Y et stocker le résultat dans la case mémoire 105(variable R).\nPour cela on initialisera une variable R à 0 à laquelle on ajoutera X Y fois grâce à une boucle. A chaque tour de boucle, ajouter X à R, soustraire 1 à Y tant que Y est positif grâce à un JMPP.\n\n\n\n\n\n\n\n\n\n\n\n\n\nApplication: Multiplication d'entiers quelconques\n\n\n\n\n\n\nAdapter l’algorithme précédent grâce à une condition:\n\nSi Y&gt;0Y &gt; 0: reprendre l’algorithme précédent.\nSi Y&lt;0Y &lt; 0: soustraire X Y fois grâce à une boucle.\nSi Y=0Y = 0: terminer le programme et laisser R à 0.\n\n\n\n\n\n\n\n\n\nChapitre 1: Au cœur de l’ordinateur NSI Première Hachette 2021 sous la direction de Michel Beaudouin-Lafon\nChapitre 15: L’organisation d’un ordinateur Informatique et sciences du numérique Spécialité ISN en terminale S - Avec des exercices corrigés et des idées de projets par Gilles Dowek",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 6: Architectures matérielles et systèmes d’exploitation",
      "Chapitre 2: Jeu d’instructions du processeur"
    ]
  },
  {
    "objectID": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/1-architecture-dun-ordinateur/quiz/index.html",
    "href": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/1-architecture-dun-ordinateur/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "1. Qui est John Von Neumann ?\n\n   - [ ] Un philosophe allemand.\n   - [ ] Un informaticien et logicien américain.\n   - [x] Un mathématicien et physicien d'origine hongroise.\n\n2. Qu'est-ce que l'architecture de Von Neumann ?\n\n   - [ ] Une architecture informatique qui utilise une technique de mémoire virtuelle pour\n     augmenter la capacité de stockage\n   - [x] Une architecture informatique qui sépare la mémoire et le processeur en deux composants\n     distincts\n   - [ ] Une architecture informatique qui utilise des processeurs multicœurs pour accélérer le\n     traitement des données\n\n3. Quels sont les composants principaux de l'architecture de Von Neumann ?\n\n   - [x] Le processeur, la mémoire, l'unité de commande et l'unité arithmétique et logique (ALU)\n   - [ ] Le processeur, la mémoire, l'unité de contrôle et l'unité de traitement graphique (GPU)\n   - [ ] Le processeur, le disque dur, l'unité de commande et l'unité de traitement sonore (DAC)\n\n4. Combien de bus de communication contient l'architecture de Von Neumann ?\n\n   - [ ] 1\n   - [ ] 2\n   - [x] 3\n\n5. La mémoire de l'architecture de Von Neumann est:\n\n   - [ ] La mémoire morte (ROM)\n   - [x] La mémoire vive (RAM).\n   - [ ] La mémoire de masse.\n\n6. Qu'est-ce que la mémoire d'un ordinateur ?\n\n   - [ ] Un composant matériel qui permet le traitement des données\n   - [ ] Un composant logiciel qui permet de gérer les ressources de l'ordinateur\n   - [x] Un composant matériel qui stocke les données et les programmes\n\n7. À quoi sert la mémoire vive (RAM) ?\n\n   - [ ] À stocker les données et les programmes de façon permanente\n   - [x] À stocker les données et les programmes de façon temporaire pendant leur exécution\n   - [ ] À stocker les données et les programmes de façon virtuelle\n\n\n8. Qu'est-ce que la mémoire de masse ?\n\n   - [x] Une mémoire qui stocke les données de façon permanente, même lorsque l'ordinateur est\n     éteint\n   - [ ] Une mémoire qui stocke les données de façon temporaire, pendant leur exécution\n   - [ ] Une mémoire qui stocke les données de façon virtuelle, pour étendre la capacité de la\n     mémoire vive.\n\n9. Qu'est-ce que le processeur d'un ordinateur ?\n\n   - [ ] Un composant matériel qui stocke les données et les programmes\n   - [x] Un composant matériel qui permet le traitement des données\n   - [ ] Un composant logiciel qui permet de gérer les ressources de l'ordinateur\n\n10. Quels sont les composants principaux du processeur ?\n\n    - [ ] L'unité de traitement graphique (GPU), l'unité de contrôle et les registres\n    - [ ] L'unité de traitement sonore (DAC), l'unité arithmétique et logique (ALU) et les\n      registres\n    - [x] L'unité de commande, l'unité arithmétique et logique (ALU) et les registres\n\n11. À quoi sert l'unité de commande du processeur ?\n   \n    - [x] À interpréter les instructions du programme et à les transmettre à l'ALU\n    - [ ] À effectuer les opérations arithmétiques et logiques sur les données\n    - [ ] À stocker temporairement les données en cours de traitement\n\n12. À quoi sert l'unité arithmétique et logique (ALU) du processeur ?\n\n    - [ ] À interpréter les instructions du programme et à les transmettre à l'unité de commande\n    - [x] À effectuer les opérations arithmétiques et logiques sur les données\n    - [ ] À stocker temporairement les données en cours de traitement\n\n13. Qu'est-ce qu'un registre du processeur ?\n\n    - [x] Une mémoire temporaire de petite taille utilisée pour stocker des données en cours de\n      traitement\n    - [ ] Une mémoire permanente de grande taille utilisée pour stocker des données de façon\n      permanente\n    - [ ] Une extension de la mémoire vive qui permet d'augmenter la capacité de traitement du\n      processeur",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 6: Architectures matérielles et systèmes d’exploitation",
      "Chapitre 1: Architecture d’un ordinateur",
      "Quiz"
    ]
  },
  {
    "objectID": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/1-architecture-dun-ordinateur/exo/index.html",
    "href": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/1-architecture-dun-ordinateur/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Aucun exercice pour l’instant.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 6: Architectures matérielles et systèmes d’exploitation",
      "Chapitre 1: Architecture d’un ordinateur",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/6-circuits-combinatoires/index.html",
    "href": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/6-circuits-combinatoires/index.html",
    "title": "Chapitre 6: Circuits combinatoires*",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nModèle d’architecture séquentielle (von Neumann)\n\nLes circuits combinatoires réalisent des fonctions booléennes.\nL’invention du transistor en 1947 a ouvert l’ère de l’électronique pour l’humanité et a permis à l’informatique de se miniaturiser et de se démocratiser au grand public.\nNous allons voir maintenant, comment il est possible de réaliser des opérations logiques à l’aide de transistors. En effet, chaque processeur possède dans son jeu d’instructions des opérations booléennes (ou opérations bit à bit).\nIl existe des transistors de diverses technologies, pour plus de simplicité, nous étudierons dans ce chapitre qu’un seul type de transistor: les transistors N-Mos. Dont voici le symbole électrique\nUn transistor CMOS-N possèdent trois bornes nommées:\nUne simulation de ce type de transistor est disponible en suivant ce lien: http://www.falstad.com/circuit/e-nmosfet.html",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 6: Architectures matérielles et systèmes d’exploitation",
      "Chapitre 6: Circuits combinatoires*"
    ]
  },
  {
    "objectID": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/6-circuits-combinatoires/index.html#commutation-du-transistor",
    "href": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/6-circuits-combinatoires/index.html#commutation-du-transistor",
    "title": "Chapitre 6: Circuits combinatoires*",
    "section": "1 Commutation du transistor",
    "text": "1 Commutation du transistor\nPour réaliser des circuits logiques, nous utilisons le transistor en interrupteur commandé.\nEn fonction de la tension appliquée entre la grille et la source UGSU_{GS}, le dipôle entre le drain et la source se comporte soit comme un interrupteur ouvert soit comme un interrupteur fermé.\n\n\n\n\n\n\n\nEn plus: En plus\n\n\n\n\n\n\nLa résistance entre le Drain et la Source dépend fortement de la tension appliquée entre la grille et la source: UGSU_{GS}, c’est une particularité des matériaux semi-conducteurs utilisés dans les transistors.\n\nBy Saumitra R Mehrotra & Gerhard Klimeck, modified by Zephyris - Own work, Public Domain, Link\n\nDans cette simulation, la tension de seuil se situe aux alentours de 0,45V, si bien que si:\n\nUGS&lt;0,45VU_{GS} &lt; 0,45 V: $R_{DS} +$, l’interrupteur commandé est ouvert.\nUGS&gt;0,45VU_{GS} &gt; 0,45 V: $R_{DS} $, l’interrupteur commandé est fermé.\n\n\n\n\n\n\nEn utilisant des tensions de commandes UGSU_{GS} n’ayant que deux valeurs: 0, ou 5V, il est possible d’utiliser le transistor comme un interrupteur placé entre les bornes DD et SS et commandé par la tension UGSU_{GS}.\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nCommutation du transistor CmosN",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 6: Architectures matérielles et systèmes d’exploitation",
      "Chapitre 6: Circuits combinatoires*"
    ]
  },
  {
    "objectID": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/6-circuits-combinatoires/index.html#réalisation-dune-porte-nonnot",
    "href": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/6-circuits-combinatoires/index.html#réalisation-dune-porte-nonnot",
    "title": "Chapitre 6: Circuits combinatoires*",
    "section": "2 Réalisation d’une porte NON(NOT)",
    "text": "2 Réalisation d’une porte NON(NOT)\nLa fonction booléenne non(x) associe à une valeur booléenne xx son “contraire”.\nSa table de vérité est:\n\n\n\nx\nnon(x)\n\n\n\n\n0\n1\n\n\n1\n0\n\n\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nPorte Non\n\n\n\n\n\n\n\n\n\nApplication: Schémas équivalents\n\n\n\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n1. Réaliser les deux schémas équivalents au circuit pour UGS=0VU_{GS} = 0V et UGS=5VU_{GS} = 5V en remplaçant le transistor par un interrupteur. 2. Vérifier que le circuit réalise bien la fonction booléenne sortie=NON(entrée)sortie=NON(entrée). On rappelle que la tension aux bornes d’un fil(ou d’un interrupteur fermé) est nulle, et la tension aux bornes d’une résistance suit la loi d’Ohm: U=RIU=RI.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 6: Architectures matérielles et systèmes d’exploitation",
      "Chapitre 6: Circuits combinatoires*"
    ]
  },
  {
    "objectID": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/6-circuits-combinatoires/index.html#réalisation-dune-porte-etand",
    "href": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/6-circuits-combinatoires/index.html#réalisation-dune-porte-etand",
    "title": "Chapitre 6: Circuits combinatoires*",
    "section": "3 Réalisation d’une porte ET(AND)",
    "text": "3 Réalisation d’une porte ET(AND)\nLa fonction booléenne et(x, y) a la table de vérité suivante:\n\n\n\nx\ny\net(x,y)\n\n\n\n\n0\n0\n0\n\n\n0\n1\n0\n\n\n1\n0\n0\n\n\n1\n1\n1\n\n\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nPorte Et\n\n\n\n\n\n\n\n\n\nApplication: Schémas équivalents\n\n\n\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n1. Réaliser les quatre schémas équivalents pour les couples de tensions d’entrée (e1,e2)∈{(0V,0V),(0V,5V),(5V,0V),(5V,5V)}(e_1, e_2) \\in \\left\\lbrace (0V, 0V), (0V, 5V), (5V, 0V), (5V, 5V)\\right\\rbrace au circuit en remplaçant les transistors par des interrupteurs. 2.Vérifier que le circuit réalise bien la fonction booléenne sortie=ET(entrée1,entrée2)sortie=ET(entrée 1, entrée 2).",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 6: Architectures matérielles et systèmes d’exploitation",
      "Chapitre 6: Circuits combinatoires*"
    ]
  },
  {
    "objectID": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/6-circuits-combinatoires/index.html#réalisation-dune-porte-ouor",
    "href": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/6-circuits-combinatoires/index.html#réalisation-dune-porte-ouor",
    "title": "Chapitre 6: Circuits combinatoires*",
    "section": "4 Réalisation d’une porte OU(OR)",
    "text": "4 Réalisation d’une porte OU(OR)\nLa fonction booléenne ou(x,y)ou(x, y) a la table de vérité suivante:\n\n\n\nx\ny\nou(x,y)\n\n\n\n\n0\n0\n0\n\n\n0\n1\n1\n\n\n1\n0\n1\n\n\n1\n1\n1\n\n\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nPorte Ou\n\n\n\n\n\n\n\n\n\nApplication: Schémas équivalents\n\n\n\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n1. Réaliser les quatre schémas équivalents pour les couples de tensions d’entrée (e1,e2)∈{(0V,0V),(0V,5V),(5V,0V),(5V,5V)}(e_1, e_2) \\in \\left\\lbrace (0V, 0V), (0V, 5V), (5V, 0V), (5V, 5V)\\right\\rbraceau circuit en remplaçant les transistors par des interrupteurs. 2.Vérifier que le circuit réalise bien la fonction booléenne sortie=OU(entrée1,entrée2)sortie=OU(entrée 1, entrée 2).",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 6: Architectures matérielles et systèmes d’exploitation",
      "Chapitre 6: Circuits combinatoires*"
    ]
  },
  {
    "objectID": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/6-circuits-combinatoires/index.html#autres-portes-booléennes",
    "href": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/6-circuits-combinatoires/index.html#autres-portes-booléennes",
    "title": "Chapitre 6: Circuits combinatoires*",
    "section": "5 Autres portes booléennes",
    "text": "5 Autres portes booléennes\n\n5.1 La porte NON-ET(NAND)\n\n\nTable de vérité\n\n\n\nx\ny\nnand(x,y)\n\n\n\n\n0\n0\n1\n\n\n0\n1\n1\n\n\n1\n0\n1\n\n\n1\n1\n0\n\n\n\n\n\nSchématisation\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nPorte NAND\n\n\n\n\n\n\n5.2 La porte NON-OU (nor)\n\n\nTable de vérité\n\n\n\nx\ny\nnor(x,y)\n\n\n\n\n0\n0\n1\n\n\n0\n1\n0\n\n\n1\n0\n0\n\n\n1\n1\n0\n\n\n\n\n\nSchématisation\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nPorte NOR\n\n\n\n\n\n\n5.3 La porte OU eXclusif (xor)\n\n\nTable de vérité\n\n\n\nx\ny\nxor(x,y)\n\n\n\n\n0\n0\n0\n\n\n0\n1\n1\n\n\n1\n0\n1\n\n\n1\n1\n0\n\n\n\n\n\nSchématisation\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nPorte XOR\n\n\n\n\n\n\n5.4 La porte ET inclusif (xnor)\n\n\nTable de vérité\n\n\n\nx\ny\nxnor(x,y)\n\n\n\n\n0\n0\n1\n\n\n0\n1\n0\n\n\n1\n0\n0\n\n\n1\n1\n1\n\n\n\n\n\nSchématisation \n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\n\n\n\n\nChapitre 13. Les Portes booléennes Informatique et sciences du numérique Spécialité ISN en terminale S - Avec des exercices corrigés et des idées de projets par Gilles Dowek",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 6: Architectures matérielles et systèmes d’exploitation",
      "Chapitre 6: Circuits combinatoires*"
    ]
  },
  {
    "objectID": "1g/nsi/3-representation-des-donnees-types-construits/index.html",
    "href": "1g/nsi/3-representation-des-donnees-types-construits/index.html",
    "title": "Partie 3: Représentation des données : types construits",
    "section": "",
    "text": "Chapitre 1: Introduction aux tableaux\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 2: Usages avancés des tableaux\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 3: Dictionnaires\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAucun article correspondant",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 3: Représentation des données : types construits"
    ]
  },
  {
    "objectID": "1g/nsi/3-representation-des-donnees-types-construits/2-usages-avances-des-tableaux/index.html",
    "href": "1g/nsi/3-representation-des-donnees-types-construits/2-usages-avances-des-tableaux/index.html",
    "title": "Chapitre 2: Usages avancés des tableaux",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nTableau indexé, tableau donné en compréhension\nLire et modifier les éléments d’un tableau grâce à leurs index.\nConstruire un tableau par compréhension.\nUtiliser des tableaux de tableaux pour représenter des matrices, notation a[i][j]\nItérer sur les éléments d’un tableau.\nSeuls les tableaux dont les éléments sont du même type sont présentés.\nAucune connaissance des tranches (slices) n’est exigible.\nL’aspect dynamique des tableaux de Python n’est pas évoqué.\nPython identifie listes et tableaux.\nIl n’est pas fait référence aux tableaux de la bibliothèque NumPy.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 3: Représentation des données : types construits",
      "Chapitre 2: Usages avancés des tableaux"
    ]
  },
  {
    "objectID": "1g/nsi/3-representation-des-donnees-types-construits/2-usages-avances-des-tableaux/index.html#tableau-donné-en-compréhension",
    "href": "1g/nsi/3-representation-des-donnees-types-construits/2-usages-avances-des-tableaux/index.html#tableau-donné-en-compréhension",
    "title": "Chapitre 2: Usages avancés des tableaux",
    "section": "1 Tableau donné en compréhension",
    "text": "1 Tableau donné en compréhension\nPlutôt que de remplir un tableau par énumération de ces éléments dans une boucle, on peut définir des listes en compréhension, c’est-à-dire des listes dont le contenu est défini par filtrage du contenu d’une autre liste.\n\n1.1 Boucle classique\nOn commence par créer une liste vide, puis, on ajoute grâce à une boucle les éléments un à un à la liste grâce à la méthode append().\nVoici par exemple comment créer une liste contenant les puissances de 2 de 212^1 à 2122^{12}.\n\nt = []\nfor i in range(13):\n    t.append(2**i)\nt\n\n[1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096]\n\n\n\n\n1.2 Écriture en compréhension\nCette construction syntaxique offre des avantages de lisibilité et de concision et se rapproche de la notation utilisée en mathématiques :\nS={2n|n∈ℕ,n&lt;13}\nS=\\{2^{n} | n\\in {\\mathbb{N}}, n&lt;13\\}\n\n\nt = [2**n for n in range(13)]\nt\n\n[1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096]\n\n\nOn peut même ajouter des conditions. Par exemple ici on crée une liste des puissances de 2 des puissances paires.\n\nt = [2**n for n in range(13) if n % 2 == 0]\nt\n\n[1, 4, 16, 64, 256, 1024, 4096]\n\n\n\n\n\n\n\n\n\nEn plus: Syntaxe complète avec `else`\n\n\n\n\n\n\nIl est possible d’utiliser une clause else dans les conditions grâce à l’opérateur ternaire: valeur_si_vrai if condition else valeur_si_faux\n[f(x) if condition else g(x) for x in sequence]\nPar exemple:\n[str(i) + \" est pair\" if i % 2 == 0 else str(i) + \" est impair\" for i in range(5)]\nrenvoie: ['0 est pair', '1 est impair', '2 est pair', '3 est impair', '4 est pair']",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 3: Représentation des données : types construits",
      "Chapitre 2: Usages avancés des tableaux"
    ]
  },
  {
    "objectID": "1g/nsi/3-representation-des-donnees-types-construits/2-usages-avances-des-tableaux/index.html#tableaux-à-deux-dimensions-les-matrices",
    "href": "1g/nsi/3-representation-des-donnees-types-construits/2-usages-avances-des-tableaux/index.html#tableaux-à-deux-dimensions-les-matrices",
    "title": "Chapitre 2: Usages avancés des tableaux",
    "section": "2 Tableaux à deux dimensions: les matrices",
    "text": "2 Tableaux à deux dimensions: les matrices\n\n\n\n\n\n\nPour représenter un tableau de données, on peut utiliser une liste de liste. (123456789)\n\\begin{pmatrix}\n   1 & 2 & 3\\\\\n   4 & 5 & 6\\\\\n   7 & 8 & 9 \n\\end{pmatrix}\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nStockage d'un tableau dans une liste de listes. Public domain via Wikimedia Commons\n\n\n\n\nmat = [[1, 2, 3],\n       [4, 5, 6],\n       [7, 8, 9]]\nmat\n\n[[1, 2, 3], [4, 5, 6], [7, 8, 9]]\n\n\n\n2.1 Accès aux éléments\nOn accède alors aux éléments en précisant l’index de ligne et de colonne: mat[i ligne][j colonne].\nPar exemple pour accéder au troisième élément de la première ligne.\n\nmat[0][2]\n\n3\n\n\nAccès au deuxième élément de la troisième ligne.\n\nmat[2][1]\n\n8\n\n\n\n\n2.2 Accès aux lignes et colonnes\nL’accès à une ligne est aisé, par exemple pour la deuxième ligne.\n\nmat[1]\n\n[4, 5, 6]\n\n\nL’accès aux colonnes est plus délicat, on peut par exemple utiliser une liste en compréhension, par exemple pour accéder à la première colonne.\n\n[ligne[0] for ligne in mat]\n\n[1, 4, 7]\n\n\n\n\n2.3 Itérations sur les valeurs\nComme il s’agit d’une structure imbriquée, nous devons utiliser deux boucles imbriquées.\nOn peut par exemple itérer sur les valeurs des lignes.\n\nfor ligne in mat:\n    for val in ligne:\n        print(val)\n&gt;&gt;sortie\n\n1\n2\n3\n4\n5\n6\n7\n8\n9",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 3: Représentation des données : types construits",
      "Chapitre 2: Usages avancés des tableaux"
    ]
  },
  {
    "objectID": "1g/nsi/3-representation-des-donnees-types-construits/3-dictionnaires/quiz/index.html",
    "href": "1g/nsi/3-representation-des-donnees-types-construits/3-dictionnaires/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 3: Représentation des données : types construits",
      "Chapitre 3: Dictionnaires",
      "Quiz"
    ]
  },
  {
    "objectID": "1g/nsi/3-representation-des-donnees-types-construits/3-dictionnaires/exo/index.html",
    "href": "1g/nsi/3-representation-des-donnees-types-construits/3-dictionnaires/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Qu’est-ce qu’un dictionnaire en Python?\nComment créez-vous un dictionnaire en Python? Donner en exemple les instructions permettant de créer un dictionnaire d de 3 entiers avec comme clés des lettres.\nComment accédez-vous aux éléments d’un dictionnaire en Python? Donner en exemple un accés à une valeur de d.\nComment modifiez-vous les éléments d’un dictionnaire en Python? Donner un exemple sur d.\nComment ajoutez-vous des éléments à un dictionnaire en Python? Donner un exemple sur d.\nComment supprimez-vous des éléments d’un dictionnaire en Python? Donner un exemple sur d.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 3: Représentation des données : types construits",
      "Chapitre 3: Dictionnaires",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/3-representation-des-donnees-types-construits/3-dictionnaires/exo/index.html#questions-de-cours",
    "href": "1g/nsi/3-representation-des-donnees-types-construits/3-dictionnaires/exo/index.html#questions-de-cours",
    "title": "Exercices",
    "section": "",
    "text": "Qu’est-ce qu’un dictionnaire en Python?\nComment créez-vous un dictionnaire en Python? Donner en exemple les instructions permettant de créer un dictionnaire d de 3 entiers avec comme clés des lettres.\nComment accédez-vous aux éléments d’un dictionnaire en Python? Donner en exemple un accés à une valeur de d.\nComment modifiez-vous les éléments d’un dictionnaire en Python? Donner un exemple sur d.\nComment ajoutez-vous des éléments à un dictionnaire en Python? Donner un exemple sur d.\nComment supprimez-vous des éléments d’un dictionnaire en Python? Donner un exemple sur d.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 3: Représentation des données : types construits",
      "Chapitre 3: Dictionnaires",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/3-representation-des-donnees-types-construits/1-introduction-aux-tableaux/index.html",
    "href": "1g/nsi/3-representation-des-donnees-types-construits/1-introduction-aux-tableaux/index.html",
    "title": "Chapitre 1: Introduction aux tableaux",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\np-uplets. p-uplets nommés\nÉcrire une fonction renvoyant un p-uplet de valeurs.\nNous verrons dans cette partie trois exemples de types construits:",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 3: Représentation des données : types construits",
      "Chapitre 1: Introduction aux tableaux"
    ]
  },
  {
    "objectID": "1g/nsi/3-representation-des-donnees-types-construits/1-introduction-aux-tableaux/index.html#quest-ce-quun-tableau",
    "href": "1g/nsi/3-representation-des-donnees-types-construits/1-introduction-aux-tableaux/index.html#quest-ce-quun-tableau",
    "title": "Chapitre 1: Introduction aux tableaux",
    "section": "1 Qu’est-ce qu’un tableau?",
    "text": "1 Qu’est-ce qu’un tableau?\n\n\nTableau\n\n\n\nEn informatique, un tableau est une structure de données représentant une séquence finie d’éléments auxquels on peut accéder efficacement par leur indice, dans la séquence.\n\n\n\nIl existe deux implémentations des tableaux en Python: les tuples et les listes.\n\n1.1 Syntaxe des tuples (a, b, c)\nLes tuples sont des valeurs séparées par des virgules , entourées de parenthèses (..., ..., ...)` qui peuvent parfois être omises.\n\nt = (1, 2, 3)\ntype(t)\n\ntuple\n\n\n\n# sans parenthèses\nt = 1, 2, 3\ntype(t)\n\ntuple\n\n\n\n\n1.2 Syntaxe des listes [a, b, c]\nLes valeurs de la collection sont entourées par des crochets [], leurs éléments sont séparés par des virgules.\n\ntab = [ \"a\", \"z\" , \"e\"]\ntype(tab)\n\nlist\n\n\n\n\n1.3 Différences entre tuple et liste\nOutre la syntaxe, il y a plusieurs différences clés entre les tuples et les listes en Python:\n\nImmutabilité : les tuples sont immuables, c’est-à-dire qu’une fois créés, ils ne peuvent pas être modifiés. Les listes, en revanche, sont mutables, c’est-à-dire que vous pouvez ajouter, supprimer ou remplacer des éléments dans une liste une fois qu’elle a été créée.\nPerformance : les tuples sont généralement plus rapides à créer et à accéder que les listes. Cela est dû à leur immutabilité, qui signifie qu’il n’y a pas besoin de gérer la modification des éléments dans un tuple.\nUtilisation : les tuples sont souvent utilisés lorsque vous avez besoin de stocker des données qui ne doivent pas être modifiées, tandis que les listes sont utilisées lorsque vous avez besoin de stocker des données qui doivent être modifiées fréquemment.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 3: Représentation des données : types construits",
      "Chapitre 1: Introduction aux tableaux"
    ]
  },
  {
    "objectID": "1g/nsi/3-representation-des-donnees-types-construits/1-introduction-aux-tableaux/index.html#différences-et-similitudes-entre-tuple-et-listes",
    "href": "1g/nsi/3-representation-des-donnees-types-construits/1-introduction-aux-tableaux/index.html#différences-et-similitudes-entre-tuple-et-listes",
    "title": "Chapitre 1: Introduction aux tableaux",
    "section": "2 Différences et similitudes entre tuple et listes",
    "text": "2 Différences et similitudes entre tuple et listes\nt = (1, 2.0, \"trois\")\nt\ntype(t)\nt[0]\nt[1]\nt[2]\nlen(t)\nt[0] = \"un\"\ntab = [1, 2.0, \"trois\"]\ntab\ntype(tab)\ntab[0]\ntab[1]\ntab[2]\nlen(tab)\ntab[0] = \"un\"\ntab\n\n\n\nTuple\nOn peut stocker plusieurs valeurs de types différents.\n\n\n(1, 2.0, 'trois')\n\n\n\n\ntuple\n\n\nL’accès se fait par un indice entier de position qui commence à 0. On place l’indice entre des crochets.\n\n\n1\n\n\n\n\n2.0\n\n\n\n\n'trois'\n\n\nLa longueur du tuple est obtenue grâce à la fonction len()\n\n\n3\n\n\nLes tuples sont immutables, c’est-à-dire qu’on ne peut les modifier une fois qu’ils ont été créés.\n\n&gt;&gt;sortie\n\nTypeError: 'tuple' object does not support item assignment\n\n\n\n\nListe\nOn peut stocker plusieurs valeurs de types différents.\n\n\n[1, 2.0, 'trois']\n\n\n\n\nlist\n\n\nL’accès se fait par un indice entier de position qui commence à 0. On place l’indice entre des crochets.\n\n\n1\n\n\n\n\n2.0\n\n\n\n\n'trois'\n\n\nLa longueur de la liste est obtenue grâce à la fonction len()\n\n\n3\n\n\nLes listes sont mutables, c’est-à-dire qu’on peut les modifier une fois qu’elles ont été créés.\n\n\n['un', 2.0, 'trois']\n\n\n\n\n\nATTENTION: Dans les types construits, il faut bien distinguer l’indice et la valeur stockée à cet indice.\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nLes valeurs stockées sont de type quelconque par contre les indice sont des entiers commençant à 0. Public domain via Wikimedia Commons",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 3: Représentation des données : types construits",
      "Chapitre 1: Introduction aux tableaux"
    ]
  },
  {
    "objectID": "1g/nsi/3-representation-des-donnees-types-construits/1-introduction-aux-tableaux/index.html#méthodes-et-fonctions",
    "href": "1g/nsi/3-representation-des-donnees-types-construits/1-introduction-aux-tableaux/index.html#méthodes-et-fonctions",
    "title": "Chapitre 1: Introduction aux tableaux",
    "section": "3 Méthodes et fonctions",
    "text": "3 Méthodes et fonctions\n\n3.1 Qu’est-ce qu’une méthode?\nPython étant un langage objet, des méthodes sont ajoutées aux tableaux pour interagir facilement avec eux.\nLa différence entre méthode et fonction sera approfondie en terminale lors de l’étude de la programmation orientée objet. Pour l’instant, nous pouvons simplement dire qu’il s’agit d’une fonction attachée à un objet qui s’appelle en utilisant une notation pointée.\n# appel d'une fonction\nfonction(arguments) # ex: len(tab)\n# appel d'une méthode d'objet\nobjet.méthode(arguments) # ex: tab.append(5)\n\n\n3.2 Méthodes des tuples\nLes tuples étant immuables ne présentent que deux méthodes qui sont décrites dans la documentation ou grâce à l’appel help(tuple)\n\nLa méthode index: indice de la première occurrence de l’élément cherché donné en argument.\nLa méthode count: nombre d’éléments de valeur donnée en argument.\n\n\nt = (1, 1, 1, 2, 2)\n\n\n# appel de la méthode index()\nt.index(2)\n\n3\n\n\n\nt.count(1)\n\n3\n\n\n\n\n\n\n\n\n\nEn plus: Documentation des tuples\n\n\n\n\n\n\n\nhelp(tuple)\n&gt;&gt;sortie\n\nHelp on class tuple in module builtins:\n\nclass tuple(object)\n |  tuple(iterable=(), /)\n |  \n |  Built-in immutable sequence.\n |  \n |  If no argument is given, the constructor returns an empty tuple.\n |  If iterable is specified the tuple is initialized from iterable's items.\n |  \n |  If the argument is a tuple, the return value is the same object.\n |  \n |  Built-in subclasses:\n |      asyncgen_hooks\n |      MonthDayNano\n |      RefResolutionErrorAttributes\n |      TypeCheckerAttributes\n |      ... and 8 other subclasses\n |  \n |  Methods defined here:\n |  \n |  __add__(self, value, /)\n |      Return self+value.\n |  \n |  __contains__(self, key, /)\n |      Return key in self.\n |  \n |  __eq__(self, value, /)\n |      Return self==value.\n |  \n |  __ge__(self, value, /)\n |      Return self&gt;=value.\n |  \n |  __getattribute__(self, name, /)\n |      Return getattr(self, name).\n |  \n |  __getitem__(self, key, /)\n |      Return self[key].\n |  \n |  __getnewargs__(self, /)\n |  \n |  __gt__(self, value, /)\n |      Return self&gt;value.\n |  \n |  __hash__(self, /)\n |      Return hash(self).\n |  \n |  __iter__(self, /)\n |      Implement iter(self).\n |  \n |  __le__(self, value, /)\n |      Return self&lt;=value.\n |  \n |  __len__(self, /)\n |      Return len(self).\n |  \n |  __lt__(self, value, /)\n |      Return self&lt;value.\n |  \n |  __mul__(self, value, /)\n |      Return self*value.\n |  \n |  __ne__(self, value, /)\n |      Return self!=value.\n |  \n |  __repr__(self, /)\n |      Return repr(self).\n |  \n |  __rmul__(self, value, /)\n |      Return value*self.\n |  \n |  count(self, value, /)\n |      Return number of occurrences of value.\n |  \n |  index(self, value, start=0, stop=9223372036854775807, /)\n |      Return first index of value.\n |      \n |      Raises ValueError if the value is not present.\n |  \n |  ----------------------------------------------------------------------\n |  Class methods defined here:\n |  \n |  __class_getitem__(...) from builtins.type\n |      See PEP 585\n |  \n |  ----------------------------------------------------------------------\n |  Static methods defined here:\n |  \n |  __new__(*args, **kwargs) from builtins.type\n |      Create and return a new object.  See help(type) for accurate signature.\n\n\n\n\n\n\n\n\n\n\n3.3 Méthodes des listes\nLes listes présentent de nombreuses méthodes en plus de celles des tuples qui vont permettre de les modifier.\nVoici quelques utilisations courantes à retenir(la liste complète est dans la documentation!).\n\najouter des éléments à la liste à la fin avec la méthode append, ou à un indice quelconque avec la méthode insert.\n\n\n# ajout à la fin\ntab.append(4)\ntab\n\n['un', 2.0, 'trois', 4]\n\n\n\n# ajout à l'indice 0(au début)\ntab.insert(0, 'zéro')\ntab\n\n['zéro', 'un', 2.0, 'trois', 4]\n\n\n\nsupprimer des éléments de la liste à la fin avec la méthode pop(), ou à un indice quelconque avec la méthode pop(indice).\n\n\ntab.pop()\ntab\n\n['zéro', 'un', 2.0, 'trois']\n\n\n\ntab.pop(1)\ntab\n\n['zéro', 2.0, 'trois']\n\n\n\n\n\n\n\n\n\nEn plus: Documentation des listes\n\n\n\n\n\n\n\nhelp(list)\n&gt;&gt;sortie\n\nHelp on class list in module builtins:\n\nclass list(object)\n |  list(iterable=(), /)\n |  \n |  Built-in mutable sequence.\n |  \n |  If no argument is given, the constructor creates a new empty list.\n |  The argument must be an iterable if specified.\n |  \n |  Methods defined here:\n |  \n |  __add__(self, value, /)\n |      Return self+value.\n |  \n |  __contains__(self, key, /)\n |      Return key in self.\n |  \n |  __delitem__(self, key, /)\n |      Delete self[key].\n |  \n |  __eq__(self, value, /)\n |      Return self==value.\n |  \n |  __ge__(self, value, /)\n |      Return self&gt;=value.\n |  \n |  __getattribute__(self, name, /)\n |      Return getattr(self, name).\n |  \n |  __getitem__(...)\n |      x.__getitem__(y) &lt;==&gt; x[y]\n |  \n |  __gt__(self, value, /)\n |      Return self&gt;value.\n |  \n |  __iadd__(self, value, /)\n |      Implement self+=value.\n |  \n |  __imul__(self, value, /)\n |      Implement self*=value.\n |  \n |  __init__(self, /, *args, **kwargs)\n |      Initialize self.  See help(type(self)) for accurate signature.\n |  \n |  __iter__(self, /)\n |      Implement iter(self).\n |  \n |  __le__(self, value, /)\n |      Return self&lt;=value.\n |  \n |  __len__(self, /)\n |      Return len(self).\n |  \n |  __lt__(self, value, /)\n |      Return self&lt;value.\n |  \n |  __mul__(self, value, /)\n |      Return self*value.\n |  \n |  __ne__(self, value, /)\n |      Return self!=value.\n |  \n |  __repr__(self, /)\n |      Return repr(self).\n |  \n |  __reversed__(self, /)\n |      Return a reverse iterator over the list.\n |  \n |  __rmul__(self, value, /)\n |      Return value*self.\n |  \n |  __setitem__(self, key, value, /)\n |      Set self[key] to value.\n |  \n |  __sizeof__(self, /)\n |      Return the size of the list in memory, in bytes.\n |  \n |  append(self, object, /)\n |      Append object to the end of the list.\n |  \n |  clear(self, /)\n |      Remove all items from list.\n |  \n |  copy(self, /)\n |      Return a shallow copy of the list.\n |  \n |  count(self, value, /)\n |      Return number of occurrences of value.\n |  \n |  extend(self, iterable, /)\n |      Extend list by appending elements from the iterable.\n |  \n |  index(self, value, start=0, stop=9223372036854775807, /)\n |      Return first index of value.\n |      \n |      Raises ValueError if the value is not present.\n |  \n |  insert(self, index, object, /)\n |      Insert object before index.\n |  \n |  pop(self, index=-1, /)\n |      Remove and return item at index (default last).\n |      \n |      Raises IndexError if list is empty or index is out of range.\n |  \n |  remove(self, value, /)\n |      Remove first occurrence of value.\n |      \n |      Raises ValueError if the value is not present.\n |  \n |  reverse(self, /)\n |      Reverse *IN PLACE*.\n |  \n |  sort(self, /, *, key=None, reverse=False)\n |      Sort the list in ascending order and return None.\n |      \n |      The sort is in-place (i.e. the list itself is modified) and stable (i.e. the\n |      order of two equal elements is maintained).\n |      \n |      If a key function is given, apply it once to each list item and sort them,\n |      ascending or descending, according to their function values.\n |      \n |      The reverse flag can be set to sort in descending order.\n |  \n |  ----------------------------------------------------------------------\n |  Class methods defined here:\n |  \n |  __class_getitem__(...) from builtins.type\n |      See PEP 585\n |  \n |  ----------------------------------------------------------------------\n |  Static methods defined here:\n |  \n |  __new__(*args, **kwargs) from builtins.type\n |      Create and return a new object.  See help(type) for accurate signature.\n |  \n |  ----------------------------------------------------------------------\n |  Data and other attributes defined here:\n |  \n |  __hash__ = None",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 3: Représentation des données : types construits",
      "Chapitre 1: Introduction aux tableaux"
    ]
  },
  {
    "objectID": "1g/nsi/3-representation-des-donnees-types-construits/1-introduction-aux-tableaux/index.html#utilisations-courantes-des-tuples",
    "href": "1g/nsi/3-representation-des-donnees-types-construits/1-introduction-aux-tableaux/index.html#utilisations-courantes-des-tuples",
    "title": "Chapitre 1: Introduction aux tableaux",
    "section": "4 Utilisations courantes des tuples",
    "text": "4 Utilisations courantes des tuples\n\n4.1 Déstructuration\nIl peut être pratique de récupérer les valeurs stockées dans le tuple dans des variables de type simple: on parle de déstructuration.\n\nt = (\"α\", \"β\", \"γ\")\na, b, c = t\nprint(\"t=\", t)\nprint(\"a=\", a)\nprint(\"b=\", b)\nprint(\"c=\", c)\n&gt;&gt;sortie\n\nt= ('α', 'β', 'γ')\na= α\nb= β\nc= γ\n\n\n\n\n4.2 Permuter des variables\nHabituellement, lorsque l’on souhaite permuter deux variables, il est nécessaire de passer par une troisième variable auxiliaire. Grâce aux tuples, la permutation peut se faire en une instruction.\n\na = 3\nb = 2\nprint(\"a=\",a, \"b=\", b)\nprint(\"Permutation\")\na, b = b, a\nprint(\"a=\",a, \"b=\", b)\n&gt;&gt;sortie\n\na= 3 b= 2\nPermutation\na= 2 b= 3\n\n\n\n\n4.3 Renvoyer plusieurs valeurs dans une fonction\nIl s’agit d’une application courante des tuples. Prenons l’exemple d’une fonction qui renvoie les deux racines du trinôme.\n\ndef racines_du_trinome(a,b,c):\n    delta = b**2-4*a*c\n    if delta &gt;= 0:\n        return -b-delta**0.5/(2*a), -b+delta**0.5/(2*a)\n\nracines_du_trinome(1,0,-1)\n\n(-1.0, 1.0)\n\n\nIci on récupère les racines par déstructuration.\n\nx1, x2 = racines_du_trinome(1,0,-2)\nprint(\"racine 1:\", x1)\nprint(\"racine 2:\", x2)\n&gt;&gt;sortie\n\nracine 1: -1.4142135623730951\nracine 2: 1.4142135623730951",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 3: Représentation des données : types construits",
      "Chapitre 1: Introduction aux tableaux"
    ]
  },
  {
    "objectID": "1g/nsi/3-representation-des-donnees-types-construits/1-introduction-aux-tableaux/index.html#savoir-si-un-tableau-contient-une-valeur",
    "href": "1g/nsi/3-representation-des-donnees-types-construits/1-introduction-aux-tableaux/index.html#savoir-si-un-tableau-contient-une-valeur",
    "title": "Chapitre 1: Introduction aux tableaux",
    "section": "5 Savoir si un tableau contient une valeur",
    "text": "5 Savoir si un tableau contient une valeur\nOutre la méthode index(), on peut utiliser l’opérateur booléen in pur savoir si une valeur est dans la liste.\n\ntab = [1, 3, 5]\nprint(3 in tab)\nprint(4 in tab)\n&gt;&gt;sortie\n\nTrue\nFalse",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 3: Représentation des données : types construits",
      "Chapitre 1: Introduction aux tableaux"
    ]
  },
  {
    "objectID": "1g/nsi/3-representation-des-donnees-types-construits/1-introduction-aux-tableaux/index.html#parcours-séquentiel-des-tableaux",
    "href": "1g/nsi/3-representation-des-donnees-types-construits/1-introduction-aux-tableaux/index.html#parcours-séquentiel-des-tableaux",
    "title": "Chapitre 1: Introduction aux tableaux",
    "section": "6 Parcours séquentiel des tableaux",
    "text": "6 Parcours séquentiel des tableaux\nLes tableaux étant des structures ordonnées finies, il est facile de les parcourir dans l’ordre avec une boucle bornée for.\nEn python, on peut réaliser l’itération sur les valeurs ou sur les indices si nécessaire. Cette dernière est plus compliquée, mais plus puissant, car on a alors accès à l’indice i et à la valeur tab[i]).\n\n6.1 Itération sur les valeurs\nOn fait une itération sur les valeurs du tableau en utilisant le mot-clé in.\n\ntab = [12, -3, 15, -9, 17, 7]\nfor val in tab:\n    print(val)\n&gt;&gt;sortie\n\n12\n-3\n15\n-9\n17\n7\n\n\n\n\n6.2 Itération sur les indices\nC’est la méthode classique utilisée dans les langages impératifs.\n\nt = (12, -3, 15, -9, 17, 7)\nfor i in range(len(t)):\n    val = t[i]\n    print(\"indice:\", i, \"valeur:\", val)\n&gt;&gt;sortie\n\nindice: 0 valeur: 12\nindice: 1 valeur: -3\nindice: 2 valeur: 15\nindice: 3 valeur: -9\nindice: 4 valeur: 17\nindice: 5 valeur: 7\n\n\n\n\n\n\n\n\n\nEn plus\n\n\n\n\n\n\nMême si le choix du nom des variables d’itération vous appartient, on a l’habitude d’utiliser:\n\ni, idx, j, k… pour les index\nval, v, e… pour les valeurs des éléments du tableau.\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nCes deux méthodes fonctionnent aussi bien avec les tuples que les listes, mais également avec les chaînes de caractères str.\n\nfor lettre in \"Bonjour\":\n    print(lettre)\n&gt;&gt;sortie\n\nB\no\nn\nj\no\nu\nr\n\n\n\nmot = \"Bonjour\"\nfor i in range(len(mot)):\n    val = mot[i]\n    print(\"indice:\", i, \"valeur:\", val)\n&gt;&gt;sortie\n\nindice: 0 valeur: B\nindice: 1 valeur: o\nindice: 2 valeur: n\nindice: 3 valeur: j\nindice: 4 valeur: o\nindice: 5 valeur: u\nindice: 6 valeur: r",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 3: Représentation des données : types construits",
      "Chapitre 1: Introduction aux tableaux"
    ]
  },
  {
    "objectID": "1g/nsi/1-histoire-de-linformatique/2-technologie-et-theorie/quiz/index.html",
    "href": "1g/nsi/1-histoire-de-linformatique/2-technologie-et-theorie/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 1: Histoire de l’informatique",
      "Chapitre 2: Technologie et théorie",
      "Quiz"
    ]
  },
  {
    "objectID": "1g/nsi/1-histoire-de-linformatique/2-technologie-et-theorie/exo/index.html",
    "href": "1g/nsi/1-histoire-de-linformatique/2-technologie-et-theorie/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "h5p: 1060965078",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 1: Histoire de l’informatique",
      "Chapitre 2: Technologie et théorie",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/1-histoire-de-linformatique/2-technologie-et-theorie/exo/index.html#le-parcours-scientifique-dalan-turing",
    "href": "1g/nsi/1-histoire-de-linformatique/2-technologie-et-theorie/exo/index.html#le-parcours-scientifique-dalan-turing",
    "title": "Exercices",
    "section": "1 Le parcours scientifique d’Alan Turing",
    "text": "1 Le parcours scientifique d’Alan Turing\nEn utilisant comme source l’article «Alan Turing itinéraire d’un précurseur», écrire un résumé de 10-20 lignes expliquant les divers sujets qu’a étudiés Alan Turing au cours de sa vie.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 1: Histoire de l’informatique",
      "Chapitre 2: Technologie et théorie",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/1-histoire-de-linformatique/1-quelques-dates-marquantes-de-lhistoire-de-linformatique/quiz/index.html",
    "href": "1g/nsi/1-histoire-de-linformatique/1-quelques-dates-marquantes-de-lhistoire-de-linformatique/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 1: Histoire de l’informatique",
      "Chapitre 1: Quelques dates marquantes de l’histoire de l’informatique",
      "Quiz"
    ]
  },
  {
    "objectID": "1g/nsi/1-histoire-de-linformatique/1-quelques-dates-marquantes-de-lhistoire-de-linformatique/exo/index.html",
    "href": "1g/nsi/1-histoire-de-linformatique/1-quelques-dates-marquantes-de-lhistoire-de-linformatique/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "h5p: 1060965078",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 1: Histoire de l’informatique",
      "Chapitre 1: Quelques dates marquantes de l’histoire de l’informatique",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/1-histoire-de-linformatique/1-quelques-dates-marquantes-de-lhistoire-de-linformatique/exo/index.html#le-parcours-scientifique-dalan-turing",
    "href": "1g/nsi/1-histoire-de-linformatique/1-quelques-dates-marquantes-de-lhistoire-de-linformatique/exo/index.html#le-parcours-scientifique-dalan-turing",
    "title": "Exercices",
    "section": "1 Le parcours scientifique d’Alan Turing",
    "text": "1 Le parcours scientifique d’Alan Turing\nEn utilisant comme source l’article «Alan Turing itinéraire d’un précurseur», écrire un résumé de 10-20 lignes expliquant les divers sujets qu’a étudiés Alan Turing au cours de sa vie.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 1: Histoire de l’informatique",
      "Chapitre 1: Quelques dates marquantes de l’histoire de l’informatique",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/1-histoire-de-linformatique/1-quelques-dates-marquantes-de-lhistoire-de-linformatique/exo/index.html#créez-votre-propre-frise",
    "href": "1g/nsi/1-histoire-de-linformatique/1-quelques-dates-marquantes-de-lhistoire-de-linformatique/exo/index.html#créez-votre-propre-frise",
    "title": "Exercices",
    "section": "2 Créez votre propre frise",
    "text": "2 Créez votre propre frise\nCréez votre histoire de l’informatique en utilisant les sources données dans le cours, et en réalisant une frise chronologique grâce à la librairie javascript TimelineJS\n\n2.1 Recherche documentaire\nPour cela vous allez devoir dans un premier temps concevoir sur le papier votre frise en sélectionnant les éléments les plus signifiants, en les ordonnant. N’oubliez pas de noter également vos sources de texte et d’images(libres de droit dans le cas d’une publication sur la toile).\n\n\n2.2 Création de la frise interactive\nVous intégrerez ensuite vos éléments au sein d’un fichier de données csv(comma separated values, soit valeurs séparées par des virgules) que vous éditerez avec un tableur(LibreOffice de préférence).\nVoici un exemple de rendu d’une frise avec timeline.js.\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n.\nVous pouvez visualiser le fichier csv de données qui a permis de créer cette frise à cette adresse: https://framagit.org/lyceum/timelinejs-local/-/blob/master/src/timeline-data.csv.\nLa particularité de la librairie TimelineJS, est qu’elle permet d’ajouter eu plus du simple texte, des médias issus de diverses sources: Wikipedia, Youtube, SoundCloud, Instangram, Tweeter… (lien vers la liste complète sur knightlab.com)\nVoici la signification des entrées de ce tableau de données:\n\n\n\n  Clef\n                                                          Rôle\n\n\n\n\ndate\nannée de la découverte ou de l’invention(obligatoire sauf pour la vignette de titre)\n\n\ntype\nlaisser vide pour un événement normal et indiquer titre pour la vignette de titre de la frise.\n\n\ntitre\ntitre de la vignette.\n\n\ntexte\ntexte à inclure dans la vignette.\n\n\nmediaUrl\nadresse de l’élément media(exemple: https://fr.wikipedia.org/wiki/Pascaline, ou localement: mon-image.jpg)\n\n\nmediaCredit\nauteur et licence du média intégré\n\n\nmediaLegend\nlégende à ajouter au media\n\n\nmediaThumbnail\nvignette à utiliser pour afficher la vignette sur la frise, si vide, une vignette par défaut est ajouté en fonction du média(exemple: logo Youtube pour les média youtube)\n\n\nbackgroundUrl\nadresse url d’une image à utiliser pour le fond de la vignette.\n\n\nbackgroundColor\ncouleur du fond de la vignette, vous pouvez utiliser une couleur héxadécimale #RRGGBB ou avec transparence #RRGGBBaa, ou simplement un nom de couleur css comme white, lime… lien vers la liste complète des couleurs sur MDN\n\n\n\nPour créer votre frise, téléchargez le dossier compressé du code de la frise d’exemple à l’adresse suivante: https://framagit.org/lyceum/timelinejs-local/-/archive/master/timelinejs-local-master.zip, puis éditez le fichier timeline-data.csv avec le tableur.\nObservez le rendu dans le navigateur en ouvrant le fichier index.html et en rafraîchissant la page à chaque changement(CTRL+R).\nA vos claviers!",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 1: Histoire de l’informatique",
      "Chapitre 1: Quelques dates marquantes de l’histoire de l’informatique",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/4-traitement-de-donnees-en-tables/1-tables-de-donnees/quiz/index.html",
    "href": "1g/nsi/4-traitement-de-donnees-en-tables/1-tables-de-donnees/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 4: Traitement de données en tables",
      "Chapitre 1: Tables de données",
      "Quiz"
    ]
  },
  {
    "objectID": "1g/nsi/4-traitement-de-donnees-en-tables/1-tables-de-donnees/exo/index.html",
    "href": "1g/nsi/4-traitement-de-donnees-en-tables/1-tables-de-donnees/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Aucun exercice pour l’instant.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 4: Traitement de données en tables",
      "Chapitre 1: Tables de données",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/4-traitement-de-donnees-en-tables/2-utilisation-de-la-librairie-pandas/index.html",
    "href": "1g/nsi/4-traitement-de-donnees-en-tables/2-utilisation-de-la-librairie-pandas/index.html",
    "title": "Chapitre 2: Utilisation de la librairie pandas",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nTri d’une table\nTrier une table suivant une colonne.\nUne fonction de tri intégrée au système ou à une bibliothèque peut être utilisée.\n\n\nFusion de tables\nConstruire une nouvelle table en combinant les données de deux tables.\nLa notion de domaine de valeurs est mise en évidence.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 4: Traitement de données en tables",
      "Chapitre 2: Utilisation de la librairie pandas"
    ]
  },
  {
    "objectID": "1g/nsi/4-traitement-de-donnees-en-tables/2-utilisation-de-la-librairie-pandas/index.html#lecture-dun-fichier-csv",
    "href": "1g/nsi/4-traitement-de-donnees-en-tables/2-utilisation-de-la-librairie-pandas/index.html#lecture-dun-fichier-csv",
    "title": "Chapitre 2: Utilisation de la librairie pandas",
    "section": "1 Lecture d’un fichier csv",
    "text": "1 Lecture d’un fichier csv\nLa méthode read_csv permet la lecture d’un fichier csv. On utilise ici la Cartographie des stationnements deux roues de Nice mise à disposition sur le site gouvernemental: https://data.gouv.fr avec la description suivante:\nVous trouverez ici la cartographie des stationnements deux roues. Table des données SIG relatives aux GAV-GAM et GAV/GAM nb : GAV = Garage à Vélo + GAM = Garage à Moto Code profil 1 = GAM; Code profil 2 = GAV, Code profil 0 = GAV-GAM\n\nimport pandas as pd\n\n# on importe les données dans un variable appelée df pour dataframe(le nom de la variable vous appartient)\ndf = pd.read_csv(\"gav-gam-06-09-2019.csv\", sep=\";\")\n\n# on affiche les 5 premières lignes\ndf.head(5)\n\n\n\n\n\n\n\n\n\nNB_ARC_VL\nID_GAV\nNB_PL_MT\nLARGEUR\nGLOBALID\nTYPE_MOBIL\nPROFIL\nLONGUEUR\nETAT_\nCODE_INSEE\nNB_PL_VL\nNB_PLACE\nNB_ARC_MT\ngeometry\n\n\n\n\n0\n0.0\n1001\n30.0\n0.65\n{578A7D02-A426-4AA0-99C6-D2C1FBED8814}\n4.0\n1\n21.2\nEn vigueur\n6088\n0.0\n30.0\n0\n{\"type\": \"Point\", \"coordinates\": [7.21337219, ...\n\n\n1\n2.0\n2010\n3.0\n2.00\n{291C1D1B-2A1C-42B7-9D06-2877D62B2838}\n1.0\n0\n7.5\nEn vigueur\n6088\n2.0\n5.0\n4\n{\"type\": \"Point\", \"coordinates\": [7.25311445, ...\n\n\n2\n0.0\n2015\n12.0\n2.00\n{E002A4DF-3CD8-4F5F-9E87-721004924B1C}\n1.0\n1\n26.0\nEn vigueur\n6088\n0.0\n12.0\n12\n{\"type\": \"Point\", \"coordinates\": [7.25608087, ...\n\n\n3\n0.0\n2020\n3.0\n2.00\n{DD571B19-C522-4E1F-97E5-0841E6DE59E5}\n2.0\n0\n4.7\nEn vigueur\n6088\n1.0\n4.0\n0\n{\"type\": \"Point\", \"coordinates\": [7.25171699, ...\n\n\n4\n0.0\n2024\n7.0\n2.00\n{1710D778-67BF-45ED-B3F5-399B82088C5A}\n2.0\n0\n12.0\nEn vigueur\n6088\n3.0\n10.0\n0\n{\"type\": \"Point\", \"coordinates\": [7.25427638, ...",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 4: Traitement de données en tables",
      "Chapitre 2: Utilisation de la librairie pandas"
    ]
  },
  {
    "objectID": "1g/nsi/4-traitement-de-donnees-en-tables/2-utilisation-de-la-librairie-pandas/index.html#exploration-des-données",
    "href": "1g/nsi/4-traitement-de-donnees-en-tables/2-utilisation-de-la-librairie-pandas/index.html#exploration-des-données",
    "title": "Chapitre 2: Utilisation de la librairie pandas",
    "section": "2 Exploration des données",
    "text": "2 Exploration des données\nOn peut également facilement afficher le nom des colonnes avec l’attribut columns.\n\ndf.columns\n\nIndex(['NB_ARC_VL', 'ID_GAV', 'NB_PL_MT', 'LARGEUR', 'GLOBALID', 'TYPE_MOBIL',\n       'PROFIL', 'LONGUEUR', 'ETAT_', 'CODE_INSEE', 'NB_PL_VL', 'NB_PLACE',\n       'NB_ARC_MT', 'geometry'],\n      dtype='object')\n\n\nOn peut facilement parcourir l’ensemble des lignes du tableau avec la méthode itertuples().\n\nfor ligne in df.itertuples():\n    print(ligne)\n    \n    # On s'arrête à la troisième ligne pour pas encombrer le cours\n    # Commenter ces deux lignes pour parcourir l'ensemble du tableau\n    if ligne.Index &gt; 2:\n        break\n&gt;&gt;sortie\n\nPandas(Index=0, NB_ARC_VL=0.0, ID_GAV='1001', NB_PL_MT=30.0, LARGEUR=0.65, GLOBALID='{578A7D02-A426-4AA0-99C6-D2C1FBED8814}', TYPE_MOBIL=4.0, PROFIL=1, LONGUEUR=21.2, ETAT_='En vigueur', CODE_INSEE=6088, NB_PL_VL=0.0, NB_PLACE=30.0, NB_ARC_MT=0, geometry='{\"type\": \"Point\", \"coordinates\": [7.21337219, 43.66717783]}')\nPandas(Index=1, NB_ARC_VL=2.0, ID_GAV='2010', NB_PL_MT=3.0, LARGEUR=2.0, GLOBALID='{291C1D1B-2A1C-42B7-9D06-2877D62B2838}', TYPE_MOBIL=1.0, PROFIL=0, LONGUEUR=7.5, ETAT_='En vigueur', CODE_INSEE=6088, NB_PL_VL=2.0, NB_PLACE=5.0, NB_ARC_MT=4, geometry='{\"type\": \"Point\", \"coordinates\": [7.25311445, 43.69461128]}')\nPandas(Index=2, NB_ARC_VL=0.0, ID_GAV='2015', NB_PL_MT=12.0, LARGEUR=2.0, GLOBALID='{E002A4DF-3CD8-4F5F-9E87-721004924B1C}', TYPE_MOBIL=1.0, PROFIL=1, LONGUEUR=26.0, ETAT_='En vigueur', CODE_INSEE=6088, NB_PL_VL=0.0, NB_PLACE=12.0, NB_ARC_MT=12, geometry='{\"type\": \"Point\", \"coordinates\": [7.25608087, 43.6951747]}')\nPandas(Index=3, NB_ARC_VL=0.0, ID_GAV='2020', NB_PL_MT=3.0, LARGEUR=2.0, GLOBALID='{DD571B19-C522-4E1F-97E5-0841E6DE59E5}', TYPE_MOBIL=2.0, PROFIL=0, LONGUEUR=4.7, ETAT_='En vigueur', CODE_INSEE=6088, NB_PL_VL=1.0, NB_PLACE=4.0, NB_ARC_MT=0, geometry='{\"type\": \"Point\", \"coordinates\": [7.25171699, 43.70004002]}')\n\n\nChaque ligne renvoyée par la méthode itertuples() est un tuple nommé, on peut ainsi aaccéder aux valeurs individuelles de chaque ligne avec la notation pointée ligne.nom_de_la_colonne. Par exemple pour afficher le nombre d’arcs du stationnement.\n\nfor ligne in df.itertuples():\n    # On s'arrête à la troisième ligne pour pas encombrer le cours\n    # Commenter ces deux lignes pour parcourir l'ensmble du tableau\n    if ligne.Index &gt; 2:\n        break\n    print(\"Nombre d'arcs de stationnement pour vélos:\", ligne.NB_ARC_VL)\n&gt;&gt;sortie\n\nNombre d'arcs de stationnement pour vélos: 0.0\nNombre d'arcs de stationnement pour vélos: 2.0\nNombre d'arcs de stationnement pour vélos: 0.0",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 4: Traitement de données en tables",
      "Chapitre 2: Utilisation de la librairie pandas"
    ]
  },
  {
    "objectID": "1g/nsi/4-traitement-de-donnees-en-tables/2-utilisation-de-la-librairie-pandas/index.html#sélection-logique-de-données",
    "href": "1g/nsi/4-traitement-de-donnees-en-tables/2-utilisation-de-la-librairie-pandas/index.html#sélection-logique-de-données",
    "title": "Chapitre 2: Utilisation de la librairie pandas",
    "section": "3 Sélection logique de données",
    "text": "3 Sélection logique de données\nSupposons que l’on cherche des stationnements destinés aux vélos.\n\nfor ligne in df.itertuples():\n    # On s'arrête à la troisième ligne pour pas encombrer le cours\n    # Commenter ces deux lignes pour parcourir l'ensmble du tableau\n    if ligne.Index &gt; 2:\n        break\n    if ligne.NB_ARC_VL &gt; 0:\n        print(ligne.Index, ligne.NB_ARC_VL)\n&gt;&gt;sortie\n\n1 2.0\n\n\nEffectivement parmi les trois premières lignes seul la ligne d’index 1(la deuxième) présente des arcs de stationnement pour vélos.\nPour explorer davantage cette table de données, passez aux exercices.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 4: Traitement de données en tables",
      "Chapitre 2: Utilisation de la librairie pandas"
    ]
  },
  {
    "objectID": "1g/nsi/4-traitement-de-donnees-en-tables/2-utilisation-de-la-librairie-pandas/index.html#liens",
    "href": "1g/nsi/4-traitement-de-donnees-en-tables/2-utilisation-de-la-librairie-pandas/index.html#liens",
    "title": "Chapitre 2: Utilisation de la librairie pandas",
    "section": "4 Liens",
    "text": "4 Liens\nLa librairie pandas est extrêmement riche et seul son utilisation sur des cas concrets permet d’en comprendre les rouages.\nPour plus d’informations, vous pouvez consulter:\n\nla documentation\nla fiche de rappels,\nou encore voir ce qu’arrive à faire les kagglers avec les données en consultant des exemples de notebooks sur le site https://kaggle.com.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 4: Traitement de données en tables",
      "Chapitre 2: Utilisation de la librairie pandas"
    ]
  },
  {
    "objectID": "1g/nsi/8-algorithmique/2-algorithmes-de-recherche/quiz/index.html",
    "href": "1g/nsi/8-algorithmique/2-algorithmes-de-recherche/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 8: Algorithmique",
      "Chapitre 2: Algorithmes de recherche",
      "Quiz"
    ]
  },
  {
    "objectID": "1g/nsi/8-algorithmique/2-algorithmes-de-recherche/exo/index.html",
    "href": "1g/nsi/8-algorithmique/2-algorithmes-de-recherche/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "On suppose que l’on a un annuaire qui contient les huit milliards d’êtres humains dans l’ordre alphabétique de leurs noms, prénom, lieu de naissance et date de naissance.\nCombien de comparaisons sont nécessaires pour retrouver une personne dans cet annuaire ?",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 8: Algorithmique",
      "Chapitre 2: Algorithmes de recherche",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/8-algorithmique/2-algorithmes-de-recherche/exo/index.html#recherche-dans-un-annuaire",
    "href": "1g/nsi/8-algorithmique/2-algorithmes-de-recherche/exo/index.html#recherche-dans-un-annuaire",
    "title": "Exercices",
    "section": "",
    "text": "On suppose que l’on a un annuaire qui contient les huit milliards d’êtres humains dans l’ordre alphabétique de leurs noms, prénom, lieu de naissance et date de naissance.\nCombien de comparaisons sont nécessaires pour retrouver une personne dans cet annuaire ?",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 8: Algorithmique",
      "Chapitre 2: Algorithmes de recherche",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/8-algorithmique/2-algorithmes-de-recherche/exo/index.html#recherche-dans-un-dictionnaire",
    "href": "1g/nsi/8-algorithmique/2-algorithmes-de-recherche/exo/index.html#recherche-dans-un-dictionnaire",
    "title": "Exercices",
    "section": "2 Recherche dans un dictionnaire",
    "text": "2 Recherche dans un dictionnaire\nLa page suivante contient une liste de 336531 mots du français.\nhttps://chrplr.github.io/openlexicon/datasets-info/Liste-de-mots-francais-Gutenberg/liste.de.mots.francais.frgut.txt\nopenlexicon\nAprès avoir téléchargé le fichier, vous pouvez importer les mots dans une liste avec le code python suivant.\n# initialisation de la liste de mots vide\nmots = []\nwith open('liste.de.mots.francais.frgut.txt') as f:\n    mots = [line.rstrip() for line in f]\n\n# affichage du nombre de mots\nlen(mots) # renvoie 336531\nEn python, le logarithme en base 2 est implémenté dans le module math.\nimport math\nmath.log2(len(mots)) # renvoie 18.3603798811634\n\nImplémenter l’algorithme de recherche dichotomique sur la liste mots, et vérifier que dans le pire des cas le résultat de la recherche sera donnée en 19 tours de boucle.\nQuel est le cas le plus favorable? le moins favorable?",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 8: Algorithmique",
      "Chapitre 2: Algorithmes de recherche",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/8-algorithmique/2-algorithmes-de-recherche/exo/index.html#le-jeu-du-plus-petit-plus-grand",
    "href": "1g/nsi/8-algorithmique/2-algorithmes-de-recherche/exo/index.html#le-jeu-du-plus-petit-plus-grand",
    "title": "Exercices",
    "section": "3 Le jeu du “plus petit, plus grand”",
    "text": "3 Le jeu du “plus petit, plus grand”\n\nÉcrire un programme qui joue au jeu du “plus petit-plus grand”:\n\n\nLe programme choisit un nombre au hasard entre 1 et 100,\nl’utilisateur choisit un nombre au hasard,\nl’ordinateur indique si le nombre est plus petit, plus-grand ou deviné, jusqu’à ce que l’utilisateur l’ait trouvé.\n\n\nEn combien d’étapes au plus peut-on deviner le nombre:\n\n\nSi on procède au hasard?\nSi on applique la méthode de la dichotomie?\n\n\nÉcrire un autre programme qui cherche à deviner le nombre par la méthode de dichotomie et qui affiche le nombre de tours utilisés.\n\nInformatique et sciences du numérique Spécialité ISN en terminale S - Avec des exercices corrigés et des idées de projets par Gilles Dowek",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 8: Algorithmique",
      "Chapitre 2: Algorithmes de recherche",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/8-algorithmique/1-parcours-sequentiel-dun-tableau/quiz/index.html",
    "href": "1g/nsi/8-algorithmique/1-parcours-sequentiel-dun-tableau/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 8: Algorithmique",
      "Chapitre 1: Parcours séquentiel d’un tableau",
      "Quiz"
    ]
  },
  {
    "objectID": "1g/nsi/8-algorithmique/1-parcours-sequentiel-dun-tableau/exo/index.html",
    "href": "1g/nsi/8-algorithmique/1-parcours-sequentiel-dun-tableau/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Aucun exercice pour l’instant.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 8: Algorithmique",
      "Chapitre 1: Parcours séquentiel d’un tableau",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/8-algorithmique/3-algorithmes-de-tri/index.html",
    "href": "1g/nsi/8-algorithmique/3-algorithmes-de-tri/index.html",
    "title": "Chapitre 3: Algorithmes de tri",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nTris par insertion, par sélection\nÉcrire un algorithme de tri.\nDécrire un invariant de boucle qui prouve la correction des tris par insertion, par sélection.\nLa terminaison de ces algorithmes est à justifier.\nOn montre que leur coût est quadratique dans le pire cas.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 8: Algorithmique",
      "Chapitre 3: Algorithmes de tri"
    ]
  },
  {
    "objectID": "1g/nsi/8-algorithmique/3-algorithmes-de-tri/index.html#problématique",
    "href": "1g/nsi/8-algorithmique/3-algorithmes-de-tri/index.html#problématique",
    "title": "Chapitre 3: Algorithmes de tri",
    "section": "1 Problématique",
    "text": "1 Problématique\n\nComment ranger des données afin de faciliter leur accès futur ? C’est par exemple l’ordre alphabétique du dictionnaire, où les mots sont rangés dans un ordre logique qui permet de ne pas devoir parcourir tout l’ouvrage pour retrouver une définition. Ce peut être aussi l’ordre intuitif dans lequel un joueur de cartes va ranger son jeu afin de limiter le temps de recherche pendant le déroulement de la partie. Cette problématique permet d’introduire la notion de tri (avec plusieurs sens distincts : séparer, ordonner, choisir), puis d’étudier différents algorithmes de tri. Le tri permet essentiellement d’accélérer les recherches, grâce à l’algorithme de recherche dichotomique.\n\nSource eduscol\n\n1.1 Situation d’accroche\nUn joueur de cartes reçoit 9 cartes lors de la donne en début de partie ; il les trie ensuite pour faciliter la lecture de son jeu.\n\nComment procède-t-il exactement pour réaliser cette opération ?\nY a-t-il plusieurs façons de procéder :\n\nVous rendre sur cette page sur laquelle vous est proposé un jeu de cartes à trier:\n\n\nRéalisez les consignes suivantes dans l’ordre.\n\nConsigne n° 1: « triez les cartes » en notant le nombre d’opérations nécessaires au tri, recommencer l’opération pour voir si le nombre de tours d’algorithmes varie, et de quoi peut dépendre ce nombre. Ensuite seulement,\nConsigne n° 2: « décrivez par écrit la façon précise dont vous vous y êtes pris pour effectuer le tri ».\nEn plus: imaginez d’autres méthodes qui pourraient être plus efficaces pour effectuer le tri.\n\n\n\n1.2 Les deux types de tri «quadratiques»\nNous allons cette année voir deux algorithmes de tri pas forcément très efficaces, mais relativement simples.\nDans ces deux algorithmes, on va créer une sous-triée à gauche qui va grandir au fur et à mesure que l’algorithme «avance» jusqu’à ce que la liste soit entièrement triée.\nCes deux algorithmes utilisent deux boucles imbriquées:\n\nLa boucle externe est représentée par la flèche rouge.\nLa boucle interne est représentée par la flèche jaune.\n\nLes animations ci-dessous sont issues du Cahier NSI 1re aux éditions Bordas et peuvent être consultées en plein écran en suivant ce lien:\nhttps://www.cahier-nsi.fr/#!/interfaces\n\nLe tri par sélection consiste à créer une sous-liste triée à gauche en y ajoutant les éléments non triés de droite dans l’ordre croissant.\n\n\n\nCahier NSI 1re aux éditions Bordas\n\nle tri par insertion consiste à avancer dans la liste et placer la carte considérée à sa place dans la sous-liste triée de gauche.\n\n\n\nCahier NSI 1re aux éditions Bordas\n\n\n\n\n\n\n\nEn plus: Utilisation de la mémoire\n\n\n\n\n\n\nOn parle de tri en place (in-place en anglais) la liste est triée sans utiliser une autre liste pour stocker les résultats.\n\n\n\n\n\n\n\n1.3 Créer une liste de données aléatoire\nNous allons maintenant implémenter ces algorithmes en Python.\nOn commence par créer une liste aléatoire d’entiers pour tester nos algorithmes de tri.\n\n# Importer le module random pour créer des nombres au hasard\nimport random\n\ndef genere_liste_aleatoire(N, n):\n    \"\"\"Génére une liste aléatoire de N éléments compris entre 0 et n\"\"\"\n    # Créer une liste vide pour accueillir les nombres\n    data = []\n    # ajoute les éléments aléatoires dans la liste\n    for i in range(N):\n        data.append(random.randrange(n))\n    return data\n\n# Création d'une liste de 9 valeurs comprises entre 0 et 100\nliste_aléatoire = genere_liste_aleatoire(9, 100)\nprint(liste_aléatoire)\n&gt;&gt;sortie\n\n[89, 83, 33, 68, 35, 22, 56, 75, 37]",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 8: Algorithmique",
      "Chapitre 3: Algorithmes de tri"
    ]
  },
  {
    "objectID": "1g/nsi/8-algorithmique/3-algorithmes-de-tri/index.html#le-tri-par-sélection",
    "href": "1g/nsi/8-algorithmique/3-algorithmes-de-tri/index.html#le-tri-par-sélection",
    "title": "Chapitre 3: Algorithmes de tri",
    "section": "2 Le tri par sélection",
    "text": "2 Le tri par sélection\n\n2.1 Principe\n\nSur un tableau de n éléments (numérotés de 00 à n−1n-1), le principe du tri par sélection est le suivant :\n\nRechercher le plus petit élément du tableau, et l’échanger avec l’élément d’indice 0 ;\nrechercher le second plus petit élément du tableau, et l’échanger avec l’élément d’indice 1 ;\ncontinuer de cette façon jusqu’à ce que le tableau soit entièrement trié.   Source Wikipedia\n\n\n\n\n2.2 Illustration graphique\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n© Joestape89 CC BY-SA 3.0 via Wikimedia Commons\n\n\n2.3 Illustration en vidéo\nVidéo servie sans cookie via yewtu.be\nSelect-sort with Gypsy folk dance. Created at Sapientia University, Tirgu Mures (Marosvásárhely), Romania. Directed by Kátai Zoltán and Tóth László. In cooperation with “Maros Művészegyüttes”, Tirgu Mures (Marosvásárhely), Romania.{.cite-source}\n\n\n2.4 Implémentation en python\nVoici un exemple de code implémentant cet algorithme de tri présentant l’état de la liste à chaque tour avancée dans le tableau. Vous pouvez voir que le tableau est bien classé en plaçant systématiquement l’élément minimum du tableau restant à trier à la fin des éléments triés.\n\n# Création d'une liste de 5 valeurs comprises entre 0 et 100 à trier\ndata = genere_liste_aleatoire(5, 100)\nprint(\"Liste initiale: \", data)\n\ndef tri_par_selection(tab):\n    # Calculer la taille du tableau\n    N = len(tab)\n    # Parcourir le tableau jusqu'à l'avant dernière valeur\n    # en effet la dernière valeur sera forcément la plus grande\n    for i in range(N - 1):\n        # Stocker la valeur initiale de la case d'indice i, et son indice\n        minimum = tab[i]\n        i_min = i\n        #  Parcourir le reste du tableau pour rechercher l'élément le plus petit restant\n        for j in range(i, N):\n            if tab[j] &lt; minimum:\n                # Stocker la valeur du minimum et son indice\n                minimum = tab[j]\n                i_min = j\n        # Intervertir la valeur initiale de la case d'indice i et le minimum trouvé\n        tab[i], tab[i_min] = minimum, tab[i]\n        \n        # Affiche les états intermédiaires de la liste\n        print(\"Etat à la fin du tour\", i, \":\" , tab)\n\ntri_par_selection(data)\nprint(\"Liste finale: \", data)\n&gt;&gt;sortie\n\nListe initiale:  [86, 19, 2, 38, 42]\nEtat à la fin du tour 0 : [2, 19, 86, 38, 42]\nEtat à la fin du tour 1 : [2, 19, 86, 38, 42]\nEtat à la fin du tour 2 : [2, 19, 38, 86, 42]\nEtat à la fin du tour 3 : [2, 19, 38, 42, 86]\nListe finale:  [2, 19, 38, 42, 86]\n\n\n\n\n2.5 Aspects théoriques\nCet algorithme réalise deux boucles imbriquées il a une complexité quadratique dans le pire des cas O(N2)O(N^2).\nL’invariant de boucle garantit qu’au début de chaque tour ii de boucle externe, les ii premières valeurs du tableau sont les plus petites et sont triées.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 8: Algorithmique",
      "Chapitre 3: Algorithmes de tri"
    ]
  },
  {
    "objectID": "1g/nsi/8-algorithmique/3-algorithmes-de-tri/index.html#le-tri-par-insertion",
    "href": "1g/nsi/8-algorithmique/3-algorithmes-de-tri/index.html#le-tri-par-insertion",
    "title": "Chapitre 3: Algorithmes de tri",
    "section": "3 Le tri par insertion",
    "text": "3 Le tri par insertion\n\n3.1 Principe\n\nDans l’algorithme, on parcourt le tableau à trier du début à la fin. Au moment où on considère le i-ème élément, les éléments qui le précèdent sont déjà triés. Pour faire l’analogie avec l’exemple du jeu de cartes, lorsqu’on est à la i-ème étape du parcours, le i-ème élément est la carte saisie, les éléments précédents sont la main triée et les éléments suivants correspondent aux cartes encore mélangées sur la table.\n\n\nL’objectif d’une étape est d’insérer le i-ème élément à sa place parmi ceux qui précèdent. En pratique, on fait « remonter » l’élément au fur et à mesure jusqu’à rencontrer un élément plus petit.\n\nSource Wikipedia\n\n\n3.2 Illustration graphique\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nAnimation du tri par insertion©  CC BY-SA 3.0 via Wikimedia Commons\n\n\n3.3 Illustration en vidéo\nVidéo servie sans cookie via yewtu.be\nInsert-sort with Romanian folk dance. Created at Sapientia University, Tirgu Mures (Marosvásárhely), Romania. Directed by Kátai Zoltán and Tóth László. In cooperation with “Maros Művészegyüttes”, Tirgu Mures (Marosvásárhely), Romania.{.cite-source}\n\n\n3.4 Implémentation en python\nVoici un exemple d’implémentation ou le tableau est parcouru de la gauche vers la droite, observer bien ou est placée la valeur à insérer à chaque tour de la boucle.\n\n# Création d'une liste de 5 valeurs comprises entre 0 et 20 à trier\ndata = genere_liste_aleatoire(5, 100)\nprint(\"Liste initiale: \", data)\n\ndef tri_insertion(tab):\n    # Calculer la taille du tableau\n    N = len(tab)\n    # Parcourir l'ensemble de la liste à partir de la deuxième case\n    # en effet un tableau de 1 case est forcément trié\n    for i in range(1, N):\n        # Stocker la valeur à \"insérer\"\n        val = tab[i]\n        print(\"Valeur à insérer:\", val)\n        # Parcourir le tableau déjà trié de dimension i-1 vers la gauche\n        # jusqu'à rencontrer une valeur inférieure à notre valeur à insérer\n        j = i - 1\n        while tab[j] &gt; val and j &gt;= 0:\n            # Intervertir  les valeurs aux indices j et j+1\n            tab[j + 1], tab[j] = tab[j], tab[j + 1]\n            # Diminuer j de 1 pour la prochaine comparaison\n            j = j - 1\n        # Affiche les états intermédiaires de la liste\n        print(\"Etat à la fin du tour\", i, \":\" , tab)\n\ntri_insertion(data)\nprint(\"Liste finale:\", data)\n&gt;&gt;sortie\n\nListe initiale:  [92, 20, 7, 71, 51]\nValeur à insérer: 20\nEtat à la fin du tour 1 : [20, 92, 7, 71, 51]\nValeur à insérer: 7\nEtat à la fin du tour 2 : [7, 20, 92, 71, 51]\nValeur à insérer: 71\nEtat à la fin du tour 3 : [7, 20, 71, 92, 51]\nValeur à insérer: 51\nEtat à la fin du tour 4 : [7, 20, 51, 71, 92]\nListe finale: [7, 20, 51, 71, 92]\n\n\n\n\n3.5 Aspects théoriques\nCet algorithme réalise deux boucles imbriquées il a une complexité quadratique dans le pire des cas O(N2)O(N^2).\nL’invariant de boucle garantit qu’au début de chaque tour ii de boucle externe, les i+1i+1 premières valeurs du tableau sont triées.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 8: Algorithmique",
      "Chapitre 3: Algorithmes de tri"
    ]
  },
  {
    "objectID": "1g/nsi/8-algorithmique/3-algorithmes-de-tri/index.html#autres-algorithmes",
    "href": "1g/nsi/8-algorithmique/3-algorithmes-de-tri/index.html#autres-algorithmes",
    "title": "Chapitre 3: Algorithmes de tri",
    "section": "4 Autres algorithmes",
    "text": "4 Autres algorithmes\nCes deux algorithmes ne sont que des exemples d’algorithmes de tri, et il en existe bien d’autres plus efficace comme le fameux quicksort, ou le timsort utilisé comme algorithme par défaut en Python.\nLa littérature ne manque pas sur ce sujet, car il s’agit d’une introduction de choix à de nombreux concepts clés de l’algorithmique:\n\nla complexité: l’étude du temps et de la mémoire nécessité par l’algorithme.\nles cas extrêmes ou edge cases: que se passe-t-il dans le cas ou la liste est déjà triée, ou au contraire si elle est en ordre inversé.\nla correction de l’algorithme: comment prouver que l’algorithme donne le bon résultat en toute occasion par une méthode de récurrence mathématique.\n\nVous pouvez consulter cet article du site interstices.info pour en savoir plus.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 8: Algorithmique",
      "Chapitre 3: Algorithmes de tri"
    ]
  },
  {
    "objectID": "1g/nsi/8-algorithmique/4-algorithmes-gloutons/quiz/index.html",
    "href": "1g/nsi/8-algorithmique/4-algorithmes-gloutons/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 8: Algorithmique",
      "Chapitre 4: Algorithmes gloutons",
      "Quiz"
    ]
  },
  {
    "objectID": "1g/nsi/8-algorithmique/4-algorithmes-gloutons/exo/index.html",
    "href": "1g/nsi/8-algorithmique/4-algorithmes-gloutons/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Pas d’exercices pour l’instant.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 8: Algorithmique",
      "Chapitre 4: Algorithmes gloutons",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/8-algorithmique/5-algorithme-des-k-plus-proches-voisins/index.html",
    "href": "1g/nsi/8-algorithmique/5-algorithme-des-k-plus-proches-voisins/index.html",
    "title": "Chapitre 5: Algorithme des k plus proches voisins",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nAlgorithme des k plus proches voisins\nÉcrire un algorithme qui prédit la classe d’un élément en fonction de la classe majoritaire de ses k plus proches voisins.\nIl s’agit d’un exemple d’algorithme d’apprentissage.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 8: Algorithmique",
      "Chapitre 5: Algorithme des k plus proches voisins"
    ]
  },
  {
    "objectID": "1g/nsi/8-algorithmique/5-algorithme-des-k-plus-proches-voisins/index.html#principe",
    "href": "1g/nsi/8-algorithmique/5-algorithme-des-k-plus-proches-voisins/index.html#principe",
    "title": "Chapitre 5: Algorithme des k plus proches voisins",
    "section": "1 Principe",
    "text": "1 Principe\n\n1.1 Principe de l’apprentissage supervisé\nÀ l’heure actuelle, l’intelligence artificielle se base souvent sur l’utilisation de données annotées que l’on fournit à l’ordinateur pour qu’il y trouve des similarités(c’est ce que l’on appelle de l’apprentissage supervisé).\n\nOn peut fournir à un programme une grande quantité d’écritures de chiffres.\nLe programme va lire toutes les données, et grâce à des algorithmes plus ou moins évolués, le programme va trouver les points communs entre les chiffres représentant le même nombre.\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nLe jeu de données du MNIST est un exemple de jeu d'entrainement et de tests des algorithmes de reconnaissance de chiffres.©  CC BY-SA 4.0 via Wikimedia Commons\nEnsuite, on peut donner au programme une image non annotée, et il nous dira s’il s’agit d’un 1, d’un 6 ou d’un 8…\nC’est un système qui est utilisé depuis des années pour la lecture des codes postaux sur les lettres avec une efficacité supérieure à 99%.\n\n\n\n1.2 Principe l’algorithme des k plus proches voisins\nOn dispose d’une collection de données annotées, et on veut savoir à quelle catégorie appartient un nouvel échantillon. Il s’agit d’un problème de classification.\nPrenons l’exemple suivant issu de cette page.\n\nImaginons… On étudie des papillons. Ceux-ci ont une certaine largeur et une certaine longueur. Certains sont des males, d’autres des femelles.\nOn étudie un certain nombre de ces papillons. Cela constitue un jeu d’apprentissage dont les caractéristiques sont représentées ci-dessous.\nA partir de ce jeu d’apprentissage, on cherche à prédire le sexe d’un papillon dont on connaît les dimensions.\n\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nClassification des papillons\n\n\n\n\nL’objectif est maintenant d’identifier le sexe d’un nouveau papillon en s’appuyant sur notre expérience précédente.\nLe principe est simple : On fait l’hypothèse que notre papillon a le même sexe que ces voisins.\n\nOn voit par exemple que le voisin le plus proche est un paillon mâle:\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nk=1\n\n\nCependant, la particularité de l’algorithme des k plus proches voisins est le fait que l’on puisse choisir kk, le nombre de plus proches voisins nous permettant de faire notre choix, on va prendre plusieurs voisins pour éviter de se baser que sur une observation pour notre choix.\nVoici par exemple l’application pour k=5k=5:\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nk=5\n\n\n\n\n\n\n\n\n\nApplication: Influence du nombre de voisins\n\n\n\n\n\n\nEn utilisant ce fichier geogebra montrer comment le choix de kk a une influence sur la prévision de la méthode.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 8: Algorithmique",
      "Chapitre 5: Algorithme des k plus proches voisins"
    ]
  },
  {
    "objectID": "1g/nsi/8-algorithmique/5-algorithme-des-k-plus-proches-voisins/index.html#implémentation-naïve-en-python",
    "href": "1g/nsi/8-algorithmique/5-algorithme-des-k-plus-proches-voisins/index.html#implémentation-naïve-en-python",
    "title": "Chapitre 5: Algorithme des k plus proches voisins",
    "section": "2 Implémentation naïve en Python",
    "text": "2 Implémentation naïve en Python\nLe code qui suit utilise des méthodes de pandas matplotlib et numpy non vues, il n’est pas nécessaire de savoir le refaire, par contre en utilisant les commentaires vous pouvez voir comment est effectuée la classification dans cette implémentation.\n\n2.1 Classification d’élèves en conseil de classe\nNous allons utiliser un fichier csv qui contient les moyennes, absences et mentions d’élèves de lycée.\nVous pouvez visualiser ce fichier ici: https://framagit.org/lyceum/k-plus-proches-voisins/blob/master/data/mentions-anonymised.csv\nÀ partir de ce fichier de données l’algorithme sera capable de vous indiquer quelle sera votre mention (Félicitations, compliments…) en fonction de notre moyenne générale et notre nombre d’absences.\n\n\n2.2 Tracé de la classification\nCommençons par observer l’ensemble des données sous forme graphique pour se faire une idée.\n\n%matplotlib inline\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Lecture des données du conseil de classe \ndf = pd.read_csv('./data/mentions-anonymised.csv')\n\n# On affiche 3 échantillons du tableau\ndf.sample(3)\n\n\n\n\n\n\n\n\n\nMentions\n1/2j abs\nRang\nMoyenne Générale\nPHILOSOPHIE\nHISTOIRE-GEOGRAPHIE\nMATHEMATIQUES\nPHYSIQUE-CHIMIE\nSCIENCES VIE & TERRE\nED.PHYSIQUE & SPORT.\n...\nESPAGNOL LV2\nITALIEN LV2\nJAPONAIS LV2\nSPECIALITE SVT\nSPECIALITE PHYS\nNISSART LV3\nSPECIALITE MATHS\nSPECIALITE ISN\narts fac\nENS. MORAL & CIVIQUE\n\n\n\n\n89\nEncouragements\n2.0\n31.0\n10.1\n11.7\n7\n9.2\n10.0\n10.2\n13.0\n...\n11.5\nNaN\nNaN\nNaN\n8.3\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n68\nEncouragements\n2.0\n24.0\n12.3\n13.7\n12.5\n12.4\n11.5\n12.0\n15.5\n...\nNaN\n14.5\nNaN\n11.1\nNaN\n16.9\nNaN\nNaN\nNaN\n14.0\n\n\n1\nFélicitations\n5.0\n1.0\n18.1\n15.3\n18.5\n19.2\n18.0\n19.0\n17.5\n...\n18.2\nNaN\nNaN\nNaN\nNaN\nNaN\n18.0\nNaN\nNaN\nNaN\n\n\n\n\n3 rows × 22 columns\n\n\n\n\n\n# on ne conserve que 3 colonnes pour cette étude simplifiée\ndf =  df.loc[:, ['Moyenne Générale', '1/2j abs', 'Mentions']]\ndf\n\n\n\n\n\n\n\n\n\nMoyenne Générale\n1/2j abs\nMentions\n\n\n\n\n0\n17.4\n3.0\nFélicitations\n\n\n1\n18.1\n5.0\nFélicitations\n\n\n2\n18.2\nNaN\nFélicitations\n\n\n3\n17.0\n1.0\nFélicitations\n\n\n4\n17.6\n2.0\nFélicitations\n\n\n...\n...\n...\n...\n\n\n91\n9.0\n12.0\nEncouragements\n\n\n92\n9.4\n14.0\nPas de mention\n\n\n93\n7.7\n49.0\nPas de mention\n\n\n94\n12.3\n32.0\nPas de mention\n\n\n95\n11.7\n33.0\nPas de mention\n\n\n\n\n96 rows × 3 columns\n\n\n\n\n\ndef tracé_graph():\n    for mention in [\"Pas de mention\",\"Encouragements\", \"Compliments\", \"Félicitations\"]:\n        df_mention = df.loc[df[\"Mentions\"] == mention]\n        plt.scatter(df_mention[\"1/2j abs\"], df_mention[\"Moyenne Générale\"], label=mention, alpha=0.5)\n    plt.legend()\ntracé_graph()\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\n\n\n\n\nOn voit bien le groupe des Félicitations se dégager avec des hautes notes et peu d’absences, ainsi que le groupe Pas de mention pour les absentéistes. Par contre, la zone basse du graphique présente de nombreux points de diverses mentions proches.\n\n\n2.3 Implémentation de l’algorithme\nNous allons maintenant définir la fonction qui à partie de la moyenne et des absences données en argument renverra la mention des k plus proches voisins(par défaut: 3).\n\ndef k_plus_proches_voisins(moyenne, absences, k=3):\n    \"\"\"Renvoie la classe des k plus proches voisins\n    \n    Entrée:\n        moyenne: moyenne de l'élève\n        absences: nb de 1/2j d'absences lors du trimestre\n        k: nombre de voisins les plus proches à utiliser(par défaut 3)\n        \n    Sortie:\n        renvoie les classe la plus probable des k plus porches voisins\"\"\"\n    \n    # on commence par afficher notre point sur un graphique\n    plt.scatter(absences, moyenne, label=\"Elève étudié\", marker=\"P\")\n    \n    # on crée une liste pour stocker les distances euclidiennes\n    df['distance'] = df.apply(lambda row: ((row[\"Moyenne Générale\"] - moyenne)**2 + (row[\"1/2j abs\"] - absences)**2)**0.5, axis=1)\n    # On affiche les trois plus courtes distances\n    df_voisins = df.iloc[df.distance.sort_values().index[:k]]\n    print(df_voisins)\n    # on les marque sur le graph\n    plt.scatter(df_voisins[\"1/2j abs\"],\n                df_voisins[\"Moyenne Générale\"],\n                label=\"Plus proches voisins\", marker=\"*\")\n    # On ajoute tous les autres points\n    tracé_graph()\n    return df_voisins[\"Mentions\"].value_counts().nlargest(1)\n\n\n\n2.4 Appels de la fonction\n\nk_plus_proches_voisins(12.5, 10)\n&gt;&gt;sortie\n\n    Moyenne Générale  1/2j abs        Mentions  distance\n32              12.3      11.0     Compliments  1.019804\n62              11.6       9.0  Pas de mention  1.345362\n66              11.4       9.0  Pas de mention  1.486607\n\n\nMentions\nPas de mention    2\nName: count, dtype: int64\n\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\n\n\n\n\nOn observe donc que l’élève n’aurait pas de mention malgré ses 12.5 de moyenne, Voyons ce qu’il en est si on réduit le nombre d’absences à 5.\n\nk_plus_proches_voisins(12.5, 5)\n&gt;&gt;sortie\n\n    Moyenne Générale  1/2j abs        Mentions  distance\n65              12.4       5.0  Encouragements       0.1\n46              12.9       5.0     Compliments       0.4\n58              12.5       4.0  Encouragements       1.0\n\n\nMentions\nEncouragements    2\nName: count, dtype: int64\n\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\n\n\n\n\nL’élève a maintenant les encouragements.\n\n\n2.5 Et vous, quelle serait votre mention?\nL’algorithme et les données sont en ligne dans le dépôt suivant:\nhttps://framagit.org/lyceum/k-plus-proches-voisins\nVous pouvez soit télécharger le dossier pour travailler sur le code sur votre machine si vous avez installé python et anconda chez vous.\nVous pouvez sinon travailler en ligne en lançant un environnement \n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n.\n\n\n\n\n\n\n\nApplication: L’algorithme est-il efficace?\n\n\n\n\n\n\nReprendre vos bulletins de lycée pour vérifier si la prévision faite à partir de votre moyenne générale et de votre nombre de jours d’absences est conforme au résultat obtenu.\nVous pouvez éventuellement changer la valeur de kk pour améliorer les prédictions.\nPour conclure: Que diriez-vous de cette méthode? Peut-on vraiment qualifier cet algorithme d’intelligence artificielle? Voyez-vous des dangers à la prise de décisions par des algorithmes?",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 8: Algorithmique",
      "Chapitre 5: Algorithme des k plus proches voisins"
    ]
  },
  {
    "objectID": "1g/nsi/8-algorithmique/5-algorithme-des-k-plus-proches-voisins/index.html#notes-sur-lalgorithme",
    "href": "1g/nsi/8-algorithmique/5-algorithme-des-k-plus-proches-voisins/index.html#notes-sur-lalgorithme",
    "title": "Chapitre 5: Algorithme des k plus proches voisins",
    "section": "3 Notes sur l’algorithme",
    "text": "3 Notes sur l’algorithme\nCet algorithme(brute-force) est peu efficace avec une complexité de O[DN2]O[D N^2](voir doc sklearn).\nD’autre part, il serait bon de mettre à l’échelle les données utilisées, car on voit bien que l’échelle des absences est trois fois plus grande que les moyennes, et ainsi a une importance accrue dans le calcul de la distance des voisins.\n\n\nCours de Nadja Rebinguet duquel est extrait l’exemple des papillons: https://nadjarebinguet.wordpress.com/2020/03/20/algorithme-des-k-plus-proches-voisins/\nCette vidéo de Phillippe Bouchery sur le machine learning\nCours sur pixees.fr: https://pixees.fr/informatiquelycee/n_site/nsi_prem_knn.html\nArticle Wikipedia: https://fr.wikipedia.org/wiki/M%C3%A9thode_des_k_plus_proches_voisins\nDoc sklearn: https://scikit-learn.org/stable/modules/neighbors.html#nearest-neighbor-algorithms",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 8: Algorithmique",
      "Chapitre 5: Algorithme des k plus proches voisins"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/7-comparaisons-de-langages/quiz/index.html",
    "href": "1g/nsi/7-langages-et-programmation/7-comparaisons-de-langages/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 7: Comparaisons de langages",
      "Quiz"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/7-comparaisons-de-langages/exo/index.html",
    "href": "1g/nsi/7-langages-et-programmation/7-comparaisons-de-langages/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Aucun exercice pour l’instant.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 7: Comparaisons de langages",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/5-boucles/quiz/index.html",
    "href": "1g/nsi/7-langages-et-programmation/5-boucles/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 5: Boucles",
      "Quiz"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/5-boucles/exo/index.html",
    "href": "1g/nsi/7-langages-et-programmation/5-boucles/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Ces exercices sont adaptés du cours sur la javascript de openclassrooms\nJe vous conseille de réaliser chaque exercice avec le for, et avec le while. Cela vous entraînera et vous permettra de mieux juger par la suite du meilleur type de boucle à utiliser.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 5: Boucles",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/5-boucles/exo/index.html#tournez-manège",
    "href": "1g/nsi/7-langages-et-programmation/5-boucles/exo/index.html#tournez-manège",
    "title": "Exercices",
    "section": "1 Tournez manège",
    "text": "1 Tournez manège\nÉcrivez un programme qui fait faire 10 tours de manège en affichant un message à chaque tour: \"C'est le tour n°...\".",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 5: Boucles",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/5-boucles/exo/index.html#parité",
    "href": "1g/nsi/7-langages-et-programmation/5-boucles/exo/index.html#parité",
    "title": "Exercices",
    "section": "2 Parité",
    "text": "2 Parité\nÉcrivez un programme qui affiche tous les nombres entre 1 et 10, et indique pour chacun si celui-ci est pair ou impair:\n\"1 est impair\"\n\"2 est pair\"\n...\n\"10 est pair\"",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 5: Boucles",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/5-boucles/exo/index.html#contrôle-de-saisie",
    "href": "1g/nsi/7-langages-et-programmation/5-boucles/exo/index.html#contrôle-de-saisie",
    "title": "Exercices",
    "section": "3 Contrôle de saisie",
    "text": "3 Contrôle de saisie\nÉcrivez un programme qui fait saisir un nombre à l’utilisateur jusqu’à ce que ce nombre soit inférieur ou égal à 100.\nEnsuite, améliorez votre programme pour que le nombre saisi soit compris entre 50 et 100.\nAttention Réfléchissez bien à la condition de votre boucle : quel est l’inverse de “compris entre 50 et 100” ?",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 5: Boucles",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/5-boucles/exo/index.html#table-de-multiplication",
    "href": "1g/nsi/7-langages-et-programmation/5-boucles/exo/index.html#table-de-multiplication",
    "title": "Exercices",
    "section": "4 Table de multiplication",
    "text": "4 Table de multiplication\nÉcrivez un programme qui fait saisir un chiffre à l’utilisateur puis affiche la table de multiplication de ce chiffre.\nVoici la table de multiplication de 7\n7 x 1 = 7\n7 x 2 = 14\n7 x 3 = 21\n7 x 4 = 28\n7 x 5 = 35\n7 x 6 = 42\n7 x 7 = 49\n7 x 8 = 56\n7 x 9 = 63\n7 x 10 = 70\nEnsuite, améliorez votre programme pour vérifier que le nombre saisi soit compris entre 1 et 9, en vous inspirant de l’exercice précédent.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 5: Boucles",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/5-boucles/exo/index.html#ni-oui-ni-non",
    "href": "1g/nsi/7-langages-et-programmation/5-boucles/exo/index.html#ni-oui-ni-non",
    "title": "Exercices",
    "section": "5 Ni oui ni non",
    "text": "5 Ni oui ni non\nÉcrivez un programme qui fait jouer l’utilisateur au ni oui, ni non : il rentre un texte jusqu’à saisir “oui” ou “non”, ce qui déclenche la fin du jeu.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 5: Boucles",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/5-boucles/exo/index.html#fizzbuzz",
    "href": "1g/nsi/7-langages-et-programmation/5-boucles/exo/index.html#fizzbuzz",
    "title": "Exercices",
    "section": "6 FizzBuzz",
    "text": "6 FizzBuzz\nÉcrivez un programme qui affiche tous les nombres entre 1 et 100 avec les exceptions suivantes :\n\nIl affiche “Fizz” à la place du nombre si celui-ci est divisible par 3.\nIl affiche “Buzz” à la place du nombre si celui-ci est divisible par 5 et non par 3.\n\n1\n2\nFizz\n4\nBuzz\nFizz\n7\n8\nFizz\nBuzz\n11\nEnsuite, améliorez votre programme pour qu’il affiche “FizzBuzz” à la place des nombres divisibles à la fois par 3 et par 5.\nAttention: Cet exercice a de nombreuses solutions possibles et constitue un test d’entretien d’embauche classique qui élimine un nombre significatif de candidats. Accrochez-vous pour le réussir !\n13\n14\nFizzBuzz\n16\n17\nFizz\n19\nBuzz\n\nLes deux exercices qui suivent ont été traduits à partir du cours d’initiation à la programmation du MIT.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 5: Boucles",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/5-boucles/exo/index.html#boucles-for",
    "href": "1g/nsi/7-langages-et-programmation/5-boucles/exo/index.html#boucles-for",
    "title": "Exercices",
    "section": "7 Boucles for",
    "text": "7 Boucles for\n\nécrire le code Python permettant d’afficher cette sortie avec une boucle for:\n\n2\n4\n6\n8\n10\nGoodbye!\n\n\nÉcrire le code Python permettant d’afficher cette sortie avec une boucle for:\n\nHello!\n10\n8\n6\n4\n2\n\n\nÉcrivez une boucle for qui additionne les valeurs de 1 à end, inclus. end est une variable dont la valeur est entrée par l’utilisateur avant la boucle for. Ainsi, par exemple, si end à pour valeur 6, votre code doit afficher le résultat: 21 car 1+2+3+4+5+6=211 + 2 + 3 + 4 + 5 +\n6 = 21.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 5: Boucles",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/5-boucles/exo/index.html#boucles-while",
    "href": "1g/nsi/7-langages-et-programmation/5-boucles/exo/index.html#boucles-while",
    "title": "Exercices",
    "section": "8 Boucles while",
    "text": "8 Boucles while\nReprendre les 3 questions de l’exercice précédent en utilisant cette fois-ci une boucle while.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 5: Boucles",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/5-boucles/exo/index.html#maitriser-les-boucles-en-python",
    "href": "1g/nsi/7-langages-et-programmation/5-boucles/exo/index.html#maitriser-les-boucles-en-python",
    "title": "Exercices",
    "section": "9 Maitriser les boucles en Python",
    "text": "9 Maitriser les boucles en Python\nSi besoin consulter la page de cours de première sur les boucles.\n\n9.1 Prévoir la sortie des instructions suivantes\nfor i in range(5):\n    print(i)\n\nfor i in range(1, 5):\n    print(i)\n\nfor i in range(5, 1, -1):\n    print(i)\n\nfor i in range(5):\n    for j in range(i):\n        print(j)\n\nfor i in range(5):\n    j = i\n    while j &gt; 0:\n        print(j)\n        j = j -1\n\n\n9.2 Dessiner des formes avec des chaînes de caractères\nÉcrire le code permettant d’obtenir les sorties suivantes avec des boucles.\nO\nOO\nOOO\nOOOO\nOOOOO\nOOOOOO\nOOOOOOO\nOOOOOOOO\nOOOOOOOOO\n \n0000000000\n111111111\n22222222\n3333333\n444444\n55555\n6666\n777\n88\n9\n \n  | |\n-------\n  | |\n-------\n  | |",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 5: Boucles",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/1-les-ingredients-dun-algorithme/index.html",
    "href": "1g/nsi/7-langages-et-programmation/1-les-ingredients-dun-algorithme/index.html",
    "title": "Chapitre 1: Les ingrédients d’un algorithme",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nConstructions élémentaires\nMettre en évidence un corpus de constructions élémentaires. boucles non bornées, appels de fonction.\nSéquences, affectation, conditionnelles, boucles bornées,",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 1: Les ingrédients d’un algorithme"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/1-les-ingredients-dun-algorithme/index.html#les-ingrédients-des-algorithmes",
    "href": "1g/nsi/7-langages-et-programmation/1-les-ingredients-dun-algorithme/index.html#les-ingrédients-des-algorithmes",
    "title": "Chapitre 1: Les ingrédients d’un algorithme",
    "section": "1 Les ingrédients des Algorithmes",
    "text": "1 Les ingrédients des Algorithmes\nUn algorithme utilise cinq ingrédients de base:\n\nUn algorithme est un chemin à parcourir pas à pas, une séquence d’instructions.\nCependant, il ne faut pas forcément effectuer toutes les instructions en fonctions de conditions: les instructions conditionnelles.\nNous avons aussi besoin d’une autre construction, la boucle d’instructions qui permet de faire durer ou répéter une opération autant de fois que nécessaire.\nNous introduisons la notion de variable ou de paramètre qui permettra de modifier le programme en fonction de ces paramètres.\nLa dernière construction, qui consiste à regrouper un bloc d’instructions dans une fonction, va nous permettre de réutiliser différentes fonctionnalités, comme les briques d’un jeu de Lego, pour réaliser une construction logicielle.\n\nLes ingrédients des algorithmes sur le site Interstices",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 1: Les ingrédients d’un algorithme"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/1-les-ingredients-dun-algorithme/index.html#traduire-des-algorithmes-en-python",
    "href": "1g/nsi/7-langages-et-programmation/1-les-ingredients-dun-algorithme/index.html#traduire-des-algorithmes-en-python",
    "title": "Chapitre 1: Les ingrédients d’un algorithme",
    "section": "2 Traduire des algorithmes en Python",
    "text": "2 Traduire des algorithmes en Python\nPour que les ordinateurs réalisent nos algorithmes, nous devons écrire les séquences d’instructions dans un langage de programmation, dans notre cas Python.\n\n2.1 Séquence d’instructions\nEn Python, les lignes du programme sont exécutées de haut en bas, à l’exception:\n\nDes lignes de commentaires qui commencent #.\n\n\nprint(\"Hello\")\n# print(\"World\") \nN’affichera que \"Hello\" en sortie, car la deuxième ligne est commentée donc non exécutée.\n\n\nDes lignes de bloc qui sont indentées par rapport à la colonne de gauche.\n\n\nprint(\"Hello\")\n    print(\"World\")\nRenvoie une erreur IndentationError, car la deuxième ligne est indentée et ne devrait pas l’être.\n\n\n\n2.2 Les variables\nC’est un moyen de donner un nom à des valeurs afin de pouvoir les réutiliser aisément par la suite.\n\n\nPI = 3.141592653589793\nR = 1 \nprint(\"Le périmètre est:\", 2*PI*R)\nprint(\"La surface est:\", PI*R**2)\n&gt;&gt;sortie\n\nLe périmètre est: 6.283185307179586\nLa surface est: 3.141592653589793\n\n\nNous avons ici affecté deux variables PI et R dont nous pouvons nous servir tout au long du programme par la suite.\n\n\n\n2.3 Instructions conditionnelles\nIl s’agit de blocs d’instructions exécutés en fonction de certaines conditions, nous voyons ici:\n\nif(si en français), qui peut être complété par un\nelse(sinon en français).\n\n\nage = int(input(\"Quel âge avez-vous?\")\nif age &gt; 14:\n    print(\"OK\")\nelse:\n    print(\"not OK\")\n\nIl existe également le mot-clé, elif(sinon si en français) en Python. Qui permet de tester plusieurs conditions.\nage = int(input(\"Quel âge avez-vous?\")\nif age &gt; 18:\n    print(\"Vous ne devriez plus être en lycée!\")\nelif age &gt; 14:\n    print(\"OK\")\nelse:\n    print(\"not OK\")\nAttention à l’ordre des conditions, car le bloc de la première condition vérifiée est le seul exécuté.\n\n\n2.4 Boucle d’instructions\nPour effectuer des répétitions en boucle, on utilise les instructions:\n\nfor: pour en français.\nwhile: tant que en français.\n\nLes deux types de boucles sont interchangeables, on préfère cependant utiliser:\n\nfor si le nombre d’itérations est connu à l’avance.\nwhile si l’arrêt s’effectue à une condition.\n\n\n\nfor i in range(5):\n    print(i)\n&gt;&gt;sortie\n\n0\n1\n2\n3\n4\n\n\n\n\n\ni = 0 # initialisation\nwhile i &lt; 5: # condition d'arrêt\n    print(i)\n    i = i + 1 # incrémentation de l'indice\n&gt;&gt;sortie\n\n0\n1\n2\n3\n4\n\n\n\n\n\n2.5 Les fonctions\nIl s’agit de blocs d’instructions exécutés à la demande, on les définit par le mot-clef def.\n\n\ndef dit_bonjour(prenom):\n    print(\"Bonjour \" + prenom)\n\nNous venons de définir la fonction, mais pour l’instant, il ne se passe rien.\nPour exécuter le code de la fonction, il faut maintenant appeler la fonction avec une valeur pour l’exécuter.\n\n# on appelle la fonction avec l'argument Ada\ndit_bonjour(\"Ada\")\n&gt;&gt;sortie\n\nBonjour Ada\n\n\n\n\nUne fonction peut prendre zéro ou plusieurs paramètres séparés par des virgules en entrée.\n\n\n\n# import du module datetime\nimport datetime\n\n\n# fonction sans argument\ndef heure():\n    print(\"Il est:\", datetime.datetime.now().time())\n\n# appel de la fonction\nheure()\n&gt;&gt;sortie\n\nIl est: 19:00:16.045790\n\n\n\n\nUne fonction peut renvoyer une valeur grâce au mot-clé return.\n\n\n\ndef aire_rectangle(L, l):\n    \"\"\"Fonction qui renvoie l'aire d'un rectangle\"\"\"\n    return L * l\n\n# appel est affectation de la valeur renvoyée à la variable S\nS = aire_rectangle(3,5)\n\nprint(\"L'aire est:\", S)\n&gt;&gt;sortie\n\nL'aire est: 15",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 1: Les ingrédients d’un algorithme"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/6-fonctions/quiz/index.html",
    "href": "1g/nsi/7-langages-et-programmation/6-fonctions/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 6: Fonctions",
      "Quiz"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/6-fonctions/exo/index.html",
    "href": "1g/nsi/7-langages-et-programmation/6-fonctions/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Écrire les fonctions suivantes, et pour chacune, donner un exemple d’appel avec la sortie attendue.\n\nUne fonction plus_grand(n1, n2) qui renvoie la plus grande valeur de deux valeurs entières données en arguments.\n\ndef plus_grand(n1, n2):\n    if n1 &gt; n2:\n        return n1\n    # le else est facultatif\n    else:\n        return n2\n\nplus_grand(24, -12) # 24\n\n24\n\n\nUne procédure repete_mot(mot, n) qui affiche un même mot n fois.\n\ndef repete_mot(mot, n):\n    print(mot * n)\n\n\nrepete_mot(\"TO\", 2) # affiche TOTO , NE RENVOIE RIEN\n&gt;&gt;sortie\n\nTOTO\n\n\nÉcrivez une fonction plus_grand3(n1, n2, n3) qui renvoie le maximum de trois nombres.\n\ndef plus_grand3(n1, n2, n3):\n    if n1 &gt; n2 and n1 &gt; n3:\n        return n1\n    elif n2 &gt; n1 and n2 &gt; n3:\n        return n2\n    # le else est facultatif\n    else:\n        return n3\n\nplus_grand3(24, -12, 48) # 48\n\n48\n\n\nÉcrivez une fonction carres(n) pour afficher les valeurs des carrés des nombres compris entre 1 et n (les deux inclus).\n\ndef carres(n):\n    for i in range(1, n+1):\n        print(i**2)\n\ncarres(5) # affiche 1 4 9 16 25\n&gt;&gt;sortie\n\n1\n4\n9\n16\n25\n\n\nÉcrivez une fonction est_pair(n) pour vérifier si un nombre n donné en argument est pair.\nCette fonction doit renvoyer un booléen.\n\ndef est_pair(n):\n    if n % 2 == 0:\n        return True\n    else:\n        return False\n\nest_pair(12345) # renvoie False\n\nFalse\n\n\nÉcrivez une fonction factorielle(n) qui renvoie la factorielle d’un entier naturel n.\nPar définition, la factorielle est le résultat de la multiplication d’un nombre entier par tous les nombres entiers inférieurs à celui-ci.\nexemple: La factorielle de 5, qu’on note 5!, est égale à 5×4×3×2×15\\times4\\times3\\times2\\times1, soit 120.\n\ndef factorielle(n):\n    res = 1\n    for i in range(2, n+1):\n        res = res * i\n    return res\n\nfactorielle(5) # renvoie 120\n\n120\n\n\nNiveau avancé Écrivez une fonction est_premier(n) qui prend un nombre n en paramètre et vérifie si le nombre est premier ou non. La fonction doit renvoyer un booléen.\nPar définition, un nombre premier est un nombre naturel supérieur à 1 et qui n’a pas de diviseur positif autre que 1 et lui-même.\nNiveau avancé Écrivez une fonction triangle_pascal(n) qui affiche les n premières lignes du triangle de Pascal.\nLe triangle de Pascal est une figure arithmétique et géométrique imaginée par Blaise Pascal.\nExemple de triangle de Pascal:\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nTriangle de Pascal: Chaque nombre est la somme deux chiffres au-dessus.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 6: Fonctions",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/6-fonctions/exo/index.html#définir-et-appeler-des-fonctions",
    "href": "1g/nsi/7-langages-et-programmation/6-fonctions/exo/index.html#définir-et-appeler-des-fonctions",
    "title": "Exercices",
    "section": "",
    "text": "Écrire les fonctions suivantes, et pour chacune, donner un exemple d’appel avec la sortie attendue.\n\nUne fonction plus_grand(n1, n2) qui renvoie la plus grande valeur de deux valeurs entières données en arguments.\n\ndef plus_grand(n1, n2):\n    if n1 &gt; n2:\n        return n1\n    # le else est facultatif\n    else:\n        return n2\n\nplus_grand(24, -12) # 24\n\n24\n\n\nUne procédure repete_mot(mot, n) qui affiche un même mot n fois.\n\ndef repete_mot(mot, n):\n    print(mot * n)\n\n\nrepete_mot(\"TO\", 2) # affiche TOTO , NE RENVOIE RIEN\n&gt;&gt;sortie\n\nTOTO\n\n\nÉcrivez une fonction plus_grand3(n1, n2, n3) qui renvoie le maximum de trois nombres.\n\ndef plus_grand3(n1, n2, n3):\n    if n1 &gt; n2 and n1 &gt; n3:\n        return n1\n    elif n2 &gt; n1 and n2 &gt; n3:\n        return n2\n    # le else est facultatif\n    else:\n        return n3\n\nplus_grand3(24, -12, 48) # 48\n\n48\n\n\nÉcrivez une fonction carres(n) pour afficher les valeurs des carrés des nombres compris entre 1 et n (les deux inclus).\n\ndef carres(n):\n    for i in range(1, n+1):\n        print(i**2)\n\ncarres(5) # affiche 1 4 9 16 25\n&gt;&gt;sortie\n\n1\n4\n9\n16\n25\n\n\nÉcrivez une fonction est_pair(n) pour vérifier si un nombre n donné en argument est pair.\nCette fonction doit renvoyer un booléen.\n\ndef est_pair(n):\n    if n % 2 == 0:\n        return True\n    else:\n        return False\n\nest_pair(12345) # renvoie False\n\nFalse\n\n\nÉcrivez une fonction factorielle(n) qui renvoie la factorielle d’un entier naturel n.\nPar définition, la factorielle est le résultat de la multiplication d’un nombre entier par tous les nombres entiers inférieurs à celui-ci.\nexemple: La factorielle de 5, qu’on note 5!, est égale à 5×4×3×2×15\\times4\\times3\\times2\\times1, soit 120.\n\ndef factorielle(n):\n    res = 1\n    for i in range(2, n+1):\n        res = res * i\n    return res\n\nfactorielle(5) # renvoie 120\n\n120\n\n\nNiveau avancé Écrivez une fonction est_premier(n) qui prend un nombre n en paramètre et vérifie si le nombre est premier ou non. La fonction doit renvoyer un booléen.\nPar définition, un nombre premier est un nombre naturel supérieur à 1 et qui n’a pas de diviseur positif autre que 1 et lui-même.\nNiveau avancé Écrivez une fonction triangle_pascal(n) qui affiche les n premières lignes du triangle de Pascal.\nLe triangle de Pascal est une figure arithmétique et géométrique imaginée par Blaise Pascal.\nExemple de triangle de Pascal:\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nTriangle de Pascal: Chaque nombre est la somme deux chiffres au-dessus.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 6: Fonctions",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/6-fonctions/exo/index.html#prototyper-des-fonctions",
    "href": "1g/nsi/7-langages-et-programmation/6-fonctions/exo/index.html#prototyper-des-fonctions",
    "title": "Exercices",
    "section": "2 Prototyper des fonctions",
    "text": "2 Prototyper des fonctions\nDonner le prototype des fonctions\n\nplus_grand(n1, n2),\nrepete_mot(mot, n),\nest_pair(n)\n\n\ndef plus_grand(n1, n2):\n    \"\"\"Renvoie la plus grande valeur de deux valeurs entières\n    données en arguments\n    \n    Paramètres\n    ----------\n    n1: int\n    n2: int\n    \n    Renvoie\n    -------\n    int\n        n1 si n1 &gt; n2 sinon n2\n    \"\"\"\n    if n1 &gt; n2:\n        return n1\n    # le else est facultatif\n    else:\n        return n2\n\n\ndef repete_mot(mot, n):\n    \"\"\"affiche un même mot n fois\n    \n    Paramètres\n    ----------\n    mot: str\n    n: int\n    \n    Renvoie\n    -------\n    None\n        pas de valeur renvoyée que des affichages\n    \"\"\"\n    print(mot * n)\n\n\ndef est_pair(n):\n    \"\"\"Vérifie si un nombre n donné en argument est pair\n    \n    Paramètres\n    ----------\n    n: int\n    \n    Renvoie\n    -------\n    bool\n        True si n est pair et False sinon\n    \"\"\"\n    if n % 2 == 0:\n        return True\n    else:\n        return False",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 6: Fonctions",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/6-fonctions/exo/index.html#tests-dassertion",
    "href": "1g/nsi/7-langages-et-programmation/6-fonctions/exo/index.html#tests-dassertion",
    "title": "Exercices",
    "section": "3 Tests d’assertion",
    "text": "3 Tests d’assertion\n\nÉcrire trois tests d’assertion pour les fonctions:\n\nplus_grand(n1, n2),\nest_pair(n)\n\n\nassert plus_grand(1, 10) == 10\nassert plus_grand(11, 10) == 11\nassert plus_grand(-11, 10) == 10\n\nassert est_pair(2) == True\nassert est_pair(3) == False\nassert est_pair(-2) == True\n\nExpliquer pourquoi on ne peut pas écrire de test d’assertion pour la fonction repete_mot(mot, n).\n\n# assert repete_mot(\"TO\", 2) == \"TOTO\"\nassert repete_mot(\"TO\", 2) == None\n&gt;&gt;sortie\n\nTOTO",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 6: Fonctions",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/2-types/index.html",
    "href": "1g/nsi/7-langages-et-programmation/2-types/index.html",
    "title": "Chapitre 2: Types",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nConstructions élémentaires\nMettre en évidence un corpus de constructions élémentaires. boucles non bornées, appels de fonction.\nSéquences, affectation, conditionnelles, boucles bornées,",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 2: Types"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/2-types/index.html#quelques-types-dobjets-simples",
    "href": "1g/nsi/7-langages-et-programmation/2-types/index.html#quelques-types-dobjets-simples",
    "title": "Chapitre 2: Types",
    "section": "1 Quelques types d’objets simples",
    "text": "1 Quelques types d’objets simples\nVoici quelques types d’objets simples:\n\nint: integer en anglais représentent les entiers. ex: 3\nfloat: floating point en anglais représentent les réels. ex: 3.14\nstr: string en anglais représentent les chaînes de caractères. ex: \"Bonjour!\"\nbool: booleans en anglais représentent les booléens. Il ne peuvent avoir que deux valeurs: True ou False (Vrai ou faux)\n\n\n\n\n\n\n\n\nEn plus: `NoneType`\n\n\n\n\n\n\nOn a parfois besoin de créer une variable vide, on utilise alors la valeur None qui a pour type NoneType sans type en anglais.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 2: Types"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/2-types/index.html#comment-connaître-le-type-dun-objet",
    "href": "1g/nsi/7-langages-et-programmation/2-types/index.html#comment-connaître-le-type-dun-objet",
    "title": "Chapitre 2: Types",
    "section": "2 Comment connaître le type d’un objet ?",
    "text": "2 Comment connaître le type d’un objet ?\nPour connaître le type d’un objet on peut utiliser la fonction type() de Python:\n\ntype(3)\n\nint\n\n\n\ntype(3.14)\n\nfloat\n\n\n\ntype(\"Toto\")\n\nstr\n\n\n\ntype(False)\n\nbool",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 2: Types"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/2-types/index.html#changer-le-type-dun-objet",
    "href": "1g/nsi/7-langages-et-programmation/2-types/index.html#changer-le-type-dun-objet",
    "title": "Chapitre 2: Types",
    "section": "3 Changer le type d’un objet",
    "text": "3 Changer le type d’un objet\nIl est possible de modifier le type d’un objet en utilisant des fonctions Python, en anglais on appelle ça le casting.\n\n3.1 Convertir en chaîne de caractère str()\n\nstr(5)\n\n'5'\n\n\nComme vous le voyez la présence de guillemets indique qu’il s’agit d’une chaîne de caractères.\nEn Python, on peut utiliser indifféremment les simples ' et doubles guillemets \".\n\n\n3.2 Convertir un entier en réel: float()\n\nfloat(5)\n\n5.0\n\n\n\n\n3.3 Convertir un réel en entier: int() et round()\n\nint(3.95)\n\n3\n\n\nComme vous le voyez on a conservé que la partie entière du nombre, mais on n’a pas effectué un arrondi, si on souhaite faire un arrondi il faut utiliser la fonction round.\n\nround(3.49)\n\n3\n\n\n\nround(3.5)\n\n4\n\n\n\n\n\n\n\n\n\nEn plus: Typage dynamique\n\n\n\n\n\n\nLes langages étudiés cette année sont dynamiques, c’est-à-dire que l’on peut changer le type des valeurs et variables. Il n’est de pas nécessaire de déclarer le type de variable avant leur utilisation(typage statique) ce qui rend le programme plus court et simple.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 2: Types"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/2-types/index.html#combiner-des-objets-avec-des-opérations",
    "href": "1g/nsi/7-langages-et-programmation/2-types/index.html#combiner-des-objets-avec-des-opérations",
    "title": "Chapitre 2: Types",
    "section": "4 Combiner des objets avec des opérations",
    "text": "4 Combiner des objets avec des opérations\nLorsque l’on combine des objets avec des opérations on crée ce que l’on appelle une expression, si la syntaxe de votre expression est correcte, elle retourne une valeur qui a comme tout objet un type.\nLa syntaxe est de la forme:\n&lt;objet&gt; &lt;opérateur&gt; &lt;objet&gt;\nPar exemple:\n\n3 + 2\n\n5\n\n\n\n3.0 + 2\n\n5.0\n\n\nComme vous le voyez l’expression retourne une valeur dont le type dépend du type de données.\nC’est encore plus étonnant avec les chaînes de caractères:\n\n\"TO\" + \"TO\"\n\n'TOTO'\n\n\n\n\"TO\" * 2\n\n'TOTO'\n\n\nVoici les opérations à connaître:\n\naddition: +\nsoustraction: -\nmultiplication: *\ndivision: /\ndivision entière: // renvoie la partie entière du quotient de la division. p.ex: 5 // 2 -&gt; 2\nmodulo: %: renvoie le reste de la division entière. p.ex: 5 % 2 -&gt; 1\npuissance: **\n\n\nOrdre de priorité des opérateurs(dite règle «PEMDAS»):\nParenthèses &gt; Exposants &gt; Multiplication &gt; Division &gt; Addition &gt; Soustraction\n\nOn ne peut pas combiner les types n’importe comment en cas d’opération impossible, l’interpréteur Python lève une exception TypeError.\n\n\"python\" / 3\n&gt;&gt;sortie\n\nTypeError: unsupported operand type(s) for /: 'str' and 'int'",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 2: Types"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/8-mise-au-point-dun-programme/quiz/index.html",
    "href": "1g/nsi/7-langages-et-programmation/8-mise-au-point-dun-programme/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 8: Mise au point d’un programme",
      "Quiz"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/8-mise-au-point-dun-programme/exo/index.html",
    "href": "1g/nsi/7-langages-et-programmation/8-mise-au-point-dun-programme/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Copier le code suivant dans un notebook et complétez-le en ajoutant le prototype et les commentaires.\ndef division_euclidienne(a, b):\n    \"\"\" Ecrire la spécification de la fonction\n\n    Arguments\n    ---------\n\n\n    Returns\n    -------\n\n    \"\"\"\n    # Ajouter des commentaires pour expliquer \n    if b &lt;= 0 or a &lt; 0 or type(a) != int or type(b) != int:\n        return -1\n\n    if a == 0:\n        return (0, 0)\n    \n    # mes commentaires ici sur une ligne\n\n    r = a\n    q = 0\n    while (r &gt;= 0):\n        r = r - b\n        q = q + 1\n\n    return (q-1, r+b)\n\n# Tests\ndef test_division_euclidienne():\n    # Ajouter des commentaires pour expliquer\n    # quelles sont les vérifications effectuées\n    assert division_euclidienne(10, 2) == (5, 0)\n    assert division_euclidienne(2, 10) == (0, 2)\n    assert division_euclidienne(37, 3) == (12, 1)\n    # Verifications d'erreurs\n    assert division_euclidienne(-10, 7) == -1\n    assert division_euclidienne(10, -7) == -1\n    assert division_euclidienne(10.3, 4) == -1\n    assert division_euclidienne(11, 3.5) == -1\n    assert division_euclidienne(3, 0) == -1\n    # ...\n    assert division_euclidienne(0, 3) == (0, 0)\n    assert division_euclidienne(0, 0) == -1\n    \n# Lancement du test\ntest_division_euclidienne()",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 8: Mise au point d’un programme",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/8-mise-au-point-dun-programme/exo/index.html#spécification-et-tests-de-la-division-euclidienne",
    "href": "1g/nsi/7-langages-et-programmation/8-mise-au-point-dun-programme/exo/index.html#spécification-et-tests-de-la-division-euclidienne",
    "title": "Exercices",
    "section": "",
    "text": "Copier le code suivant dans un notebook et complétez-le en ajoutant le prototype et les commentaires.\ndef division_euclidienne(a, b):\n    \"\"\" Ecrire la spécification de la fonction\n\n    Arguments\n    ---------\n\n\n    Returns\n    -------\n\n    \"\"\"\n    # Ajouter des commentaires pour expliquer \n    if b &lt;= 0 or a &lt; 0 or type(a) != int or type(b) != int:\n        return -1\n\n    if a == 0:\n        return (0, 0)\n    \n    # mes commentaires ici sur une ligne\n\n    r = a\n    q = 0\n    while (r &gt;= 0):\n        r = r - b\n        q = q + 1\n\n    return (q-1, r+b)\n\n# Tests\ndef test_division_euclidienne():\n    # Ajouter des commentaires pour expliquer\n    # quelles sont les vérifications effectuées\n    assert division_euclidienne(10, 2) == (5, 0)\n    assert division_euclidienne(2, 10) == (0, 2)\n    assert division_euclidienne(37, 3) == (12, 1)\n    # Verifications d'erreurs\n    assert division_euclidienne(-10, 7) == -1\n    assert division_euclidienne(10, -7) == -1\n    assert division_euclidienne(10.3, 4) == -1\n    assert division_euclidienne(11, 3.5) == -1\n    assert division_euclidienne(3, 0) == -1\n    # ...\n    assert division_euclidienne(0, 3) == (0, 0)\n    assert division_euclidienne(0, 0) == -1\n    \n# Lancement du test\ntest_division_euclidienne()",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 8: Mise au point d’un programme",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/8-mise-au-point-dun-programme/exo/index.html#créer-est-prototyper-une-fonction-qui-satisfait-à-des-tests",
    "href": "1g/nsi/7-langages-et-programmation/8-mise-au-point-dun-programme/exo/index.html#créer-est-prototyper-une-fonction-qui-satisfait-à-des-tests",
    "title": "Exercices",
    "section": "2 Créer est prototyper une fonction qui satisfait à des tests",
    "text": "2 Créer est prototyper une fonction qui satisfait à des tests\n\nCréer et prototyper une fonction appartient() qui indique si un élément est présent dans une liste, et qui passe le jeu de tests suivants:\n\ndef test_appartient():\n   assert appartient(2, [5, 4, 1, 2, 3]) is True\n   assert appartient(6, [5, 4, 1, 2, 3]) is False\n\nCompléter le jeu de tests avec des cas limites: liste vide, types de données différents…",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 8: Mise au point d’un programme",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/8-mise-au-point-dun-programme/exo/index.html#algorithmes-classiques",
    "href": "1g/nsi/7-langages-et-programmation/8-mise-au-point-dun-programme/exo/index.html#algorithmes-classiques",
    "title": "Exercices",
    "section": "3 Algorithmes classiques",
    "text": "3 Algorithmes classiques\nReprenez les algorithmes classiques du chapitre 1 de la partie 8: et les implémenter sous forme de fonctions prototypées et testées:\n\nRecherche d’un extremum, au choix: maximum ou minimum d’un tableau.\nCalcul d’une moyenne des valeurs d’un tableau.\n\nAttention: il conviendra d’écrire l’algorithme de parcours du tableau et de ne pas utiliser les méthodes prédéfinies dans python max, min…",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 8: Mise au point d’un programme",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/8-mise-au-point-dun-programme/exo/index.html#recherche-dans-une-documentation",
    "href": "1g/nsi/7-langages-et-programmation/8-mise-au-point-dun-programme/exo/index.html#recherche-dans-une-documentation",
    "title": "Exercices",
    "section": "4 Recherche dans une documentation",
    "text": "4 Recherche dans une documentation\n\nRechercher dans la documentation du module random comment créer un dé numérique qui renvoie de façon équiprobable les valeurs entières de 1 à 6. Tester la fonction pour vérifier son fonctionnement.\nRechercher dans la documentation du module math comment calculer le logarithme en base 2 d’un nombre. Tester la fonction pour vérifier son fonctionnement: p.ex log2(16)=4\\log_2(16) = 4; log2(256)=8\\log_2(256)\n= 8. Expliquer ce que calcule cette fonction.\nRechercher dans la documentation de la librairie pandas plusieurs méthodes permettant d’itérer sur les valeurs d’une Dataframe.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 8: Mise au point d’un programme",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/3-entrees-et-sorties/index.html",
    "href": "1g/nsi/7-langages-et-programmation/3-entrees-et-sorties/index.html",
    "title": "Chapitre 3: Entrées et sorties",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nConstructions élémentaires\nMettre en évidence un corpus de constructions élémentaires. boucles non bornées, appels de fonction.\nSéquences, affectation, conditionnelles, boucles bornées,",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 3: Entrées et sorties"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/3-entrees-et-sorties/index.html#entrée-des-données-avec-la-fonction-input",
    "href": "1g/nsi/7-langages-et-programmation/3-entrees-et-sorties/index.html#entrée-des-données-avec-la-fonction-input",
    "title": "Chapitre 3: Entrées et sorties",
    "section": "1 Entrée des données avec la fonction input()",
    "text": "1 Entrée des données avec la fonction input()\nLa fonction input() permet d’afficher une phrase(plus exactement une chaîne de caractères, c’est pour cela qu’on doit placer cette phrase entre guillemets \"ma phrase\"), d’attendre que l’utilisateur entre une donnée et tape sur Entrée.\nDans la suite, les lignes commençant par &gt;&gt;&gt; désignent les entrées, les autres sont des sorties.\n&gt;&gt;&gt; input(\"Qu'est-ce qui est apparu en premier : l'œuf ou la poule ? \")\nQu'est-ce qui est apparu en premier : l'œuf ou la poule ? la poule\nLa donnée entrée par l’utilisateur est renvoyée par la fonction input() et peut être stockée dans une variable pour une utilisation ultérieure.\nPar exemple stockons cette réponse dans une variable appelée réponse:\n&gt;&gt;&gt; réponse = input(\"Quel jour du mois sommes nous ? \")\nQuel jour du mois sommes nous ? 13\nATTENTION la fonction input() stocke la valeur sous la forme d’une chaîne de caractères si vous voulez effectuer des opérations mathématiques, commencez par la convertir en nombre(entier ou réel), sinon vous risquez d’avoir de mauvaises surprises!\n&gt;&gt;&gt; réponse = input(\"Quel jour du mois sommes nous ? \")\nQuel jour du mois sommes nous ? 13\n&gt;&gt;&gt; type(réponse)\n&lt;class 'str'&gt;\n&gt;&gt;&gt; réponse * 2\n'1313'\nConvertissons l’entrée de l’utilisateur en entier avec la fonction int()\n&gt;&gt;&gt; réponse = int(input(\"Quel jour du mois sommes nous ? \"))\nQuel jour du mois sommes nous ? 13\n&gt;&gt;&gt; type(réponse)\n&lt;class 'int'&gt;\n&gt;&gt;&gt; réponse * 2\n26",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 3: Entrées et sorties"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/3-entrees-et-sorties/index.html#affichage-de-résultats-pour-lutilisateur-avec-la-fonction-print",
    "href": "1g/nsi/7-langages-et-programmation/3-entrees-et-sorties/index.html#affichage-de-résultats-pour-lutilisateur-avec-la-fonction-print",
    "title": "Chapitre 3: Entrées et sorties",
    "section": "2 Affichage de résultats pour l’utilisateur avec la fonction print()",
    "text": "2 Affichage de résultats pour l’utilisateur avec la fonction print()\nPour afficher du texte ou des valeurs de variables on utilise la fonction print().\nATTENTION Lorsque vous affichez du texte il doit être entouré de guillemets, mais pas lorsque vous souhaitez afficher des valeurs de variables.\n&gt;&gt;&gt; print(\"Votre réponse est: \")\nVotre réponse est:\n\n&gt;&gt;&gt; print(réponse)\n13\nVous pouvez même afficher plusieurs objets en les séparant par des virgules.\n&gt;&gt;&gt; print(\"Nous sommes le\", réponse, \"du mois de septembre\")\nNous sommes le 13 du mois de septembre\nOn peut même créer des chaînes de caractères sur plusieurs lignes en utilisant trois guillemets.\n&gt;&gt;&gt; print(\"\"\"Nous allons faire une si longue phrase qu'il\n... est indispensable de l'écrire\n... sur au moins trois\n... , que dis-je,\n... cinq lignes\"\"\")\nNous allons faire une si longue phrase qu'il\nest indispensable de l'écrire\nsur au moins trois\n, que dis-je,\ncinq lignes\n\n\n\n\n\n\n\nEn plus: Les f-strings\n\n\n\n\n\n\nDepuis la version 3.6 de python, il est possible de d’inclure directement des variables dans les chaines de caractères, c’est ce que l’on appelle les f-strings, pour les utiliser, il faut:\n\nprécéder le guillement ouvrant d’un f,\nécrire les noms des variables entre accolades {variable}.\n\n\n&gt;&gt;&gt; nom = \"Ada\"\n&gt;&gt;&gt; age = 16\n&gt;&gt;&gt; print(f\"Bonjour, {nom}. Vous avez {age} ans.\")\nBonjour, Ada. Vous avez 16 ans.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 3: Entrées et sorties"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/4-conditions/quiz/index.html",
    "href": "1g/nsi/7-langages-et-programmation/4-conditions/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 4: Conditions",
      "Quiz"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/4-conditions/exo/index.html",
    "href": "1g/nsi/7-langages-et-programmation/4-conditions/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "3 &gt; 4\n\n4.0 &gt; 3.999\n\n4 &gt; 4\n\n4 &gt; + 4\n\n2 + 2 == 4",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 4: Conditions",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/4-conditions/exo/index.html#donner-la-valeur-renvoyée-par-les-instructions-suivantes",
    "href": "1g/nsi/7-langages-et-programmation/4-conditions/exo/index.html#donner-la-valeur-renvoyée-par-les-instructions-suivantes",
    "title": "Exercices",
    "section": "",
    "text": "3 &gt; 4\n\n4.0 &gt; 3.999\n\n4 &gt; 4\n\n4 &gt; + 4\n\n2 + 2 == 4",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 4: Conditions",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/4-conditions/exo/index.html#donner-le-type-et-la-valeur-renvoyée-par-les-instructions-suivantes",
    "href": "1g/nsi/7-langages-et-programmation/4-conditions/exo/index.html#donner-le-type-et-la-valeur-renvoyée-par-les-instructions-suivantes",
    "title": "Exercices",
    "section": "2 Donner le type et la valeur renvoyée par les instructions suivantes",
    "text": "2 Donner le type et la valeur renvoyée par les instructions suivantes\na = 3\na == 5.0\nprint(a, type(a))\nb = 10\nc = b &gt; 9\nprint(c, type(c))",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 4: Conditions",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/4-conditions/exo/index.html#parapluie-ou-non",
    "href": "1g/nsi/7-langages-et-programmation/4-conditions/exo/index.html#parapluie-ou-non",
    "title": "Exercices",
    "section": "3 Parapluie ou non?",
    "text": "3 Parapluie ou non?\nEcrire un programme qui demande à un utilisateur quel temps il fait, et qui lui indique alors s’il doit prendre un parapluie ou pas.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 4: Conditions",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/4-conditions/exo/index.html#mention-au-bac",
    "href": "1g/nsi/7-langages-et-programmation/4-conditions/exo/index.html#mention-au-bac",
    "title": "Exercices",
    "section": "4 Mention au BAC",
    "text": "4 Mention au BAC\nEcrire un programme qui demande à l’utilisateur sa moyenne au BAC et qui lui indique sa mention:\n\nMOYENNE &lt; 8: RECALÉ\n8 ≤ MOYENNE &lt; 10: ORAL DE RATTRAPPAGE\n10 ≤ MOYENNE &lt;12: ADMIS\n12 ≤ MOYENNE &lt; 14: ASSEZ BIEN\n14 ≤ MOYENNE &lt; 16: BIEN\n16 ≤ MOYENNE: TRES BIEN",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 4: Conditions",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/4-conditions/exo/index.html#mini-projets",
    "href": "1g/nsi/7-langages-et-programmation/4-conditions/exo/index.html#mini-projets",
    "title": "Exercices",
    "section": "5 Mini-Projets",
    "text": "5 Mini-Projets\nChoisir un projet parmi les suivants.\n\n5.1 Calcul du tarif d’une lettre\nEn utilisant le lien suivant, écrire un programme qui affiche le prix de l’affranchissement d’une lettre an fonction de son type et de son poids -le physicien aurait préféré masse.\nhttps://www.prixdutimbre.fr/tarifs-postaux-affranchissement-la-poste/\n\n\n5.2 Calculateur d’aire\nCréez un programme qui permette de calculer la surface de différents polygones (carré, rectangle…) à partir de questions posées à l’utilisateur.\nArticle Wikipedia sur les aires de polygones\n\n\n5.3 BAC 2021\nEn utilisant le document suivant, écrire un programme qui demande à l’utilisateur de rentrer toutes ses notes au baccalauréat et qui lui donne alors sa moyenne et sa mention.\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nCoefficients nouveau BAC\n\n\nSource: https://eduscol.education.fr/cid126665/vers-le-bac-2021.html",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 4: Conditions",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/5-les-booleens/quiz/index.html",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/5-les-booleens/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 5: Les booléens",
      "Quiz"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/5-les-booleens/exo/index.html",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/5-les-booleens/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Produisez les tables de vérité pour les opérations suivantes:\n\nNAND : P NAND Q=!(P&Q)P \\text{ NAND } Q = !(P \\& Q)\nNOR : P NOR Q=!(P|Q)P \\text{ NOR } Q = !(P | Q)\nXOR : P XOR Q=(P&!Q)|(!P&Q)P \\text{ XOR } Q = (P \\& !Q) | (!P \\& Q)\n\nProduire des tables de vérité pour :\n\nP&!QP \\& !Q\n!P&!Q!P \\&  !Q\n!P|!Q!P | !Q\nP&Q&RP \\& Q \\& R\n!P&!Q&!R!P \\&  !Q \\&  !R\nP&Q&R|P&!Q&RP \\& Q \\& R | P \\&  !Q \\& R",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 5: Les booléens",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/5-les-booleens/exo/index.html#construire-des-tables-de-vérité",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/5-les-booleens/exo/index.html#construire-des-tables-de-vérité",
    "title": "Exercices",
    "section": "",
    "text": "Produisez les tables de vérité pour les opérations suivantes:\n\nNAND : P NAND Q=!(P&Q)P \\text{ NAND } Q = !(P \\& Q)\nNOR : P NOR Q=!(P|Q)P \\text{ NOR } Q = !(P | Q)\nXOR : P XOR Q=(P&!Q)|(!P&Q)P \\text{ XOR } Q = (P \\& !Q) | (!P \\& Q)\n\nProduire des tables de vérité pour :\n\nP&!QP \\& !Q\n!P&!Q!P \\&  !Q\n!P|!Q!P | !Q\nP&Q&RP \\& Q \\& R\n!P&!Q&!R!P \\&  !Q \\&  !R\nP&Q&R|P&!Q&RP \\& Q \\& R | P \\&  !Q \\& R",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 5: Les booléens",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/5-les-booleens/exo/index.html#expressions-équivalentes",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/5-les-booleens/exo/index.html#expressions-équivalentes",
    "title": "Exercices",
    "section": "2 Expressions équivalentes",
    "text": "2 Expressions équivalentes\nSavoir-faire: Utiliser une table de vérité pour montrer que deux expressions logiques sont équivalentes\n\nMontrer que:\nP|(!P&Q)=P|Q\nP | ( !P \\& Q)=P | Q\n\nUtiliser une table de vérité pour démontrer la propriété d’absorption de l’algèbre de Boole:\nP|P&Q=P\nP | P \\& Q = P\n\nMontrer que:\nP|Q&R=(P|Q)&(P|R)\nP | Q \\& R = (P | Q) \\& (P | R)",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 5: Les booléens",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/5-les-booleens/exo/index.html#simplifications-dexpressions-booléennes",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/5-les-booleens/exo/index.html#simplifications-dexpressions-booléennes",
    "title": "Exercices",
    "section": "3 Simplifications d’expressions booléennes",
    "text": "3 Simplifications d’expressions booléennes\nUtilisez les lois de l’algèbre de Boole (ne les apprenez pas!) pour simplifier ces expressions.\n\n\n\n\n\n\nAstuce\n\n\n\nUtiliser le ×\\times pour le «ET» et le ++ pour le «OU» pour pouvoir utiliser les règles habituelles de développement et de factorisant de l’algèbre non booléen.\n\n\n\nSimplifier l’expression:\n(P|Q)&(P|!Q)\n(P | Q)\\&(P |  !Q)\n\nVérifier votre résultat avec une table de vérité.\nDémontrer l’expression de XOR utilisée dans l’exercice 1: P XOR Q=(P&!Q)|(!P&Q)P \\text{ XOR } Q = (P \\& !Q)|(!P \\&Q):\nPour cela commencer par remarquer que:\n0XORQ=Q1XORQ=!Q\n\\begin{aligned}\n   0\\ \\text{XOR}\\ Q\\ &=\\ Q \\\\\n   1\\ \\text{XOR}\\ Q\\ &=\\  !Q\n\\end{aligned}\n\nVérifier votre résultat avec une table de vérité.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 5: Les booléens",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/5-les-booleens/exo/index.html#recherche-dexpressions-équivalentes-plus-dur",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/5-les-booleens/exo/index.html#recherche-dexpressions-équivalentes-plus-dur",
    "title": "Exercices",
    "section": "4 Recherche d’expressions équivalentes (Plus dur)",
    "text": "4 Recherche d’expressions équivalentes (Plus dur)\nExprimer sous forme simplifiée les expressions suivantes:\n\n(P&Q&R)|(P&Q&S)(P \\& Q \\& R) | (P \\& Q \\& S)\n(!P|Q)&(P|Q|S)&!S(!P | Q) \\& (P | Q | S) \\&  !S\nP&!Q&!R|P&!Q&R|P&Q&RP \\&  !Q \\&  !R | P \\&  !Q \\& R | P \\& Q \\& R\n\nVous pouvez vérifier vos résultats en Python en utilisant la bibliothèque sympy qui propose la fonction simplify_logic(Attention la syntaxe utilisée est: ET: &, OU: | et NON:~`).\nfrom sympy import symbols\nfrom sympy.logic import simplify_logic\n\nP, Q, R, S, T = symbols('P Q R S T')\n\nsimplify_logic((~P|Q)&(P|Q|S)&~S) # renvoie Q & !S\nLa fonction propose deux modes de simplifications:\n\nProduit(ET) de sommes(OU): simplify_logic(expr, 'cnf')\nSomme(OU) de produit(ET): simplify_logic(expr, 'dnf')\n\nexpr = \"P&!Q&!R|P&!Q&R|P&Q&R\"\nsimplify_logic(expr, 'cnf')   # renvoie P & (R | !Q)\nsimplify_logic(expr, 'dnf')   # renvoie (P & R) | (P & !Q)",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 5: Les booléens",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/4-representation-des-textes/index.html",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/4-representation-des-textes/index.html",
    "title": "Chapitre 4: Représentation des textes",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nReprésentation d’un texte en machine.\nExemples des encodages ASCII, ISO-8859-1, Unicode\nIdentifier l’intérêt des différents systèmes d’encodage.\nConvertir un fichier texte dans différents formats d’encodage.\nAucune connaissance précise des normes d’encodage n’est exigible",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 4: Représentation des textes"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/4-representation-des-textes/index.html#le-codage-ascii",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/4-representation-des-textes/index.html#le-codage-ascii",
    "title": "Chapitre 4: Représentation des textes",
    "section": "1 Le codage ASCII",
    "text": "1 Le codage ASCII\n\nLe codage ASCII est une norme de codage de caractères en informatique ancienne et connue pour son influence incontournable sur les codages de caractères qui lui ont succédé. Elle était la plus largement compatible pour ce qui est des caractères latins non accentués. ASCII contient les caractères nécessaires pour écrire en anglais.\n\n\nL’ASCII définit seulement 128 caractères numérotés de 0 à 127 et codés en binaire de 0000000 à 1111111. Sept bits suffisent donc pour représenter un caractère codé en ASCII. Toutefois, les ordinateurs travaillant presque tous sur un multiple de huit bits (multiple d’un octet) depuis les années 1970, chaque caractère d’un texte en ASCII est souvent stocké dans un octet dont le 8e bit est 0.   Article ASCII sur Wikipédia\n\nVoici la table ASCII:\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nTable ASCII\n\n\nCertains des caractères présents ne peuvent pas être affichés(repérés par un fond bleu), ce sont des caractères de contrôle. Vous pouvez trouver leur signification sur cette page.\nPour lire le tableau, on associe au caractère le code binaire suivant: n°deligne_n°decolonne. Par exemple, le caractère a est situé dans la case correspondant à la 7ᵉ ligne, 2ᵉ colonne. Sa représentation binaire est:110_0001 soit sous la forme d’un octet: 01100001. Ce qui correspond au caractère 97 en décimal.\nPour faciliter la lecture des codes ASCII par un humain, il est plus commode de coder les numéros de ligne et de colonne en hexadécimal, et la lettre ‘a’ aura alors pour code 61 en hexadécimal.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 4: Représentation des textes"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/4-representation-des-textes/index.html#lencodage-iso",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/4-representation-des-textes/index.html#lencodage-iso",
    "title": "Chapitre 4: Représentation des textes",
    "section": "2 L’encodage ISO",
    "text": "2 L’encodage ISO\n\nLa nécessité de représenter des textes comportant des caractères non présents dans la table ASCII tels ceux de l’alphabet latin utilisés en français comme le ‘à’, le ‘é’ ou le ‘ç’ impose l’utilisation d’un autre codage que l’ASCII.\n\n\nLes codages ISO sont des extensions du codage ASCII:\n\nLe codage des 128 caractères présents dans la table ASCII est conservé;\nles 128 caractères supplémentaires sont régionalisés en fonction des divers alphabets du monde.\n\n\n\nL’ISO, organisation internationale de normalisation, propose de son côté plusieurs variantes de codages adaptées aux différentes langues. La plus utilisée concerne les langues européennes occidentales. Il s’agit de l’ISO-8859-1, aussi nommé ISO-Latin1. Université de Lille\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nTable des caractères ISO-8859-1\n\n\nOn peut constater que cette table ne prend pas en charge le caractère €, ainsi une nouvelle norme mieux adaptée au français a été introduite l’ISO 8859-15.\nCertains caractères ont été ajoutés dont €, œ, Œ…\nMais il existe d’autres variantes adaptées à d’autres langues:\n\nISO-8859-2 pour les pays d’Europe de l’Est,\nISO-8859-3 pour les pays du sud est de l’Europe…\n\nDu fait de l’internationalisation des pratiques en informatique, on a mis au point un standard international permettant d’encoder les caractères de toutes les langues: le standard Unicode.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 4: Représentation des textes"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/4-representation-des-textes/index.html#lencodage-unicode-utf-8",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/4-representation-des-textes/index.html#lencodage-unicode-utf-8",
    "title": "Chapitre 4: Représentation des textes",
    "section": "3 L’encodage Unicode UTF-8",
    "text": "3 L’encodage Unicode UTF-8\nL’encodage UTF-8 est un encodage en élaboration qui permet d’encoder tous les caractères de toutes les langues, il est actuellement en train de s’imposer face aux antres encodages en raison de son universalité.\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nAprès de nombreuses propositions pour remplacer le codage ASCII, il semble que l'encodage UTF-8 semble prendre le dessus.©  CC BY-SA 4.0 via Wikimedia Commons\n\nLa norme UTF-8 utilise un codage de longueurs variable sur un à quatre octets. Les caractères à un octet sont équivalents avec le code ASCII assurant ainsi la rétro-compatibilité avec le standard ASCII.\n\n\n\n\n\n\n\n\nEn plus: Statistiques actualisées\n\n\n\n\n\n\nAu 21 septembre 2019, l’UTF-8 est utilisé par 94% des sites. Source\n\n\n\n\n\n\nÀ l’évidence, 256 caractères ne suffisant pas pour représenter les lettres de tous les alphabets utilisés (pensons au russe, à l’hébreu, etc.), un nouveau standard a été introduit : Unicode. La table Unicode comporte la définition de près de cent cinquante mille caractères.   Le codage de cette table est multiple. Le codage le plus couramment utilisé se nomme UTF-8. Son principe est le suivant : une première série de caractères sont codés sur un octet. D’autres caractères sont codés sur deux octets, le premier octet débute par ‘110’ pour l’indiquer, l’octet suivant débute par ‘10’. De même des codages sur 3 ou 4 octets sont utilisés pour d’autres caractères. (Cette rapide introduction à UTF-8 est volontairement simplifiée.)   Les 128 premiers caractères de la table UTF-8 sont compatibles avec le codage ASCII. Ainsi le codage UTF-8 d’un texte ne comportant que des caractères présents dans la table ASCII sera le même que le codage ASCII de ce texte.   Ce ne sera pas vrai pour un texte ISO-Latin-1. Il importe donc, quand on veut décoder un texte, de savoir quel est le codage utilisé sous peine de décoder improprement les caractères. Université de Lille\n\nLa table complète des caractères Unicode peut être consultée sur l’article Wikipédia\nPar exemple si on cherche dans cette table la lettre é, on trouve le code:U+00E9 appelé point code, en binaire cela correspond au nombre décimal 233, et au nombre binaire 1110 1001. Ce nombre binaire sera représenté en UTF-8 sur deux octets sous la forme: 110x_xxxx 10xx_xxxx. Les chiffres binaires du point de code sont rangés de droite à gauche aux positions ‘x’ de ce schéma.\nOn obtient donc 1100_0011 1010_1001 pour le caractère é.\nCe qui représente en hexadécimal:C3 A9, il occupe donc deux octets.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 4: Représentation des textes"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/4-representation-des-textes/index.html#lencodage-des-caractères-en-python",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/4-representation-des-textes/index.html#lencodage-des-caractères-en-python",
    "title": "Chapitre 4: Représentation des textes",
    "section": "4 L’encodage des caractères en python",
    "text": "4 L’encodage des caractères en python\nEn python 3, tous les fichiers doivent être codés en UTF-8, et les chaînes de caractères string sont encodées en UTF-8, contrairement aux bytes qui ne doivent contenir que des caractères ASCII.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 4: Représentation des textes"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/4-representation-des-textes/index.html#lencodage-des-caractères-en-html",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/4-representation-des-textes/index.html#lencodage-des-caractères-en-html",
    "title": "Chapitre 4: Représentation des textes",
    "section": "5 L’encodage des caractères en html",
    "text": "5 L’encodage des caractères en html\nPour obtenir un affichage correct des caractères spéciaux en html, il faut déclarer l’encodage utf-8 dans le fichier d’en-tête(&lt;head&gt;) de la page html en utilisant la balise &lt;meta&gt;.\nVoici la structure type d’un fichier html5.\n&lt;!doctype html&gt;\n&lt;html&gt;\n\n    &lt;head&gt;\n        &lt;meta charset=\"utf-8\"&gt;\n        &lt;title&gt;Titre du document&lt;/title&gt;\n    &lt;/head&gt;\n\n    &lt;body&gt;\n        Contenu du document, avec d'éventuels accents!!!\n        et caractères étranges , de toutes les langues...\n        ...ظɶ\n        ...ऴ,ඛ\n        ...ტ,ላ,Ꮹ,ᜨ...\n    &lt;/body&gt;\n&lt;/html&gt;\nIl est également possible d’afficher des caractères par leur code html, ces codes sont également présents sur l’article Wikipédia.\nPar exemple le caractère À U+00C0 peut être codé en html par &#192;, ou encore en notation hexadécimale: &#xc0;",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 4: Représentation des textes"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/2-representation-des-entiers-relatifs/quiz/index.html",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/2-representation-des-entiers-relatifs/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 2: Représentation des entiers relatifs",
      "Quiz"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/2-representation-des-entiers-relatifs/exo/index.html",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/2-representation-des-entiers-relatifs/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "En complément à deux, quel intervalle d’entiers relatifs peut-on représenter avec des mots de 8 bits? Combien de valeurs sont représentées?\nMême question avec des mots de 32 bits et 64 bits.\n\nInformatique et sciences du numérique Spécialité ISN en terminale S - Avec des exercices corrigés et des idées de projets par Gilles Dowek",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 2: Représentation des entiers relatifs",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/2-representation-des-entiers-relatifs/exo/index.html#intervalles-de-valeurs",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/2-representation-des-entiers-relatifs/exo/index.html#intervalles-de-valeurs",
    "title": "Exercices",
    "section": "",
    "text": "En complément à deux, quel intervalle d’entiers relatifs peut-on représenter avec des mots de 8 bits? Combien de valeurs sont représentées?\nMême question avec des mots de 32 bits et 64 bits.\n\nInformatique et sciences du numérique Spécialité ISN en terminale S - Avec des exercices corrigés et des idées de projets par Gilles Dowek",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 2: Représentation des entiers relatifs",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/2-representation-des-entiers-relatifs/exo/index.html#coder-sur-4-bits-des-entiers-relatifs",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/2-representation-des-entiers-relatifs/exo/index.html#coder-sur-4-bits-des-entiers-relatifs",
    "title": "Exercices",
    "section": "2 Coder sur 4 bits des entiers relatifs",
    "text": "2 Coder sur 4 bits des entiers relatifs\nDans cet exercice, on utilise un codage en complément à 242^{4} sur 4 bits.\n\nQuels sont les nombres minimum et maximum que l’on peut représenter?\nCompléter le tableau suivant:\n\n\n\nBase 10\nComplément à 2\n\n\n\n\n-8\n\n\n\n-1\n\n\n\n0\n\n\n\n3\n\n\n\n-5\n\n\n\n\n0111\n\n\n\n1001\n\n\n\n1100\n\n\n\nRéaliser les calculs suivants en binaire: 7−57-5 et −2×3-2\\times 3.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 2: Représentation des entiers relatifs",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/2-representation-des-entiers-relatifs/exo/index.html#complément-à-2-sur-un-octet",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/2-representation-des-entiers-relatifs/exo/index.html#complément-à-2-sur-un-octet",
    "title": "Exercices",
    "section": "3 Complément à 2 sur un octet",
    "text": "3 Complément à 2 sur un octet\n\nTrouver la représentation binaire sur huit bits des entiers relatifs 00 et −128-128.\nTrouver la représentation décimale des entiers relatifs dont la représentation binaire sur huit bits est 0000 1000 et 1000 1000.\nCalculer la représentation binaire sur huit bits de l’entier relatif −16-16, puis de son opposé.\nReprésenter les entiers relatifs 9696 et 4848 en binaire sur huit bits. Ajouter les deux nombres binaires obtenus en utilisant l’algorithme de l’addition binaire. Quel est l’entier relatif obtenu ? Pourquoi est-il négatif ?\nCalculer en binaire 15−715 - 7.\n\nInformatique et sciences du numérique Spécialité ISN en terminale S - Avec des exercices corrigés et des idées de projets par Gilles Dowek",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 2: Représentation des entiers relatifs",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/2-representation-des-entiers-relatifs/exo/index.html#le-bug-de-lan-2038-de-linux",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/2-representation-des-entiers-relatifs/exo/index.html#le-bug-de-lan-2038-de-linux",
    "title": "Exercices",
    "section": "4 Le bug de l’an 2038 de linux ***",
    "text": "4 Le bug de l’an 2038 de linux ***\nVoici un extrait d’un article developpez.com sur le bug de l’an 2038.\n\nDepuis la version 5.6 du noyau, publié en mars dernier, l’équipe a commencé à proposer des correctifs pour résoudre le problème de l’année 2038. Il s’agit d’un bogue détecté il y a longtemps dans l’encodage du temps sur les systèmes de type Unix, dont Linux, macOS, et d’autres systèmes d’exploitation compatibles POSIX. Sur ces systèmes, le calcul du temps est effectué en fonction des secondes écoulées à partir du 1er janvier 1970 à 00:00:00 UTC (nommée également epoch). Un jour donnera par exemple 86 400 secondes et une année 31 536 000 secondes.\nEt plus les années passeront, plus il faudra de nombres pour représenter les dates. Pour effectuer le décompte sur ces systèmes, lorsque la fonction time() est appelée, elle retourne un entier signé de type “time_t”. Si le système est 32 bits, la valeur retournée est un entier signé 32 bits et si le système est 64 bits, la valeur retournée est 64 bits. Sur un système 64 bits, les limites sont supérieures à 292 milliards d’années. Il n’y a donc pas de soucis à se faire ici (ce sera beaucoup plus que l’âge de notre planète ou l’estimation de son espérance de vie).\nMais sur les systèmes 32 bits, le nombre de secondes total que la fonction peut retourner est 231–12^{31}–1, c’est-à-dire environ 136 ans. La date de référence étant le 1er janvier 1970 à 00:00:00 UTC, la date minimale représentable est le vendredi 13 décembre 1901 et la date maximale représentable est le mardi 19 janvier 2038 à 3 h 14 min 8 s. Lorsqu’il sera 3 h 14 min 8 s le 19 janvier 2038, le système passera au 13 décembre 1901 à la seconde suivante (également appelé le bogue de l’an 2038 abrégé en anglais Y2038). Bien évidemment, ce ne sera pas la fin du monde. article developpez.com\n\n\nQuelle est la plus grande valeur pouvant être encodé sur 32 bits en complément à deux?\nConvertir la valeur précédente en ans jours heures minute seconde en considérant que les années font toutes 365 jours.\n\n&gt;&gt;sortie\n\n68 ans 35 jours 3 heures 14 minutes 7 secondes\n\n\nVérifier la date indiquée par l’article sachant que les années bissextiles entre 1970 et 2038 sont:\n1972; 1976; 1980; 1984; 1988; 1992; 1996; 2000; 2004; 2008; 2012; 2016; 2020; 2024; 2028; 2032; 2036.\nVérifier alors l’affirmation suivante concernant l’heure affichée une seconde plus tard si le bug n’était pas réparé.\n\nLe bug de l’an 2038, ou bogue de l’an 2038 (au Canada), aussi appelé Y2038, est un bug informatique similaire au bug de l’an 2000 qui pourrait perturber le fonctionnement d’un grand nombre de systèmes informatiques le 19 janvier 2038 à 3 h 14 min 8 s, temps universel. Ils afficheront alors 13 décembre 1901 et 20 h 45 min 52 s.\n\nArticle Bug de l’an 2038 sur Wikipédia\nRepérer deux erreurs de l’article du site developpez.com.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 2: Représentation des entiers relatifs",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/2-representation-des-entiers-relatifs/exo/index.html#codage-et-décodage-en-python",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/2-representation-des-entiers-relatifs/exo/index.html#codage-et-décodage-en-python",
    "title": "Exercices",
    "section": "5 Codage et décodage en Python",
    "text": "5 Codage et décodage en Python\n\nCréer un programme qui demande un nombre à encoder et un nombre nn de bits d’encodage, et qui renvoie la représentation binaire du nombre en complément 2n2^n de ce nombre.\nP.ex:\n\nsi vous demandez le codage de -1 sur 4 bits, le programme affiche: \"1111\".\nsi vous demandez le codage de 5 sur 4 bits, le programme affiche: \"0101\".\n\nPour simplifier, on supposera que l’utilisateur ne demande pas l’impossible, et que le nombre demandé peut être codé sur le nombre de bits donnés.\n\nAides:\n\nPour obtenir la représentation binaire d’un nombre entier naturel on utilise: bin(nombre)[2:].\nP.ex: bin(127)[2:] renvoie '1111111'\nPour parcourir un à un les éléments d’une chaîne de caractère, on utilise la syntaxe for élément in chaine_de_caractères:\nP.ex:\nfor chiffre in '1111111':\n    print(chiffre)\nPour forcer l’écriture sur nn bits d’un nombre binaire, on utilise: '{:0nd}'.format(nombre)\nP.ex: '{:08d}'.format(1000) renvoie '00001000'\n\nUne des difficultés notables de cet exercice est qu’il faut traiter les nombres binaires comme des str. Réfléchissez bien aux types utilsés.\n\nCréer un programme qui demande un code binaire à décoder écrit sur nn bits, et qui renvoie la valeur décimale de ce nombre par décodage du nombre en complément 2n2^n.\nP.ex:\n\nsi vous demandez le décodage de \"1111\", le programme affiche: -1.\nsi vous demandez le décodage de \"0101\", le programme affiche: 5.\n\nle codage binaire donnant implicitement la valeur de n pour le complément à 2.\n\nAide\nPour obtenir la longueur d’une chaîne de caractères, on utilise la fonction len().\nP.ex: len(\"0101\") renvoie 4.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 2: Représentation des entiers relatifs",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/1-representation-des-entiers-naturels/index.html",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/1-representation-des-entiers-naturels/index.html",
    "title": "Chapitre 1: Représentation des entiers naturels",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nÉcriture d’un entier positif dans une base b ⩾ 2\nPasser de la représentation d’une base dans une autre.\nLes bases 2, 10 et 16 sont privilégiées.\nChacun de ces nombres étant comprise entre 0 et 9, cela représente un ensemble de dix chiffres d’où le nom de notation décimale.\nLes chiffres utilisés sont: 0 1 2 3 4 5 6 7 8 9\nCependant, nos ordinateurs actuels utilisent des transistors pour calculer qui ne possèdent que deux états: 0 1.\nLorsqu’on va compter, on va très rapidement se retrouver à court de chiffres, et on sera obligé d’ajouter des deuzaines, quatraines, huitaines à gauche… Tout comme nous ajoutions des dizaines, centaines, milliers en base 10.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 1: Représentation des entiers naturels"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/1-representation-des-entiers-naturels/index.html#codage-binaire",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/1-representation-des-entiers-naturels/index.html#codage-binaire",
    "title": "Chapitre 1: Représentation des entiers naturels",
    "section": "1 Codage binaire",
    "text": "1 Codage binaire\n\nLe système binaire est un système de numération utilisant la base 2. On nomme couramment bit (de l’anglais binary digit, soit « chiffre binaire ») les chiffres de la numération binaire positionnelle. Ceux-ci ne peuvent prendre que deux valeurs, notées par convention 0 et 1.\nC’est un concept essentiel de l’informatique. En effet, les processeurs des ordinateurs actuels sont composés de transistors ne gérant chacun que deux états.\nArticle Wikipédia sur le système binaire\n\nActuellement, dans les systèmes numériques comme les ordinateurs, toutes les informations, qu’il s’agisse de nombres, de textes d’images, de sons ou encore de vidéos sont codées sous forme binaire.\nLe système binaire est un système de numération positionnel utilisant la base deux.\nLes chiffres utilisés sont: 0 1\n\nAvec nn bits, on peut représenter 2n2^n informations.\nDans le cas des entiers naturels, on peut compter de 00 à 2n−12^{n-1}.\n\n\n\navec 4 bits: de 0 à 15.\navec 8 bits: de 0 à 255.\n\n\n\n\n\n\n\n\n\nEn plus: Dépassement de capacité\n\n\n\n\n\n\n\n\n\n\n\n\n\nUn dépassement d’entier (integer overflow) est, en informatique, une condition qui se produit lorsqu’une opération mathématique produit une valeur numérique supérieure à celle représentable dans l’espace de stockage disponible. Article Wikipédia\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nLe vol 501 d'Ariane 5 en 1996 s'est soldé par sa destruction en raison d'un dépassement d'entier.©  CC BY 3.0 via Wikimedia Commons\n\n\n\n\n\n\n\n\n\n1.1 Comment passer de la notation binaire à la notation décimale ?\n\n1110\n1110\n\n111021110_2 est l’addition de droite à gauche de zéro unité, une deuzaine, une quatraine, une huitaine.\nSoit mathématiquement:\n1110=1×23+1×22+1×21+0×20=14\n1110=1 \\times 2^3 + 1 \\times 2^2 + 1 \\times 2^1 + 0 \\times 2^0 = 14\n\n\nRemarque: on indique la base de numération par un indice à la fin du nombre.\nSoit 11102=14101110_2 = 14_{10}\n\n\n1.2 Comment passer de la notation décimale à la notation binaire ?\nOn regroupe les objets par paquets de 2 en réalisant des divisions successives jusqu’à obtenir un quotient égal à 0.\n\nTrouver en base deux la représentation du nombre 131013_{10}\n13| 2\n   |---\n 1 | 6 | 2\n       |---\n     0 | 3 | 2\n           |---\n         1 | 1 | 2\n               |---\n             1 | 0\n\nL’écriture du nombre se fait alors de droite à gauche :\n1310=11012\n13_{10} = 1101_{2}\n\nOn peut vérifier le résultat:\n11102=1×23+1×22+1×21+0×20=1310\n{1110}_{2} = 1 \\times 2^3 + 1 \\times 2^2 + 1 \\times 2^1 + 0 \\times 2^0 = 13_{10}",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 1: Représentation des entiers naturels"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/1-representation-des-entiers-naturels/index.html#loctet",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/1-representation-des-entiers-naturels/index.html#loctet",
    "title": "Chapitre 1: Représentation des entiers naturels",
    "section": "2 L’octet",
    "text": "2 L’octet\n\nLes mémoires actuelles sont toutes composées de cellules mémoires capables de retenir un bit. En mettant pleins de ces cellules dans un seul composant, et en mettant quelques circuits électroniques pour gérer le tout, on obtient une mémoire.OpenClassroom\n\nL’état d’un circuit mémoire, se décrit par une suite finie de 0 et de 1, que l’on appelle un mot. Par exemple, le mot 100 décrit l’état d’un circuit composé de trois circuits mémoires un bit, respectivement dans l’état 1, 0 et 0.\nDans la mémoire des ordinateurs les circuits mémoire un bit sont souvent groupés par huit : les octets.\n\n\nOctet\n\n\n\nUn octet (byte en anglais) est une suite de 8 bits. Il permet de coder 28=2562^8=256 valeurs.\n\n\n\n\n\n\n\n\n\n\nEn plus: Les unités de stockage\n\n\n\n\n\n\nContrairement aux préfixes du système international(SI) utilisé en physique qui utilise des puissances de 10, on utilise en informatique la norme IEC basés des puissances de 2.\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nLes préfixes SI et IEC ont des noms et des valeurs proches, les fabricants de disque dur l’ont bien compris et utilisent toujours le préfixe SI pour faire croire à un plus grand stockage.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 1: Représentation des entiers naturels"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/1-representation-des-entiers-naturels/index.html#codage-hexadécimal",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/1-representation-des-entiers-naturels/index.html#codage-hexadécimal",
    "title": "Chapitre 1: Représentation des entiers naturels",
    "section": "3 Codage hexadécimal",
    "text": "3 Codage hexadécimal\nLa notation binaire bien qu’adaptée aux composants électroniques, ne l’est pas du tout pour l’homme. Certains des premiers ordinateurs, comme l’ENIAC utilisaient la base 10, cependant cette idée a été abandonnée en raison des difficultés que cela entraînaient au niveau électronique. La base 16, le système hexadécimal rend l’utilisation du binaire plus humaine.\nUn chiffre hexadécimal est un mot de 4 bits puisque 24=162^4 = 16.\nLes chiffres utilisés sont: 0 1 2 3 4 5 6 7 8 9 a b c d e f\nVoici les correspondances entre les bases hexadécimale, décimale et binaire.\n\n\n\nChiffre hexadécimal\nReprésentation décimale\nReprésentation binaire\n\n\n\n\n0\n0\n0000\n\n\n1\n1\n0001\n\n\n2\n2\n0010\n\n\n3\n3\n0011\n\n\n4\n4\n0100\n\n\n5\n5\n0101\n\n\n6\n6\n0110\n\n\n7\n7\n0111\n\n\n8\n8\n1000\n\n\n9\n9\n1001\n\n\nA\n10\n1010\n\n\nB\n11\n1011\n\n\nC\n12\n1100\n\n\nD\n13\n1101\n\n\nE\n14\n1110\n\n\nF\n15\n1111\n\n\n10\n16\n10000\n\n\n\n\n3.1 Comment passer de la notation binaire à la notation hexadécimale ?\n\nComment représenter le mot binaire de 16 bits: 1010101111100001\nOn est d’accord, en binaire, c’est inhumain, par contre en hexadécimal, cela devient beaucoup plus lisible et manipulable:\n10101011111000012=abe116\n{1010101111100001}_2 = {abe1}_{16}\n\nOu si l’on tient vraiment à notre bonne vielle base 10:\nabe116=(10×163+11×162+14×161+1×160)10=4400110\nabe1_{16}=(10 \\times 16^3 + 11 \\times 16^2 + 14 \\times 16^1 + 1 \\times 16^0)_{10}=44001_{10}\n\n\nPour passer de l’écriture binaire à l’écriture hexadécimale, il suffit de regrouper les chiffres binaires 4 par 4.\n\nTrouver en base seize la représentation du nombre 1011012101101_{2}\nEn base 2:    101101 = 0010 1101\nEn base 16:              2    D\nSoit: 1011012=2D16101101_{2} = 2D_{16}\nOn peut vérifier le résultat en base 10:\n1011012=+1×25+0×24+1×23+1×22+0×21+1×20=1310\n{101101}_2 = + 1 \\times 2^5 + 0 \\times 2^4 + 1 \\times 2^3 + 1 \\times 2^2 + 0 \\times 2^1 + 1 \\times 2^0 = 13_{10}\n\n\n\n\n3.2 Comment passer de la notation décimale à la notation hexadécimale ?\nOn regroupe les objets par paquets de 16 en réalisant des divisions successives jusqu’à obtenir un quotient égal à 0.\n\nTrouver en base seize la représentation du nombre 25516255_{16}\n 286  | 16\n      |---\n14(e)| 17 | 16\n           |---\n         1 | 1 | 16\n               |---\n             1 | 0 \n\nL’écriture du nombre se fait alors de droite à gauche en remplaçant les nombres décimaux par leurs écritures hexadécimales:\n28610=11e16\n286_{10} = 11e_{16}\n\nOn peut vérifier le résultat :\ne1116=1×162+1×161+14(e)×20=256+16+14=28610\n{e11}_{16} = 1 \\times 16^2 + 1 \\times 16^1 + 14(e) \\times 2^0 = 256 + 16 + 14 = 286_{10}",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 1: Représentation des entiers naturels"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/1-representation-des-entiers-naturels/index.html#opérations-arithmétiques",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/1-representation-des-entiers-naturels/index.html#opérations-arithmétiques",
    "title": "Chapitre 1: Représentation des entiers naturels",
    "section": "4 Opérations arithmétiques",
    "text": "4 Opérations arithmétiques\nLes méthodes utilisées en base dix s’appliquent de la même façon dans les autres bases.\n\n\n\n\n\n\nMise en garde\n\n\n\nDes dépassements de capacités (integer overflow) peuvent advenir en cas d’addition(255+1=0255 + 1 = 0 sur un octet!).\nLes soustractions doivent donner des résultats positifs, car on ne code pas encore les entiers relatifs(10−13=−310 - 13 = -3 qui ne peut pas être codé!).\n\n\n\n4.1 Addition binaire\n\nRéaliser l’addition binaire: 10112+101021011_2 + 1010_2\n (1) (1)\n    1 0 1 1\n  + 1 0 1 0\n    -------\n  1 0 1 0 1\n\n\nOn peut vérifier le résultat en base 10 :\n(10112=1110)+(10102=1010)=101012=2110\n({1011}_2 = 11_{10})+({1010}_2 = 10_{10})={10101}_2 = 21_{10}\n\n\n\n4.2 Addition hexadécimale\n\nRéaliser l’addition hexadécimale: A80316+2D3516A803_{16} + 2D35_{16}\n   (1)\n    A 8 0 3\n  + 2 D 3 5\n    -------\n    D 5 3 8\n\n\nOn peut vérifier le résultat en base 10:\n(A80316=4301110)+(2D3516=1157310)=D53816=5458410\n({A803}_{16} = 43 011_{10})+({2D35}_{16} = 11 573_{10})={D538}_{16} = 54 584_{10}\n\n\n\n4.3 Soustraction binaire\n\nRéaliser la soustraction binaire: 10112−011021011_2 - 0110_2\n    1 0 1 1\n  - 0 1 1 0\n   (1)\n    -------\n    0 1 0 1\n\n\nOn peut vérifier le résultat en base 10:\n(10112=1110)−(01102=610)=01012=510\n({1011}_2 = 11_{10})-({0110}_2 = 6_{10})={0101}_2 = 5_{10}\n\n\n\n4.4 Soustraction hexadécimale\n\nRéaliser la soustraction hexadécimale : A80316−2D3516A803_{16} - 2D35_{16}\n     A  8  0  3\n  -  2  D  3  5\n    (1)(1)(1)\n    -----------\n     7  A  C  E\n\n\nOn peut vérifier le résultat en base 10 :\n(A80316=4301110)−(2D3516=1157310)=7ACE16=3143810\n({A803}_{16} = 43 011_{10})-({2D35}_{16} = 11 573_{10})={7ACE}_{16} = 31 438_{10}\n\nMaintenant que vous avez tout compris, voici un lien vers un convertisseur en ligne.\nhttp://www.binaryconvert.com/convert_unsigned_int.html",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 1: Représentation des entiers naturels"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/1-representation-des-entiers-naturels/index.html#conversions-et-opérations-en-python",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/1-representation-des-entiers-naturels/index.html#conversions-et-opérations-en-python",
    "title": "Chapitre 1: Représentation des entiers naturels",
    "section": "5 Conversions et opérations en python",
    "text": "5 Conversions et opérations en python\nBien entendu, comme ce genre d’opérations est courante en informatique, python possède des fonctions pour manipuler les nombres entiers en base décimale int(), en base deux bin(), en base seize hex().\nVous pouvez trouver quelques exemples de ces conversions sur cette réponse du forum de programmation en anglais stackoverflow\nATTENTION\nLes nombres binaires et hexadécimaux sont représentés en Python sous forme de chaîne de caractères avec un préfixe.\n\nOb pour les nombres binaires par exemple'0x1001' pour 100121001_{2}\nOx pour les nombres hexadécimaux par exemple'0xABCD' pour ABC16ABC_{16}",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 1: Représentation des entiers naturels"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/3-representation-des-nombres-a-virgule/quiz/index.html",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/3-representation-des-nombres-a-virgule/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 3: Représentation des nombres à virgule",
      "Quiz"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/3-representation-des-nombres-a-virgule/exo/index.html",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/3-representation-des-nombres-a-virgule/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "On rappelle que l’encodage des nombres flottants s’effectue de la façon suivante:\nsm⋅2n\ns\\ m \\cdot 2^n",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 3: Représentation des nombres à virgule",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/3-representation-des-nombres-a-virgule/exo/index.html#encodage-sur-un-octet",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/3-representation-des-nombres-a-virgule/exo/index.html#encodage-sur-un-octet",
    "title": "Exercices",
    "section": "1 Encodage sur un octet",
    "text": "1 Encodage sur un octet\nOn considère des nombres flottants encodés sur un octet avec:\n\n1 bit de signe,\n3 bits d’exposant,\n4 bits de mantisse.\n\n\nCalculer le décalage de l’exposant. Quel est l’intervalle d’exposant accessible?\nTrouver les nombres à virgule représentés par les mots binaires suivants:\n\n0111 1000\n1001 0001\n\nDonner les représentations binaires des nombres flottants suivants:\n\n2,5=1,25×212,5=1,25 \\times 2^1.\n−1,125=−1,125×20-1,125=-1,125 \\times 2^0.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 3: Représentation des nombres à virgule",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/3-representation-des-nombres-a-virgule/exo/index.html#encodage-demi-précision-sur-16-bits",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/3-representation-des-nombres-a-virgule/exo/index.html#encodage-demi-précision-sur-16-bits",
    "title": "Exercices",
    "section": "2 Encodage demi-précision sur 16 bits",
    "text": "2 Encodage demi-précision sur 16 bits\nOn considère des nombres flottants encodés sur deux octets avec:\n\n1 bit de signe,\n5 bits d’exposant,\n10 bits de mantisse.\n\n\nCalculer le décalage de l’exposant. Quel est l’intervalle d’exposant accessible?\nTrouver les nombres à virgule représentés par les mots binaires suivants:\n\n01000000 10000000\n11000000 00100000\n\nDonner les représentations binaires des nombres flottants suivants:\n\n−6,5=−1.625×22-6,5=-1.625\\times 2^{2}.\n0,017578125=1,125×2−60,017578125=1,125\\times 2^{-6}.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 3: Représentation des nombres à virgule",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/3-representation-des-nombres-a-virgule/exo/index.html#encodage-simple-précision-sur-32-bits",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/3-representation-des-nombres-a-virgule/exo/index.html#encodage-simple-précision-sur-32-bits",
    "title": "Exercices",
    "section": "3 Encodage simple précision sur 32 bits",
    "text": "3 Encodage simple précision sur 32 bits\nOn considère des nombres flottants encodés sur 32 bits avec:\n\n1 bit de signe,\n8 bits d’exposant\n23 bits de mantisse.\n\n\nCalculer le décalage de l’exposant. Quel est l’intervalle d’exposant accessible?\nTrouver les nombres à virgule représentés par les mots binaires suivants\n\n00111111 11000000 00000000 00000000\n10111110 00000000 00000000 00000000\n\nDonner les représentations binaires des nombres flottants suivants:\n\n−4,5=−1,125×22-4,5=-1,125 \\times 2^{2}.\n0,046875=1,5×2−50,046875=1,5 \\times 2^{-5}).",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 3: Représentation des nombres à virgule",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/3-representation-des-nombres-a-virgule/exo/index.html#exercice-python-n1",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/3-representation-des-nombres-a-virgule/exo/index.html#exercice-python-n1",
    "title": "Exercices",
    "section": "4 Exercice Python n°1",
    "text": "4 Exercice Python n°1\nOn considère le programme suivant:\nx = 1.0\ny = x + 1.0\nwhile y - x == 1.0:\n    x = x * 2.0\n    y = x + 1.0\nprint(\"Terminé, y=\", y)\n\nSi l’on calculait sur des nombres rationnels exacts, que se passerait-il lors de l’exécution de ce programme ?\nÉcrire ce programme et l’exécuter. Que constate-t-on ?\nModifier le programme de façon à déterminer au bout de combien d’exécutions du corps de la boucle il s’arrête, ainsi que la valeur de x à la fin de cette exécution.\nComment est représentée cette dernière valeur de x ? Et celle de y ?\n\nOn pourra utiliser un convertisseur en ligne comme: http://www.binaryconvert.com/convert_double.html\n\nProposer une explication de ce comportement.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 3: Représentation des nombres à virgule",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/3-representation-des-nombres-a-virgule/exo/index.html#exercice-python-n2",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/3-representation-des-nombres-a-virgule/exo/index.html#exercice-python-n2",
    "title": "Exercices",
    "section": "5 Exercice Python n°2",
    "text": "5 Exercice Python n°2\nOn considère le programme suivant:\na = 0.0\nfor _ in range(0, 10):\n    a = a + 0.1\n    print(a)\n\nSi l’on calculait sur des nombres rationnels exacts, que se passerait-il lors de l’exécution de ce programme ?\nÉcrire ce programme et l’exécuter. Que constate-t-on ?\nVérifier avec le convertisseur en ligne que la représentation binaire de 0,1 est 0_01111111011_1001100110011001100110011001100110011001100110011010.\nQuel nombre décimal cette représentation désigne-t-elle en réalité ?\nExpliquer le résultat obtenu.\n\n\n5.0.1 Source\nInformatique et sciences du numérique Spécialité ISN en terminale S - Avec des exercices corrigés et des idées de projets par Gilles Dowek",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 3: Représentation des nombres à virgule",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/index.html",
    "href": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/index.html",
    "title": "Partie 5: Interactions entre l’homme et la machine sur le Web",
    "section": "",
    "text": "Chapitre 1: Généralités sur le web\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 2: Ecriture d’une page HTML\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 3: Mise en forme avec CSS\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 4: Gestion des événements en javascript\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 5: Formulaire d’une page web\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 6: Interaction client–serveur\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAucun article correspondant",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 5: Interactions entre l’homme et la machine sur le Web"
    ]
  },
  {
    "objectID": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/1-generalites-sur-le-web/index.html",
    "href": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/1-generalites-sur-le-web/index.html",
    "title": "Chapitre 1: Généralités sur le web",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\nLors de la navigation sur le Web, les internautes interagissent avec leur machine par le biais des pages Web.\nLa compréhension du dialogue client-serveur déjà abordé en classe de seconde est consolidée, sur des exemples simples, en identifiant les requêtes du client, les calculs puis les réponses du serveur traitées par le client.\nLe Web n’est qu’un service parmi d’autres utilisant internet: mail, news, ftp…",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 5: Interactions entre l’homme et la machine sur le Web",
      "Chapitre 1: Généralités sur le web"
    ]
  },
  {
    "objectID": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/1-generalites-sur-le-web/index.html#la-naissance-du-web",
    "href": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/1-generalites-sur-le-web/index.html#la-naissance-du-web",
    "title": "Chapitre 1: Généralités sur le web",
    "section": "1 La naissance du Web",
    "text": "1 La naissance du Web\nLe web fut inventé en 1989 par Tim Berners-Lee et une équipe de recherches au CERN (Centre européen pour la Recherche Nucléaire).\nC’est un système hypertexte qui permet de lier des documents par des hyperliens.\n\n\nLien vers la page de Class Code.\nNote: les vidéos des cours d’OpenClassrooms comme toutes les ressources de Class´Code sont librement accessibles, sous licence Creative-Commons.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 5: Interactions entre l’homme et la machine sur le Web",
      "Chapitre 1: Généralités sur le web"
    ]
  },
  {
    "objectID": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/1-generalites-sur-le-web/index.html#larchitecture-du-web",
    "href": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/1-generalites-sur-le-web/index.html#larchitecture-du-web",
    "title": "Chapitre 1: Généralités sur le web",
    "section": "2 L’architecture du web",
    "text": "2 L’architecture du web\n\n\n\n\n\n\nLe web est possible grâce au réseau internet qui relie entre eux les ordinateurs.\nCertains ordinateurs hébergent des pages web: les serveurs, chaque page web a une adresse URL(Uniform Resource Locator).\nChez vous, votre ordinateur: le client peut demander qu’on lui transmette des pages web à partir de leur URL grâce au protocole HTTP(HyperText Transfer Protocol).\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nL'architecture client serveur est la plus répandue actuellement.©  LGPL via Wikimedia Commons",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 5: Interactions entre l’homme et la machine sur le Web",
      "Chapitre 1: Généralités sur le web"
    ]
  },
  {
    "objectID": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/1-generalites-sur-le-web/index.html#les-langages-du-web",
    "href": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/1-generalites-sur-le-web/index.html#les-langages-du-web",
    "title": "Chapitre 1: Généralités sur le web",
    "section": "3 Les langages du web",
    "text": "3 Les langages du web\n\n3.1 Côté client\nTous les navigateurs web(clients) utilisent trois langages:\n\nhtml(HyperText Markup Language): Il contient le texte de la page et décrit ce texte afin qu’il puisse être compris par des programmes informatiques(navigateur web ou robots des moteurs de recherche).\ncss(Cascading StyleSheet): permet de mettre en forme la page web en modifiant les couleurs, polices…\njs:(JavaScript): permet de rendre les pages web interactives, pour par exemple récupérer les données d’un utilisateur entrées dans un formulaire.\n\nLeurs syntaxes et leurs possibilités ne cessent d’augmenter au fur et à mesure que nos usages d’internet évoluent.\nLa fondation W3C a pour rôle de définir toutes les règles de ces langages(et d’autres) afin de maintenir le web accessible à tous et ouvert.\n\n\n3.2 Côté serveur\nLe navigateur du client peut envoyer des informations particulières au serveur par le biais du protocole HTTP.\nLe serveur peut adapter la page envoyée à ses paramètres grâce à un langage de programmation côté serveur. Principalement PHP(hypertext processor) aujourd’hui, mais tout langage peut-être utilise(Python, Ruby, NodeJS…)",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 5: Interactions entre l’homme et la machine sur le Web",
      "Chapitre 1: Généralités sur le web"
    ]
  },
  {
    "objectID": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/1-generalites-sur-le-web/index.html#rôle-du-navigateur",
    "href": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/1-generalites-sur-le-web/index.html#rôle-du-navigateur",
    "title": "Chapitre 1: Généralités sur le web",
    "section": "4 Rôle du navigateur",
    "text": "4 Rôle du navigateur\nLe navigateur permet de traduire toutes les informations contenues dans les fichiers html, css et js, en un rendu qui s’affiche à l’écran avec lequel l’utilisateur peut interagir. Pour afficher le code source d’une page, il suffit d’utiliser la combinaison CTRL+U.\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nRendu du html par le navigateur",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 5: Interactions entre l’homme et la machine sur le Web",
      "Chapitre 1: Généralités sur le web"
    ]
  },
  {
    "objectID": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/1-generalites-sur-le-web/index.html#le-développement-dune-page-web",
    "href": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/1-generalites-sur-le-web/index.html#le-développement-dune-page-web",
    "title": "Chapitre 1: Généralités sur le web",
    "section": "5 Le développement d’une page Web",
    "text": "5 Le développement d’une page Web\nAvant de publier le site sur internet, on commence par le développer localement sur son ordinateur avec deux logiciels:\n\n5.1 Un éditeur de code\nUn simple éditeur de texte qui permet d’écrire le code html, css et js.\nBien qu’un simple éditeur de texte suffise, on utilise plutôt des éditeurs de code qui sont dédiés à cet usage et qui permettent de colorer le code, l’indenter, le vérifier, l’auto compléter…\n\n\nNotepad ++\nAtom\nVisual Studio Code\nBrackets\n\n\n\n\n5.2 Un navigateur web\nUn navigateur qui permet de visualiser le rendu du code, ce navigateur doit être récent pour pouvoir développer ce site en utilisant les dernières mises à jour des langages.\n\n\nMozilla Firefox\nGoogle Chrome\nMicrosoft Edge\n\n\n\n\n\n\n\n\n\nEn plus: Comment appliquer des changements rapidement?\n\n\n\n\n\n\nQuand vous avez modifié le code source dans l’éditeur, et que vous voulez vérifier le nouveau rendu par le navigateur :\n\nEnregistrez le fichier dans l’éditeur: CTRL+S.\nRafraîchissez l’affichage du navigateur. CTRL+R.\n\nVous pouvez placer les deux écrans côte à côte si vous avez un écran large, ou passer d’une fenêtre à une autre avec le raccourci: ALT+TAB.\n\n\n\n\n\n\n\n\n\n\n\n\nEn plus: Comment déboguer votre page web ?\n\n\n\n\n\n\nTous les navigateurs disposent d’outils puissants de débogage, à commencer par le simple afficheur de code source(ALT+TAB), ou pour des outils plus puissants vous pouvez ouvrir les Outils de développement: CTRL+MAJ+I",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 5: Interactions entre l’homme et la machine sur le Web",
      "Chapitre 1: Généralités sur le web"
    ]
  },
  {
    "objectID": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/4-gestion-des-evenements-en-javascript/quiz/index.html",
    "href": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/4-gestion-des-evenements-en-javascript/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 5: Interactions entre l’homme et la machine sur le Web",
      "Chapitre 4: Gestion des événements en javascript",
      "Quiz"
    ]
  },
  {
    "objectID": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/4-gestion-des-evenements-en-javascript/exo/index.html",
    "href": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/4-gestion-des-evenements-en-javascript/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Si ce n’est pas déjà fait, connectez-vous sur le site d’OpenClassroom pour réaliser le quiz sur le javascript disponible à l’adresse suivante: https://openclassrooms.com/courses/apprenez-a-coder-avec-javascript/exercises/489",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 5: Interactions entre l’homme et la machine sur le Web",
      "Chapitre 4: Gestion des événements en javascript",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/4-gestion-des-evenements-en-javascript/exo/index.html#quiz",
    "href": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/4-gestion-des-evenements-en-javascript/exo/index.html#quiz",
    "title": "Exercices",
    "section": "",
    "text": "Si ce n’est pas déjà fait, connectez-vous sur le site d’OpenClassroom pour réaliser le quiz sur le javascript disponible à l’adresse suivante: https://openclassrooms.com/courses/apprenez-a-coder-avec-javascript/exercises/489",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 5: Interactions entre l’homme et la machine sur le Web",
      "Chapitre 4: Gestion des événements en javascript",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/4-gestion-des-evenements-en-javascript/exo/index.html#mini-projet-créez-un-mini-jeu-de-devinette",
    "href": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/4-gestion-des-evenements-en-javascript/exo/index.html#mini-projet-créez-un-mini-jeu-de-devinette",
    "title": "Exercices",
    "section": "2 Mini-projet : Créez un mini-jeu de devinette",
    "text": "2 Mini-projet : Créez un mini-jeu de devinette\nConsignes\n\nJe vous propose de mobiliser vos nouvelles connaissances pour réaliser un mini-jeu de devinette. L’objectif de cette activité est d’écrire un programme javascript qui fait deviner un nombre entre 1 et 100. Pour simplifier les choses, le programme initial qui vous est fourni permet de générer aléatoirement un nombre entre 1 et 100. Vous devez compléter ce programme pour que le joueur devine ce nombre en faisant des propositions successives. On considère que la saisie du joueur est toujours un nombre valide. À chaque tentative du joueur, le programme lui dit si le nombre qu’il a saisi est trop petit ou trop grand, jusqu’à ce que la solution soit devinée. Pour obtenir le maximum de points possibles, limitez le nombre de tentatives du joueur. Au-delà de 6 essais infructueux, la partie est perdue ! Testez bien votre programme dans tous les cas possibles. Pensez au nommage des variables et à l’indentation de votre programme : ils font partie des critères d’évaluation.\n\nOpenClassroom licence CC-BY-SA",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 5: Interactions entre l’homme et la machine sur le Web",
      "Chapitre 4: Gestion des événements en javascript",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/2-ecriture-dune-page-html/index.html",
    "href": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/2-ecriture-dune-page-html/index.html",
    "title": "Chapitre 2: Ecriture d’une page HTML",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nModalités de l’interaction entre l’homme et la machine\nÉvénements\nIdentifier les différents composants graphiques permettant d’interagir avec une application Web\nIdentifier les événements que les fonctions associées aux différents composants graphiques sont capables de traiter\nIl s’agit d’examiner le code HTML d’une page comprenant des composants graphiques et de distinguer ce qui relève de la description des composants graphiques en HTML de leur comportement (réaction aux événements) programmé par exemple en JavaScript.\nLe html est un langage qui utilise des balises entre chevrons(&lt;balise&gt;) pour structurer les pages web et leur donner un sens.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 5: Interactions entre l’homme et la machine sur le Web",
      "Chapitre 2: Ecriture d’une page HTML"
    ]
  },
  {
    "objectID": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/2-ecriture-dune-page-html/index.html#structure-dune-page-html",
    "href": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/2-ecriture-dune-page-html/index.html#structure-dune-page-html",
    "title": "Chapitre 2: Ecriture d’une page HTML",
    "section": "1 Structure d’une page html",
    "text": "1 Structure d’une page html\n\n1.1 &lt;!doctype html&gt;, &lt;head&gt; et &lt;body&gt;\nUne page html commence toujours par indiquer le doctype. Depuis html5 c’est très simple:\n&lt;!doctype html&gt;\nC’est quand même mieux que son ancêtre en html4:\n&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;\nLe document est séparé en deux grandes parties:\n\nle head: qui contient des informations utiles au navigateur et aux robots qui consultent votre page.\nle body: qui contient les informations qui seront effectivement affichées à l’écran.\n\n\n\n1.2 Structure modèle\nVoici une structure qui peut vous servir quand vous commencez une nouvelle page web.\n&lt;!doctype html&gt;\n&lt;html lang=\"fr\"&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf-8\" /&gt;\n    &lt;title&gt;Un document minuscule&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;h1&gt;Titre principal de mon document&lt;/h1&gt;\n    &lt;!-- Ceci est un commentaire --&gt;\n    &lt;p&gt;\n      Regarde maman, je suis en train de coder en\n      &lt;abbr title=\"Hyper Text Markup Language\" lang=\"en\"&gt;HTML&lt;/abbr&gt; !\n    &lt;/p&gt;\n  &lt;/body&gt;\n&lt;/html&gt;",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 5: Interactions entre l’homme et la machine sur le Web",
      "Chapitre 2: Ecriture d’une page HTML"
    ]
  },
  {
    "objectID": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/2-ecriture-dune-page-html/index.html#les-balises",
    "href": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/2-ecriture-dune-page-html/index.html#les-balises",
    "title": "Chapitre 2: Ecriture d’une page HTML",
    "section": "2 Les balises",
    "text": "2 Les balises\nLe langage html utilise des balises pour indiquer le sens sémantique des éléments d’une page. Ces balises permettent de construire une hiérarchie au sein du document appelée DOM(Document Object Model).\nToutes les balises sont référencées sur le site MDN, en voici quelques-unes.\n\n2.1 Exemples de balises\n\n\n\nbalise\nrôle\nexemple\n\n\n\n\n&lt;h1&gt;, &lt;h2&gt;, …&lt;h6&gt;\nTitres et sous-titres\n&lt;h1&gt;Titre principal de mon document&lt;/h1&gt;\n\n\n&lt;p&gt;\nParagraphe\n&lt;p&gt;Comme je descendais des Fleuves impassibles.&lt;/p&gt;\n\n\n&lt;strong&gt;\ntexte important(en gras par défaut)\n&lt;p&gt;Comme je &lt;strong&gt;descendais&lt;/strong&gt; des Fleuves impassibles.&lt;/p&gt;\n\n\n&lt;em&gt;\ntexte en emphase(en italique par défaut)\n&lt;p&gt;Comme je &lt;em&gt;descendais&lt;/em&gt; des Fleuves impassibles.&lt;/p&gt;\n\n\n&lt;a href=\"dest\"&gt;\nLien vers la page d’URL dest\n&lt;a href=\"https://www.wikipedia.fr/\"&gt;Se rendre sur Wikipedia&lt;/a&gt;\n\n\n&lt;img src=\"image.png\"/&gt;\nAffichage de l’image d’URI image.png\n&lt;img src=\"photo.jpg\" alt=\"Photo de mon chat\"/&gt;\n\n\n&lt;ul&gt;\n&lt;li&gt;\nliste à puce\nélément d’une liste\n&lt;ul&gt;\n  &lt;li&gt;1er élément de la liste&lt;/li&gt;\n  &lt;li&gt;2e élément de la liste&lt;/li&gt;\n  &lt;li&gt;3e ...&lt;/li&gt;\n&lt;/ul&gt;\n\n\n\n\n\n2.2 Règles d’écriture\nLorsqu’une &lt;balise&gt; est ouverte, elle doit être fermée &lt;/balise&gt;.\n\nSeul le texte écrit entre les balises ouvrante et fermante s’affiche à l’écran.\n\n\nLe code &lt;p&gt;Ceci est un paragraphe.&lt;/p&gt;html affichera:\n\nCeci est un paragraphe.\n\n\n\nLes balises ouvrantes et fermantes doivent toujours être correctement imbriquées, c’est-à-dire que les balises fermantes doivent être écrites dans l’ordre inverse des balises d’ouverture.MDN\n\n\nVoici un exemple de code valide :\n&lt;em&gt;Ceci est &lt;strong&gt;très&lt;/strong&gt; important&lt;/em&gt;.\nVoici un exemple de code non-valide :\n&lt;em&gt;Ceci est &lt;strong&gt;très&lt;/em&gt; important&lt;/strong&gt;.\n\n\n\n2.3 Attributs d’une balise\nLes attributs d’un élément, permettent de modifier son comportement ou de fournir des métadonnées.\n\n\nL’attribut lang.\n&lt;p&gt;This paragraph is English, but the language is not specifically defined.&lt;/p&gt;\n\n&lt;p lang=\"en-GB\"&gt;This paragraph is defined as British English.&lt;/p&gt;\n\n&lt;p lang=\"fr\"&gt;Ce paragraphe est défini en français.&lt;/p&gt;\nLes attributs class et id sont parmi les plus utilisés, on les verra dans les prochains chapitres car ils sont utiles à la mise en forme csset les interactions avec javascript.\n&lt;a id=\"special\" class=\"important\"&gt;Ce lien a l'air important.&lt;/p&gt;\n\n\n\n\n2.4 Balises orphelines\nCertaines balises ne contiennent pas de texte, elles n’ont donc pas de balises fermantes.\nOn les appelle des balises orphelines. Elles ont une syntaxe particulière: &lt;balise/&gt;.\nPar exemple la balise d’image &lt;img /&gt;.\n&lt;img src=\"logo.png\" alt=\"Logo du site\" /&gt;\n:::\n\nLa balise &lt;img /&gt; possède deux attributs obligatoires:\n\nsrc pour préciser l’adresse de l’image à afficher\nalt pour expliquer le contenu de l’image si l’image ne s’affiche pas ou pour décrire l’image aux personnes non-voyantes.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 5: Interactions entre l’homme et la machine sur le Web",
      "Chapitre 2: Ecriture d’une page HTML"
    ]
  },
  {
    "objectID": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/2-ecriture-dune-page-html/index.html#quelques-petits-plus",
    "href": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/2-ecriture-dune-page-html/index.html#quelques-petits-plus",
    "title": "Chapitre 2: Ecriture d’une page HTML",
    "section": "3 Quelques petits plus",
    "text": "3 Quelques petits plus\n\nLes commentaires sont écrits &lt;!-- Ceci est un commentaire --&gt;\nOn écrit en général les balises en minuscules.\nL’indentation n’est pas obligatoire, mais elle rend le fichier plus lisible.\nLes balises &lt;div&gt;, &lt;header&gt;, &lt;article&gt;, &lt;footer&gt; ont été créé dans la version 5 de html afin de créer des blocs spécifiques dans la page.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 5: Interactions entre l’homme et la machine sur le Web",
      "Chapitre 2: Ecriture d’une page HTML"
    ]
  },
  {
    "objectID": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/6-interaction-client-serveur/quiz/index.html",
    "href": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/6-interaction-client-serveur/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 5: Interactions entre l’homme et la machine sur le Web",
      "Chapitre 6: Interaction client–serveur",
      "Quiz"
    ]
  },
  {
    "objectID": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/6-interaction-client-serveur/exo/index.html",
    "href": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/6-interaction-client-serveur/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Vous allez créer une application web, avec un serveur écrit en python, telle que décrite dans le cours.\nLe code est disponible dans ce dépôt framagit au format zip. Téléchargez-le, puis dézippez-le.\nOuvrir le dossier dans Visual Studio Code.\nLancer l’application en tapant dans le terminal de vscode: python flask-csv.py\nVous pourrez alors ouvrir votre navigateur pour observer son fonctionnement à l’adresse locale : http://localhost:5000\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\ncopie d’écran de développement\n\n\nL’application présente trois pages accessibles au adresse:\n\n/ page racine: affiche la liste des élèves\n/ajout ajout d’élève avec un formulaire GET.\n/ajout_post ajout d’élève avec un formulaire POST.\n\nVous pourrez parcourir le code, et le modifier:\n\ncôté serveur : fichier flask-csv.py (langage serveur : python)\nCe fichier contient le code permettant de traiter les trois pages côté serveur.\nPar exemple la page racine:\n@app.route('/')\ndef index_page():\n    \"Page d'accueil qui liste les élèves.\"\n\n    return render_template(\"index.html\", data=g.data)\nLa première ligne indique le chemin(route) vers la page, ici / comme on est à la racine.\nla dernière indique que l’on renvoie la page index.html dans laquelle on a fait passer les données data du fichier csv.\ncôté client :\nToutes les pages html se trouvent dans le dossier pages. fichier pages/index.html (langage client html)\n\nTravail proposé\n\nTraiter les données avec le formulaire dans la fonction post_form_page du fichier flask_csv.py.\nAjouter coté client des entrées au formulaire pour stocker d’autres informations, par exemple l’âge. Modifier le code côté serveur pour stocker correctement ces nouvelles entrées dans le fichier csv.\nAjouter une validation du champ âge côté client pour vérifier que l’age est bien supérieur à 14 ans.\nTravailler à la fois du côté du client et du serveur pour proposer à l’utilisateur de supprimer une entrée.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 5: Interactions entre l’homme et la machine sur le Web",
      "Chapitre 6: Interaction client–serveur",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/6-interaction-client-serveur/exo/index.html#tp-sur-lapplication-web-serveur-en-python",
    "href": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/6-interaction-client-serveur/exo/index.html#tp-sur-lapplication-web-serveur-en-python",
    "title": "Exercices",
    "section": "",
    "text": "Vous allez créer une application web, avec un serveur écrit en python, telle que décrite dans le cours.\nLe code est disponible dans ce dépôt framagit au format zip. Téléchargez-le, puis dézippez-le.\nOuvrir le dossier dans Visual Studio Code.\nLancer l’application en tapant dans le terminal de vscode: python flask-csv.py\nVous pourrez alors ouvrir votre navigateur pour observer son fonctionnement à l’adresse locale : http://localhost:5000\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\ncopie d’écran de développement\n\n\nL’application présente trois pages accessibles au adresse:\n\n/ page racine: affiche la liste des élèves\n/ajout ajout d’élève avec un formulaire GET.\n/ajout_post ajout d’élève avec un formulaire POST.\n\nVous pourrez parcourir le code, et le modifier:\n\ncôté serveur : fichier flask-csv.py (langage serveur : python)\nCe fichier contient le code permettant de traiter les trois pages côté serveur.\nPar exemple la page racine:\n@app.route('/')\ndef index_page():\n    \"Page d'accueil qui liste les élèves.\"\n\n    return render_template(\"index.html\", data=g.data)\nLa première ligne indique le chemin(route) vers la page, ici / comme on est à la racine.\nla dernière indique que l’on renvoie la page index.html dans laquelle on a fait passer les données data du fichier csv.\ncôté client :\nToutes les pages html se trouvent dans le dossier pages. fichier pages/index.html (langage client html)\n\nTravail proposé\n\nTraiter les données avec le formulaire dans la fonction post_form_page du fichier flask_csv.py.\nAjouter coté client des entrées au formulaire pour stocker d’autres informations, par exemple l’âge. Modifier le code côté serveur pour stocker correctement ces nouvelles entrées dans le fichier csv.\nAjouter une validation du champ âge côté client pour vérifier que l’age est bien supérieur à 14 ans.\nTravailler à la fois du côté du client et du serveur pour proposer à l’utilisateur de supprimer une entrée.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 5: Interactions entre l’homme et la machine sur le Web",
      "Chapitre 6: Interaction client–serveur",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/3-mise-en-forme-avec-css/index.html",
    "href": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/3-mise-en-forme-avec-css/index.html",
    "title": "Chapitre 3: Mise en forme avec CSS",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nModalités de l’interaction entre l’homme et la machine\nÉvénements\nIdentifier les différents composants graphiques permettant d’interagir avec une application Web\nIdentifier les événements que les fonctions associées aux différents composants graphiques sont capables de traiter\nIl s’agit d’examiner le code HTML d’une page comprenant des composants graphiques et de distinguer ce qui relève de la description des composants graphiques en HTML de leur comportement (réaction aux événements) programmé par exemple en JavaScript.\nNous allons d’abord voir comment lier une feuille de styles à notre page html.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 5: Interactions entre l’homme et la machine sur le Web",
      "Chapitre 3: Mise en forme avec CSS"
    ]
  },
  {
    "objectID": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/3-mise-en-forme-avec-css/index.html#intégration-de-code-css-dans-une-page-html",
    "href": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/3-mise-en-forme-avec-css/index.html#intégration-de-code-css-dans-une-page-html",
    "title": "Chapitre 3: Mise en forme avec CSS",
    "section": "1 Intégration de code css dans une page html",
    "text": "1 Intégration de code css dans une page html\nIl existe diverses façons d’appliquer du code css à une page, la méthode recommandée est d’écrire le code css dans un fichier avec l’extension .css, par exemple style.css et le lier dans l’en-tête du document(le &lt;head&gt;).\n&lt;head&gt;\n    &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\"&gt;\n&lt;/head&gt;\nC’est la méthode préférée lorsque l’on a un ensemble de pages qui contiennent des styles identiques, cela permet d’alléger l’écriture du code et les requêtes vers le serveur de documents.\n\n\n\n\n\n\n\nEn plus: autres méthodes\n\n\n\n\n\n\n\nUtilisation d’une feuille de style interne\n\nOn intègre le code css au sein de balises &lt;style&gt; dans l’entête du document(le &lt;head&gt;).\n&lt;head&gt;\n    &lt;style&gt;\n        body {\n              background-color: linen;\n             }\n        h1 {\n            color: maroon;\n            margin-left: 40px;\n            }\n    &lt;/style&gt;\n&lt;/head&gt;\nMéthode pratique lorsque l’on a des documents html d’une seule page ou avec des styles spécifiques.\n\nInsertion directe dans les balises html\n\nOn utilise alors l’attribut style au sein de la balise ouvrante de l’élément à styler.\n&lt;p style=\"color: red; font-weight: bold;\"&gt;\n    Maintenant mon texte est écrit en rouge et en gras.\n&lt;/p&gt;\nRENDU\n\nMaintenant mon texte est écrit en rouge et en gras.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 5: Interactions entre l’homme et la machine sur le Web",
      "Chapitre 3: Mise en forme avec CSS"
    ]
  },
  {
    "objectID": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/3-mise-en-forme-avec-css/index.html#syntaxe",
    "href": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/3-mise-en-forme-avec-css/index.html#syntaxe",
    "title": "Chapitre 3: Mise en forme avec CSS",
    "section": "2 Syntaxe",
    "text": "2 Syntaxe\nUne règle css est constituée d’un sélecteur suivi d’un bloc de déclaration entre accolades. Chaque déclaration se termine par un point-virgule.\nselecteur de balises {\n    attribut-css: valeur;\n    attribut-css2: valeur2;\n    ...\n}\nRemarque: Les points-virgules sont obligatoires, mais pas l’indentation. Cette dernière est cependant conseillée pour rendre le code plus lisible.\n\nUn code css qui permet d’écrire tous les éléments &lt;strong&gt; en rouge et soulignés.\nstrong {\n  color: red;\n  text-decoration: underline;\n}",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 5: Interactions entre l’homme et la machine sur le Web",
      "Chapitre 3: Mise en forme avec CSS"
    ]
  },
  {
    "objectID": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/3-mise-en-forme-avec-css/index.html#les-sélecteurs",
    "href": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/3-mise-en-forme-avec-css/index.html#les-sélecteurs",
    "title": "Chapitre 3: Mise en forme avec CSS",
    "section": "3 Les sélecteurs",
    "text": "3 Les sélecteurs\n\n\n\nsélecteur\nÉléments visés\n\n\n\n\np {...}\nTous les éléments avec la balise &lt;b&gt;\n\n\np, li{...}\nTous les éléments &lt;p&gt; et les éléments &lt;p&gt;\n\n\ndiv p{...}\nTous les éléments &lt;p&gt; contenus dans(descendants d’)une balise &lt;div&gt;\n\n\n.centre {...}\nTous les éléments ayant un attribut class=\"centre\"\n\n\n#formulaire {...}\nL’élément ayant un attribut id=\"formulaire\"\n\n\np.centre {...}\nTous les éléments &lt;p&gt; ayant un attribut class=\"centre\"",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 5: Interactions entre l’homme et la machine sur le Web",
      "Chapitre 3: Mise en forme avec CSS"
    ]
  },
  {
    "objectID": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/3-mise-en-forme-avec-css/index.html#les-propriétés",
    "href": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/3-mise-en-forme-avec-css/index.html#les-propriétés",
    "title": "Chapitre 3: Mise en forme avec CSS",
    "section": "4 Les propriétés",
    "text": "4 Les propriétés\n\n\n\npropriété\nMise en forme\n\n\n\n\ncolor: ...;\nCouleur de l’élément.\n\n\nbackground-color: ...;\nCouleur de l’arrière-plan de l’élément.\n\n\ntext-align: ...;\nAlignement du texte(gauche, centré, justifié…).\n\n\ntext-decoration: ...;\nDécoration du texte(souligné, barré…)\n\n\nfont-size: ...;\nTaille de la police\n\n\nfont-weight: ...;\nGraisse de la police(plus ou moins gras)\n\n\nmargin: ...;\nEspacement par rapport aux voisins\n\n\npadding: ...;\nEspacement par rapport aux bords de sa boite englobante\n\n\n\nL’ensemble des propriétés en css est listé sur l’excellent site MDN.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 5: Interactions entre l’homme et la machine sur le Web",
      "Chapitre 3: Mise en forme avec CSS"
    ]
  },
  {
    "objectID": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/3-mise-en-forme-avec-css/index.html#positionnement-en-css",
    "href": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/3-mise-en-forme-avec-css/index.html#positionnement-en-css",
    "title": "Chapitre 3: Mise en forme avec CSS",
    "section": "5 Positionnement en css",
    "text": "5 Positionnement en css\n\n5.1 display: inline; et display:block;\nIl existe deux propriétés principales de positionnement en css:\n\ndisplay: block: les éléments se placent les uns au-dessus des autres et occupent toute la largeur disponible. C’est la propriété appliquée par défaut sur les balises de titres &lt;h1&gt; à &lt;h6&gt; ou encore aux paragraphes &lt;p&gt; par exemple.\n\n\n&lt;h1 style=\"background-color:yellow;\"&gt;Titre de niveau 1&lt;/h1&gt;\n&lt;p style=\"background-color:lime;\"&gt; Un paragraphe avec un fond vert clair pour voir l'espace qu'il occupe à l'écran.&lt;/p&gt;\nRENDU\n\nTitre de niveau 1\n\n\nUn paragraphe avec un fond vert clair pour voir l’espace qu’il occupe à l’écran.\n\n\n\ndisplay: inline: les éléments se placent les uns à côté des autres, et occupent exactement la place dont ils ont besoin. C’est la propriété appliquée par défaut sur les balises &lt;strong&gt; ou &lt;span&gt;.\n\n\n&lt;p style=\"background-color:lime;\"&gt; Un paragraphe avec un fond vert clair et des éléments inline &lt;strong&gt;strong&lt;/strong&gt; et  &lt;span style=\"background-color=ligthblue;\"&gt;span&lt;/span&gt; pour voir le positionnement à l'écran.&lt;/p&gt;\nRENDU\n\nUn paragraphe avec un fond vert clair et des éléments inline strong et span pour voir leurs positionnement à l’écran.\n\n\n\n\n5.2 Des positionnements plus évolués\nLorsqu’on laisse les éléments se placer naturellement à l’écran (de haut en bas, ou de droite à gauche), on dit que les éléments sont positionnés dans le flux. Si l’on souhaite les positionner ailleurs, c’est-à-dire les sortir du flux, on utilise principalement les propriétés css:\n\ndisplay: avec notamment les valeurs flex pour le positionnement 1D et grid pour le positionnement 2D.\nposition: avec les valeurs relative, absolute ou fixed.\nfloat avec les valeurs left ou right.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 5: Interactions entre l’homme et la machine sur le Web",
      "Chapitre 3: Mise en forme avec CSS"
    ]
  },
  {
    "objectID": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/3-mise-en-forme-avec-css/index.html#en-plus",
    "href": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/3-mise-en-forme-avec-css/index.html#en-plus",
    "title": "Chapitre 3: Mise en forme avec CSS",
    "section": "6 En plus",
    "text": "6 En plus\n\nLes commentaires utilisent la syntaxe suivante: /* Un commentaire */\nLes attributs id et les class sont souvent ajoutés au html pour pouvoir les sélectionner aisément en css. Attention cependant, plusieurs éléments peuvent avoir la même classe, mais un id est unique.\nInspecteur de styles du navigateur: pour inspecter un élément il suffit de le sélectionner et de faire un clic droit de la souris puis de sélectionner Inspecter l'élément.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 5: Interactions entre l’homme et la machine sur le Web",
      "Chapitre 3: Mise en forme avec CSS"
    ]
  },
  {
    "objectID": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/5-formulaire-dune-page-web/quiz/index.html",
    "href": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/5-formulaire-dune-page-web/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 5: Interactions entre l’homme et la machine sur le Web",
      "Chapitre 5: Formulaire d’une page web",
      "Quiz"
    ]
  },
  {
    "objectID": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/5-formulaire-dune-page-web/exo/index.html",
    "href": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/5-formulaire-dune-page-web/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Recopier le code suivant dans un fichier que vous nommerez index.html.\n&lt;!doctype html&gt;\n&lt;html lang=\"fr\"&gt;\n\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\" /&gt;\n  &lt;title&gt;Les formulaires en HTML&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;h1&gt;Les formulaires en html&lt;/h1&gt;\n  &lt;!-- Le formulaire ci-dessous --&gt;\n  &lt;form method=\"GET\"&gt;\n    &lt;input type=\"text\" name=\"nom\" placeholder=\"Entrer votre nom\"&gt;\n    &lt;button type=\"submit\"&gt;Envoyer les données&lt;/button&gt;\n  &lt;/form&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\nEnregistrer ce fichier puis l’ouvrir dans le navigateur grâce en lançant le serveur fourni par votre professeur: python http_server.py.\n\nEntrer une valeur dans le formulaire et appuyer sur le bouton pour le soumettre et observer la barre d’adresse du navigateur.\nSupprimer les paramètres présents dans l’URL et modifier la méthode du formulaire en POST\" eu lieu de GET et observer ou sont placés les valeurs du formulaire dans l’onglet réseau de la console de développement.\nPoursuivre votre apprentissage actif pour créer un formulaire complet en utilisant ces pages de MDN:\n\nComment structurer un formulaire HTML? pour ajouter des balises &lt;fieldset&gt;, &lt;legend&gt; et &lt;label&gt;.\nLes contrôles de formulaire natifs pour ajouter des entrées:\n\n&lt;input type=\"button\"&gt;,\n&lt;input type=\"checkbox\"&gt;,\n&lt;input type=\"file\"&gt;,\n&lt;input type=\"hidden\"&gt;,\n&lt;input type=\"image\"&gt;,\n&lt;input type=\"password\"&gt;,\n&lt;input type=\"radio\"&gt;,\n&lt;input type=\"reset\"&gt;,\n&lt;input type=\"submit\"&gt;,\n&lt;input type=\"text\"&gt;, ainsi que les attributs readonly, disabled, placeholder, size, maxlength, spellcheck.\n\nLes types de champs de formulaire HTML5\n\nChamp pour une adresse électronique\nChamp de recherche\nChamp pour un numéro de téléphone\nChamp pour une URL\nChamp numérique\nCurseurs\nSélecteurs de date et d’heure\nContrôle de sélection de couleur\n\nLes autres contrôles de formulaire\n\nChamp texte sur plusieurs lignes &lt;textarea&gt;\nContrôles de listes déroulantes &lt;select&gt;.\n\nMise en forme des formulaires HTML\nNe traiter que la mise en forme des éléments dits «bons»:\n\n&lt;form&gt;\n&lt;fieldset&gt;\n&lt;label&gt;\n&lt;output&gt;\n&lt;input&gt;\n&lt;button&gt;\n\nPseudo-classes relatives à l’interface utilisateur\n\nMettre en forme les champs selon qu’ils sont obligatoires ou non: required optionnal.\nMettre en forme les contrôles selon la validité des données: valid invalid.\nMettre en forme les champs actifs ou désactivés, en lecture seule ou non: disabled.\nÉtat des cases à cocher et boutons radio : coché, par défaut, indéterminé: checked.\n\nEnvoyer et extraire les données des formulaires\nCette partie sera traitée dans le prochain chapitre.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 5: Interactions entre l’homme et la machine sur le Web",
      "Chapitre 5: Formulaire d’une page web",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/5-formulaire-dune-page-web/exo/index.html#formulaire-en-html",
    "href": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/5-formulaire-dune-page-web/exo/index.html#formulaire-en-html",
    "title": "Exercices",
    "section": "",
    "text": "Recopier le code suivant dans un fichier que vous nommerez index.html.\n&lt;!doctype html&gt;\n&lt;html lang=\"fr\"&gt;\n\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\" /&gt;\n  &lt;title&gt;Les formulaires en HTML&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;h1&gt;Les formulaires en html&lt;/h1&gt;\n  &lt;!-- Le formulaire ci-dessous --&gt;\n  &lt;form method=\"GET\"&gt;\n    &lt;input type=\"text\" name=\"nom\" placeholder=\"Entrer votre nom\"&gt;\n    &lt;button type=\"submit\"&gt;Envoyer les données&lt;/button&gt;\n  &lt;/form&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\nEnregistrer ce fichier puis l’ouvrir dans le navigateur grâce en lançant le serveur fourni par votre professeur: python http_server.py.\n\nEntrer une valeur dans le formulaire et appuyer sur le bouton pour le soumettre et observer la barre d’adresse du navigateur.\nSupprimer les paramètres présents dans l’URL et modifier la méthode du formulaire en POST\" eu lieu de GET et observer ou sont placés les valeurs du formulaire dans l’onglet réseau de la console de développement.\nPoursuivre votre apprentissage actif pour créer un formulaire complet en utilisant ces pages de MDN:\n\nComment structurer un formulaire HTML? pour ajouter des balises &lt;fieldset&gt;, &lt;legend&gt; et &lt;label&gt;.\nLes contrôles de formulaire natifs pour ajouter des entrées:\n\n&lt;input type=\"button\"&gt;,\n&lt;input type=\"checkbox\"&gt;,\n&lt;input type=\"file\"&gt;,\n&lt;input type=\"hidden\"&gt;,\n&lt;input type=\"image\"&gt;,\n&lt;input type=\"password\"&gt;,\n&lt;input type=\"radio\"&gt;,\n&lt;input type=\"reset\"&gt;,\n&lt;input type=\"submit\"&gt;,\n&lt;input type=\"text\"&gt;, ainsi que les attributs readonly, disabled, placeholder, size, maxlength, spellcheck.\n\nLes types de champs de formulaire HTML5\n\nChamp pour une adresse électronique\nChamp de recherche\nChamp pour un numéro de téléphone\nChamp pour une URL\nChamp numérique\nCurseurs\nSélecteurs de date et d’heure\nContrôle de sélection de couleur\n\nLes autres contrôles de formulaire\n\nChamp texte sur plusieurs lignes &lt;textarea&gt;\nContrôles de listes déroulantes &lt;select&gt;.\n\nMise en forme des formulaires HTML\nNe traiter que la mise en forme des éléments dits «bons»:\n\n&lt;form&gt;\n&lt;fieldset&gt;\n&lt;label&gt;\n&lt;output&gt;\n&lt;input&gt;\n&lt;button&gt;\n\nPseudo-classes relatives à l’interface utilisateur\n\nMettre en forme les champs selon qu’ils sont obligatoires ou non: required optionnal.\nMettre en forme les contrôles selon la validité des données: valid invalid.\nMettre en forme les champs actifs ou désactivés, en lecture seule ou non: disabled.\nÉtat des cases à cocher et boutons radio : coché, par défaut, indéterminé: checked.\n\nEnvoyer et extraire les données des formulaires\nCette partie sera traitée dans le prochain chapitre.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 5: Interactions entre l’homme et la machine sur le Web",
      "Chapitre 5: Formulaire d’une page web",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/index.html",
    "href": "tg/nsi/index.html",
    "title": "NSI",
    "section": "",
    "text": "Partie 1: Structures de données\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPartie 2: Bases de données\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPartie 3: Architectures matérielles, systèmes d’exploitation et réseaux\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPartie 4: Langages et programmation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPartie 5: Algorithmique\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAucun article correspondant",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI"
    ]
  },
  {
    "objectID": "tg/nsi/5-algorithmique/5-recherche-textuelle/index.html",
    "href": "tg/nsi/5-algorithmique/5-recherche-textuelle/index.html",
    "title": "Chapitre 5: Recherche textuelle*",
    "section": "",
    "text": "Ce chapitre ne pourra pas faire l’objet d’une évaluation lors de l’épreuve terminale écrite et pratique de l’enseignement de spécialité. BO MENE2121274N",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 5: Algorithmique",
      "Chapitre 5: Recherche textuelle*"
    ]
  },
  {
    "objectID": "tg/nsi/5-algorithmique/5-recherche-textuelle/index.html#algorithme-naïf",
    "href": "tg/nsi/5-algorithmique/5-recherche-textuelle/index.html#algorithme-naïf",
    "title": "Chapitre 5: Recherche textuelle*",
    "section": "1 Algorithme naïf",
    "text": "1 Algorithme naïf\nNous allons appliquer une méthode itérative brute pour rechercher une sous-chaine dans une chaine de caractères.\nNous allons avancer dans le texte caractère par caractère, puis si le caractère considéré correspond au premier caractère du mot, nous comparerons les caractères suivants à ceux du mot. si la recherche s’avère fructueuse on renvoie True.\ndef recherche_mot(texte, mot):\n    \"\"\"Recherche un mot dans un texte\n\n    Arguments\n    ---------\n    texte: str\n        le texte dans lequel on effectue la recherche\n    mot: str\n        le mot recherché\n\n    Returns\n    -------\n    bool\n        renvoie True si le mot est trouvé\n    \"\"\"\n    N = len(texte)\n    n = len(mot)\n    for i in range(N-n+1):\n        trouvé = True\n        while recherche and k &lt; n:\n            if mot[k] != texte[i+k]\n                recherche = False\n            k += 1\n        if recherche:\n            return True\n    return False\nL’exécution est relativement lente, la fonction doit tester N−nN-n positions dans texte et pour chacune effectuer jusqu’à N−nN-n comparaisons, soit jusqu’à (N−n)×n(N-n)\\times n.\nLa complexité de cet algorithme est dans le pire des cas O((N−n)×n)O\\left( (N-n) \\times n \\right ), c’est une complexité quadratique O(N2)O\\left( N^2 \\right ) car souvent N&gt;&gt;nN &gt;&gt; n.\nNous allons voir qu’il est beaucoup plus efficace de faire la recherche à l’envers à partir de la fin du mot.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 5: Algorithmique",
      "Chapitre 5: Recherche textuelle*"
    ]
  },
  {
    "objectID": "tg/nsi/5-algorithmique/5-recherche-textuelle/index.html#lalgorithme-de-boyer-moore-version-simplifiée-de-horspool",
    "href": "tg/nsi/5-algorithmique/5-recherche-textuelle/index.html#lalgorithme-de-boyer-moore-version-simplifiée-de-horspool",
    "title": "Chapitre 5: Recherche textuelle*",
    "section": "2 L’algorithme de Boyer-Moore : version simplifiée de Horspool",
    "text": "2 L’algorithme de Boyer-Moore : version simplifiée de Horspool\nNous allons étudier une version simplifiée du meilleur algorithme connu : l’algorithme de Boyer-Moore qui a été proposé par Nigel Horspool.\nCet algorithme repose sur deux idées :\n\nOn compare le mot de droite à gauche à partir de sa dernière lettre.\nOn n’avance pas dans le texte caractère par caractère, mais on utilise un décalage dépendant de la dernière comparaison effectuée.\n\n\n2.1 Déroulement de l’algorithme\nNous considérons ici la recherche du motif mot = 'dab' dans le texte texte = 'abracadabra'.\nOn commence la recherche à l’index 2 :\nabracadabra\ndab\nIl n’y a pas de correspondance à la fin du mot : 'r' != 'b', donc on avance, mais de combien de caractères avance-t-on. Pour le décider, on utilise le fait que le caractère 'r' n’apparait pas dans le mot cherché, donc on peut avancer de n = len(mot) = 3 caractères sans crainte de rater le mot.\nOn recherche donc à l’indice 2 + 3 = 5 :\nabracadabra\n   dab\nIl n’y a pas de correspondance à la fin du mot : 'a' != 'b', donc on avance, cependant, cette fois, comme le caractère 'a' apparait pas dans le mot cherché en avant-dernière position, on ne peut avancer que de une case pour faire une comparaison en alignant les 'a'.\nOn recherche donc à l’indice 5 + 1 = 6 :\nabracadabra\n    dab\nIl n’y a pas de correspondance à la fin du mot : 'd' != 'b', donc on avance, cependant, cette fois, comme le caractère 'd' apparait dans le mot cherché en avant-avant-dernière position(première position, mais on doit lire à l’envers !), on avance de deux cases pour faire une comparaison en alignant les 'd'.\nOn recherche donc à l’indice 6 + 2 = 8 :\nabracadabra\n      dab\nMaintenant lorsqu’on effectue les comparaisons à l’envers : les 'b', puis les 'a', puis les 'd' correspondent. On a trouvé le mot on renvoie VRAI.\n\n\n2.2 Implémentation en Python\nPour implémenter efficacement cet algorithme, on va passer par un pré-traitement du nom pour facilement accéder au décalage à effectuer. On utilise un dictionnaire pour cela.\ndef pre_traitement(mot):\n    \"\"\"Renvoie un dictionnaire avec pour clé la lettre et pour valeur le décalage\n\n    Arguments\n    ---------\n    mot: str\n    \n    Returns\n    -------\n    dict\n    \"\"\"\n    n = len(mot)\n    décalages = {}\n    # Il n'est pas nécéssaire d'inclure la dernière lettre\n    for i, letter in enumerate(mot[:-1]):\n        décalages[letter] = n - i -1\n    return décalages\n\n# tests\nassert pre_traitement(\"dab\") == {'d': 2, 'a': 1}\nassert pre_traitement(\"maman\") == {'m': 2, 'a': 1}\nMaintenant la fonction de recherche :\ndef recherche_mot_boyer(texte, mot):\n    \"\"\"Recherche un mot dans un texte avec l'algo de boyer-moore\n\n    Arguments\n    ---------\n    texte: str\n        le texte dans lequel on effectue la recherche\n    mot: str\n        le mot recherché\n\n    Returns\n    -------\n    bool\n        renvoie True si le mot est trouvé\n    \"\"\"\n    N = len(texte)\n    n = len(mot)\n    \n    # création de notre dictionnaire de décalages\n    décalages = pre_traitement(mot)\n    \n    # on commence à la fin du mot\n    i = n - 1\n    while i &lt; N:\n        lettre = texte[i]\n        if lettre == mot[-1]:\n            # On vérifie que le mot est là avec un slice sur texte\n            # On pourrait faire un while\n            if texte[i-n+1:i+1] == mot:\n                return True\n        # on décale\n        if lettre in décalages.keys():\n            i += décalages[lettre]\n        else:\n            i += n\n        \n    return False\n\n# Quelques tests\nassert recherche_mot_boyer('abracadabra', 'dab')\nassert recherche_mot_boyer('abracadabra', 'abra')\nassert recherche_mot_boyer('abracadabra', 'obra') is False\nassert recherche_mot_boyer('abracadabra', 'bara') is False\nassert recherche_mot_boyer('maman est là', 'maman')\nassert recherche_mot_boyer('bonjour maman', 'maman')\nassert recherche_mot_boyer('bonjour maman', 'papa') is False\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nCopier et tester ce code dans votre environnement, puis :\n\nAjouter des tests avec des cas limites.\nRemplacer if texte[i-n+1:i+1] == mot:return True par une boucle while, qui lit les caractères de droite à gauche et retourne True si tous les caractères de texte et de mot correspondent à la position i considéré.\n\n\n\n\n\n\n\n\nInformatique MP-PC-PT-PSI\nRessources pour la NSI sur eduscol",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 5: Algorithmique",
      "Chapitre 5: Recherche textuelle*"
    ]
  },
  {
    "objectID": "tg/nsi/5-algorithmique/2-diviser-pour-regner/quiz/index.html",
    "href": "tg/nsi/5-algorithmique/2-diviser-pour-regner/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 5: Algorithmique",
      "Chapitre 2: Diviser pour régner",
      "Quiz"
    ]
  },
  {
    "objectID": "tg/nsi/5-algorithmique/2-diviser-pour-regner/exo/index.html",
    "href": "tg/nsi/5-algorithmique/2-diviser-pour-regner/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Vous avez vu en première deux algorithmes de tris peu efficaces(complexité O(n2)O(n^2)):\n\nLe tri par sélection\nSur un tableau de n éléments (numérotés de 00 à n−1n-1), le principe du tri par sélection est le suivant :\n\nRechercher le plus petit élément du tableau, et l’échanger avec l’élément d’indice 0 ;\nrechercher le second plus petit élément du tableau, et l’échanger avec l’élément d’indice 1 ;\ncontinuer de cette façon jusqu’à ce que le tableau soit entièrement trié.   Source Wikipedia\n\nLe tri par insertion\nDans l’algorithme, on parcourt le tableau à trier du début à la fin. Au moment où on considère le i-ème élément, les éléments qui le précèdent sont déjà triés. Pour faire l’analogie avec l’exemple du jeu de cartes, lorsqu’on est à la i-ème étape du parcours, le i-ème élément est la carte saisie, les éléments précédents sont la main triée et les éléments suivants correspondent aux cartes encore mélangées sur la table.\nL’objectif d’une étape est d’insérer le i-ème élément à sa place parmi ceux qui précèdent. En pratique, on fait « remonter » l’élément au fur et à mesure jusqu’à rencontrer un élément plus petit.\n\n\nOn considère la liste suivante de neuf valeurs: [36, 45, 36, 9, 15, 23, 11, 38, 40].\nDonner l’état de la liste à la fin des neuf étapes de tri pour le tri par sélection et le tri par insertion.\nPourquoi l’algorithme a une complexité quadratique alors que la liste ne passe que par neuf états au cours de son tri?\nImplémenter ces deux algorithmes de tri en Python:\n\ntri_selection(tbl: list) -&gt; list\ntri_insertion(tbl: list) -&gt; list\n\nTester les fonctions avec les assertions suivantes:\ntbl = [36, 45, 36, 9, 15, 23, 11, 38, 40]\nassert tri_selection(tbl) == [9, 11, 15, 23, 36, 36, 38, 40, 45]\nassert tri_insertion(tbl) == [9, 11, 15, 23, 36, 36, 38, 40, 45]\n\n# avec des valeurs aléatoires\nimport random as rd\ntbl =  [rd.randint(-1000, 1000) for i in range(1000)]\n# bien évidemment Python sait trier!\ntrié = sorted(tbl)\nassert tri_selection(tbl) == trié\nassert tri_insertion(tbl) == trié",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 5: Algorithmique",
      "Chapitre 2: Diviser pour régner",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/5-algorithmique/2-diviser-pour-regner/exo/index.html#algorithmes-de-tris-quadratiques-vus-en-première",
    "href": "tg/nsi/5-algorithmique/2-diviser-pour-regner/exo/index.html#algorithmes-de-tris-quadratiques-vus-en-première",
    "title": "Exercices",
    "section": "",
    "text": "Vous avez vu en première deux algorithmes de tris peu efficaces(complexité O(n2)O(n^2)):\n\nLe tri par sélection\nSur un tableau de n éléments (numérotés de 00 à n−1n-1), le principe du tri par sélection est le suivant :\n\nRechercher le plus petit élément du tableau, et l’échanger avec l’élément d’indice 0 ;\nrechercher le second plus petit élément du tableau, et l’échanger avec l’élément d’indice 1 ;\ncontinuer de cette façon jusqu’à ce que le tableau soit entièrement trié.   Source Wikipedia\n\nLe tri par insertion\nDans l’algorithme, on parcourt le tableau à trier du début à la fin. Au moment où on considère le i-ème élément, les éléments qui le précèdent sont déjà triés. Pour faire l’analogie avec l’exemple du jeu de cartes, lorsqu’on est à la i-ème étape du parcours, le i-ème élément est la carte saisie, les éléments précédents sont la main triée et les éléments suivants correspondent aux cartes encore mélangées sur la table.\nL’objectif d’une étape est d’insérer le i-ème élément à sa place parmi ceux qui précèdent. En pratique, on fait « remonter » l’élément au fur et à mesure jusqu’à rencontrer un élément plus petit.\n\n\nOn considère la liste suivante de neuf valeurs: [36, 45, 36, 9, 15, 23, 11, 38, 40].\nDonner l’état de la liste à la fin des neuf étapes de tri pour le tri par sélection et le tri par insertion.\nPourquoi l’algorithme a une complexité quadratique alors que la liste ne passe que par neuf états au cours de son tri?\nImplémenter ces deux algorithmes de tri en Python:\n\ntri_selection(tbl: list) -&gt; list\ntri_insertion(tbl: list) -&gt; list\n\nTester les fonctions avec les assertions suivantes:\ntbl = [36, 45, 36, 9, 15, 23, 11, 38, 40]\nassert tri_selection(tbl) == [9, 11, 15, 23, 36, 36, 38, 40, 45]\nassert tri_insertion(tbl) == [9, 11, 15, 23, 36, 36, 38, 40, 45]\n\n# avec des valeurs aléatoires\nimport random as rd\ntbl =  [rd.randint(-1000, 1000) for i in range(1000)]\n# bien évidemment Python sait trier!\ntrié = sorted(tbl)\nassert tri_selection(tbl) == trié\nassert tri_insertion(tbl) == trié",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 5: Algorithmique",
      "Chapitre 2: Diviser pour régner",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/5-algorithmique/2-diviser-pour-regner/exo/index.html#rotation-dune-image-dun-quart-de-tour",
    "href": "tg/nsi/5-algorithmique/2-diviser-pour-regner/exo/index.html#rotation-dune-image-dun-quart-de-tour",
    "title": "Exercices",
    "section": "2 Rotation d’une image d’un quart de tour",
    "text": "2 Rotation d’une image d’un quart de tour\n\nExercice inspiré du travail de Laurent Cheno, les images proviennent de son notebook que l’on ne peut plus trouver en ligne.\n\nOn considère l’image suivante de la Joconde découpée en carré de 1024x1024.\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nLa Joconde carrée\n\n\nPour la réalisation de cet exercice, il est conseillé d’utiliser le package Python pillow.\nVoici le code nécessaire à l’ouverture d’une image et à l’affichage de sa taille.\nfrom PIL import Image\nimg = Image.open(\"joconde_1024.png\")\nimg.show()\nimg.size\nPrincipe de l’algorithme: On découpe l’image carrée en quatre quadrants, on fait tourner récursivement chaque quart, puis on opère une permutation circulaire des quadrants.\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nMéthode diviser pour régner appliquée à la rotation d’une image\n\n\nPour tenter de faire cet exercice, vous pourrez utiliser la fonction echange_pixels qui permet d’échanger les valeurs des pixels de coordonnées x0, y0 et x1, y1.\ndef echange_pixels(image: PIL.image,\n                   x0: int, y0: int,\n                   x1: int, y1: int) -&gt; PIL.image:\n    couleurs0, couleurs1 = image.getpixel(x0, y0), image.getpixel(x1, y1)\n    image.putpixel(x0, y0, couleurs1)\n    image.putpixel(x1, y1, couleurs0)\n    return image\nÀ vous, bon courage!",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 5: Algorithmique",
      "Chapitre 2: Diviser pour régner",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/5-algorithmique/1-algorithmes-sur-les-arbres-binaires/quiz/index.html",
    "href": "tg/nsi/5-algorithmique/1-algorithmes-sur-les-arbres-binaires/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 5: Algorithmique",
      "Chapitre 1: Algorithmes sur les arbres binaires",
      "Quiz"
    ]
  },
  {
    "objectID": "tg/nsi/5-algorithmique/1-algorithmes-sur-les-arbres-binaires/exo/index.html",
    "href": "tg/nsi/5-algorithmique/1-algorithmes-sur-les-arbres-binaires/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "En utilisant le module binarytree, implémenter les algorithmes du programme officiel:\n\nCalculer la hauteur de l’arbre\nCalculer la taille de l’arbre\nParcours de l’arbre\n\nParcours préfixe\nParcours postfixe\nParcours infixe\nParcours en largeur\n\nArbre binaire de recherche\n\nInsertion d’une clé\nRecherche d’une clé\n\n\nPour le parcours en largeur, on pourra utiliser la classe File suivante.\nfrom collections import deque\n\nclass File:\n    # pas d'initialisation si on crée tjs des files vides\n    _data = deque()\n    \n    def enfiler(self, élément):\n        self._data.appendleft(élément)\n    \n    def défiler(self):\n        return self._data.pop()\n    \n    def est_vide(self):\n        return not self._data\n\n    def tête(self):\n        return self._data[-1]",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 5: Algorithmique",
      "Chapitre 1: Algorithmes sur les arbres binaires",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/5-algorithmique/1-algorithmes-sur-les-arbres-binaires/exo/index.html#implémentations-des-algorithmes-du-cours",
    "href": "tg/nsi/5-algorithmique/1-algorithmes-sur-les-arbres-binaires/exo/index.html#implémentations-des-algorithmes-du-cours",
    "title": "Exercices",
    "section": "",
    "text": "En utilisant le module binarytree, implémenter les algorithmes du programme officiel:\n\nCalculer la hauteur de l’arbre\nCalculer la taille de l’arbre\nParcours de l’arbre\n\nParcours préfixe\nParcours postfixe\nParcours infixe\nParcours en largeur\n\nArbre binaire de recherche\n\nInsertion d’une clé\nRecherche d’une clé\n\n\nPour le parcours en largeur, on pourra utiliser la classe File suivante.\nfrom collections import deque\n\nclass File:\n    # pas d'initialisation si on crée tjs des files vides\n    _data = deque()\n    \n    def enfiler(self, élément):\n        self._data.appendleft(élément)\n    \n    def défiler(self):\n        return self._data.pop()\n    \n    def est_vide(self):\n        return not self._data\n\n    def tête(self):\n        return self._data[-1]",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 5: Algorithmique",
      "Chapitre 1: Algorithmes sur les arbres binaires",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/5-algorithmique/1-algorithmes-sur-les-arbres-binaires/exo/index.html#version-itérative-des-parcours-en-profondeur",
    "href": "tg/nsi/5-algorithmique/1-algorithmes-sur-les-arbres-binaires/exo/index.html#version-itérative-des-parcours-en-profondeur",
    "title": "Exercices",
    "section": "2 Version itérative des parcours en profondeur",
    "text": "2 Version itérative des parcours en profondeur\nIl est possible d’écrire des versions iteratives (et non récursive) des algorithmes de parcours en profondeur.\nPour cela on utilisera une pile(stack en anglais).\nVoici les pseudo-codes proposés sur l’article Wikipédia en anglais.\n\n2.1 Parcours préfixe itératif\niterativePreorder(node)\n  if (node == null)\n    return\n  s ← empty stack\n  s.push(node)\n  while (not s.isEmpty())\n    node ← s.pop()\n    visit(node)\n    //right child is pushed first so that left is processed first\n    if node.right ≠ null\n      s.push(node.right)\n    if node.left ≠ null\n      s.push(node.left)\n\n\n2.2 Parcours infixe itératif\niterativeInorder(node)\n  s ← empty stack\n  while (not s.isEmpty() or node ≠ null)\n    if (node ≠ null)\n      s.push(node)\n      node ← node.left\n    else\n      node ← s.pop()\n      visit(node)\n      node ← node.right\n\n\n2.3 Parcours postfixe itératif\niterativePostorder(node)\n  s ← empty stack\n  lastNodeVisited ← null\n  while (not s.isEmpty() or node ≠ null)\n    if (node ≠ null)\n      s.push(node)\n      node ← node.left\n    else\n      peekNode ← s.peek()\n      // if right child exists and traversing node\n      // from left child, then move right\n      if (peekNode.right ≠ null and lastNodeVisited ≠ peekNode.right)\n        node ← peekNode.right\n      else\n        visit(peekNode)\n        lastNodeVisited ← s.pop()\nPour faire cet exercice, on pourra utiliser la classe Pile suivante.\nclass Pile:\n    def __init__(self):\n        # Initialisation par une liste vide\n        self._data = []\n    \n    def empiler(self, élément):\n        self._data.append(élément)\n    \n    def dépiler(self):\n        return self._data.pop()\n    \n    def est_vide(self):\n        return not self._data\n\n    def sommet(self):\n        return self._data[-1]",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 5: Algorithmique",
      "Chapitre 1: Algorithmes sur les arbres binaires",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/5-algorithmique/1-algorithmes-sur-les-arbres-binaires/exo/index.html#un-arbre-de-compétition-daprès-bac-2021",
    "href": "tg/nsi/5-algorithmique/1-algorithmes-sur-les-arbres-binaires/exo/index.html#un-arbre-de-compétition-daprès-bac-2021",
    "title": "Exercices",
    "section": "3 Un arbre de compétition (d’après BAC 2021)",
    "text": "3 Un arbre de compétition (d’après BAC 2021)\n\nLa fédération de badminton souhaite gérer ses compétitions à l’aide d’un logiciel. Pour ce faire, une structure arbre de compétition a été définie récursivement de la façon suivante: un arbre de compétition est soit l’arbre vide, noté ∅, soit un triplet composé d’une chaîne de caractères appelée valeur, d’un arbre de compétition appelé sous-arbre gauche et d’un arbre de compétition appelé sous-arbre droit.\n\nOn considère l’arbre de compétition B suivant:\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nCréer l’arbre de compétition B à l’aide de la classe ArbreBinaire vue dans le chapitre P1C4.\n\nÉcrire les fonctions suivantes:\n\nLa fonction racine qui prend en paramètre un arbre de compétition arb et renvoie la valeur de la racine.\n\n\nExemple: en reprenant l’exemple d’arbre de compétition présenté ci-dessus, racine(B) vaut \"Lea\".\n\nLa fonction gauche qui prend en paramètre un arbre de compétition arb et renvoie son sous-arbre gauche.\nLa fonction droit qui prend en argument un arbre de compétition arb et renvoie son sous-arbre droit.\nLa fonction est_vide qui prend en argument un arbre de compétition et renvoie True si l’arbre est vide et False sinon.\nExemple:en reprenant l’exemple d’arbre de compétition présenté ci-dessus, est_vide(B) vaut False.\n\n** Dans toute la suite de l’exercice, vous ne devrez utiliser que les fonctions définies dans les questions précédent la question posée.**\n\n \n\nProposer une fonction Python occurrences ayant pour paramètre un arbre de compétition arb et le nom d’un joueur nom et qui renvoie le nombre d’occurrences (d’apparitions) du joueur nom dans l’arbre de compétition arb.\nExemple: occurences(B,\"Anne\") vaut 2.\nProposer une fonction Python a_gagne prenant pour paramètres un arbre de compétition arb et le nom d’un joueur nom et qui renvoie le booléen True si le joueur nom a gagné au moins un match dans la compétition représenté par l’arbre de compétition arb.\nExemple: a_gagne(B,\"Louis\") vaut True\n\nOn souhaite programmer une fonction Python nombre_matchs qui prend pour arguments un arbre de compétition arb et le nom d’un joueur nom et qui renvoie le nombre de matchs joués par le joueur nom dans la compétition représentée par l’arbre de compétition arb\nExemple: nombre_matchs(B,\"Lea\") doit valoir 3 et nombre_matchs(B,\"Marc\") doit valoir 1.\n\nExpliquer pourquoi les instructions suivantes renvoient une valeur erronée. On pourra pour cela identifier le nœud de l’arbre qui provoque une erreur.\ndef nombre_matchs(arb ,nom):\n    \"\"\"arbre_competition , str -&gt; int\"\"\"\n    return occurrences(arb, nom)\nProposer une correction pour la fonction nombre_matchs.\n\nRecopier et compléter la fonction liste_joueurs qui prend pour argument un arbre de compétition arb et qui renvoie un tableau contenant les participants au tournoi, chaque nom ne devant figurer qu’une seule fois dans le tableau.\nL’opération + à la ligne 8 permet de concaténer deux tableaux.\nExemple: Si L1 = [4, 6, 2] et L2 = [3 ,5 ,1 ], l’instruction L1 + L2 va renvoyer le tableau [4, 6, 2, 3, 5, 1]\ndef liste_joueurs(arb):\n    \"\"\"arbre_competition -&gt; tableau\"\"\"\n    if est_vide(arb):\n         return ...\n     elif ... and ... :\n         return [racine(arb)]\n     else:\n         return ... + liste_joueurs(droit(arb))",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 5: Algorithmique",
      "Chapitre 1: Algorithmes sur les arbres binaires",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/5-algorithmique/4-programmation-dynamique/index.html",
    "href": "tg/nsi/5-algorithmique/4-programmation-dynamique/index.html",
    "title": "Chapitre 4: Programmation dynamique*",
    "section": "",
    "text": "Ce chapitre ne pourra pas faire l’objet d’une évaluation lors de l’épreuve terminale écrite et pratique de l’enseignement de spécialité. BO MENE2121274N\n\n\n\n\n\n\n\nProgramme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nProgrammation dynamique.\nUtiliser la programmation dynamique pour écrire un algorithme.\nLes exemples de l’alignement de séquences ou du rendu de monnaie peuvent être présentés.\nLa discussion sur le coût en mémoire peut être développée.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 5: Algorithmique",
      "Chapitre 4: Programmation dynamique*"
    ]
  },
  {
    "objectID": "tg/nsi/5-algorithmique/3-algorithmes-sur-les-graphes/quiz/index.html",
    "href": "tg/nsi/5-algorithmique/3-algorithmes-sur-les-graphes/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 5: Algorithmique",
      "Chapitre 3: Algorithmes sur les graphes*",
      "Quiz"
    ]
  },
  {
    "objectID": "tg/nsi/5-algorithmique/3-algorithmes-sur-les-graphes/exo/index.html",
    "href": "tg/nsi/5-algorithmique/3-algorithmes-sur-les-graphes/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Aucun exercice pour l’instant.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 5: Algorithmique",
      "Chapitre 3: Algorithmes sur les graphes*",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/5-algorithmique/0-rappels/index.html",
    "href": "tg/nsi/5-algorithmique/0-rappels/index.html",
    "title": "Chapitre 0: Rappels",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\nRévisions de première:\n\nAlgorithmes de recherche: recherche en table, recherche dichotomique.\nComplexité d’un algorithme, notation grand O. Complexité linéaire, quadratique et logarithmique.\nAlgorithmes de tri: tri par sélection, tri par insertion.\nCorrection d’un algorithme, invariant de boucle.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 5: Algorithmique",
      "Chapitre 0: Rappels"
    ]
  },
  {
    "objectID": "tg/nsi/5-algorithmique/0-rappels/index.html#algorithme-naïf-de-recherche-la-recherche-en-table",
    "href": "tg/nsi/5-algorithmique/0-rappels/index.html#algorithme-naïf-de-recherche-la-recherche-en-table",
    "title": "Chapitre 0: Rappels",
    "section": "1 Algorithme naïf de recherche: la recherche en table",
    "text": "1 Algorithme naïf de recherche: la recherche en table\nPour rechercher un élément dans une table on pourrait simplement parcourir tout simplement le tableau jusqu’à rencontrer la valeur recherché. C’est ce que l’on appelle la recherche en table.\ndef recherche(liste, élément):\n    \"\"\"Recherche d'un élément dans une liste\n    \n    Arguments\n    ---------\n    liste: liste d'entiers\n    élément: entier\n        l'élément cherché\n    \n    Returns\n    -------\n    int: l'indice de l'élément si trouvé ou -1 sinon\n    \n    \"\"\"\n    for i in range(len(liste)):\n        if liste[i] == élément:\n            # l'élément est trouve\n            return i\n    # non trouvé\n    return -1\n\n# Quelques tests\nassert recherche([1], 1) == 0\nassert recherche([1,6,5], 5) == 2\nassert recherche([1,6,5], 7) == -1\nMême si cet algorithme simple semble faire le travail, il n’est en pratique pas du tout utiliser, car il n’est pas du tout efficace.\nPour mesurer l’efficacité d’un algorithme, on utilise la notion de complexité.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 5: Algorithmique",
      "Chapitre 0: Rappels"
    ]
  },
  {
    "objectID": "tg/nsi/5-algorithmique/0-rappels/index.html#notion-de-complexité",
    "href": "tg/nsi/5-algorithmique/0-rappels/index.html#notion-de-complexité",
    "title": "Chapitre 0: Rappels",
    "section": "2 Notion de complexité",
    "text": "2 Notion de complexité\nSi je donne à mon programme une entrée de taille NN. Quel est l’ordre de grandeur, en fonction de NN, du nombre d’opérations qu’il va effectuer ?\n\n\nComplexité\n\n\n\nLa complexité d’un algorithme est le nombre d’opérations élémentaires(opération arithmétique, comparaison, affectation…)_ effectuées pour obtenir un résultat.\n\n\n\nSi on prend l’exemple de l’algorithme précédent, on se rend compte que cela dépend des cas. Expliquez…\nPour pouvoir faire des comparaisons entre algorithmes, l’informaticien étudie souvent la complexité dans le pire des cas.\n\n\n\n\n\n\n\nApplication: Complexité de la recherche linéaire\n\n\n\n\n\n\nRegardons ce que cela donne dans le cas de notre recherche en table, le pire des cas correspond au cas où l’élément n’est pas dans le tableau.\nÉtudions chacune des étapes pour compter les opérations élémentaires effectuées.\nfor i in range(len(liste)):      # N opérations\n    if liste[i] == élément:      # N opérations\n        return i                 # 0 opération(on est dans le pire des cas)\nreturn -1                        # 1 seul return \nOn obtient donc: 2N+12N + 1 opérations.\nLes facteurs multiplicatifs et additifs sont négligés, on dit que notre algorithme a une complexité grand O de NN notée:\nO(N)\nO(N)\n\nOn parle d’algorithme linéaire: son temps d’exécution croit proportionnellement avec la taille de l’entrée.\n\n\n\n\n\n\n\nNotation asymptotique: grand O\n\n\n\nOn utilise la notation asymptotique (N→∞N \\rightarrow \\infty) pour décrire le temps d’exécution des algorithmes. On se placera dans le pire des cas(Ex: élément non trouvé pour une recherche) la complexité est alors notée OO.\n\n\n\n\nPar ordre de complexité croissante:\n\ncomplexité logarithmique: O(logN)O(\\log N)\ncomplexité linéaire: O(N)O(N)\ncomplexité quadratique: O(N2)O(N^2)\ncomplexité exponentielle: O(eN)O(e^N)\n\nDès O(N2)O(N^2) l’algorithme devient quasiment inutilisable en pratique.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 5: Algorithmique",
      "Chapitre 0: Rappels"
    ]
  },
  {
    "objectID": "tg/nsi/5-algorithmique/0-rappels/index.html#un-algorithme-efficace-la-recherche-dichotomique",
    "href": "tg/nsi/5-algorithmique/0-rappels/index.html#un-algorithme-efficace-la-recherche-dichotomique",
    "title": "Chapitre 0: Rappels",
    "section": "3 Un algorithme efficace: la recherche dichotomique",
    "text": "3 Un algorithme efficace: la recherche dichotomique\nQuand on cherche un mot dans le dictionnaire, on ne va pas le chercher en les lisant un par un, on va utiliser la méthode de recherche dichotomique vue en première.\nCette méthode est possible dans le cas ou les données ont été au préalable trié, ce pour quoi il existe également des algorithmes efficaces.\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nCette image illustre la recherche de l'élément 4 dans tableau trié. Public domain via Wikimedia Commons\nVoici un exemple d’implémentation en Python:\ndef recherche_dichotomique(liste, élément):\n    \"\"\"Recherche dichotomique\n\n    Arguments\n    ---------\n    liste: liste d'entiers\n        ATTENTION: la liste doit être triée\n    élément: entier\n        l'élément cherché\n    \n    Returns\n    -------\n    int: l'indice de l'élément si trouvé ou -1 sinon\n    \n    \"\"\"\n    # on initialise les indices début et fin aux extrémités de la liste\n    début = 0\n    fin = len(liste)    \n    while début &lt;= fin:\n        # On se place au milieu de la liste\n        milieu = (début + fin) // 2 # il, s'agit d'une division entière\n        if liste[milieu] == élément:\n            # l'élément est trouvé\n            return milieu\n        elif liste[milieu] &lt; élément:   \n            # l'élément est situé dans la sous-liste de droite    \n            début = milieu + 1\n        else:\n            # l'élément est situé dans la sous-liste de gauche\n            fin = milieu - 1\n    return -1\n\n\n\n\n\n\n\nApplication: Complexité de la recherche dichotomique\n\n\n\n\n\n\nEn prenant l’exemple de la liste L8 = [2, 11, 14, 20, 22, 30, 33, 37]\n\nCombien de tours de boucles sont faites lors des appels:\n\nrecherche_dichotomique(L8, 11)\nrecherche_dichotomique(L8, 12)\n\nMontrer que dans le pire des cas, il faut 4 tours de boucles pour rechercher un élément dans L16 = [3, 11, 14, 21, 22, 27, 33, 37, 42, 50, 55, 58, 62, 69, 76, 81]\nA votre avis combien faudrait-il de tours de boucles pour effectuer une recherche sur une liste de 256 éléments.\n\n\n\n\n\n\nCet algorithme est beaucoup plus efficace, sa complexité (asymptotique dans le pire des cas) est O(log(N))O(log(N)).\nCeci fait une énorme différence notamment lorsque la taille des données augmente:\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nComparaison des complexités linéaire et logarithmique",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 5: Algorithmique",
      "Chapitre 0: Rappels"
    ]
  },
  {
    "objectID": "tg/nsi/5-algorithmique/0-rappels/index.html#correction-dun-algorithme",
    "href": "tg/nsi/5-algorithmique/0-rappels/index.html#correction-dun-algorithme",
    "title": "Chapitre 0: Rappels",
    "section": "4 Correction d’un algorithme",
    "text": "4 Correction d’un algorithme\nPour rappel, un algorithme est une suite d’instructions permettant d’obtenir un résultat.\nLa correction d’un algorithme est une démonstration qui prouve que l’algorithme permet bien d’obtenir le résultat souhaité.\nNous allons utiliser une méthode répandue semblable au raisonnement par récurrence fondée sur la recherche d’un invariant de boucle.\nPour prouver la correction nous devons montrer les trois points suivants:\n\nInitialisation: L’invariant est vrai avant la première itération.\nConservation: si l’invariant est vrai avant une itération, il restera vrai après l’itération.\nTerminaison: la boucle se termine et nous donne le résultat attendu.\n\nNous allons appliquer cette méthode aux algorithmes de tris vus en première.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 5: Algorithmique",
      "Chapitre 0: Rappels"
    ]
  },
  {
    "objectID": "tg/nsi/5-algorithmique/0-rappels/index.html#correction-du-tri-par-sélection",
    "href": "tg/nsi/5-algorithmique/0-rappels/index.html#correction-du-tri-par-sélection",
    "title": "Chapitre 0: Rappels",
    "section": "5 Correction du tri par sélection",
    "text": "5 Correction du tri par sélection\nOn rappelle le principe de l’algorithme.\n\nSur un tableau de N éléments (numérotés de 0 à N−1N-1), le principe du tri par sélection est le suivant :   - rechercher le plus petit élément du tableau, et l’échanger avec l’élément d’indice 0 ; - rechercher le second plus petit élément du tableau, et l’échanger avec l’élément d’indice 1 ; - continuer de cette façon jusqu’à ce que le tableau soit entièrement trié.\n\n\n5.1 Implémentation en Python\nEn voici une implémentation en python.\ndef tri_selection(t):\n    N = len(t)\n    # Parcourir le tableau jusqu'à l'avant dernière valeur\n    # en effet la dernière valeur sera forcément la plus grande\n    for i in range(N-1):\n        # on recherche l'indice du plus petit élément du sous-tableau de droite\n        i_min = i\n        #  Parcourir le reste du tableau pour rechercher l'élément le plus petit restant\n        for j in range(i+1, N):\n            if t[j] &lt; t[i_min]:\n                i_min = j\n        if i_min != i:\n            # échanger t[i] et t[i_min]\n            t[i], t[i_min] = t[i_min], t[i]\n    return t\nVoici les états successifs du tableau après chaque tour de boucle avec en entrée [12, 15, 1, 3, 7]:\n[1, 15, 12, 3, 7]\n[1, 3, 12, 15, 7]\n[1, 3, 7, 15, 12]\n[1, 3, 7, 12, 15]\n\n\n5.2 Correction de l’algorithme\nL’invariant de boucle consiste à montrer que si les ii premiers éléments du tableau sont triés avant l’itération, alors les i+1i+1 premiers éléments seront triés après une itération.\n\nInitialisation: Au départ, i=0i = 0, le sous-tableau trié de gauche ne contient aucun élément []. Il est donc forcément trié.\nConservation: Lorsqu’on considère le tour de boucle ii, le tableau est déjà trié pour les indices 00 à i−1i-1. Grâce à la boucle interne, on trouve le plus petit élément parmi les éléments d’indice ii à nn (tous plus grands que l’élément d’indice i−1i-1), et on le place à l’indice ii. Après le tour de boucle, le tableau sera donc trié pour les indices de 00 à ii.\nTerminaison: la boucle se termine lorsqu’on arrive à l’avant-dernier élément du tableau. Le tableau est trié pour les éléments d’indice 00 à n−2n-2, et le dernier élément d’indice n−1n-1 est forcément plus grand que l’élément d’indice $ n−2n-2. Le tableau est donc entièrement trié.\n\n\n\n\n\n\n\n\nApplication: Étude du tri par insertion\n\n\n\n\n\n\nLa partie exercice propose une étude complète de l’algorithme de tri par insertion vu également en première.\n\nDans l’algorithme, on parcourt le tableau à trier du début à la fin. Au moment où on considère le i-ème élément, les éléments qui le précèdent sont déjà triés. Pour faire l’analogie avec l’exemple du jeu de cartes, lorsqu’on est à la i-ème étape du parcours, le i-ème élément est la carte saisie, les éléments précédents sont la main triée et les éléments suivants correspondent aux cartes encore mélangées sur la table.\n\n\nL’objectif d’une étape est d’insérer le i-ème élément à sa place parmi ceux qui précèdent. Il faut pour cela trouver où l’élément doit être inséré en le comparant aux autres, puis décaler les éléments afin de pouvoir effectuer l’insertion. En pratique, ces deux actions sont fréquemment effectuées en une passe, qui consiste à faire « remonter » l’élément au fur et à mesure jusqu’à rencontrer un élément plus petit.\n\nSource Wikipedia\ndef tri_insertion(t: list):\n    N = len(t)\n    for i in range(1, N):\n        x = t[i]\n        j = i\n        while j &gt; 0 and t[j-1] &gt; x:\n            t[j] = t[j-1]\n            j = j - 1\n        t[j] = x\n    return t\n\n\n\n\n\n\n\n\n\n\n\n\nEn plus: Complexité des algorithmes de tri\n\n\n\n\n\n\nMontrer que les deux algorithmes de tris précédents ont une complexité quadratique en O(n2)O(n^2).",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 5: Algorithmique",
      "Chapitre 0: Rappels"
    ]
  },
  {
    "objectID": "tg/nsi/4-langages-et-programmation/5-notion-de-programme/quiz/index.html",
    "href": "tg/nsi/4-langages-et-programmation/5-notion-de-programme/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 4: Langages et programmation",
      "Chapitre 5: Notion de programme*",
      "Quiz"
    ]
  },
  {
    "objectID": "tg/nsi/4-langages-et-programmation/5-notion-de-programme/exo/index.html",
    "href": "tg/nsi/4-langages-et-programmation/5-notion-de-programme/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Donner deux exemples qui montrent pourquoi un programme est aussi une donnée.\nQuelle est la différence entre la calculabilité et la décidabilité d’un problème ?\nDonner des exemples de problèmes décidables.\nDonner un exemple de problème indécidable.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 4: Langages et programmation",
      "Chapitre 5: Notion de programme*",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/4-langages-et-programmation/5-notion-de-programme/exo/index.html#vocabulaire",
    "href": "tg/nsi/4-langages-et-programmation/5-notion-de-programme/exo/index.html#vocabulaire",
    "title": "Exercices",
    "section": "",
    "text": "Donner deux exemples qui montrent pourquoi un programme est aussi une donnée.\nQuelle est la différence entre la calculabilité et la décidabilité d’un problème ?\nDonner des exemples de problèmes décidables.\nDonner un exemple de problème indécidable.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 4: Langages et programmation",
      "Chapitre 5: Notion de programme*",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/4-langages-et-programmation/5-notion-de-programme/exo/index.html#exemple-de-fonction-calculable-la-racine-carrée",
    "href": "tg/nsi/4-langages-et-programmation/5-notion-de-programme/exo/index.html#exemple-de-fonction-calculable-la-racine-carrée",
    "title": "Exercices",
    "section": "2 Exemple de fonction calculable: la racine carrée",
    "text": "2 Exemple de fonction calculable: la racine carrée\nOn définit ci-dessous une fonction racine_carrée.\ndef racine_carrée(n, precision=1E-2):\n    \"\"\"Recherche d'une racine carrée par une méthode dichotomique\n    \n    Paramètres\n    ----------\n    n: float\n        le nombre dont on recherche la racine\n    precision: float 0.01 par défaut\n        precision du calcul du carré\n    \n    Returns\n    -------\n    float\n        la racine carrée de n\n    \"\"\"\n    gauche, droite, milieu = 0, n, n\n    while abs(milieu ** 2 - n) &gt; precision :\n        milieu = (gauche + droite) / 2\n        if milieu ** 2 - n &gt; 0:\n            droite = milieu - precision\n        else:\n            gauche = milieu + precision\n    return milieu\n\nExpliquer pourquoi il est nécessaire d’utiliser une précision dans ce calcul ?\nExpliquer la ligne: while abs(milieu ** 2 - n) &gt; precision :\nPourquoi peut-on qualifier cet algorithme de dichotomique ?",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 4: Langages et programmation",
      "Chapitre 5: Notion de programme*",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/4-langages-et-programmation/5-notion-de-programme/exo/index.html#problèmes-de-décision-sur-les-entiers",
    "href": "tg/nsi/4-langages-et-programmation/5-notion-de-programme/exo/index.html#problèmes-de-décision-sur-les-entiers",
    "title": "Exercices",
    "section": "3 Problèmes de décision sur les entiers",
    "text": "3 Problèmes de décision sur les entiers\n\nImplémenter en Python deux fonctions :\n\nest_pair(n): Renvoie True si le nombre entier nn est pair, False sinon.\nest_premier(n): Renvoie True si le nombre entier nn est premier, False sinon.\n\nTester ces fonctions avec des petites entrées, puis avec des grandes pour voir si ces algorithmes seraient utilisables en pratique.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 4: Langages et programmation",
      "Chapitre 5: Notion de programme*",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/4-langages-et-programmation/5-notion-de-programme/exo/index.html#non-décidabilité-de-larrêt",
    "href": "tg/nsi/4-langages-et-programmation/5-notion-de-programme/exo/index.html#non-décidabilité-de-larrêt",
    "title": "Exercices",
    "section": "4 Non-décidabilité de l’arrêt",
    "text": "4 Non-décidabilité de l’arrêt\n\nPourquoi dit-on que le problème de l’arrêt est indécidable ?\n\nSupposons qu’il existe une fonction calculable termine(fonction, données) qui prend 2 arguments :\n\nune fonction,\net des données d’entrée pour cette fonction\n\net qui renverra True si le programme termine et False s’il entre dans une boucle infinie.\nOn définit les deux fonctions suivantes :\ndef fonction1(n):\n    if n % 3 != 0:\n        return True\n    else:\n        return False\n\ndef fonction2(n):\n    while n % 3 != 0:\n        print(\"True\")\n    print(\"False\")\n\nQue renverront les appels suivants ?\ntermine(function1, 7)\ntermine(function1, 9)\ntermine(function2, 7)\ntermine(function2, 9)\nJustifier vos réponses.\nOn définit une fonction test_sur_soi.\ndef test_sur_soi(programme):\n    if termine(programme, programme):\n        while True: pass # boucle infinie\nQue se passe-t-il si on appelle test_sur_soi sur elle-même: test_sur_soi(test_sur_soi) ?",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 4: Langages et programmation",
      "Chapitre 5: Notion de programme*",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/4-langages-et-programmation/4-paradigmes-de-programmation/quiz/index.html",
    "href": "tg/nsi/4-langages-et-programmation/4-paradigmes-de-programmation/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "1. Quelle est la sortie du code suivant,\n\n   ```python\n   class Point:\n       def __init__(self, x=0, y=0):\n           self.x = x + 1\n           self.y = y + 1\n         \n   p1 = Point(1, 2)\n   print(p1.x, p1.y)\n\n0 0\n1 1\n\n1 2\n\n2 3\n\n\nQuelle est la sortie du code suivant?\nclass Point:\n    def __init__(self, x=0, y=0):\n        self.x = x + 1\n        self.y = y + 1\n\np2 = Point()\nprint(p2.x, p2.y)\n\n0 0\n1 1\n\n1 2\n\n2 3\n\nQuelle est la sortie du code suivant?\ndouble = lambda x: x * 2\ntriple = lambda x: x * 3\nx = 2\nx = double(x) \nx = triple(x) \nx = double(x) \nprint(x)\n\n2\n4\n\n12\n\n24\n\nSyntaxError\n\nOn souhaite écrire une fonction bonjour qui prend un paramètre prénom et qui retourne \"Bonjour &lt;prénom&gt; :)\", par exemple une fois appelée avec l’argument Python, cette fonction renverrai \"Bonjour Python :)\".\n\nLa définition s’écrit: bonjour = (\"Bonjour \" + a + \" :)   \"), et l’appel s’écrit: bonjour(\"Python\").\nLa définition s’écrit: bonjour = lambda nom: \"Bonjour \" + nom + \" :)\", et l’appel s’écrit: bonjour(\"Python\").\nLa définition s’écrit: lambda nom: \"Bonjour \" + nom + \" :)    = bonjour\", et l’appel s’écrit: bonjour(Python).\nCette définition est impossible, car une fonction ne peut pas renvoyer plusieurs valeurs.\n\n\n```",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 4: Langages et programmation",
      "Chapitre 4: Paradigmes de programmation*",
      "Quiz"
    ]
  },
  {
    "objectID": "tg/nsi/4-langages-et-programmation/4-paradigmes-de-programmation/exo/index.html",
    "href": "tg/nsi/4-langages-et-programmation/4-paradigmes-de-programmation/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Bien que ces fonctions soient définies en Python, nous allons les implémenter avec les noms suivants:\n\nfiltre(fonction, liste) (filter): fonction qui prend deux paramètres en entrée:\n\nun fonction de décision à 1 paramètre de type simple(int pour simplifier).\net une liste,\n\n\nCette fonction renvoie une nouvelle liste avec seulement les éléments ayant satisfait la fonction de décision.\nVoici quelques tests à effectuer pour vérifier son fonctionnement:\n# nb impairs\nassert filtre(lambda x: x % 2 == 1, [0, 1, 2, 3, 4]) == [1, 3]\n# nb pairs\nassert filtre(lambda x: x % 2 == 0, [0, 1, 2, 3, 4]) == [0, 2, 4]\n\napplique(fonction, liste) (map): fonction qui prend deux paramètres en entrée:\n\nun fonction à 1 paramètre de type simple(int pour simplifier) qui renvoie une valeur.\net une liste,\n\n\nCette fonction renvoie une nouvelle liste pour laquelle a été appliqué la fonction donnée en argument à chacun des éléments de la liste d’entrée.\nVoici quelques tests à effectuer pour vérifier son fonctionnement:\n# doubles\nassert applique(lambda x: x ** 2, [0, 1, 2, 3, 4]) == [0, 1, 4, 9, 16]\n# puissances de 2\nassert applique(lambda n: 2**n, [0, 1, 2, 3, 4]) == [1, 2, 4, 8, 16]\n\nréduit (reduce): fonction qui prend deux paramètres en entrée:\n\nun fonction à 2 paramètres de type simple qui renvoie une valeur.\nune liste.\n\n\nCette fonction renvoie une valeur par l’accumulation des valeurs de la liste par la fonction d’accumulation donnée en argument.\nVoici quelques tests à effectuer pour vérifier son fonctionnement:\n# addition des éléments\nassert réduit(lambda x, y: x + y, [0, 1, 2, 3, 4]) == 10\n# soustraction des éléments\nassert réduit(lambda x, y: x - y, [0, 1, 2, 3, 4]) == -10\n# concaténation des éléments\nassert réduit(lambda x, y: str(x) + str(y), [0, 1, 2, 3, 4]) == \"01234\"\nEn utilisant la fonction applique, créer en une ligne une fonction négatif qui permet de passer ce test:\nassert négatif([0, 1, 2, 3, 4]) == [0, -1, -2, -3, -4]\nEn utilisant la fonction réduit, créer en une ligne une fonction longueur qui permet de passer ces tests:\nassert longueur([]) == 0\nassert longueur([0, 1, 2]) == 3\nassert longueur([0, 1, 2, 3, 4]) == 5",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 4: Langages et programmation",
      "Chapitre 4: Paradigmes de programmation*",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/4-langages-et-programmation/4-paradigmes-de-programmation/exo/index.html#programmation-fonctionnelle-avec-filter-map-reduce",
    "href": "tg/nsi/4-langages-et-programmation/4-paradigmes-de-programmation/exo/index.html#programmation-fonctionnelle-avec-filter-map-reduce",
    "title": "Exercices",
    "section": "",
    "text": "Bien que ces fonctions soient définies en Python, nous allons les implémenter avec les noms suivants:\n\nfiltre(fonction, liste) (filter): fonction qui prend deux paramètres en entrée:\n\nun fonction de décision à 1 paramètre de type simple(int pour simplifier).\net une liste,\n\n\nCette fonction renvoie une nouvelle liste avec seulement les éléments ayant satisfait la fonction de décision.\nVoici quelques tests à effectuer pour vérifier son fonctionnement:\n# nb impairs\nassert filtre(lambda x: x % 2 == 1, [0, 1, 2, 3, 4]) == [1, 3]\n# nb pairs\nassert filtre(lambda x: x % 2 == 0, [0, 1, 2, 3, 4]) == [0, 2, 4]\n\napplique(fonction, liste) (map): fonction qui prend deux paramètres en entrée:\n\nun fonction à 1 paramètre de type simple(int pour simplifier) qui renvoie une valeur.\net une liste,\n\n\nCette fonction renvoie une nouvelle liste pour laquelle a été appliqué la fonction donnée en argument à chacun des éléments de la liste d’entrée.\nVoici quelques tests à effectuer pour vérifier son fonctionnement:\n# doubles\nassert applique(lambda x: x ** 2, [0, 1, 2, 3, 4]) == [0, 1, 4, 9, 16]\n# puissances de 2\nassert applique(lambda n: 2**n, [0, 1, 2, 3, 4]) == [1, 2, 4, 8, 16]\n\nréduit (reduce): fonction qui prend deux paramètres en entrée:\n\nun fonction à 2 paramètres de type simple qui renvoie une valeur.\nune liste.\n\n\nCette fonction renvoie une valeur par l’accumulation des valeurs de la liste par la fonction d’accumulation donnée en argument.\nVoici quelques tests à effectuer pour vérifier son fonctionnement:\n# addition des éléments\nassert réduit(lambda x, y: x + y, [0, 1, 2, 3, 4]) == 10\n# soustraction des éléments\nassert réduit(lambda x, y: x - y, [0, 1, 2, 3, 4]) == -10\n# concaténation des éléments\nassert réduit(lambda x, y: str(x) + str(y), [0, 1, 2, 3, 4]) == \"01234\"\nEn utilisant la fonction applique, créer en une ligne une fonction négatif qui permet de passer ce test:\nassert négatif([0, 1, 2, 3, 4]) == [0, -1, -2, -3, -4]\nEn utilisant la fonction réduit, créer en une ligne une fonction longueur qui permet de passer ces tests:\nassert longueur([]) == 0\nassert longueur([0, 1, 2]) == 3\nassert longueur([0, 1, 2, 3, 4]) == 5",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 4: Langages et programmation",
      "Chapitre 4: Paradigmes de programmation*",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/4-langages-et-programmation/2-mise-au-point-des-programmes/index.html",
    "href": "tg/nsi/4-langages-et-programmation/2-mise-au-point-des-programmes/index.html",
    "title": "Chapitre 2: Mise au point des programmes",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nMise au point des programmes.\nGestion des bugs.\nDans la pratique de la programmation, savoir répondre aux causes typiques de bugs : problèmes liés au typage, effets de bord non désirés, débordements dans les tableaux, instruction conditionnelle non exhaustive, choix des inégalités, comparaisons et calculs entre flottants, mauvais nommage des variables, etc.\nOn prolonge le travail entrepris en classe de première sur l’utilisation de la spécification, des assertions, de la documentation des programmes et de la construction de jeux de tests.\nLes élèves apprennent progressivement à anticiper leurs erreurs.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 4: Langages et programmation",
      "Chapitre 2: Mise au point des programmes"
    ]
  },
  {
    "objectID": "tg/nsi/4-langages-et-programmation/2-mise-au-point-des-programmes/index.html#spécification-et-tests",
    "href": "tg/nsi/4-langages-et-programmation/2-mise-au-point-des-programmes/index.html#spécification-et-tests",
    "title": "Chapitre 2: Mise au point des programmes",
    "section": "1 Spécification et tests",
    "text": "1 Spécification et tests\nDurant la phase de conception d’un programme, on commence par écrire la spécification du programme et écrire des jeux de tests pour valider le fonctionnement du programme.\nLa spécification décrit les entrées et sorties du programme, ainsi que leurs types, ce que l’on appelle en anglais l’API_(Application Programming Interface)_ ou interface de programmation applicative en français(peu courant).\nLes tests vérifient que les sorties du programme sont conformes à ce que l’on attend.\n\nVoici une fonction avec sa spécification.\ndef est_pair(n):\n    \"\"\"Indique si un nombre est pair ou non\n\n    Paramètres\n    ----------\n    n: int\n\n    Returns\n    -------\n    bool\n        True si n est pair, False sinon\n    \"\"\"\n    if n % 2 == 0:\n        return True\n    else:\n        return False\nOu plus succinctement avec les annotations de type:\ndef est_pair(n: int) -&gt; bool:\n    \"Indique si un nombre est pair ou non\"\n    if n % 2 == 0:\n        return True\n    else:\n        return False\nMaintenant un ensemble de tests:\nassert est_pair(2) is True\nassert est_pair(5) is False\nassert est_pair(1381635162) is True\nassert est_pair(-3565454165461) is False\n# le is True est redondant\nassert est_pair(4)\n# le is False peut être écrit\nassert not est_pair(5)\nOn peut également ajouter un message en cas d’erreur sur un test en le séparant par une virgule.\nassert est_pair(2) is True, \"Le nombre deux n'a pas été reconnu comme pair\"\nAinsi si la fonction présentait un jour une erreur, le programme s’arrêterait en levant l’exception avec le message d’explication.\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nAssertionError: Le nombre deux n'a pas été reconnu comme pair",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 4: Langages et programmation",
      "Chapitre 2: Mise au point des programmes"
    ]
  },
  {
    "objectID": "tg/nsi/4-langages-et-programmation/2-mise-au-point-des-programmes/index.html#gestion-des-bugs",
    "href": "tg/nsi/4-langages-et-programmation/2-mise-au-point-des-programmes/index.html#gestion-des-bugs",
    "title": "Chapitre 2: Mise au point des programmes",
    "section": "2 Gestion des bugs",
    "text": "2 Gestion des bugs\nLors de l’écriture de code Python, vous ferez fréquemment des erreurs, qui vous serons «gentiment» rappelées par l’interpréteur Python à l’exécution du code.\n\n2.1 Erreurs les plus courantes en Python\nEn fonction des erreurs rencontrées, Python affiche des erreurs spécifiques qui vous aident à comprendre quel est le problème dans votre programme.\nVoici quelques erreurs courantes que vous devez apprendre à reconnaitre parmi les nombreuses exceptions de Python.\n\n\n\nType d'erreur\nObjet Python\n                           Erreurs courantes\n            Exemple\n\n\n\n\nErreur de syntaxe\nSyntaxError\nErreur de parenthèse, : manquant avant un bloc d’instruction….\nlen([1,2,3))\n\n\nErreurs d’indexation\nIndexError\nAccès à un index non présent dans une liste. Accès à un index non présent dans une liste, ou un tuple, str…\n[12,15,14][4]\n\n\nErreurs de nom\nNameError\nNom de fonction ou de variable mal orthographié.\nprint(Bonjour) ou prout(\"Bonjour\")\n\n\nErreurs d’indentation\nIndentationError\nIndentation oubliée, ou trop grande, les blocs sont alors mal délimités.\n\n\n\nErreurs de type\nTypeError\nOpération impossible entre deux types(str - int). Conversion de type impossible.\n\"3\" * \"5\"\n\n\n\nParfois ces erreurs nécessitent de modifier le code pour corriger le «bug».\nD’autres fois ces erreurs nécessitent d’être gérées sans arrêter complétement le programme.\n\n\n2.2 Gestion des exceptions avec try: ... except...\nPrenons l’exemple de la gestion d’une entrée utilisateur. Vous demandez l’âge d’une personne et vous attendez un entier pour vérifier son accès.\nIl faut lui reposer la question jusqu’à ce qu’il rentre une valeur conforme à nos attentes.\nage = int(input(\"Quel âge avez-vous? \"))\nif age &gt;= 13:\n  print(\"Vous pouvez vous inscrire\")\nelse:\n  print(\"Les réseaux sociaux sont interdits aux moins de 13 ans.\")  \nSi l’utilisateur répond \"seize ans\", vous obtenez le message d’erreur suivant:\nValueError: invalid literal for int() with base 10: 'seize ans'\nOn va gérer cette erreur avec un try.\ntry:\n  age = int(input(\"Quel âge avez-vous? \"))\nexcept ValueError:\n  print(\"Veuillez entrer votre âge sous forme de chiffres\")\nLe programme ne renvoie plus d’erreurs et ne s’arrête pas. On peut continuer à demander l’âge sans relancer le programme.\nQuel âge avez-vous? treize ans\nVeuillez entrer votre âge sous forme de chiffres\nUn while peut permettre de reposer la question en cas de besoin.\nage = None\nwhile not age: \n    try:\n      age = int(input(\"Quel âge avez-vous? \"))\n    except ValueError:\n      print(\"Veuillez entrer votre âge sous forme de chiffres\")\n\n# on est sures d'avoir un age entier ici\nif age &gt;= 13:\n    print(\"Vous pouvez vous inscrire\")\nelse:\n    print(\"Les réseaux sociaux sont interdits aux moins de 13 ans.\")\nVoici un exemple d’interaction avec ce programme.\nQuel âge avez-vous?  treize ans\nVeuillez entrer votre âge sous forme de chiffres\nQuel âge avez-vous?  13.5\nVeuillez entrer votre âge sous forme de chiffres\nQuel âge avez-vous?  13\nVous pouvez vous inscrire\n\n\n\n\n\n\n\nEn plus\n\n\n\n\n\n\nAttention à gérer les exceptions avec précaution ou vous risquez d’introduire des bugs qui n’arrêteront pas le programme et resteront donc «invisibles».",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 4: Langages et programmation",
      "Chapitre 2: Mise au point des programmes"
    ]
  },
  {
    "objectID": "tg/nsi/4-langages-et-programmation/3-fonctions-recursives/quiz/index.html",
    "href": "tg/nsi/4-langages-et-programmation/3-fonctions-recursives/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 4: Langages et programmation",
      "Chapitre 3: Fonctions récursives",
      "Quiz"
    ]
  },
  {
    "objectID": "tg/nsi/4-langages-et-programmation/3-fonctions-recursives/exo/index.html",
    "href": "tg/nsi/4-langages-et-programmation/3-fonctions-recursives/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "On rappelle que factorielle de n (notée !n!n) est définie ainsi:\nn!=1×2×…×(n−1)×n\nn! = 1 \\times 2 \\times \\ldots \\times (n - 1)   \\times n\n\nPar exemple:\n\n2!=2×1=22! =  2 \\times 1 = 2,\n3!=3×2×1=63! =  3 \\times 2 \\times 1 = 6,\n4!=4×3×2×1=244! =  4 \\times 3 \\times 2 \\times 1 = 24.\n\n\nÉcrire une fonction itérative (non récursive) appelée factorielle qui prend un paramètre n entier en entrée et qui renvoie le factoriel de n en sortie.\nÉcrire une version récursive de cette fonction appelée factorielle_rec.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 4: Langages et programmation",
      "Chapitre 3: Fonctions récursives",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/4-langages-et-programmation/3-fonctions-recursives/exo/index.html#fonction-factorielle",
    "href": "tg/nsi/4-langages-et-programmation/3-fonctions-recursives/exo/index.html#fonction-factorielle",
    "title": "Exercices",
    "section": "",
    "text": "On rappelle que factorielle de n (notée !n!n) est définie ainsi:\nn!=1×2×…×(n−1)×n\nn! = 1 \\times 2 \\times \\ldots \\times (n - 1)   \\times n\n\nPar exemple:\n\n2!=2×1=22! =  2 \\times 1 = 2,\n3!=3×2×1=63! =  3 \\times 2 \\times 1 = 6,\n4!=4×3×2×1=244! =  4 \\times 3 \\times 2 \\times 1 = 24.\n\n\nÉcrire une fonction itérative (non récursive) appelée factorielle qui prend un paramètre n entier en entrée et qui renvoie le factoriel de n en sortie.\nÉcrire une version récursive de cette fonction appelée factorielle_rec.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 4: Langages et programmation",
      "Chapitre 3: Fonctions récursives",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/4-langages-et-programmation/3-fonctions-recursives/exo/index.html#suite-de-fibonacci",
    "href": "tg/nsi/4-langages-et-programmation/3-fonctions-recursives/exo/index.html#suite-de-fibonacci",
    "title": "Exercices",
    "section": "2 Suite de Fibonacci",
    "text": "2 Suite de Fibonacci\nLa suite de Fibonacci est une suite de nombres entiers définie par récurrence.\nLes deux premiers termes sont 0 et 1, puis un terme est la somme des deux termes précédents.\nOn obtient ainsi les nombres dits de Fibonacci: 0, 1, 1, 2, 3, 5, 8, 13, 21…\nLa définition mathématique est:\nf0=0f1=1fn=fn−1+fn−2pourn&gt;1\n\\begin{aligned}\nf_0 &= 0 \\\\\nf_1 &= 1 \\\\\nf_n &= f_{n-1} + f_{n-2} \\ \\text{pour}\\ n &gt; 1\n\\end{aligned}\n\n\nÉcrire une version récursive fibo qui calcule le terme fnf_n de la suite de Fibonacci. Par exemple: fibo(7) renvoie 13.\nÉcrire une fonction itérative (non récursive) fibo_iter.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 4: Langages et programmation",
      "Chapitre 3: Fonctions récursives",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/4-langages-et-programmation/3-fonctions-recursives/exo/index.html#parité-dun-entier-naturel",
    "href": "tg/nsi/4-langages-et-programmation/3-fonctions-recursives/exo/index.html#parité-dun-entier-naturel",
    "title": "Exercices",
    "section": "3 Parité d’un entier naturel",
    "text": "3 Parité d’un entier naturel\nLa fonction est_pair définie ci-dessous indique si un entier naturel est pair ou non.\ndef est_pair(n):\n    while n &gt; 0:\n        n = n - 2\n    return n == 0\nÉcrire une version récursive de cette fonction est_pair_rec.\nNSI Terminale de Serge Bays aux éditions Eyrolles",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 4: Langages et programmation",
      "Chapitre 3: Fonctions récursives",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/4-langages-et-programmation/3-fonctions-recursives/exo/index.html#fonction-somme",
    "href": "tg/nsi/4-langages-et-programmation/3-fonctions-recursives/exo/index.html#fonction-somme",
    "title": "Exercices",
    "section": "4 Fonction somme",
    "text": "4 Fonction somme\nOn autorise seulement deux opérations sur les entiers:\n\nAjouter 1;\nretrancher 1.\n\nLa fonction somme définie ci-dessous renvoie la somme de deux entiers positifs avec ces deux opérations.\ndef somme(a, b):\n    while b &gt; 0:\n        a = a + 1\n        b = b - 1\n    return a\n\nÉcrire une version récursive de cette fonction somme_rec.\nAdapter le code des fonctions somme et somme_rec afin de pouvoir renvoyer la somme de deux entiers quelconques.\n\nNSI Terminale de Serge Bays aux éditions Eyrolles",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 4: Langages et programmation",
      "Chapitre 3: Fonctions récursives",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/4-langages-et-programmation/3-fonctions-recursives/exo/index.html#somme-des-éléments-dune-liste",
    "href": "tg/nsi/4-langages-et-programmation/3-fonctions-recursives/exo/index.html#somme-des-éléments-dune-liste",
    "title": "Exercices",
    "section": "5 Somme des éléments d’une liste",
    "text": "5 Somme des éléments d’une liste\n\nÉcrire une fonction récursive avec accumulateur somme_list_rec(tab:list, somme=0) -&gt; int: qui prend un paramètre une liste de nombres et renvoie la somme des termes de cette liste. Par exemple: somme_list_rec([4, 7, 2]) renvoie 13.\nExpliquer le déroulement de l’exécution de cette fonction lors de l’appel somme_list_rec([4, 7, 2]). On pourra s’aider du site http://pythontutor.com/.\n\nNSI Terminale de Serge Bays aux éditions Eyrolles",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 4: Langages et programmation",
      "Chapitre 3: Fonctions récursives",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/4-langages-et-programmation/3-fonctions-recursives/exo/index.html#inversion-dune-chaîne-de-caractères",
    "href": "tg/nsi/4-langages-et-programmation/3-fonctions-recursives/exo/index.html#inversion-dune-chaîne-de-caractères",
    "title": "Exercices",
    "section": "6 Inversion d’une chaîne de caractères",
    "text": "6 Inversion d’une chaîne de caractères\nÉcrire une fonction récursive avec accumulateur inverse(txt:str, inv=\"\") -&gt; str: qui prend en paramètre une chaîne de caractères txt et qui renvoie la chaîne en inversant l’ordre des lettres. Par exemple: inverse(\"azerty\") renvoie ytreza.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 4: Langages et programmation",
      "Chapitre 3: Fonctions récursives",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/4-langages-et-programmation/3-fonctions-recursives/exo/index.html#utilisation-daccumulateurs-dans-la-suite-de-fibonacci",
    "href": "tg/nsi/4-langages-et-programmation/3-fonctions-recursives/exo/index.html#utilisation-daccumulateurs-dans-la-suite-de-fibonacci",
    "title": "Exercices",
    "section": "7 Utilisation d’accumulateurs dans la suite de Fibonacci",
    "text": "7 Utilisation d’accumulateurs dans la suite de Fibonacci\nLe calcul des nombres de Fibonacci est rendu beaucoup plus efficace en utilisant des accumulateurs qui retiennent les valeurs des deux termes précédents afin d’éviter de les recalculer.\n\nCompléter le code ci-dessous pour mettre en pratique cette technique.\ndef fib_acc(n, f0=0, f1=1):\n    # cas de base\n    if n == 0:\n        return ...\n    elif n == 1:\n        return ...\n    # appel récursif\n    return ...\nComparer l’efficacité de ces deux algorithmes en calculant un terme de rang assez élevé.\nChronométrer ces deux algorithmes grâce à la méthode time.time\n\nNSI Terminale de Serge Bays aux éditions Eyrolles",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 4: Langages et programmation",
      "Chapitre 3: Fonctions récursives",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/4-langages-et-programmation/1-modules-et-documentation/index.html",
    "href": "tg/nsi/4-langages-et-programmation/1-modules-et-documentation/index.html",
    "title": "Chapitre 1: Modules et documentation",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nModularité.\nUtiliser des API (Application Programming Interface) ou des bibliothèques.\nExploiter leur documentation. Créer des modules simples et les documenter.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 4: Langages et programmation",
      "Chapitre 1: Modules et documentation"
    ]
  },
  {
    "objectID": "tg/nsi/4-langages-et-programmation/1-modules-et-documentation/index.html#utilisation-des-modules",
    "href": "tg/nsi/4-langages-et-programmation/1-modules-et-documentation/index.html#utilisation-des-modules",
    "title": "Chapitre 1: Modules et documentation",
    "section": "1 Utilisation des modules",
    "text": "1 Utilisation des modules\nLorsqu’on utilise Python, certaines fonctionnalités sont présentes par défaut, comme les fonctions print() et round().\nPar contre, pour certaines fonctionnalités jugées moins «indispensables», il est nécessaire d’importer des modules de code qui vont permettre de rajouter les fonctionnalités souhaitées.\nOn a par exemple déjà utilisé les modules math ou random, nous allons dans cet exemple utiliser le module statistics moins connu ajouté à partir de la version 3.4 de Python.\n# import du module\nimport statistics\n# affiche l'aide\nhelp(statistics)\nSupposons que l’on souhaite utiliser les fonctions mean() moyenne et stdev() :écart-type. Plusieurs solutions s’offrent à nous:\n\nImport du module et utilisation de son espace de noms avec une notation pointée(avec un point entre le nom du module et le nom de la fonction).\n\nimport statistics\nnotes = [11, 14, 18, 5, 12, 13, 15]\nprint(\"Moyenne:\", statistics.mean(notes))\nprint(\"Écart-type:\", statistics.stdev(notes))\nSORTIE\nMoyenne: 12.571428571428571\nÉcart-type: 4.035556254807296\nOn peut aussi renommer l’import avec le mot-clé as pour rendre le code plus lisible.\nimport statistics as stat\nnotes = [11, 14, 18, 5, 12, 13, 15]\nprint(\"Moyenne:\", stat.mean(notes))\nprint(\"Écart-type:\", stat.stdev(notes))\n\nVous pouvez également n’importer que les fonctions dont vous avez besoin.\n\nfrom statistics import mean, stdev\nnotes = [11, 14, 18, 5, 12, 13, 15]\nprint(\"Moyenne:\", mean(notes))\nprint(\"Écart-type:\", stdev(notes))\n\nUne autre méthode cependant déconseillée en raison de la pollution de l’espace des noms(de variables) est l’utilisation du * (wildcard, joker en anglais).\n\nfrom statistics import *\n# Toutes les objets du module sont disponibles sans notation pointée\nnotes = [11, 14, 18, 5, 12, 13, 15]\nprint(\"Moyenne:\", mean(notes))\nprint(\"Écart-type:\", stdev(notes))\n\n\n\n\n\n\n\nEn plus\n\n\n\n\n\n\nPython possède de très nombreux modules implémentés directement par l’équipe de développement de Python, c’est ce qu’on appelle la bibliothèque standard:\n\ndatetime: Types de base pour la date et l’heure\nrandom: Génère des nombres pseudo-aléatoires\nzipfile: Travailler avec des archives ZIP\n…\n\nLa liste est longue et ne cesse de s’allonger à chaque version de Python en fonction des demandes des utilisateurs.\nSi cependant vous ne trouvez pas votre bonheur dans la bibliothèque standard, python possède une communauté open-source importante qui propose des modules (et packages: ensembles de modules) sur Pypi, on trouvera parmi les milliers de projets certains noatbles:\n\npandas pour la manipulation de données.\ndjango pour créer des applications web.\nnumpy pour la manipulation de matrices ou tableaux multidimensionnels.\nscipy pour les applications scientifiques.\n…\n\nSi vous ne trouvez pas votre bonheur parmi ces packages vous devrez l’écrire!",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 4: Langages et programmation",
      "Chapitre 1: Modules et documentation"
    ]
  },
  {
    "objectID": "tg/nsi/4-langages-et-programmation/1-modules-et-documentation/index.html#notre-premier-module",
    "href": "tg/nsi/4-langages-et-programmation/1-modules-et-documentation/index.html#notre-premier-module",
    "title": "Chapitre 1: Modules et documentation",
    "section": "2 Notre premier module",
    "text": "2 Notre premier module\nNous allons créer un premier module dans un fichier fibo.py qui permet générer les nombres de la suite de Fibonacci.\nLa suite de Fibonacci est une suite de nombres entiers définie par récurrence.\nLes deux premiers termes sont 0 et 1, puis un terme est la somme des deux termes précédents.\nOn obtient ainsi les nombres dits de Fibonacci: 0, 1, 1, 2, 3, 5, 8, 13, 21…\nLa définition mathématique est:\nf0=0;f1=1;fn=fn−1+fn−2 pour n &gt; 1\nf_0 = 0; f_1 = 1; f_n = f_{n-1} + f_{n-2} \\text{ pour n &gt; 1}\n\n# Module sur les nombres de Fibonacci\n\ndef fib(n):    # affiche les nombres de Fibonacci jusqu'à n\n    a, b = 0, 1\n    while a &lt; n:\n        print(a, end=' ')\n        a, b = b, a+b\n    print()\n\ndef fib2(n):   # renvoie la liste des nombres de Fibonacci jusqu'à n\n    result = []\n    a, b = 0, 1\n    while a &lt; n:\n        result.append(a)\n        a, b = b, a+b\n    return result\nSi le module est correctement installé ou tout simplement présent dans le même dossier que celui ou vous exécutez python (cwd: Current Working Directory_).\nOn importe le module sous le nom fibo en python, l’extension ne doit pas être précisée.\nLes imports fonctionnent comme d’habitude.\n\nSoit en important le module directement et en utilisant des notations pointées;\nimport fibo\nfibo.fib(1000)\n# affiche 0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987\nfibo.fib2(100)\n# renvoie [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]\nsoit en important spécifiquement des fonctions pour pouvoir les utiliser sans rappeler le module d’origine.\nfrom fibo import fib, fib2\nfib(1000)\n# affiche 0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987\nfib2(100)\n# renvoie [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 4: Langages et programmation",
      "Chapitre 1: Modules et documentation"
    ]
  },
  {
    "objectID": "tg/nsi/4-langages-et-programmation/1-modules-et-documentation/index.html#documentation-et-commentaires",
    "href": "tg/nsi/4-langages-et-programmation/1-modules-et-documentation/index.html#documentation-et-commentaires",
    "title": "Chapitre 1: Modules et documentation",
    "section": "3 Documentation et commentaires",
    "text": "3 Documentation et commentaires\nNous avons déjà vu en première comment prototyper des fonctions pour décrire le rôle de la fonction, le type des paramètres et le type de la valeur de retour. C’est ce que l’on appelle une docstring.\nLes docstrings sont utilisées pour afficher les documentations en ligne ou directement dans Python avec la fonction help()\nPour documenter un module, il suffit de créer la docstring au début du fichier en utilisant les chaines de caractères multilignes délimitées par \"\"\", pour une lecture aisée on limite souvent le nombre de caractères par ligne à 80(ou 100 suivant les projets).\nSi on prend l’exemple précédent on pourrait le documenter avec une description générale au début du module ainsi qu’une liste des fonctions, et en pensant à documenter également les fonctions bien sûr.\nLes fonctions ont également été renommées pour être plus explicites:\n\nfib: fib_print\nfib2: fib_to_array\n\n\"\"\" Module fibo relatif à la création de nombres de Fibionacci\n\nPour rappel, la suite de Fibonacci est une suite d'entiers dans laquelle chaque terme est la somme \ndes deux termes qui le précèdent.(voir: https://fr.wikipedia.org/wiki/Suite_de_Fibonacci)\n\nCe module présente deux fonctions:\n\n- fib_print: affiche les nombres de Fibionacci\n- fib_to_array: renvoie la liste des nombres de Fibionacci\n\n\"\"\"\n\ndef fib_print(n):\n    \"\"\"Affiche les nombres de Fibionacci\n\n    Arguments\n    ---------\n    n: int\n        dernier rang de la suite de Fibonacci affiché\n    \"\"\"\n    a, b = 0, 1\n    while a &lt; n:\n        print(a, end=' ')\n        a, b = b, a+b\n    print()\n\ndef fib_to_array(n):\n    \"\"\"Renvoie la liste des nombres de Fibionacci\n\n    Arguments\n    ---------\n    n: int\n        dernier rang de la suite de Fibonacci renvoyé dans la liste\n    \n    Returns\n    -------\n    list\n        La liste des nombres de Fibionnaci jusqu'au rang n\n    \"\"\"\n    result = []\n    a, b = 0, 1\n    while a &lt; n:\n        result.append(a)\n        a, b = b, a+b\n    return result\n\n\n\n\n\n\n\nEn plus: Documentation et commentaires\n\n\n\n\n\n\nAttention à bien distinguer:\n\nLa documentation qui est destinée aux utilisateurs du programme.\nLes commentaires qui sont destinés aux programmeurs lisant le code.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 4: Langages et programmation",
      "Chapitre 1: Modules et documentation"
    ]
  },
  {
    "objectID": "tg/nsi/4-langages-et-programmation/1-modules-et-documentation/index.html#annotations-de-types",
    "href": "tg/nsi/4-langages-et-programmation/1-modules-et-documentation/index.html#annotations-de-types",
    "title": "Chapitre 1: Modules et documentation",
    "section": "4 Annotations de types",
    "text": "4 Annotations de types\nDepuis la version 3.5, Python propose des annotations de types dans les fonctions.\n\ndef dit_bonjour(nom: str) -&gt; str:\n    return 'Bonjour ' + nom\nCette fonction prend en paramètre un nom de type chaîne de caractères str et renvoie également une chaine de caractères str.\n\nOn peut ainsi rendre plus compacte la documentation de nos fonctions.\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nProposer des annotations de type pour nos deux fonctions du module fibo.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 4: Langages et programmation",
      "Chapitre 1: Modules et documentation"
    ]
  },
  {
    "objectID": "tg/nsi/4-langages-et-programmation/1-modules-et-documentation/index.html#api-application-programming-interface",
    "href": "tg/nsi/4-langages-et-programmation/1-modules-et-documentation/index.html#api-application-programming-interface",
    "title": "Chapitre 1: Modules et documentation",
    "section": "5 API (Application Programming Interface)",
    "text": "5 API (Application Programming Interface)\nLorsqu’un projet grandit, il y a de plus en plus de personnes qui doivent travailler dessus et l’utiliser et il devient de plus en plus complexe à comprendre. C’est pour cela qu’une bonne documentation est indispensable, mais aussi une bonne organisation du code afin de le rendre plus facile à utiliser.\nIl conviendra de bien organiser les divers modules et fonctions accessibles, ce qu’on appelle l’API.\nLa liste des fonctions disponibles dans l’API est disponible avec la fonction dir().\n\nimport math\ndir(math)\nSORTIE\n['__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atan2', 'atanh', 'ceil', 'comb', 'copysign', 'cos', 'cosh', 'degrees', 'dist', 'e', 'erf', 'erfc', 'exp', 'expm1', 'fabs', 'factorial', 'floor', 'fmod', 'frexp', 'fsum', 'gamma', 'gcd', 'hypot', 'inf', 'isclose', 'isfinite', 'isinf', 'isnan', 'isqrt', 'lcm', 'ldexp', 'lgamma', 'log', 'log10', 'log1p', 'log2', 'modf', 'nan', 'nextafter', 'perm', 'pi', 'pow', 'prod', 'radians', 'remainder', 'sin', 'sinh', 'sqrt', 'tan', 'tanh', 'tau', 'trunc', 'ulp']\n\n\n\n\n\n\n\n\nEn plus: Fonctions privées\n\n\n\n\n\n\nOn définit parfois certaines fonctions juste pour pouvoir développer notre module, ces fonctions ne sont pas destinées à être utilisées par les utilisateurs de notre module, elles sont dites privées.\nPython permet de «cacher» ces fonctions de l’API, pour cela il faut que leur nom commence par un tiret bas _.\ndef _privée():\n    print(\"Je suis cachée et n'apparait pas dans la documentation\")\nAttention, la fonction reste accessible malgré tout, elle n’est juste pas documentée ni importée lors des imports avec le jocker: from module import *\n\n\n\n\n\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nOn peut prendre l’exemple de la bibliothèque open-source sklearn connue pour la qualité de son code, de son API et de sa documentation.\nhttps://scikit-learn.org/stable/modules/classes.html\nUtiliser la documentation de sklearn pour implémenter la recherche des k-plus proches voisins vue en classe première en utilisant le jeu de données sur les joueurs du top-14 ici.\n\n\n\n\n\n\n\nDocumentation python sur les modules\nA Guide to NumPy/SciPy Documentation",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 4: Langages et programmation",
      "Chapitre 1: Modules et documentation"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/5-graphes/quiz/index.html",
    "href": "tg/nsi/1-structures-de-donnees/5-graphes/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 5: Graphes*",
      "Quiz"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/5-graphes/exo/index.html",
    "href": "tg/nsi/1-structures-de-donnees/5-graphes/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Un de vos amis travaille pour un distributeur d’électricité.\nIl doit proposer à son supérieur une représentation du réseau reliant différentes villes. Comme il n’y arrive pas trop, il voudrait que vous la lui fassiez.\nPour simplifier le problème, il a déjà renommé les villes en A, B, C, D, E et F. De plus, il vous donne les informations suivantes :\n\nla ville A est reliée par un réseau électrique aux villes B, E et F,\nla ville B est reliée par un réseau électrique aux villes A, C et D,\nla ville C est reliée par un réseau électrique aux villes B, D, E et F,\nla ville D est reliée par un réseau électrique aux villes B, C et F,\nla ville E est reliée par un réseau électrique aux villes A, C et F,\nla ville F est relié par un réseau électrique aux villes A, C, D et E.\n\n\nProposer un graphe qui modélise la situation.\nCe graphe est-il complet ? Pourquoi ?\n\nCC-BY-SA-NC Mon lycée numérique",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 5: Graphes*",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/5-graphes/exo/index.html#graphe-dun-réseau-électrique",
    "href": "tg/nsi/1-structures-de-donnees/5-graphes/exo/index.html#graphe-dun-réseau-électrique",
    "title": "Exercices",
    "section": "",
    "text": "Un de vos amis travaille pour un distributeur d’électricité.\nIl doit proposer à son supérieur une représentation du réseau reliant différentes villes. Comme il n’y arrive pas trop, il voudrait que vous la lui fassiez.\nPour simplifier le problème, il a déjà renommé les villes en A, B, C, D, E et F. De plus, il vous donne les informations suivantes :\n\nla ville A est reliée par un réseau électrique aux villes B, E et F,\nla ville B est reliée par un réseau électrique aux villes A, C et D,\nla ville C est reliée par un réseau électrique aux villes B, D, E et F,\nla ville D est reliée par un réseau électrique aux villes B, C et F,\nla ville E est reliée par un réseau électrique aux villes A, C et F,\nla ville F est relié par un réseau électrique aux villes A, C, D et E.\n\n\nProposer un graphe qui modélise la situation.\nCe graphe est-il complet ? Pourquoi ?\n\nCC-BY-SA-NC Mon lycée numérique",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 5: Graphes*",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/5-graphes/exo/index.html#représentation-dun-graphe-non-orienté",
    "href": "tg/nsi/1-structures-de-donnees/5-graphes/exo/index.html#représentation-dun-graphe-non-orienté",
    "title": "Exercices",
    "section": "2 Représentation d’un graphe non orienté",
    "text": "2 Représentation d’un graphe non orienté\nVoici un ensemble des relations :\n\nA est ami avec tout le monde sauf G,\nB est ami avec A, D et H,\nC est ami avec A, F, G et H,\nD est ami avec A, B et H,\nE est ami avec A et H,\nF est ami avec A et C,\nG est ami avec C et H,\nH est ami avec A, B, C, D, E et G.\n\n\nReprésenter ce graphe et vérifier qu’il est non orienté.\nImplémenter ce graphe sous la forme d’un dictionnaire de liste dans lequel chaque clé représente le nœud étudié et les sommets adjacents sont représentés sous la forme d’une liste.\nÉcrire la matrice d’adjacence et vérifier qu’elle est symétrique(on utilisera l’ordre alphabétique pour indexer les nœuds).\nImplémenter la matrice en python sous la forme d’une liste de liste.\n\nCC-BY-SA-NC Mon lycée numérique",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 5: Graphes*",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/5-graphes/exo/index.html#représentation-dun-graphe-orienté",
    "href": "tg/nsi/1-structures-de-donnees/5-graphes/exo/index.html#représentation-dun-graphe-orienté",
    "title": "Exercices",
    "section": "3 Représentation d’un graphe orienté",
    "text": "3 Représentation d’un graphe orienté\nVoici un ensemble de relations de suivi sur un réseau social.\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nRéseau social d’amis avec suivi\n\n\n\nImplémenter ce graphe sous la forme d’un dictionnaire de liste dans lequel chaque clé représente le nœud étudié et les sommets successeurs sont représentés sous la forme d’une liste.\nÉcrire la matrice d’adjacence et vérifier qu’elle n’est pas symétrique(on utilisera l’ordre alphabétique pour indexer les nœuds).",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 5: Graphes*",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/5-graphes/exo/index.html#représentation-et-parcours-dun-graphe-pondéré-non-orienté",
    "href": "tg/nsi/1-structures-de-donnees/5-graphes/exo/index.html#représentation-et-parcours-dun-graphe-pondéré-non-orienté",
    "title": "Exercices",
    "section": "4 Représentation et parcours d’un graphe pondéré non orienté",
    "text": "4 Représentation et parcours d’un graphe pondéré non orienté\nVoici un graphe représentant les distances dans le réseau sud-est.\n\n\n\nRéseau sud-Est\n\n\n\nImplémenter ce graphe sous la forme d’un dictionnaire de liste dans lequel chaque clé représente le nœud étudié et les sommets adjacents sont représentés sous la forme d’une liste de dictionnaires clé(sommet adjacent): valeur(distance).\nÉcrire la matrice d’adjacence et vérifier qu’elle est symétrique(on utilisera l’ordre alphabétique pour indexer les nœuds).\nProposer un algorithme qui renvoie tous les chemins possibles pour aller de Nice à Lyon sans jamais passer deux fois par la même ville. On utilisera trois paramètres d’entrée: le graphe implémenté sous la forme d’un dictionnaire d’adjacence comme celui de la question 2 et les deux villes de départ et d’arrivée.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 5: Graphes*",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/3-structures-lineaires-piles-files/index.html",
    "href": "tg/nsi/1-structures-de-donnees/3-structures-lineaires-piles-files/index.html",
    "title": "Chapitre 3: Structures linéaires: piles, files",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nStructures de données, interface et implémentation.\nSpécifier une structure de données par son interface.\nDistinguer interface et implémentation.\nÉcrire plusieurs implémentations d’une même structure de données.\nL’abstraction des structures de données est introduite après plusieurs implémentations d’une structure simple comme la file (avec un tableau ou avec deux piles).\n\n\nListes, piles, files : structures linéaires.\nDistinguer des structures par le jeu des méthodes qui les caractérisent.\nChoisir une structure de données adaptée à la situation à modéliser.\nOn distingue les modes FIFO(`first_ in first out) et LIFO (last in first out) des piles et des files.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 3: Structures linéaires: piles, files"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/3-structures-lineaires-piles-files/index.html#les-piles-lifo",
    "href": "tg/nsi/1-structures-de-donnees/3-structures-lineaires-piles-files/index.html#les-piles-lifo",
    "title": "Chapitre 3: Structures linéaires: piles, files",
    "section": "1 Les piles: LIFO",
    "text": "1 Les piles: LIFO\nLes piles(stacks en anglais) correspondent exactement à la notion de pile dans la vie courante:\n\nUne pile de cartes,\nUne pile d’assiettes…\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nLa pile est une structure de données LIFO: dernier arrivé premier sorti. Public domain via Wikimedia Commons\nPour ajouter un élément on l’empile, il se retrouve donc au-dessus, et pour retirer un élément on ne peut retirer que l’élément se trouvant au sommet de la pile.\nEn anglais on dit last in, first out ou LIFO pour dire: dernier arrivé premier sorti.\n\nCe type de structure de données est par exemple utilisé dans:\n\nles éditeurs avec la fonction Annuler (CTRL+Z)\nles navigateurs pour reculer d’une page.\nles compilateurs et interpréteurs pour évaluer des séries de fonctions (voir fonctions récursives)\nSans l’évaluation des expressions mathématiques avec parenthèses ((ax + b) * c)\n\n\n\n1.1 Interface\nUne pile est définie par l’interface comprenant les opérations suivantes:\n\nConsulter le dernier élément de la pile: sommet()\nSavoir si la pile est vide: est_vide()\nEmpiler un élément pour le mettre au sommet de la pile: empiler(élément).\nDépiler un élément pour le retirer du sommet de la pile: dépiler().\n\n\nLes méthodes empiler et dépiler doivent s’effectuer en temps constant (Complexité O(1)O(1))\n\n\n\n1.2 Implémentation en Python\nL’objet list en Python présente deux méthodes qui lui permettent d’implémenter la pile:\n\nlist.append(el): ajoute l’élément en fin de liste.\nlist.pop(): supprime le dernier élément de la liste et le renvoie.\n\nDe plus ces deux méthodes s’effectuent en temps constant (voir ce tableau pour plus de détails.)\npile = [3, 4, 5]\npile.append(6)\npile.append(7)\n\nprint(pile)    # affiche [3, 4, 5, 6, 7]\npile.pop()     # renvoie 7\nprint(pile)    # affiche [3, 4, 5, 6]\npile.pop()     # renvoie 6\npile.pop()     # renvoie 5\nprint(pile)    # affiche [3, 4]\nDocumentation de Python\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nCréer une classe Pile qui implémente le type abstrait pile en stockant les données de la pile dans un attribut privé _data de type list. Voir cet exercice pour plus de détails.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 3: Structures linéaires: piles, files"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/3-structures-lineaires-piles-files/index.html#les-files-fifo",
    "href": "tg/nsi/1-structures-de-donnees/3-structures-lineaires-piles-files/index.html#les-files-fifo",
    "title": "Chapitre 3: Structures linéaires: piles, files",
    "section": "2 Les files: FIFO",
    "text": "2 Les files: FIFO\nLes files(queues en anglais) correspondent également à la notion de file dans la vie courante:\n\nUne file d’attente à la caisse,\nà un feu rouge…\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nLa file est une structure de données FIFO: premier arrivé premier sorti.©  CC BY-SA 3.0 via Wikimedia Commons\nLorsqu’on ajoute un élément, celui-ci se retrouve à la fin de la file, et on retire les éléments dans l’ordre dans lequel ils sont arrivés.\nEn anglais on dit first in, first out ou FIFO pour dire: premier arrivé premier sorti.\n\nCe type de structure de données est par exemple utilisé dans:\n\nUn gestionnaire d’impression pour ordonner l’ordre des impressions.\nUn processeur pour planifier l’ordre des opérations.\nUn serveur web pour ordonner les réponses en fonction de l’ordre des demandes.\n\n\n\n2.1 Interface\nUne file est une liste sur laquelle on autorise seulement 4 opérations:\n\nConsulter le premier élément de la file: la tête: tête().\nTester si la file est vide: est_vide().\nEnfiler un nouvel élément: le mettre en dernier dans la queue: enfiler(élément).\nDéfiler un élément, supprimer et renvoyer le premier élément: défiler().\n\n\nLes méthodes enfiler et défiler doivent s’effectuer en temps constant (Complexité O(1)O(1))\n\n\n\n2.2 Implémentation en Python\nL’objet list en Python présente deux méthodes qui lui permettent d’implémenter la file:\n\nlist.append(el): ajoute l’élément en fin de liste.\nlist.pop(0): supprime le premier élément de la liste et le renvoie.\n\nToutefois, les listes ne sont pas très efficaces pour réaliser ce type de traitement. Alors que les ajouts et suppressions en fin de liste sont rapides, les opérations d’insertions ou de retraits en début de liste sont lentes (car tous les autres éléments doivent être décalés d’une position O(n)O(n)).\nPour implémenter une file avec des opérations en temps constant O(1)O(1), on peut utiliser la classe collections.deque. Les deques sont une généralisation des piles et des files appelée liste chainée double (en anglais double-ended queue).\nfrom collections import deque\nqueue = deque()\n# On considère une file allant de gauche à droite\n# on enfile à gauche\nqueue.appendleft(\"Jobi\")    # enfile 'Jobi'\nqueue.appendleft(\"Joba\")    # enfile 'Joba'\n\n# L'élément en tête est à droite au dernier indice\nprint(queue[-1])            # affiche \"Jobi\"\n\n# on défile à droite\nqueue.pop()                 # défile 'Jobi' et le renvoie\nprint(queue[-1])            # affiche \"Joba\" qui est en tête de queue maintenant\nqueue.pop()                 # défile 'Joba' et le renvoie\n\n# on vérifie que la queue est bien vide\nlen(queue) == 0             # renvoie True\nDocumentation de Python\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nCréer une classe File qui implémente le type abstrait file en stockant les données de la file dans un attribut privé _data de type collections.deque. Voir cet exercice pour plus de détails.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 3: Structures linéaires: piles, files"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/3-structures-lineaires-piles-files/index.html#comment-réaliser-une-boucle",
    "href": "tg/nsi/1-structures-de-donnees/3-structures-lineaires-piles-files/index.html#comment-réaliser-une-boucle",
    "title": "Chapitre 3: Structures linéaires: piles, files",
    "section": "3 Comment réaliser une boucle?",
    "text": "3 Comment réaliser une boucle?\nL’interface des piles et files étant volontairement très réduite, il est impossible d’accéder aux éléments présents au milieu sans les sortir.\nDonc pour itérer sur les éléments, on les retire jusqu’à ce que la structure soit vide.\n\n3.1 Avec une pile\nwhile not pile.est_vide():\n    e = pile.dépiler()\nL’ordre de sortie est l’inverse de l’ordre d’entrée.\n# instanciation\npile = []\n\n# empile au sommet Jobi Joba\npile.append('Jobi')\npile.append('Joba')\n\n# dépile tout\nwhile len(pile) &gt; 0:\n    e = pile.pop()\n    print(e, end=' | ')\nSortie Joba | Jobi |\n\n\n3.2 Avec une file\nwhile not file.est_vide():\n    e = file.défiler()\nL’ordre de sortie est le même que l’ordre d’entrée.\nfrom collections import deque\n# instanciation\nfile = deque()\n\n# enfile à gauche  Jobi Joba\nfile.appendleft('Jobi')\nfile.appendleft('Joba')\n\n# défile tout\nwhile len(file) &gt; 0:\n    e = file.pop()\n    print(e, end=' | ')\nSortie Jobi | Joba |",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 3: Structures linéaires: piles, files"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/2-programmation-objet/quiz/index.html",
    "href": "tg/nsi/1-structures-de-donnees/2-programmation-objet/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Cet exercice est extrait du cours [Découvrez la programmation orientée objet avec\nPython](https://openclassrooms.com/fr/courses/4302126-decouvrez-la-programmation-orientee-objet-avec-python?status=published)\nproposé par le site [OpenClassroom](https://openclassrooms.com) sous licence CC-BY-SA.\n\n1. Un attribut est:\n\n   - [x] une caractéristique d'un objet, par exemple la taille d'un bateau.\n   - [ ] une fonctionnalité de mon programme, par exemple la possibilité de télécharger les résultats d'un jeu de bataille navale.\n\n2. Une méthode est:\n\n   - [ ] un guide commun à toutes les actions réalisées par mon programme et qui les aide à se coordonner.\n   - [x] une action réalisée par un objet, par exemple le déplacement d'un bateau de la case A6 à la case B12.\n\n3. En programmation orientée objet, un objet est...\n\n   - [ ] un ensemble d'atomes que je peux, moi, humain, déplacer de mes propres mains.\n   - [x] un concept qui représente un ensemble de données et qui en contrôle l'accès.\n\n4. Une classe a des attributs et des méthodes.\n\n   - [x] Vrai\n   - [ ] Faux\n\n5. Une classe est :\n\n   - [ ] une salle dans laquelle se réunissent les élèves apprenant à coder.\n   - [x] la représentation d'un objet en programmation.\n\n6. Pour créer la classe `Fruit`, vous écrivez :\n\n   - [x] `class Fruit:`\n   - [ ] `classe Fruit()`\n   - [ ] `class Fruit():`\n   - [ ] `class Fruit`\n\n7. Créer l'instance d'une classe s'écrit ainsi :\n\n   - [ ] `banane = fruit`\n   - [ ] `banane = Fruit`\n   - [x] `banane = Fruit()`\n\n\n8. Vous pouvez créer autant d'instances d'une classe que vous le souhaitez.\n\n   - [x] Vrai\n   - [ ] Faux",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 2: Programmation objet",
      "Quiz"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/2-programmation-objet/exo/index.html",
    "href": "tg/nsi/1-structures-de-donnees/2-programmation-objet/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Créez une classe Voiture avec deux attributs d’instance:\n\ncouleur, qui stocke la couleur de la voiture sous forme de chaîne de caractères\nkilometrage, qui stocke le nombre de kilomètres sur la voiture sous forme d’entier.\n\nEnsuite, instanciez deux objets Voiture - une voiture bleue de 20 000 kilomètres et une voiture rouge de 30 000 kilomètres. Affichez ensuite leurs couleurs et leur kilométrage. Votre sortie devrait ressembler à ceci:\nLa voiture bleue a 20 000 kilomètres.\nLa voiture rouge a 30 000 kilomètres.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 2: Programmation objet",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/2-programmation-objet/exo/index.html#création-instanciation-et-représentation-dune-classe",
    "href": "tg/nsi/1-structures-de-donnees/2-programmation-objet/exo/index.html#création-instanciation-et-représentation-dune-classe",
    "title": "Exercices",
    "section": "",
    "text": "Créez une classe Voiture avec deux attributs d’instance:\n\ncouleur, qui stocke la couleur de la voiture sous forme de chaîne de caractères\nkilometrage, qui stocke le nombre de kilomètres sur la voiture sous forme d’entier.\n\nEnsuite, instanciez deux objets Voiture - une voiture bleue de 20 000 kilomètres et une voiture rouge de 30 000 kilomètres. Affichez ensuite leurs couleurs et leur kilométrage. Votre sortie devrait ressembler à ceci:\nLa voiture bleue a 20 000 kilomètres.\nLa voiture rouge a 30 000 kilomètres.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 2: Programmation objet",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/2-programmation-objet/exo/index.html#des-classes-cinématographiques",
    "href": "tg/nsi/1-structures-de-donnees/2-programmation-objet/exo/index.html#des-classes-cinématographiques",
    "title": "Exercices",
    "section": "2 Des classes cinématographiques",
    "text": "2 Des classes cinématographiques\nOn considère les définitions de classe suivantes:\nclass Personne:\n    \"\"\"Objet représentant une personne\"\"\"\n\n    def __init__(self, nom: str, année_naissance: int, lieu_naissance: str):\n        self.nom = nom\n        self.année_naissance = année_naissance\n        self.lieu_naissance = lieu_naissance\n\n\nclass Film:\n    \"\"\"Objet représentant un film\"\"\"\n\n    def __init__(self, titre: str, réalisateur: Personne):\n        self.titre = titre\n        self.réalisateur = réalisateur\n\nComment créer une instance de la classe Personne appelée lautner pour le réalisateur Georges Lautner né en 1926 à Nice?\nProposer la définition d’une méthode __str__ dans la classe Personne qui afficherait \"Georges Lautner est une personne née à Nice en 1926\" lors de l’appel print(lautner).\nOn crée une instance de la classe Film avec l’instruction suivante: tonton = Film(\"Les tontons flingueurs\", lautner).\n\nQu’affiche l’instruction: print(tonton.titre) ?\nQu’affiche l’instruction: print(tonton.réalisateur.nom) ?\nProposer la définition d’une méthode __str__ dans la classe Film qui afficherait \"Les tontons flingeurs est un film réalisé par Georges Lautner originaire de Nice\" lors de l’appel print(tonton).",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 2: Programmation objet",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/0-revisions/quiz/index.html",
    "href": "tg/nsi/1-structures-de-donnees/0-revisions/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 0: Révisions",
      "Quiz"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/0-revisions/exo/index.html",
    "href": "tg/nsi/1-structures-de-donnees/0-revisions/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Pas d’exercice pour l’instant.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 0: Révisions",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/1-interface-et-implementation/index.html",
    "href": "tg/nsi/1-structures-de-donnees/1-interface-et-implementation/index.html",
    "title": "Chapitre 1: Interface et implémentation",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nStructures de données, interface et implémentation.\nSpécifier une structure de données par son interface.\nDistinguer interface et implémentation.\nÉcrire plusieurs implémentations d’une même structure de données.\nL’abstraction des structures de données est introduite après plusieurs implémentations d’une structure simple comme la file (avec un tableau ou avec deux piles).\n\n\nListes, piles, files : structures linéaires.\nDictionnaires, index et clé.\nDistinguer des structures par le jeu des méthodes qui les caractérisent.\nChoisir une structure de données adaptée à la situation à modéliser.\nDistinguer la recherche d’une valeur dans une liste et dans un dictionnaire.\n_",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 1: Interface et implémentation"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/1-interface-et-implementation/index.html#les-tableaux-list-en-python",
    "href": "tg/nsi/1-structures-de-donnees/1-interface-et-implementation/index.html#les-tableaux-list-en-python",
    "title": "Chapitre 1: Interface et implémentation",
    "section": "1 Les tableaux: (list en python)",
    "text": "1 Les tableaux: (list en python)\nEn première, nous avons déjà rencontré les tableaux(tableaux dynamiques pour être plus précis), qui sont des séquences d’éléments ordonnés auxquels on peut accéder facilement par leur index.\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nUn tableau est une suite de données ordonnées auxquelles on accéde par un index(un entier). Public domain via Wikimedia Commons \nEn python les tableaux sont implémentés par l’objet list dont les éléments sont séparés par une virgule et entourés de crochets.\n# création\nma_liste = [1, \"deux\", 3.0]\n# accès aux élements par index\nma_liste[1] # renvoie \"deux\"!\nLes listes étant mutables, on peut ajouter ou supprimer des éléments après création.\n\nAjout d’un élément à l’index souhaité :\n\n# ajout avec la méthode `insert()`\nma_liste.insert(0, \"zéro\")\nma_liste # renvoie ['zéro', 1, 'deux', 3.0]\n\nSuppression d’un élément à l’index souhaité :\n\n# suppression avec la méthode `pop()`\nma_liste.pop(2)\nma_liste # renvoie ['zéro', 1, 3.0]\n\nIl est également fréquent de souhaiter connaitre la longueur de la liste :\n\n# longueur avec la fonction `len()`\nlen(ma_liste) # renvoie 3 puisque ['zéro', 1, 3.0]\n\n\n\n\n\n\n\nEn plus: Une liste est-elle vide en Python?\n\n\n\n\n\n\nPython étant un langage à type dynamique, il peut convertir le type d’une valeur en un autre suivant la situation. Ainsi si une liste se retouve dans une situation ou un booléen est attendu(if liste: ... while liste:), il convertira:\n\nla liste vide en: False\nune liste non vide en: True\n\nDonc vérifier si une liste est vide peut-être simplement fait avec bool(liste).",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 1: Interface et implémentation"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/1-interface-et-implementation/index.html#différence-entre-interface-et-implémentation",
    "href": "tg/nsi/1-structures-de-donnees/1-interface-et-implementation/index.html#différence-entre-interface-et-implémentation",
    "title": "Chapitre 1: Interface et implémentation",
    "section": "2 Différence entre interface et implémentation",
    "text": "2 Différence entre interface et implémentation\nLes quatre méthodes qui ont été définies dans la classe list en Python: len, pop, insert sont ce que l’on appelle une implémentation de la structure de donnée tableau.\n\n\nImplémentation\n\n\n\nL’implémentation d’une structure de données ou d’un algorithme est une mise en œuvre pratique dans un langage de programmation.\n\n\n\nIl existe de nombreux langages de programmation qui implémentent le type abstrait tableautableau, nous avions vu l’année dernière les différences d’implémentation entre les list de Python et les Array de javascript.\nCependant, on retrouve des méthodes similaires qui sont ce que l’on appelle l’interface de la structure de données tableautableau:\n\n« Insérer » : ajoute un élément dans le tableau à l’index souhaité. ajout(index, élément);\n« Retirer » : retire un élément de le tableau à l’index souhaité. suppr(index);\n« Le tableau est-il vide ? » : renvoie « vrai » si le tableau est vide, « faux » sinon. est_vide();\n« Nombre d’éléments dans le tableau » : renvoie le nombre d’éléments dans le tableau. longueur().\n\nArticle Wikipedia sur les listes\n\n\nInterface\n\n\n\nL’interface d’une structure de données est la spécification des méthodes pouvant être appliquées sur cette structure de données.\n\n\n\n\n\n\n\n\n\n\nEn plus: Vers le pseudo-langage\n\n\n\n\n\n\nL’intérêt de définir des structures de données avec une interface commune est de pouvoir écrire des algorithmes sur le papier en utilisant l’interface définie.\nOn utilise alors un pseudo-langage plus ou moins proche de la langue naturelle qui pourra être implémenté dans tous les langages de programmation ayant défini la structure de données.\n\n\n\n\n\n\n\n\n\n\n\n\nApplication: Implémentation d'un tableau en python\n\n\n\n\n\n\nCréer une classe Tableau qui implémente les quatre méthodes ci-dessus en stockant les données du tableau dans un attribut appelé data de type liste.\nPour aller plus loin, faire l’exercice 2.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 1: Interface et implémentation"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/1-interface-et-implementation/index.html#les-tableaux-associatifs-dictionnaires-en-python",
    "href": "tg/nsi/1-structures-de-donnees/1-interface-et-implementation/index.html#les-tableaux-associatifs-dictionnaires-en-python",
    "title": "Chapitre 1: Interface et implémentation",
    "section": "3 Les Tableaux associatifs: (dictionnaires en Python)",
    "text": "3 Les Tableaux associatifs: (dictionnaires en Python)\nUn dictionnaire, est un type de données associant à un ensemble de clés, un ensemble de valeurs correspondantes.\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nDans tableau associatif, on accéde aux données par une clé(chaîne de caractère), ils ne sont généralement pas ordonnés. Public domain via Wikimedia Commons \nIl s’agit de l’implémentation d’une structure de données abstraite appelée tableau associatif.\n\n3.1 Interface\nLes opérations usuellement fournies par un tableau associatif sont :\n\najout : association d’une nouvelle valeur à une nouvelle clef ;\nmodification : association d’une nouvelle valeur à une ancienne clef ;\nsuppression : suppression d’une clef ;\nrecherche : détermination de la valeur associée à une clef, si elle existe.\n\nArticle Wikipedia sur le Tableau associatif\n\n\n3.2 Implémentation en python\nLes dictionnaires font partie de la bibliothèque standard de Python grâce à la classe dict vue en première.\n# création du dictionnaire\npersonne = {\"nom\": \"Lagaffe\", \"prenom\": \"Gaston\", \"age\": 27, \"rigolo\": True}\n# accès à une valeur\npersonne['age'] # renvoie 27\nLes dictionnaires étant mutables, on peut ajouter supprimer ou modifier une valeur à un dictionnaire déjà créé:\n# ajout d'une clé\npersonne[\"dessinateur\"] = \"André Franquin\"\n# suppression d'une clé\ndel personne[\"rigolo\"]\n# modification d'une clé\npersonne[\"age\"] = 28\n# accès à une valeur\npersonne['age'] # renvoie 28\nLa recherche d’une valeur d’une valeur est traitée ci-après comme le propose le programme officiel.\n\n\n\n\n\n\n\nEn plus: Différentes implémentations des dictionnaires\n\n\n\n\n\n\nL’article anglais de wikipédia compare diverses implémentations des tableaux associatifs.\nhttps://en.wikipedia.org/wiki/Associative_array#Comparison\n\ntable de hachage\narbres binaires de recherche équilibrés ou non\nliste chaînée…\n\nEn fonction des implémentations utilisées, les opérations de recherche ou d’ajouts sont plus ou moins couteuses en temps:\n\ntemps fixe: O(1)O(1)\ntemps logarithmique O(logn)O(\\log n)\ntemps linéaire O(n)O(n)",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 1: Interface et implémentation"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/1-interface-et-implementation/index.html#recherche-dune-valeur",
    "href": "tg/nsi/1-structures-de-donnees/1-interface-et-implementation/index.html#recherche-dune-valeur",
    "title": "Chapitre 1: Interface et implémentation",
    "section": "4 Recherche d’une valeur",
    "text": "4 Recherche d’une valeur\nLes méthodes d’itération diffèrent légèrement entre les listes et le dictionnaire en Python.\n\n4.1 Dans une liste\n# on crée une liste vide par compréhension\npaires = [2*i for i in range(10)]\nprint(paires) # affiche [0, 2, 4, 6, 8, 10, 12, 14, 16, 18]\n\ndef recherche_liste(liste, élément):\n    # itération sur les valeurs de la liste\n    for e in liste:\n        if e == élément:\n            return True\n    return False\n\n# Appels de la fonction\nrecherche_liste(paires, 3) # renvoie False\nrecherche_liste(paires, 8) # renvoie True\n\n\n\n\n\n\n\nEn plus: Avec le mot-clé in\n\n\n\n\n\n\nOn peut utiliser le mot-clé in pour tester la présence d’une valeur dans la liste:\n&gt;&gt;&gt; 8 in paires\nTrue\n&gt;&gt;&gt; 7 in paires\nFalse\n\n\n\n\n\n\n\n4.2 Dans un dictionnaire\nIl existe trois méthodes d’itération sur les dictionnaires vues en première:\n\nItération sur les clés: keys()\nItération sur les valeurs: values()\nItération sur les paires clé, valeurs: items()\n\nPour rechercher une valeur, une itération sur les valeurs suffit.\npersonne = {'nom': 'Lagaffe', 'prenom': 'Gaston', 'age': 28, 'dessinateur': 'André Franquin'}\n\ndef recherche_dict(dico, valeur):\n    for val in dico.values():\n        if val == valeur:\n            return True\n    return False\n\nrecherche_dict(personne, 'André Franquin') # renvoie True\nrecherche_dict(personne, 'Lagafe') # renvoie False\n\n\n\n\n\n\n\nEn plus: Avec le mot-clé in\n\n\n\n\n\n\nLe mot-clé in teste l’opérande parmi les clés et non les valeurs.\n&gt;&gt;&gt; 'André Franquin' in personne\nFalse\n&gt;&gt;&gt; 'dessinateur' in personne\nTrue",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 1: Interface et implémentation"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/1-interface-et-implementation/index.html#complexité-des-opérations",
    "href": "tg/nsi/1-structures-de-donnees/1-interface-et-implementation/index.html#complexité-des-opérations",
    "title": "Chapitre 1: Interface et implémentation",
    "section": "5 Complexité des opérations",
    "text": "5 Complexité des opérations\nNous avons déjà défini la complexité temporelle d’un algorithme qui consiste à compter le nombre d’opérations élémentaires effectuées par un algorithme pour aboutir au résultat souhaité.\nNous allons préciser ici ce que l’on entend par opération élémentaire, car parfois lorsque l’on tape une opération celle-ci n’est pas élémentaire.\n\nUne opération est élémentaire si elle a une complexité O(1)O(1).\n\n\n5.1 Cas des listes\n\n\n\n    Opération\n  Exemple\nComplexité\n\n\n\n\nAjout à la fin\nliste.append(e)\nO(1)O(1)\n\n\nInsertion d’un élément\nliste.insert(i, e)\nO(n)O(n)\n\n\nSuppression à la fin\nliste.pop()\nO(1)O(1)\n\n\nSuppression au milieu\nliste.pop(i)\nO(n)O(n)\n\n\nAccès à un élément\nliste[i]\nO(1)O(1)\n\n\nModification d’un élément\nliste[i] = e\nO(1)O(1)\n\n\nLongueur de la liste\nlen(liste)\nO(1)O(1)\n\n\nRecherche d’un élément\ne in liste\nO(n)O(n)\n\n\n\nTime complexity sur le wiki Python\n\n\n5.2 Cas des dictionnaires\n\n\n\n    Opération\n  Exemple\nComplexité\n\n\n\n\nAjout d’un élément\ndico[clé] = val\nO(1)O(1)\n\n\nModification d’un élément\ndico[clé] = val\nO(1)O(1)\n\n\nSuppression d’un élément\ndel dico[clé]\nO(1)O(1)\n\n\nAccès à un élément\ndico[i]\nO(1)O(1)\n\n\nRecherche d’une clé\ne in dico\nO(1)O(1)\n\n\nRecherche d’un valeur\ne in dico.values()\nO(n)O(n)\n\n\n\nNote: les complexités données sont moyennes car dans le pire des cas, toutes ses opérations sont en O(n)O(n).\nTime complexity sur le wiki Python",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 1: Interface et implémentation"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/4-arbres/quiz/index.html",
    "href": "tg/nsi/1-structures-de-donnees/4-arbres/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 4: Arbres",
      "Quiz"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/4-arbres/exo/index.html",
    "href": "tg/nsi/1-structures-de-donnees/4-arbres/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Trouver une situation où la représentation sous forme d’arbre est adaptée, et donner un exemple d’arbre dans cette situation avec la signification des nœuds et des arêtes utilisées.\nLa racine d’un arbre en informatique est-elle en haut ou en bas d’un arbre? Combien de racines un arbre peut-il avoir?\nUn arbre binaire parfait est un arbre qui est plein à chaque niveau de l’arbre, ce qui signifie que toutes les feuilles ont la même profondeur égale à la hauteur de l’arbre.\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nArbre parfait de hauteur 4\n\n\nCombien de nœuds y a-t-il dans un arbre binaire parfait de hauteur 2 ? de hauteur 3 ? de hauteur hh?\nDans un arbre binaire complet, tous les étages sont remplis à l’exception du dernier où les nœuds sont rassemblés à gauche.\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nArbre complet de hauteur 4\n\n\nDonner un encadrement de la taille d’un arbre complet en fonction de sa hauteur hh?\nQuelle est la hauteur minimale d’un arbre de taille 7 ? de taille 77 ? de taille 777 ?\nLes calculs écrits sur une calculatrice sont transformés en arbres binaires avec des nœuds de deux types: des nœuds d’opérations (+, -, * , /), et des nœuds de nombres (0, 1, …,9). Proposer l’écriture d’un arbre pour l’opération suivante: 5 * 4 + 3 * 2. Écrire les notations préfixe et postfixe de cet arbre.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 4: Arbres",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/4-arbres/exo/index.html#questions-de-cours",
    "href": "tg/nsi/1-structures-de-donnees/4-arbres/exo/index.html#questions-de-cours",
    "title": "Exercices",
    "section": "",
    "text": "Trouver une situation où la représentation sous forme d’arbre est adaptée, et donner un exemple d’arbre dans cette situation avec la signification des nœuds et des arêtes utilisées.\nLa racine d’un arbre en informatique est-elle en haut ou en bas d’un arbre? Combien de racines un arbre peut-il avoir?\nUn arbre binaire parfait est un arbre qui est plein à chaque niveau de l’arbre, ce qui signifie que toutes les feuilles ont la même profondeur égale à la hauteur de l’arbre.\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nArbre parfait de hauteur 4\n\n\nCombien de nœuds y a-t-il dans un arbre binaire parfait de hauteur 2 ? de hauteur 3 ? de hauteur hh?\nDans un arbre binaire complet, tous les étages sont remplis à l’exception du dernier où les nœuds sont rassemblés à gauche.\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nArbre complet de hauteur 4\n\n\nDonner un encadrement de la taille d’un arbre complet en fonction de sa hauteur hh?\nQuelle est la hauteur minimale d’un arbre de taille 7 ? de taille 77 ? de taille 777 ?\nLes calculs écrits sur une calculatrice sont transformés en arbres binaires avec des nœuds de deux types: des nœuds d’opérations (+, -, * , /), et des nœuds de nombres (0, 1, …,9). Proposer l’écriture d’un arbre pour l’opération suivante: 5 * 4 + 3 * 2. Écrire les notations préfixe et postfixe de cet arbre.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 4: Arbres",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/4-arbres/exo/index.html#utilisation-de-la-classe-arbrebinaire",
    "href": "tg/nsi/1-structures-de-donnees/4-arbres/exo/index.html#utilisation-de-la-classe-arbrebinaire",
    "title": "Exercices",
    "section": "2 Utilisation de la classe ArbreBinaire",
    "text": "2 Utilisation de la classe ArbreBinaire\nEn utilisant la classe ArbreBinaire définie dans le cours, construire l’arbre binaire suivant:\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\narbre binaire de wikimedia\n\n\nExpliquer comment afficher l’étiquette du nœud F en partant de la racine?",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 4: Arbres",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/4-arbres/exo/index.html#arbre-binaire",
    "href": "tg/nsi/1-structures-de-donnees/4-arbres/exo/index.html#arbre-binaire",
    "title": "Exercices",
    "section": "3 Arbre binaire",
    "text": "3 Arbre binaire\nEn utilisant la classe ArbreBinaire définie dans le cours, écrire de façon récursive les fonctions suivantes qui prennent un seul paramètre de type ArbreBinaire:\n\ntaille(arbre) renvoie la taille de l’arbre.\nprefixe(arbre) affiche les éléments lors du parcours de l’arbre en profondeur dans l’ordre préfixe.\ninfixe(arbre) affiche les éléments lors du parcours de l’arbre en profondeur dans l’ordre infixe.\npostfixe(arbre) affiche les éléments lors du parcours de l’arbre en profondeur dans l’ordre postfixe.\n\nEn plus: Écrivez un algorithme non récursif pour effectuer une traversée dans l’ordre infixe d’un arbre. (AIDE: Votre algorithme aura besoin d’une pile pour que cela fonctionne.)",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 4: Arbres",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/4-arbres/exo/index.html#implémentation-dun-arbre-binaire-avec-des-tuples",
    "href": "tg/nsi/1-structures-de-donnees/4-arbres/exo/index.html#implémentation-dun-arbre-binaire-avec-des-tuples",
    "title": "Exercices",
    "section": "4 Implémentation d’un arbre binaire avec des tuples",
    "text": "4 Implémentation d’un arbre binaire avec des tuples\nIl est possible d’implémenter les arbres binaires avec des tuples (ou listes) imbriqués de longueur 3.\nUn arbre vide sera représenté par un tuple vide: ().\nUn nœud non vide sera représenté ainsi:\n\nl’index 0 sera l’étiquette,\nl’index 1 sera le sous-arbre gauche: un tuple éventuellement vide,\nl’index 2 sera le sous-arbre droit: un tuple éventuellement vide.\n\nQuestions\n\nConstruire l’arbre suivant avec cette représentation:\n\nDomaine public, Lien\n\nExpliquer comment accéder à l’étiquette du nœud 7(en partant de la racine) à partir de cette implémentation.\nImplémenter les fonctions suivantes qui prennent en paramètre un arbre binaire représenté sous forme de tuples imbriqués:\n\ntaille(arbre) renvoie la taille de l’arbre.\nest_vide(arbre) renvoie True si l’arbre est vide False sinon.\nprefixe(arbre) affiche les éléments lors du parcours de l’arbre en profondeur dans l’ordre préfixe.\ninfixe(arbre) affiche les éléments lors du parcours de l’arbre en profondeur dans l’ordre infixe.\npostfixe(arbre) affiche les éléments lors du parcours de l’arbre en profondeur dans l’ordre postfixe.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 4: Arbres",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/4-arbres/exo/index.html#parcours-en-largeur",
    "href": "tg/nsi/1-structures-de-donnees/4-arbres/exo/index.html#parcours-en-largeur",
    "title": "Exercices",
    "section": "5 Parcours en largeur",
    "text": "5 Parcours en largeur\nOn utilise dans cet exercice la classe ArbreBinaire vue en cours pour représenter les arbres.\nÉcrire une procédure itérative de parcours_largeur(arbre) qui affiche les éléments d’un arbre donné en argument de haut en bas et de gauche à droite(parcours en largeur).\nOn donne ci-dessous le pseudo-code issu de l’article Wikipédia anglais sur le parcours d’arbres Breadth First Search en anglais.\nlevelorder(root)\n    q ← empty queue\n    q.enqueue(root)\n    while not q.isEmpty() do\n        node ← q.dequeue()\n        visit(node)\n        if node.left ≠ null then\n            q.enqueue(node.left)\n        if node.right ≠ null then\n            q.enqueue(node.right)",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 4: Arbres",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/2-bases-de-donnees/index.html",
    "href": "tg/nsi/2-bases-de-donnees/index.html",
    "title": "Partie 2: Bases de données",
    "section": "",
    "text": "Chapitre 1: Les bases de données relationnelles\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 2: Schéma relationnel\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 3: Langage SQL\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAucun article correspondant",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 2: Bases de données"
    ]
  },
  {
    "objectID": "tg/nsi/2-bases-de-donnees/1-les-bases-de-donnees-relationnelles/index.html",
    "href": "tg/nsi/2-bases-de-donnees/1-les-bases-de-donnees-relationnelles/index.html",
    "title": "Chapitre 1: Les bases de données relationnelles",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nModèle relationnel : relation, attribut, domaine, clef primaire, clef étrangère, schéma relationnel.\nIdentifier les concepts définissant le modèle relationnel.\nCes concepts permettent d’exprimer les contraintes d’intégrité (domaine, relation et référence).\n\n\nSystème de gestion de bases de données relationnelles.\nIdentifier les services rendus par un système de gestion de bases de données relationnelles : persistance des données, gestion des accès concurrents, efficacité de traitement des requêtes, sécurisation des accès.\nIl s’agit de comprendre le rôle et les enjeux des différents services sans en détailler le fonctionnement.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 2: Bases de données",
      "Chapitre 1: Les bases de données relationnelles"
    ]
  },
  {
    "objectID": "tg/nsi/2-bases-de-donnees/1-les-bases-de-donnees-relationnelles/index.html#définition",
    "href": "tg/nsi/2-bases-de-donnees/1-les-bases-de-donnees-relationnelles/index.html#définition",
    "title": "Chapitre 1: Les bases de données relationnelles",
    "section": "1 Définition",
    "text": "1 Définition\n\n\nBase de données\n\n\n\nEn informatique, une base de données est une collection organisée de données stockées et consultées électroniquement.\n\n\n\nIl existe divers modèles de bases de données:\n\nLes bases données relationnelles utilisent des tableaux de données organisés en lignes et colonnes auxquelles on accède grâce au langage SQL.\nLes bases de données non relationnelles dites noSQL qui peuvent stocker des données de formes diverses graphes, documents…\n\nCette année, nous nous intéresserons uniquement aux bases de données relationnelles et au langage SQL dont on peut voir ci-dessous un exemple de requête et de résultats sur une base de données de location de DVD.\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nRequête SQL sur une base de données de locations de DVD©  CC BY-SA 4.0 via Wikimedia Commons",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 2: Bases de données",
      "Chapitre 1: Les bases de données relationnelles"
    ]
  },
  {
    "objectID": "tg/nsi/2-bases-de-donnees/1-les-bases-de-donnees-relationnelles/index.html#motivations",
    "href": "tg/nsi/2-bases-de-donnees/1-les-bases-de-donnees-relationnelles/index.html#motivations",
    "title": "Chapitre 1: Les bases de données relationnelles",
    "section": "2 Motivations",
    "text": "2 Motivations\nTout d’abord l’utilisation de fichiers csv pose des problèmes d’accès aux données dans le cas des accès concurrentiels:\n\nTous les utilisateurs doivent charger le fichier pour l’utiliser.\nQue faire si plusieurs utilisateurs modifient en même temps le fichier?\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nImage CC-BY-NC-SA Philippe Rigaux sur sql.dbpedia.fr\nD’autre part, l’organisation même des données au sein d’un seul tableau n’est pas optimale.\nPrenons l’exemple d’un tableau donnant les récompenses aux oscars. wikdata.org\n\n\n\n\nhumanLabel\nawardEditionLabel\nawardLabel\nawardWorkLabel\ndirectorLabel\ntime\n\n\n\n\nBong Joon-ho\n92e cérémonie des Oscars\nOscar du meilleur réalisateur\nParasite\nBong Joon-ho\n2020-02-09T00:00:00Z\n\n\nBrad Pitt\n92e cérémonie des Oscars\nOscar du meilleur acteur dans un second rôle\nOnce Upon a Time in… Hollywood\nQuentin Tarantino\n2020-02-09T00:00:00Z\n\n\nGuillaume Rocheron\n92e cérémonie des Oscars\nOscar des meilleurs effets visuels\n1917\nSam Mendes\n2020-02-09T00:00:00Z\n\n\nJoaquin Phoenix\n92e cérémonie des Oscars\nOscar du meilleur acteur\nJoker\nTodd Phillips\n2020-02-09T00:00:00Z\n\n\nJulia Reichert\n92e cérémonie des Oscars\nOscar du meilleur film documentaire\nAmerican Factory\nJulia Reichert\n2020-02-09T00:00:00Z\n\n\nLaura Dern\n92e cérémonie des Oscars\nOscar de la meilleure actrice dans un second rôle\nMarriage Story\nNoah Baumbach\n2020-02-09T00:00:00Z\n\n\nRenée Zellweger\n92e cérémonie des Oscars\nOscar de la meilleure actrice\nJudy\nRupert Goold\n2020-02-09T00:00:00Z\n\n\nOlivia Colman\n91e cérémonie des Oscars\nOscar de la meilleure actrice\nThe Favourite\nYórgos Lánthimos\n2019-02-24T00:00:00Z\n\n\nRami Malek\n91e cérémonie des Oscars\nOscar du meilleur acteur\nBohemian Rhapsody\nBryan Singer\n2019-02-24T00:00:00Z\n\n\nRuth E. Carter\n91e cérémonie des Oscars\nOscar de la meilleure création de costumes\nBlack Panther\nRyan Coogler\n2019-02-24T00:00:00Z\n\n\nAlexandre Desplat\n90e cérémonie des Oscars\nOscar de la meilleure musique de film\nLa Forme de l’eau\nGuillermo del Toro\n2018-03-04T00:00:00Z\n\n\nAllison Janney\n90e cérémonie des Oscars\nOscar de la meilleure actrice dans un second rôle\nMoi, Tonya\nCraig Gillespie\n2018-03-04T00:00:00Z\n\n\nFrances McDormand\n90e cérémonie des Oscars\nOscar de la meilleure actrice\nTrois Billboards : Les Panneaux de la vengeance\nMartin McDonagh\n2018-03-04T00:00:00Z\n\n\nFrank Stiefel\n90e cérémonie des Oscars\nOscar du meilleur court métrage documentaire\nHeaven Is a Traffic Jam on the 405\nFrank Stiefel\n2018-03-04T00:00:00Z\n\n\nGary Oldman\n90e cérémonie des Oscars\nOscar du meilleur acteur\nLes Heures sombres\nJoe Wright\n2018-03-04T00:00:00Z\n\n\nGregg Landaker\n90e cérémonie des Oscars\nOscar du meilleur mixage de son\nDunkerque\nChristopher Nolan\n2018-03-04T00:00:00Z\n\n\nGuillermo del Toro\n90e cérémonie des Oscars\nOscar du meilleur réalisateur\nLa Forme de l’eau\nGuillermo del Toro\n2018-03-04T00:00:00Z\n\n\nJames Ivory\n90e cérémonie des Oscars\nOscar du meilleur scénario adapté\nCall Me by Your Name\nLuca Guadagnino\n2018-03-04T00:00:00Z\n\n\nJordan Peele\n90e cérémonie des Oscars\nOscar du meilleur scénario original\nGet Out\nJordan Peele\n2018-03-04T00:00:00Z\n\n\nLee Smith\n90e cérémonie des Oscars\nOscar du meilleur montage\nDunkerque\nChristopher Nolan\n2018-03-04T00:00:00Z\n\n\nLucy Sibbick\n90e cérémonie des Oscars\nOscar du meilleur maquillage\nLes Heures sombres\nJoe Wright\n2018-03-04T00:00:00Z\n\n\nMark Bridges\n90e cérémonie des Oscars\nOscar de la meilleure création de costumes\nPhantom Thread\nPaul Thomas Anderson\n2018-03-04T00:00:00Z\n\n\nRichard King\n90e cérémonie des Oscars\nOscar du meilleur montage de son\nDunkerque\nChristopher Nolan\n2018-03-04T00:00:00Z\n\n\nRichard R. Hoover\n90e cérémonie des Oscars\nOscar des meilleurs effets visuels\nBlade Runner 2049\nDenis Villeneuve\n2018-03-04T00:00:00Z\n\n\nRoger Deakins\n90e cérémonie des Oscars\nOscar de la meilleure photographie\nBlade Runner 2049\nDenis Villeneuve\n2018-03-04T00:00:00Z\n\n\nSam Rockwell\n90e cérémonie des Oscars\nOscar du meilleur acteur dans un second rôle\nTrois Billboards : Les Panneaux de la vengeance\nMartin McDonagh\n2018-03-04T00:00:00Z\n\n\nAdam Valdez\n89e cérémonie des Oscars\nOscar des meilleurs effets visuels\nLe Livre de la jungle\nJon Favreau\n2017-02-26T00:00:00Z\n\n\nAnna Udvardy\n89e cérémonie des Oscars\nOscar du meilleur court métrage de fiction\nSing\nKristóf Deák\n2017-02-26T00:00:00Z\n\n\nBarry Jenkins\n89e cérémonie des Oscars\nOscar du meilleur scénario adapté\nMoonlight\nBarry Jenkins\n2017-02-26T00:00:00Z\n\n\nCasey Affleck\n89e cérémonie des Oscars\nOscar du meilleur acteur\nManchester by the Sea\nKenneth Lonergan\n2017-02-26T00:00:00Z\n\n\nClark Spencer\n89e cérémonie des Oscars\nOscar du meilleur film d’animation\nZootopie\nByron Howard\n2017-02-26T00:00:00Z\n\n\nColleen Atwood\n89e cérémonie des Oscars\nOscar de la meilleure création de costumes\nLes Animaux fantastiques\nDavid Yates\n2017-02-26T00:00:00Z\n\n\nDamien Chazelle\n89e cérémonie des Oscars\nOscar du meilleur réalisateur\nLa La Land\nDamien Chazelle\n2017-02-26T00:00:00Z\n\n\nEmma Stone\n89e cérémonie des Oscars\nOscar de la meilleure actrice\nLa La Land\nDamien Chazelle\n2017-02-26T00:00:00Z\n\n\nJeremy Kleiner\n89e cérémonie des Oscars\nOscar du meilleur film\nMoonlight\nBarry Jenkins\n2017-02-26T00:00:00Z\n\n\nJohn Gilbert\n89e cérémonie des Oscars\nOscar du meilleur montage\nTu ne tueras point\nMel Gibson\n2017-02-26T00:00:00Z\n\n\nJustin Hurwitz\n89e cérémonie des Oscars\nOscar de la meilleure musique de film\nLa La Land\nDamien Chazelle\n2017-02-26T00:00:00Z\n\n\nKenneth Lonergan\n89e cérémonie des Oscars\nOscar du meilleur scénario original\nManchester by the Sea\nKenneth Lonergan\n2017-02-26T00:00:00Z\n\n\nLinus Sandgren\n89e cérémonie des Oscars\nOscar de la meilleure photographie\nLa La Land\nDamien Chazelle\n2017-02-26T00:00:00Z\n\n\nMahershalalhashbaz Ali\n89e cérémonie des Oscars\nOscar du meilleur acteur dans un second rôle\nMoonlight\nBarry Jenkins\n2017-02-26T00:00:00Z\n\n\nRobert Mackenzie\n89e cérémonie des Oscars\nOscar du meilleur mixage de son\nTu ne tueras point\nMel Gibson\n2017-02-26T00:00:00Z\n\n\nSylvain Bellemare\n89e cérémonie des Oscars\nOscar du meilleur montage de son\nPremier Contact\nDenis Villeneuve\n2017-02-26T00:00:00Z\n\n\nViola Davis\n89e cérémonie des Oscars\nOscar de la meilleure actrice dans un second rôle\nFences\nDenzel Washington\n2017-02-26T00:00:00Z\n\n\nAlejandro González Iñárritu\n88e cérémonie des Oscars\nOscar du meilleur réalisateur\nThe Revenant\nAlejandro González Iñárritu\n2016-02-28T00:00:00Z\n\n\nAlicia Vikander\n88e cérémonie des Oscars\nOscar de la meilleure actrice dans un second rôle\nThe Danish Girl\nTom Hooper\n2016-02-28T00:00:00Z\n\n\nBenjamin Cleary\n88e cérémonie des Oscars\nOscar du meilleur court métrage de fiction\nStutterer\nBenjamin Cleary\n2016-02-28T00:00:00Z\n\n\nBrie Larson\n88e cérémonie des Oscars\nOscar de la meilleure actrice\nRoom\nLenny Abrahamson\n2016-02-28T00:00:00Z\n\n\nCharles Randolph\n88e cérémonie des Oscars\nOscar du meilleur scénario adapté\nThe Big Short\nAdam McKay\n2016-02-28T00:00:00Z\n\n\nDamian Martin\n88e cérémonie des Oscars\nOscar du meilleur maquillage\nMad Max: Fury Road\nGeorge Miller\n2016-02-28T00:00:00Z\n\n\nDavid White\n88e cérémonie des Oscars\nOscar du meilleur montage de son\nMad Max: Fury Road\nGeorge Miller\n2016-02-28T00:00:00Z\n\n\nEmmanuel Lubezki\n88e cérémonie des Oscars\nOscar de la meilleure photographie\nThe Revenant\nAlejandro González Iñárritu\n2016-02-28T00:00:00Z\n\n\nEnnio Morricone\n88e cérémonie des Oscars\nOscar de la meilleure musique de film\nThe Hateful Eight\nQuentin Tarantino\n2016-02-28T00:00:00Z\n\n\nGregg Rudloff\n88e cérémonie des Oscars\nOscar du meilleur mixage de son\nMad Max: Fury Road\nGeorge Miller\n2016-02-28T00:00:00Z\n\n\nJames Gay-Rees\n88e cérémonie des Oscars\nOscar du meilleur film documentaire\nAmy\nAsif Kapadia\n2016-02-28T00:00:00Z\n\n\nJenny Beavan\n88e cérémonie des Oscars\nOscar de la meilleure création de costumes\nMad Max: Fury Road\nGeorge Miller\n2016-02-28T00:00:00Z\n\n\nJonas Rivera\n88e cérémonie des Oscars\nOscar du meilleur film d’animation\nVice-Versa\nPete Docter\n2016-02-28T00:00:00Z\n\n\nJosh Singer\n88e cérémonie des Oscars\nOscar du meilleur scénario original\nSpotlight\nTom McCarthy\n2016-02-28T00:00:00Z\n\n\nLeonardo DiCaprio\n88e cérémonie des Oscars\nOscar du meilleur acteur\nThe Revenant\nAlejandro González Iñárritu\n2016-02-28T00:00:00Z\n\n\nLisa Thompson\n88e cérémonie des Oscars\nOscar de la meilleure direction artistique\nMad Max: Fury Road\nGeorge Miller\n2016-02-28T00:00:00Z\n\n\nMargaret Sixel\n88e cérémonie des Oscars\nOscar du meilleur montage\nMad Max: Fury Road\nGeorge Miller\n2016-02-28T00:00:00Z\n\n\nMark Rylance\n88e cérémonie des Oscars\nOscar du meilleur acteur dans un second rôle\nLe pont des espions\nSteven Spielberg\n2016-02-28T00:00:00Z\n\n\nMark Williams Ardington\n88e cérémonie des Oscars\nOscar des meilleurs effets visuels\nEx Machina\nAlex Garland\n2016-02-28T00:00:00Z\n\n\nPato Escala Pierart\n88e cérémonie des Oscars\nOscar du meilleur court métrage d’animation\nHistoria de un oso\nGabriel Osorio Vargas\n2016-02-28T00:00:00Z\n\n\nSharmeen Obaid-Chinoy\n88e cérémonie des Oscars\nOscar du meilleur court métrage documentaire\nA Girl in the River: The Price of Forgiveness\nSharmeen Obaid-Chinoy\n2016-02-28T00:00:00Z\n\n\nSteve Golin\n88e cérémonie des Oscars\nOscar du meilleur film\nSpotlight\nTom McCarthy\n2016-02-28T00:00:00Z\n\n\nAdam Stockhausen\n87e cérémonie des Oscars\nOscar de la meilleure direction artistique\nThe Grand Budapest Hotel\nWes Anderson\n2015-02-22T00:00:00Z\n\n\nAlan Robert Murray\n87e cérémonie des Oscars\nOscar du meilleur montage de son\nAmerican Sniper\nClint Eastwood\n2015-02-22T00:00:00Z\n\n\nAlejandro González Iñárritu\n87e cérémonie des Oscars\nOscar du meilleur réalisateur\nBirdman\nAlejandro González Iñárritu\n2015-02-22T00:00:00Z\n\n\nAlexander Dinelaris Jr.\n87e cérémonie des Oscars\nOscar du meilleur scénario original\nBirdman\nAlejandro González Iñárritu\n2015-02-22T00:00:00Z\n\n\nAlexandre Desplat\n87e cérémonie des Oscars\nOscar de la meilleure musique de film\nThe Grand Budapest Hotel\nWes Anderson\n2015-02-22T00:00:00Z\n\n\nCraig Mann\n87e cérémonie des Oscars\nOscar du meilleur mixage de son\nWhiplash\nDamien Chazelle\n2015-02-22T00:00:00Z\n\n\nEddie Redmayne\n87e cérémonie des Oscars\nOscar du meilleur acteur\nUne merveilleuse histoire du temps\nJames Marsh\n2015-02-22T00:00:00Z\n\n\nEllen Goosenberg Kent\n87e cérémonie des Oscars\nOscar du meilleur court métrage documentaire\nCrisis Hotline: Veterans Press 1\nEllen Goosenberg Kent\n2015-02-22T00:00:00Z\n\n\nEmmanuel Lubezki\n87e cérémonie des Oscars\nOscar de la meilleure photographie\nBirdman\nAlejandro González Iñárritu\n2015-02-22T00:00:00Z\n\n\nGraham Moore\n87e cérémonie des Oscars\nOscar du meilleur scénario adapté\nImitation Game\nMorten Tyldum\n2015-02-22T00:00:00Z\n\n\nIan Hunter\n87e cérémonie des Oscars\nOscar des meilleurs effets visuels\nInterstellar\nChristopher Nolan\n2015-02-22T00:00:00Z\n\n\nJ. K. Simmons\n87e cérémonie des Oscars\nOscar du meilleur acteur dans un second rôle\nWhiplash\nDamien Chazelle\n2015-02-22T00:00:00Z\n\n\nJames Lucas\n87e cérémonie des Oscars\nOscar du meilleur court métrage de fiction\nThe Phone Call\nMat Kirkby\n2015-02-22T00:00:00Z\n\n\nJohn Lesher\n87e cérémonie des Oscars\nOscar du meilleur film\nBirdman\nAlejandro González Iñárritu\n2015-02-22T00:00:00Z\n\n\nJulianne Moore\n87e cérémonie des Oscars\nOscar de la meilleure actrice\nStill Alice\nWash Westmoreland\n2015-02-22T00:00:00Z\n\n\nKristina Reed\n87e cérémonie des Oscars\nOscar du meilleur court métrage d’animation\nFeast\nPatrick Osborne\n2015-02-22T00:00:00Z\n\n\nMark Coulier\n87e cérémonie des Oscars\nOscar du meilleur maquillage\nThe Grand Budapest Hotel\nWes Anderson\n2015-02-22T00:00:00Z\n\n\nMilena Canonero\n87e cérémonie des Oscars\nOscar de la meilleure création de costumes\nThe Grand Budapest Hotel\nWes Anderson\n2015-02-22T00:00:00Z\n\n\nPatricia Arquette\n87e cérémonie des Oscars\nOscar de la meilleure actrice dans un second rôle\nBoyhood\nRichard Linklater\n2015-02-22T00:00:00Z\n\n\nRoy Conli\n87e cérémonie des Oscars\nOscar du meilleur film d’animation\nBig Hero 6\nChris Williams\n2015-02-22T00:00:00Z\n\n\nTom Cross\n87e cérémonie des Oscars\nOscar du meilleur montage\nWhiplash\nDamien Chazelle\n2015-02-22T00:00:00Z\n\n\nAlexandre Espigares\n86e cérémonie des Oscars\nOscar du meilleur court métrage d’animation\nMr Hublot\nLaurent Witz\n2014-03-02T00:00:00Z\n\n\nAlfonso Cuarón\n86e cérémonie des Oscars\nOscar du meilleur réalisateur\nGravity\nAlfonso Cuarón\n2014-03-02T00:00:00Z\n\n\nAnders Walter\n86e cérémonie des Oscars\nOscar du meilleur court métrage de fiction\nHelium\nKim Magnusson\n2014-03-02T00:00:00Z\n\n\nBeverley Dunn\n86e cérémonie des Oscars\nOscar de la meilleure direction artistique\nGatsby le Magnifique\nBaz Luhrmann\n2014-03-02T00:00:00Z\n\n\nCate Blanchett\n86e cérémonie des Oscars\nOscar de la meilleure actrice\nBlue Jasmine\nWoody Allen\n2014-03-02T00:00:00Z\n\n\nCatherine Martin\n86e cérémonie des Oscars\nOscar de la meilleure création de costumes\nGatsby le Magnifique\nBaz Luhrmann\n2014-03-02T00:00:00Z\n\n\nChris Lawrence\n86e cérémonie des Oscars\nOscar des meilleurs effets visuels\nGravity\nAlfonso Cuarón\n2014-03-02T00:00:00Z\n\n\nEmmanuel Lubezki\n86e cérémonie des Oscars\nOscar de la meilleure photographie\nGravity\nAlfonso Cuarón\n2014-03-02T00:00:00Z\n\n\nGlenn Freemantle\n86e cérémonie des Oscars\nOscar du meilleur montage de son\nGravity\nAlfonso Cuarón\n2014-03-02T00:00:00Z\n\n\nJared Leto\n86e cérémonie des Oscars\nOscar du meilleur acteur dans un second rôle\nThe Dallas Buyers Club\nJean-Marc Vallée\n2014-03-02T00:00:00Z\n\n\nJeremy Kleiner\n86e cérémonie des Oscars\nOscar du meilleur film\nTwelve Years a Slave\nSteve McQueen\n2014-03-02T00:00:00Z\n\n\nJohn Ridley\n86e cérémonie des Oscars\nOscar du meilleur scénario adapté\nTwelve Years a Slave\nSteve McQueen\n2014-03-02T00:00:00Z\n\n\nLupita Nyong’o\n86e cérémonie des Oscars\nOscar de la meilleure actrice dans un second rôle\nTwelve Years a Slave\nSteve McQueen\n2014-03-02T00:00:00Z\n\n\nMalcolm Clarke\n86e cérémonie des Oscars\nOscar du meilleur court métrage documentaire\nLa Dame du 6\nMalcolm Clarke\n2014-03-02T00:00:00Z\n\n\nMark Sanger\n86e cérémonie des Oscars\nOscar du meilleur montage\nGravity\nAlfonso Cuarón\n2014-03-02T00:00:00Z\n\n\nMatthew McConaughey\n86e cérémonie des Oscars\nOscar du meilleur acteur\nThe Dallas Buyers Club\nJean-Marc Vallée\n2014-03-02T00:00:00Z\n\n\nNiv Adiri\n86e cérémonie des Oscars\nOscar du meilleur mixage de son\nGravity\nAlfonso Cuarón\n2014-03-02T00:00:00Z\n\n\nPeter Del Vecho\n86e cérémonie des Oscars\nOscar du meilleur film d’animation\nLa Reine des neiges\nChris Buck\n2014-03-02T00:00:00Z\n\n\nRobin Mathews\n86e cérémonie des Oscars\nOscar du meilleur maquillage\nThe Dallas Buyers Club\nJean-Marc Vallée\n2014-03-02T00:00:00Z\n\n\nSpike Jonze\n86e cérémonie des Oscars\nOscar du meilleur scénario original\nHer\nSpike Jonze\n2014-03-02T00:00:00Z\n\n\nSteven Price\n86e cérémonie des Oscars\nOscar de la meilleure musique de film\nGravity\nAlfonso Cuarón\n2014-03-02T00:00:00Z\n\n\nChristoph Waltz\n85e cérémonie des Oscars\nOscar du meilleur acteur dans un second rôle\nDjango Unchained\nQuentin Tarantino\n2013-02-24T00:00:00Z\n\n\nMark Andrews\n85e cérémonie des Oscars\nOscar du meilleur film d’animation\nRebelle\nBrenda Chapman\n2013-02-24T00:00:00Z\n\n\nQuentin Tarantino\n85e cérémonie des Oscars\nOscar du meilleur scénario original\nDjango Unchained\nQuentin Tarantino\n2013-02-24T00:00:00Z\n\n\n\n\nVous voyez déjà sur cet extrait que certaines données sont redondantes comme les dates des cérémonies, les noms des réalisateurs de films.\nSi on doit modifier une information sur un acteur on doit le faire sur toute la table, et pas seulement à un endroit.\nOn le voit bien, il serait préférable de stocker les informations sur les films, les acteurs les cérémonies séparément, puis établir des liens entre elles pour éviter toutes ces redondances. C’est pourquoi on parle de base de données relationnelles.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 2: Bases de données",
      "Chapitre 1: Les bases de données relationnelles"
    ]
  },
  {
    "objectID": "tg/nsi/2-bases-de-donnees/1-les-bases-de-donnees-relationnelles/index.html#modèle-relationnel",
    "href": "tg/nsi/2-bases-de-donnees/1-les-bases-de-donnees-relationnelles/index.html#modèle-relationnel",
    "title": "Chapitre 1: Les bases de données relationnelles",
    "section": "3 Modèle relationnel",
    "text": "3 Modèle relationnel\nDans une base de données, plutôt que de stocker toutes les données dans une table, on les stocke dans plusieurs tables reliées entre elles par des clés.\nUne base de données est définie par son schéma relationnel qui spécifie:\n\nLa liste des tables avec pour chaque table:\n\nLe nom de la table(relation).\nLa liste des colonnes(attributs) avec leur nom et le domaine de valeurs des données qui y sont stockées(Chaînes de caractères, entiers, dates…).\nLes identifiants (uniques) de chaque ligne.\n\n\nLes tables doivent être reliées entre elles grâce à des identifiants secondaires.\n\nBy Puerto01 at French Wikipedia, CC BY 2.5, Link",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 2: Bases de données",
      "Chapitre 1: Les bases de données relationnelles"
    ]
  },
  {
    "objectID": "tg/nsi/2-bases-de-donnees/1-les-bases-de-donnees-relationnelles/index.html#système-de-gestion-de-base-de-données-sgbd",
    "href": "tg/nsi/2-bases-de-donnees/1-les-bases-de-donnees-relationnelles/index.html#système-de-gestion-de-base-de-données-sgbd",
    "title": "Chapitre 1: Les bases de données relationnelles",
    "section": "4 Système de gestion de base de données: SGBD *",
    "text": "4 Système de gestion de base de données: SGBD *\nCette partie ne pourra pas faire l’objet d’une évaluation lors de l’épreuve terminale écrite et pratique de l’enseignement de spécialité. BO MENE2121274N\nComme nous l’avons vu l’utilisation d’un modèle relationnel, permet d’éviter des redondances dans les données ce qui permet d’économiser de la place, mais aussi de ne garder qu’une seule source de vérité et éviter par exemple les noms orthographiés de plusieurs façons différentes.\nMais ce n’est pas tout, la base de données est gérée par un programme appelé système de gestion de base de données(SGBD).\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nImage CC-BY-NC-SA Philippe Rigaux sur sql.dbpedia.fr\nLe SGBD veille à ce que les données dans la table restent conformes au schéma qui la définit, mais aussi:\n\nLa gestion des accès concurrents: que faire si deux personnes accèdent et modifient en me temps la base de données?\nEfficacité de traitement des requêtes: les bases de données pouvant être très volumineuse(jusqu’au pétaoctet), il faut pouvoir rechercher dedans efficacement.\nSécurisation des accès: qui a le droit de lire, d’écrire dans la base de données.\n\n\n\n\n\n\n\n\nEn plus: Propriétés ACID\n\n\n\n\n\n\nEn informatique, les propriétés ACID (atomicité, cohérence, isolation et durabilité) sont un ensemble de propriétés qui garantissent qu’une transaction informatique est exécutée de façon fiable.\nJim Gray a défini les propriétés qui garantissent des transactions fiables à la fin des années 1970 et a développé des technologies pour les mettre en œuvre automatiquement.\nArticle Wikipédia ACID",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 2: Bases de données",
      "Chapitre 1: Les bases de données relationnelles"
    ]
  },
  {
    "objectID": "tg/nsi/2-bases-de-donnees/2-schema-relationnel/quiz/index.html",
    "href": "tg/nsi/2-bases-de-donnees/2-schema-relationnel/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 2: Bases de données",
      "Chapitre 2: Schéma relationnel",
      "Quiz"
    ]
  },
  {
    "objectID": "tg/nsi/2-bases-de-donnees/2-schema-relationnel/exo/index.html",
    "href": "tg/nsi/2-bases-de-donnees/2-schema-relationnel/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Reprendre l’exemple du cours et créer une base de données mieux conçue en créant deux relations:\n\ndvd pour les données concernant les disques.\nfilm pour les données concernant les films.\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nexemple de table de DVDs\n\n\nAprès avoir créé les entrées de DVD et de films, vérifier que sqlite respecte bien les trois contraintes d’intégrité.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 2: Bases de données",
      "Chapitre 2: Schéma relationnel",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/2-bases-de-donnees/2-schema-relationnel/exo/index.html#création-de-relations-avec-sqlite-browser",
    "href": "tg/nsi/2-bases-de-donnees/2-schema-relationnel/exo/index.html#création-de-relations-avec-sqlite-browser",
    "title": "Exercices",
    "section": "",
    "text": "Reprendre l’exemple du cours et créer une base de données mieux conçue en créant deux relations:\n\ndvd pour les données concernant les disques.\nfilm pour les données concernant les films.\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nexemple de table de DVDs\n\n\nAprès avoir créé les entrées de DVD et de films, vérifier que sqlite respecte bien les trois contraintes d’intégrité.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 2: Bases de données",
      "Chapitre 2: Schéma relationnel",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/2-bases-de-donnees/2-schema-relationnel/exo/index.html#création-dun-schéma-relationnel",
    "href": "tg/nsi/2-bases-de-donnees/2-schema-relationnel/exo/index.html#création-dun-schéma-relationnel",
    "title": "Exercices",
    "section": "2 Création d’un schéma relationnel",
    "text": "2 Création d’un schéma relationnel\nProposer sur le papier un schéma relationnel pour les données sur les oscars du chapitre 1.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 2: Bases de données",
      "Chapitre 2: Schéma relationnel",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/2-bases-de-donnees/2-schema-relationnel/exo/index.html#vers-le-sql",
    "href": "tg/nsi/2-bases-de-donnees/2-schema-relationnel/exo/index.html#vers-le-sql",
    "title": "Exercices",
    "section": "3 Vers le SQL",
    "text": "3 Vers le SQL\nSQLite Browser possède un onglet pour exécuter des requêtes SQL (au programme du prochain chapitre!), vous pouvez vous familiariser avec sa syntaxe en faisant le TP proposé par Stéphan Van Zuijlen.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 2: Bases de données",
      "Chapitre 2: Schéma relationnel",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/2-bases-de-donnees/3-langage-sql/index.html",
    "href": "tg/nsi/2-bases-de-donnees/3-langage-sql/index.html",
    "title": "Chapitre 3: Langage SQL",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nLangage SQL : requêtes d’interrogation et de mise à jour d’une base de données.\nIdentifier les composants d’une requête.\nConstruire des requêtes d’interrogation à l’aide des clauses du langage SQL : SELECT, FROM, WHERE, JOIN.\nConstruire des requêtes d’insertion et de mise à jour à l’aide de : UPDATE, INSERT, DELETE.\nOn peut utiliser DISTINCT, ORDER BY ou les fonctions d’agrégation sans utiliser les clauses GROUP BY et HAVING.\nDans ce cours, nous allons utiliser le SGBD sqlite3 qui permet de stocker des petites bases de données dans des fichiers.\nIl existe de nombreuses façons d’écrire des requêtes SQL avec une base de données sqlite:\nPour illustrer ce cours, nous allons étudier des données situées dans la base de données peinture de la page https://apps.lyceum.fr/sqlite.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 2: Bases de données",
      "Chapitre 3: Langage SQL"
    ]
  },
  {
    "objectID": "tg/nsi/2-bases-de-donnees/3-langage-sql/index.html#le-langage-sql",
    "href": "tg/nsi/2-bases-de-donnees/3-langage-sql/index.html#le-langage-sql",
    "title": "Chapitre 3: Langage SQL",
    "section": "1 Le langage SQL",
    "text": "1 Le langage SQL\nLes instructions SQL s’écrivent d’une manière qui ressemble à celle de phrases ordinaires en anglais. C’est un langage déclaratif, c’est-à-dire qu’il permet de décrire le résultat escompté, sans décrire la manière de l’obtenir.\nLe langage SQL n’est pas sensible à la casse, mais a l’habitude d’écrire les instructions en majuscules, on peut écrire les instructions sur plusieurs lignes avec ou sans indentation et chaque instruction doit être terminée par un point-virgule.\nNous verrons cette année les instructions de manipulation du contenu de la base de données qui commencent par les mots clés:\n\nSELECT: recherche de contenu;\nUPDATE: modification,\nINSERT: ajout,\nDELETE suppression.\n\n\nÉtudions dans la console les tables contenues dans la base de données peintures.\nDont le schéma est le suivant:\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nSchéma relationnel de la bdd peinture.db\n\n\nOuvrir la page https://apps.lyceum.fr/sqlite puis sélectionner la base de données peinture.\nMaintenant dans l’éditeur sql, on peut interagir avec la bdd, par exemple en affichant tous les peintres de la table peintres.\nSELECT peintre FROM peintres;\nPour exécuter une commande sql, vous pouvez utiliser CTRL+Entrée.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 2: Bases de données",
      "Chapitre 3: Langage SQL"
    ]
  },
  {
    "objectID": "tg/nsi/2-bases-de-donnees/3-langage-sql/index.html#construire-des-requêtes-dinterrogation",
    "href": "tg/nsi/2-bases-de-donnees/3-langage-sql/index.html#construire-des-requêtes-dinterrogation",
    "title": "Chapitre 3: Langage SQL",
    "section": "2 Construire des requêtes d’interrogation",
    "text": "2 Construire des requêtes d’interrogation\nPour afficher tous les enregistrements d’une table on utilise:\nSELECT * FROM tablename;\n\nOn va commencer par afficher toutes les entrées de:\n\nLa table peintres: SELECT * FROM peintres;,\npuis peintures: SELECT * FROM peintures;.\n\nOn peut limiter le nombre de lignes affichées avec LIMIT, par exemple pour n’afficher que trois enregistrements de la sélection: SELECT * FROM peintres LIMIT 3;,\n\n\n2.1 Choisir les colonnes à afficher avec SELECT\nSELECT col1, col2 FROM tablename;\n\nOn va récupérer le nom et le sexe du peintre:\nSELECT nom, sexe FROM peintres;\n\n\n\n2.2 Restreindre les lignes avec WHERE\nOn sélectionne les tableaux peints en 1503.\nSELECT * FROM peintures WHERE annee=\"1503\";\n\n\n2.3 Jointure de deux tables avec JOIN\nDans cette base de données, les informations sur les peintres et sur les peintures ont été séparées, ce qui est bien pour éviter la redondance et les risques d’anomalies.\n\nLa jointure permet d’utiliser les clés secondaires pour aller rechercher les données d’une autre table grâce à la clé étrangère.\n\nSELECT colonne1, colonne2 FROM table1\nJOIN table2 ON table1.attribut = table2.attribut\n\nPar exemple, la requête: SELECT * FROM peintures WHERE titre=\"La Joconde\";\nrenvoie:\n12418|La Joconde|1503|762|Haute Renaissance|http://commons.wikimedia.org/wiki/Special:FilePath/Mona%20Lisa%2C%20by%20Leonardo%20da%20Vinci%2C%20from%20C2RMF%20retouched.jpg\nAinsi le peintre est identifié par son id 762, c’est bien pour la base de données, mais pas pour l’utilisateur qui veut connaitre le nom du peintre.\nIl va falloir aller chercher cette information dans la deuxième table: peintres et faire une jointure pour afficher toutes les informations souhaitées.\nSELECT titre, annee, peintre, pays, date_naissance, date_mort FROM peintures \nJOIN peintres ON peintures.id_peintre=peintres.id WHERE titre=\"La Joconde\";\nQui renvoie:\nLa Joconde  |   1503    |   Léonard de Vinci    |   République florentine   |   1452-04-24T00:00:00Z    |   1519-05-12T00:00:00Z\nComme vous le voyez il est possible ou nécessaire de préciser d’où vient la colonne sélectionnée avec une notation pointée comme: peintures.id de la forme nom_de_la_table.nom_de_la_colonne\n\n\n\n2.4 Les clauses DISTINCT ORDER BY et GROUP BY\nVoici deux instructions supplémentaires qui peuvent être utiles:\n\nDISTINCT: Ne pas renvoyer les doublons.\nSELECT DISTINCT ma_colonne\nFROM nom_du_tableau;\n\nDe nombreux peintres proviennent du même pays. Ainsi la requête suivante va renvoyer des doublons.\nSELECT pays FROM peintres;\nOn ajoute DISTINCT pour n’afficher que des valeurs distinctes.\nSELECT DISTINCT pays FROM peintres;\n\n\nCette requête sélectionne le champ ma_colonne de la table nom_du_tableau en évitant de retourner des doublons.\n\nORDER BY: Permet d’ordonner les résultats selon la colonne de votre choix.\nSELECT colonne1, colonne2\nFROM table\nORDER BY colonne1 [ASC|DESC];\nCette requête sélectionne les champs colonne1 et colonne2 de la table table et classe la sélection par ordre croissant sur la colonne1.\n\nOn classe les tableaux par date croissante.\nSELECT titre, annee\nFROM peintures\nORDER BY annee;\nOn ajoute DISTINCT pour n’afficher que des valeurs distinctes.\nSELECT DISTINCT pays FROM peintres;\n\nGROUP BY: grouper plusieurs résultats et utiliser une fonction d’agrégation (SUM, AVG, COUNT, MAX, MIN) sur un groupe de résultat.\nSELECT colonne1, colonne2\nFROM table\nGROUP BY colonne1;\n\nOn regroupe les peintres par pays en comptant le nombre de peintres par pays.\nSELECT pays, COUNT(pays) FROM peintres\nGROUP BY pays\nORDER BY COUNT(pays) DESC;",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 2: Bases de données",
      "Chapitre 3: Langage SQL"
    ]
  },
  {
    "objectID": "tg/nsi/2-bases-de-donnees/3-langage-sql/index.html#construire-des-requêtes-dinsertion-et-de-mise-à-jour",
    "href": "tg/nsi/2-bases-de-donnees/3-langage-sql/index.html#construire-des-requêtes-dinsertion-et-de-mise-à-jour",
    "title": "Chapitre 3: Langage SQL",
    "section": "3 Construire des requêtes d’insertion et de mise à jour",
    "text": "3 Construire des requêtes d’insertion et de mise à jour\n\n3.1 Ajouter des entrées avec INSERT\nGrâce au SQL, nous pouvons aussi ajouter des informations dans une table avec la commande INSERT INTO. Pour ce faire, il faut indiquer la table dans laquelle on souhaite intégrer une ligne ainsi que la liste des champs pour lesquels on spécifie une valeur, et enfin la liste des valeurs correspondantes.\nINSERT INTO table1 VALUES\n(val1, val2 ..., valN)\n\nAjout d’un tableau La Joconde 2.\nINSERT INTO peintures VALUES\n(124181, \"La Joconde 2 Le retour\", 1504, 762, \"Haute Renaissance\", NULL);\n\n\n\n3.2 Mettre à jour des informations avec UPDATE\nOn peut modifier certains champs d’enregistrements existants grâce au mot-clé UPDATE : cette instruction permet de mettre à jour plusieurs champs de plusieurs enregistrements d’une table, à partir des expressions qui lui sont fournies.\nUPDATE table1 SET col1=val1\nWHERE coli=\"valeur\";\n\nMise à jour de la Joconde 2.\nUPDATE peintures SET annee=1505  WHERE id=124181;\nOn peut vérifier la mise à jour avec: SELECT * FROM peintures WHERE id=124181;\n\n\n\n3.3 Supprimer des entrées avec DELETE\nIl se peut que l’on soit amené à supprimer un ou plusieurs enregistrements d’une table, il existe pour cela l’instruction DELETE FROM.\nDELETE FROM table1\nWHERE coli=\"valeur\";\n\nOn va supprimer la Joconde 2.\nDELETE FROM peintures WHERE id=124181;\nOn peut vérifier la suppression avec: SELECT * FROM peintures WHERE id=124181;\n\n\n\nCours OpenClassRoom de Thomas Martinet sous licence CC-BY-NC-SA",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 2: Bases de données",
      "Chapitre 3: Langage SQL"
    ]
  },
  {
    "objectID": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/2-gestion-des-processus-par-un-systeme-dexploitation/quiz/index.html",
    "href": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/2-gestion-des-processus-par-un-systeme-dexploitation/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "1. Un processus est:\n\n   - [ ] statique\n   - [x] dynamique\n\n2. Un programme est:\n\n   - [x] statique\n   - [ ] dynamique\n  \n3. Il y a exactement autant de processus que de programmes:\n\n   - [ ] VRAI\n   - [x] FAUX\n\n4. Un processus peut passer de l'état `Prêt` à l'état :\n\n   - [x] `Élu`\n   - [ ] `Bloqué`\n\n5. Un processus peut passer de l'état `Bloqué` à l'état :\n\n   - [ ] `Élu`\n   - [x] `Prết`\n\n6. Un processus peut passer de l'état `Élu` à l'état :\n\n   - [x] `Bloqué`\n   - [ ] `Prết`\n\n7. À leurs lancements, les processus sont placés:\n\n   - [x] Dans une file.\n   - [ ] Dans une pile.\n\n8. Un processus est placé à l'état bloqué lorsque:\n\n   - [ ] Il attend le processeur.\n   - [x] Il attend une ressource.\n   - [ ] Il n'est pas actuellement utilisé.\n\n9. Un processus dans l'état `Prêt` a accès au processeur:\n\n   - [ ] VRAI\n   - [x] FAUX\n\n10. L'interblocage ne peut avoir lieu qu'en programmation concurrente:\n\n    - [x] VRAI\n    - [ ] FAUX",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 3: Architectures matérielles, systèmes d’exploitation et réseaux",
      "Chapitre 2: Gestion des processus par un système d’exploitation",
      "Quiz"
    ]
  },
  {
    "objectID": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/2-gestion-des-processus-par-un-systeme-dexploitation/exo/index.html",
    "href": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/2-gestion-des-processus-par-un-systeme-dexploitation/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Utiliser le gestionnaire de processus par défaut de votre système d’exploitation pour répondre aux questions suivantes:\n\nOuvrir le navigateur web. Combien de processus sont créés? Noter son(ses) PID(identifiant de processus) et PPID(identifiant du processus parent).\nOuvrir des nouveaux onglets(CTRL+T). De nouveaux processus sont-ils créés?\nOuvrir des nouvelles fenêtres de navigateur(CTRL+N). De nouveaux processus sont-ils créés?\nFermer puis réouvrir le navigateur. Les PID et PPID ont-ils changés?",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 3: Architectures matérielles, systèmes d’exploitation et réseaux",
      "Chapitre 2: Gestion des processus par un système d’exploitation",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/2-gestion-des-processus-par-un-systeme-dexploitation/exo/index.html#gestionnaire-graphique-de-processus",
    "href": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/2-gestion-des-processus-par-un-systeme-dexploitation/exo/index.html#gestionnaire-graphique-de-processus",
    "title": "Exercices",
    "section": "",
    "text": "Utiliser le gestionnaire de processus par défaut de votre système d’exploitation pour répondre aux questions suivantes:\n\nOuvrir le navigateur web. Combien de processus sont créés? Noter son(ses) PID(identifiant de processus) et PPID(identifiant du processus parent).\nOuvrir des nouveaux onglets(CTRL+T). De nouveaux processus sont-ils créés?\nOuvrir des nouvelles fenêtres de navigateur(CTRL+N). De nouveaux processus sont-ils créés?\nFermer puis réouvrir le navigateur. Les PID et PPID ont-ils changés?",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 3: Architectures matérielles, systèmes d’exploitation et réseaux",
      "Chapitre 2: Gestion des processus par un système d’exploitation",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/2-gestion-des-processus-par-un-systeme-dexploitation/exo/index.html#remonter-un-arbre-de-processus",
    "href": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/2-gestion-des-processus-par-un-systeme-dexploitation/exo/index.html#remonter-un-arbre-de-processus",
    "title": "Exercices",
    "section": "2 Remonter un arbre de processus",
    "text": "2 Remonter un arbre de processus\nLancer l’émulateur de console linux disponible à l’adresse suivante:\nhttps://bellard.org/jslinux/\nLe page de manuel de la commande ps est disponible à l’adresse suivante: https://www.man7.org/linux/man-pages/man1/ps.1.html\n\nLancer la commande ps -o pid,ppid,user,stat,comm et noter son PID(identifiant de processus) et PPID(identifiant du processus parent).\nReprendre le même travail pour le processus parent jusqu’à remonter au processus racine.\nRefermer le terminal, puis recommencer. Que constate-t-on?\n\nSi vous n’avez pas accès à une console Linux, travailler sur cette sortie:\n[ben@archben ~]$ ps -aef\nUID          PID    PPID  C STIME TTY          TIME CMD\nroot           1       0  0 15:28 ?        00:00:00 /sbin/init\nroot           2       0  0 15:28 ?        00:00:00 [kthreadd]\nroot           3       2  0 15:28 ?        00:00:00 [rcu_gp]\nroot           4       2  0 15:28 ?        00:00:00 [rcu_par_gp]\nroot           6       2  0 15:28 ?        00:00:00 [kworker/0:0H-events_highpri]\nroot           8       2  0 15:28 ?        00:00:00 [mm_percpu_wq]\nroot          10       2  0 15:28 ?        00:00:00 [rcu_tasks_kthre]\nroot          11       2  0 15:28 ?        00:00:00 [rcu_tasks_rude_]\nroot          12       2  0 15:28 ?        00:00:00 [rcu_tasks_trace]\nroot          13       2  0 15:28 ?        00:00:00 [ksoftirqd/0]\nroot          14       2  0 15:28 ?        00:00:01 [rcu_preempt]\nroot          15       2  0 15:28 ?        00:00:00 [rcub/0]\nroot          16       2  0 15:28 ?        00:00:00 [rcuc/0]\nroot          17       2  0 15:28 ?        00:00:00 [migration/0]\nroot          18       2  0 15:28 ?        00:00:00 [idle_inject/0]\nroot          20       2  0 15:28 ?        00:00:00 [cpuhp/0]\nroot          21       2  0 15:28 ?        00:00:00 [cpuhp/1]\nroot          22       2  0 15:28 ?        00:00:00 [idle_inject/1]\nroot          23       2  0 15:28 ?        00:00:00 [migration/1]\nroot          24       2  0 15:28 ?        00:00:00 [rcuc/1]\nroot          25       2  0 15:28 ?        00:00:03 [ksoftirqd/1]\nroot          27       2  0 15:28 ?        00:00:00 [kworker/1:0H-events_highpri]\nroot          28       2  0 15:28 ?        00:00:00 [cpuhp/2]\nroot          29       2  0 15:28 ?        00:00:00 [idle_inject/2]\nroot          30       2  0 15:28 ?        00:00:00 [migration/2]\nroot          31       2  0 15:28 ?        00:00:00 [rcuc/2]\nroot          32       2  0 15:28 ?        00:00:00 [ksoftirqd/2]\nroot          34       2  0 15:28 ?        00:00:00 [kworker/2:0H-kblockd]\nroot          35       2  0 15:28 ?        00:00:00 [cpuhp/3]\nroot          36       2  0 15:28 ?        00:00:00 [idle_inject/3]\nroot          37       2  0 15:28 ?        00:00:00 [migration/3]\nroot          38       2  0 15:28 ?        00:00:00 [rcuc/3]\nroot          39       2  0 15:28 ?        00:00:00 [ksoftirqd/3]\nroot          41       2  0 15:28 ?        00:00:00 [kworker/3:0H-events_highpri]\nroot          42       2  0 15:28 ?        00:00:00 [kdevtmpfs]\nroot          43       2  0 15:28 ?        00:00:00 [netns]\nroot          44       2  0 15:28 ?        00:00:00 [inet_frag_wq]\nroot          45       2  0 15:28 ?        00:00:00 [kauditd]\nroot          46       2  0 15:28 ?        00:00:00 [khungtaskd]\nroot          47       2  0 15:28 ?        00:00:00 [oom_reaper]\nroot          48       2  0 15:28 ?        00:00:00 [writeback]\nroot          49       2  0 15:28 ?        00:00:00 [kcompactd0]\nroot          50       2  0 15:28 ?        00:00:00 [ksmd]\nroot          51       2  0 15:28 ?        00:00:00 [khugepaged]\nroot          95       2  0 15:28 ?        00:00:00 [kintegrityd]\nroot          96       2  0 15:28 ?        00:00:00 [kblockd]\nroot          97       2  0 15:28 ?        00:00:00 [blkcg_punt_bio]\nroot          98       2  0 15:28 ?        00:00:00 [ata_sff]\nroot          99       2  0 15:28 ?        00:00:00 [edac-poller]\nroot         100       2  0 15:28 ?        00:00:00 [devfreq_wq]\nroot         101       2  0 15:28 ?        00:00:00 [watchdogd]\nroot         102       2  0 15:28 ?        00:00:00 [kworker/0:1H-events_highpri]\nroot         104       2  0 15:28 ?        00:00:00 [kswapd0]\nroot         106       2  0 15:28 ?        00:00:00 [kthrotld]\nroot         107       2  0 15:28 ?        00:00:00 [irq/123-aerdrv]\nroot         108       2  0 15:28 ?        00:00:00 [acpi_thermal_pm]\nroot         110       2  0 15:28 ?        00:00:00 [nvme-wq]\nroot         111       2  0 15:28 ?        00:00:00 [nvme-reset-wq]\nroot         112       2  0 15:28 ?        00:00:00 [nvme-delete-wq]\nroot         113       2  0 15:28 ?        00:00:00 [scsi_eh_0]\nroot         114       2  0 15:28 ?        00:00:00 [scsi_tmf_0]\nroot         115       2  0 15:28 ?        00:00:00 [scsi_eh_1]\nroot         116       2  0 15:28 ?        00:00:00 [scsi_tmf_1]\nroot         117       2  0 15:28 ?        00:00:00 [scsi_eh_2]\nroot         118       2  0 15:28 ?        00:00:00 [scsi_tmf_2]\nroot         119       2  0 15:28 ?        00:00:00 [scsi_eh_3]\nroot         120       2  0 15:28 ?        00:00:00 [scsi_tmf_3]\nroot         121       2  0 15:28 ?        00:00:00 [scsi_eh_4]\nroot         122       2  0 15:28 ?        00:00:00 [scsi_tmf_4]\nroot         123       2  0 15:28 ?        00:00:00 [scsi_eh_5]\nroot         124       2  0 15:28 ?        00:00:00 [scsi_tmf_5]\nroot         130       2  0 15:28 ?        00:00:00 [mld]\nroot         131       2  0 15:28 ?        00:00:00 [ipv6_addrconf]\nroot         134       2  0 15:28 ?        00:00:00 [kworker/3:1H-events_highpri]\nroot         143       2  0 15:28 ?        00:00:00 [kstrp]\nroot         144       2  0 15:28 ?        00:00:00 [zswap1]\nroot         145       2  0 15:28 ?        00:00:00 [zswap1]\nroot         146       2  0 15:28 ?        00:00:00 [zswap-shrink]\nroot         147       2  0 15:28 ?        00:00:07 [kworker/u9:0-i915_flip]\nroot         148       2  0 15:28 ?        00:00:00 [charger_manager]\nroot         149       2  0 15:28 ?        00:00:00 [kworker/2:1H-events_highpri]\nroot         189       2  0 15:28 ?        00:00:08 [kworker/1:2-events]\nroot         193       2  0 15:28 ?        00:00:00 [kworker/1:1H-events_highpri]\nroot         202       2  0 15:28 ?        00:00:00 [jbd2/sda2-8]\nroot         203       2  0 15:28 ?        00:00:00 [ext4-rsv-conver]\nroot         211       2  0 15:28 ?        00:00:00 [kworker/0:2-events]\nroot         240       1  0 15:28 ?        00:00:00 /usr/lib/systemd/systemd-journald\nroot         254       2  0 15:28 ?        00:00:00 [iprt-VBoxWQueue]\nroot         255       2  0 15:28 ?        00:00:00 [iprt-VBoxTscThr]\nroot         257       1  0 15:28 ?        00:00:00 /usr/lib/systemd/systemd-udevd\nroot         292       2  0 15:28 ?        00:00:00 [irq/132-mei_me]\nroot         313       2  0 15:28 ?        00:00:00 [jbd2/sda4-8]\nroot         314       2  0 15:28 ?        00:00:00 [ext4-rsv-conver]\nroot         351       2  0 15:28 ?        00:00:00 [card0-crtc0]\nroot         352       2  0 15:28 ?        00:00:00 [card0-crtc1]\nroot         353       2  0 15:28 ?        00:00:00 [card0-crtc2]\nroot         354       2  0 15:28 ?        00:00:00 [jbd2/sdb1-8]\nroot         356       2  0 15:28 ?        00:00:00 [ext4-rsv-conver]\nroot         366       2  0 15:28 ?        00:00:00 [cryptd]\nroot         409       2  0 15:28 ?        00:00:00 [nvkm-disp]\nroot         411       2  0 15:28 ?        00:00:00 [scsi_eh_6]\nroot         412       2  0 15:28 ?        00:00:00 [scsi_tmf_6]\nroot         413       2  0 15:28 ?        00:00:00 [usb-storage]\ndbus         417       1  0 15:28 ?        00:00:03 /usr/bin/dbus-daemon --system --address=systemd: --nofork --nopi\nroot         418       1  0 15:28 ?        00:00:03 /usr/bin/NetworkManager --no-daemon\nroot         419       1  0 15:28 ?        00:00:00 /usr/lib/systemd/systemd-logind\nroot         424       2  0 15:28 ?        00:00:00 [uas]\nroot         425       2  0 15:28 ?        00:00:00 [led_workqueue]\nroot         426       2  0 15:28 ?        00:00:00 [kworker/2:3-events]\nroot         432       1  0 15:28 ?        00:00:00 /usr/bin/cupsd -l\nntp          438       1  0 15:28 ?        00:00:00 /usr/bin/ntpd -g -u ntp:ntp\nroot         439       1  0 15:28 ?        00:00:00 /usr/bin/sddm\ncolord       480       1  0 15:28 ?        00:00:00 /usr/lib/colord\nmysql        483       1  0 15:28 ?        00:00:00 /usr/bin/mariadbd\nroot         491       1  0 15:28 ?        00:00:00 /usr/bin/ifplugd -i enp0s31f6 -r /etc/ifplugd/netctl.action -d 0\nroot         504       2  0 15:28 ?        00:00:00 [card1-crtc0]\nroot         505       2  0 15:28 ?        00:00:00 [card1-crtc1]\nroot         506       2  0 15:28 ?        00:00:00 [card1-crtc2]\nroot         507       2  0 15:28 ?        00:00:00 [card1-crtc3]\nroot         845     439 15 15:28 tty1     00:07:39 /usr/lib/Xorg -nolisten tcp -background none -seat seat0 vt1 -au\npolkitd     1126       1  0 15:28 ?        00:00:00 /usr/lib/polkit-1/polkitd --no-debug\nroot        1127       1  0 15:28 ?        00:00:00 /usr/lib/udisks2/udisksd\nroot        1250       1  0 15:28 ?        00:00:00 /usr/lib/upowerd\nroot        5329     439  0 15:30 ?        00:00:00 /usr/lib/sddm/sddm-helper --socket /tmp/sddm-auth7882d9d1-7181-4\nben         5331       1  0 15:30 ?        00:00:00 /usr/lib/systemd/systemd --user\nben         5332    5331  0 15:30 ?        00:00:00 (sd-pam)\nben         5341    5331  0 15:30 ?        00:00:00 /usr/bin/ssh-agent -a /run/user/1000/ssh-agent.socket\nben         5344       1  0 15:30 ?        00:00:00 /usr/bin/kwalletd5 --pam-login 7 8\nben         5345    5329  0 15:30 ?        00:00:00 /usr/bin/startplasma-x11\nben         5351    5331  0 15:30 ?        00:00:02 /usr/bin/dbus-daemon --session --address=systemd: --nofork --nop\nben         5376       1  0 15:30 ?        00:00:00 /usr/lib/kf5/start_kdeinit\nben         5377       1  0 15:30 ?        00:00:00 kdeinit5: Running...\nben         5380    5377  0 15:30 ?        00:00:00 /usr/lib/kf5/klauncher --fd=9\nben         5393       1  0 15:30 ?        00:00:02 /usr/bin/kded5\nben         5397       1 12 15:30 ?        00:05:49 /usr/bin/kwin_x11\nben         5407    5331  0 15:30 ?        00:00:00 /usr/lib/dconf-service\nben         5422       1  0 15:30 ?        00:00:00 /usr/bin/ksmserver\nben         5423    5331  0 15:30 ?        00:00:00 /usr/bin/kglobalaccel5\nben         5424    5331  0 15:30 ?        00:00:00 /usr/lib/kactivitymanagerd\nben         5443       1  0 15:30 ?        00:00:00 /usr/lib/org_kde_powerdevil\nben         5445       1  0 15:30 ?        00:00:00 /usr/bin/kaccess\nben         5453       1  0 15:30 ?        00:00:24 /usr/bin/plasmashell\nben         5455       1  0 15:30 ?        00:00:00 /usr/bin/xembedsniproxy\nben         5458       1  0 15:30 ?        00:00:00 /usr/lib/polkit-kde-authentication-agent-1\nben         5471       1  0 15:30 ?        00:00:00 /usr/bin/gmenudbusmenuproxy\nben         5474       1  0 15:30 ?        00:00:00 /usr/lib/kdeconnectd\nben         5480    5331  0 15:30 ?        00:00:02 /usr/lib/telepathy/mission-control-5\nben         5496       1  0 15:30 ?        00:00:00 /usr/lib/DiscoverNotifier\nben         5497    5331  4 15:30 ?        00:02:17 /usr/bin/pulseaudio --daemonize=no --log-target=journal\nrtkit       5509       1  0 15:30 ?        00:00:00 /usr/lib/rtkit-daemon\nben         5535    5422  0 15:30 ?        00:00:00 /usr/bin/korgac -session 10c3d7d168000157668832400000005170010_1\nben         5550    5331  0 15:30 ?        00:00:00 /usr/lib/bluetooth/obexd\nben         5562    5331  0 15:30 ?        00:00:00 /usr/lib/kf5/kscreen_backend_launcher\nben         5571    5422  0 15:30 ?        00:00:00 /usr/bin/kmix -session 10c3d7d168000159220324600000006650006_163\nben         5574    5331  0 15:30 ?        00:00:06 /usr/bin/ksystemstats\nben         5579       1  0 15:30 ?        00:00:00 /usr/bin/akonadi_control\nben         5583    5422  0 15:30 ?        00:00:01 /usr/bin/ktorrent -session 10c3d7d168000161495567300000034780020\nben         5586    5579  0 15:30 ?        00:00:14 /usr/bin/akonadiserver\nben         5596    5586  0 15:30 ?        00:00:15 /usr/bin/mysqld --defaults-file=/home/ben/.local/share/akonadi/m\nben         5606    5422  0 15:30 ?        00:00:05 /usr/bin/nextcloud -session 10c3d7d16800016275863140000002807001\nben         5644    5422  0 15:30 ?        00:00:00 /usr/bin/kgpg -session 10c3d7d168000163752270100000007410035_163\nben         5650    5497  0 15:30 ?        00:00:00 /usr/lib/pulse/gsettings-helper\nben         5668    5579  0 15:30 ?        00:00:00 /usr/bin/akonadi_akonotes_resource --identifier akonadi_akonotes\nben         5670    5579  0 15:30 ?        00:00:00 /usr/bin/akonadi_archivemail_agent --identifier akonadi_archivem\nben         5672    5579  0 15:30 ?        00:00:00 /usr/bin/akonadi_birthdays_resource --identifier akonadi_birthda\nben         5673    5579  0 15:30 ?        00:00:00 /usr/bin/akonadi_contacts_resource --identifier akonadi_contacts\nben         5674    5579  0 15:30 ?        00:00:00 /usr/bin/akonadi_davgroupware_resource --identifier akonadi_davg\nben         5675    5579  0 15:30 ?        00:00:00 /usr/bin/akonadi_followupreminder_agent --identifier akonadi_fol\nben         5679    5579  0 15:30 ?        00:00:00 /usr/bin/akonadi_ical_resource --identifier akonadi_ical_resourc\nben         5682    5579  0 15:30 ?        00:00:00 /usr/bin/akonadi_imap_resource --identifier akonadi_imap_resourc\nben         5687    5579  1 15:30 ?        00:00:36 /usr/bin/akonadi_imap_resource --identifier akonadi_imap_resourc\nben         5692    5579  0 15:30 ?        00:00:00 /usr/bin/akonadi_imap_resource --identifier akonadi_imap_resourc\nben         5695    5579  0 15:30 ?        00:00:00 /usr/bin/akonadi_imap_resource --identifier akonadi_imap_resourc\nben         5699    5579  0 15:30 ?        00:00:00 /usr/bin/akonadi_imap_resource --identifier akonadi_imap_resourc\nben         5702    5579  0 15:30 ?        00:00:00 /usr/bin/akonadi_indexing_agent --identifier akonadi_indexing_ag\nben         5705    5579  0 15:30 ?        00:00:00 /usr/bin/akonadi_maildir_resource --identifier akonadi_maildir_r\nben         5711    5579  0 15:30 ?        00:00:00 /usr/bin/akonadi_maildispatcher_agent --identifier akonadi_maild\nben         5712    5579  0 15:30 ?        00:00:00 /usr/bin/akonadi_mailfilter_agent --identifier akonadi_mailfilte\nben         5714    5579  0 15:30 ?        00:00:00 /usr/bin/akonadi_mailmerge_agent --identifier akonadi_mailmerge_\nben         5719    5579  0 15:30 ?        00:00:00 /usr/bin/akonadi_migration_agent --identifier akonadi_migration_\nben         5720    5579  0 15:30 ?        00:00:00 /usr/bin/akonadi_newmailnotifier_agent --identifier akonadi_newm\nben         5723    5579  0 15:30 ?        00:00:00 /usr/bin/akonadi_notes_agent --identifier akonadi_notes_agent\nben         5729    5579  0 15:30 ?        00:00:00 /usr/bin/akonadi_sendlater_agent --identifier akonadi_sendlater_\nben         5732    5422 99 15:30 ?        00:55:18 /usr/lib/firefox/firefox --sm-client-id 10c3d7d16800016383908030\nben         5738    5579  0 15:30 ?        00:00:00 /usr/bin/akonadi_unifiedmailbox_agent --identifier akonadi_unifi\nben         5743    5331  0 15:30 ?        00:00:00 /usr/lib/kf5/kiod5\nben         5752    5331  0 15:30 ?        00:00:00 /usr/bin/gpg-agent --supervised\nben         5991    5331  0 15:30 ?        00:00:00 /usr/lib/at-spi-bus-launcher\nben         6005    5732  4 15:30 ?        00:02:16 /usr/lib/firefox/firefox -contentproc -parentBuildID 20211121002\nben         6076    5732  1 15:30 ?        00:00:48 /usr/lib/firefox/firefox -contentproc -childID 1 -isForBrowser -\nben         6144    5732  0 15:30 ?        00:00:02 /usr/lib/firefox/firefox -contentproc -childID 2 -isForBrowser -\nben         6162    5732  1 15:30 ?        00:00:47 /usr/lib/firefox/firefox -contentproc -childID 3 -isForBrowser -\nben         6270    5732  0 15:30 ?        00:00:01 /usr/bin/plasma-browser-integration-host /usr/lib/mozilla/native\nben         6384    5732  0 15:30 ?        00:00:00 /usr/lib/firefox/firefox -contentproc -parentBuildID 20211121002\nroot        6403       2  0 15:30 ?        00:00:00 [cifsiod]\nroot        6404       2  0 15:30 ?        00:00:00 [smb3decryptd]\nroot        6405       2  0 15:30 ?        00:00:00 [cifsfileinfoput]\nroot        6406       2  0 15:30 ?        00:00:00 [cifsoplockd]\nroot        6407       2  0 15:30 ?        00:00:00 [deferredclose]\nroot        6410       2  0 15:30 ?        00:00:00 [cifsd]\nben         6451       1  0 15:30 ?        00:00:00 /usr/bin/kalarm --tray\nben         6461       1  0 15:31 ?        00:00:00 /usr/lib/kf5/kioslave5 /usr/lib/qt/plugins/kf5/kio/kio_file.so f\nben         6463       1  0 15:31 ?        00:00:00 /usr/lib/kf5/kioslave5 /usr/lib/qt/plugins/kf5/kio/kio_file.so f\nben         6479    5453  0 15:33 ?        00:00:06 /usr/bin/kmail -qwindowtitle KMail\nben         6509    6479  0 15:33 ?        00:00:00 /usr/lib/qt/libexec/QtWebEngineProcess --type=zygote --no-zygote\nben         6510    6479  0 15:33 ?        00:00:00 /usr/lib/qt/libexec/QtWebEngineProcess --type=zygote --disable-i\nben         6512    6510  0 15:33 ?        00:00:00 /usr/lib/qt/libexec/QtWebEngineProcess --type=zygote --disable-i\nben         6531    6479  0 15:33 ?        00:00:00 /usr/lib/qt/libexec/QtWebEngineProcess --type=utility --utility-\nben         6532    6512  0 15:33 ?        00:00:01 /usr/lib/qt/libexec/QtWebEngineProcess --type=renderer --disable\nben         6645    5732 31 15:33 ?        00:13:30 /usr/lib/firefox/firefox -contentproc -childID 5 -isForBrowser -\nben         6673    6512  0 15:34 ?        00:00:00 /usr/lib/qt/libexec/QtWebEngineProcess --type=renderer --disable\nben         6710    5732 42 15:34 ?        00:18:05 /usr/lib/firefox/firefox -contentproc -childID 6 -isForBrowser -\nben         6840    5732  0 15:35 ?        00:00:05 /usr/lib/firefox/firefox -contentproc -childID 7 -isForBrowser -\nroot        7137       2  0 15:43 ?        00:00:00 [kworker/3:2-events]\nben         7244    5732  0 15:45 ?        00:00:00 /usr/lib/firefox/firefox -contentproc -childID 9 -isForBrowser -\nroot        7499       2  0 15:54 ?        00:00:00 [kworker/u8:0-events_unbound]\nroot        7513       2  0 15:54 ?        00:00:02 [kworker/u9:1-i915_flip]\nroot        7560       2  0 15:56 ?        00:00:00 [kworker/u8:1-flush-8:0]\nroot        7776       2  0 16:05 ?        00:00:00 [kworker/u8:2-i915]\nroot        7791       2  0 16:07 ?        00:00:00 [kworker/2:1-events]\nroot        7792       2  0 16:07 ?        00:00:00 [kworker/0:0-events]\nroot        7827       2  0 16:09 ?        00:00:01 [kworker/1:1-events]\nroot        7846       2  0 16:09 ?        00:00:00 [scsi_eh_7]\nroot        7847       2  0 16:09 ?        00:00:00 [scsi_tmf_7]\nroot        7849       2  0 16:09 ?        00:00:00 [usb-storage]\nroot        7878       2  0 16:09 ?        00:00:00 [kworker/3:1-events]\nben         7892       1  0 16:09 ?        00:00:01 /usr/bin/dolphin /run/media/ben/USB-ABEL\nben         7903    7892  0 16:09 pts/1    00:00:00 /bin/bash\nben         7921       1  0 16:09 ?        00:00:00 /usr/lib/kf5/kioslave5 /usr/lib/qt/plugins/kf5/kio/kio_file.so f\nben         7923       1  0 16:09 ?        00:00:00 /usr/lib/kf5/kioslave5 /usr/lib/qt/plugins/kf5/kio/kio_file.so f\nroot        8016       2  0 16:12 ?        00:00:00 [kworker/u8:3-events_unbound]\nroot        8053       2  0 16:13 ?        00:00:00 [kworker/2:0-events]\nroot        8065       2  0 16:13 ?        00:00:00 [kworker/u9:2-i915_flip]\nben         8149    5393  5 16:16 ?        00:00:00 /usr/bin/konsole\nben         8157    8149  0 16:16 pts/2    00:00:00 /bin/bash\nben         8161    8157  0 16:16 pts/2    00:00:00 ps -aef",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 3: Architectures matérielles, systèmes d’exploitation et réseaux",
      "Chapitre 2: Gestion des processus par un système d’exploitation",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/2-gestion-des-processus-par-un-systeme-dexploitation/exo/index.html#révisions-de-première",
    "href": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/2-gestion-des-processus-par-un-systeme-dexploitation/exo/index.html#révisions-de-première",
    "title": "Exercices",
    "section": "3 Révisions de première",
    "text": "3 Révisions de première\nOuvrir le cours sur les systèmes d’exploitation de première pour revoir et utiliser les diverses commandes de base:\n\nOù suis-je? pwd\nNaviguer dans le système de fichiers ls et cd\nConnaître les droits sur les fichiers ls -l\nGérer les droits avec chmod\nGérer les propriétaires avec chown",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 3: Architectures matérielles, systèmes d’exploitation et réseaux",
      "Chapitre 2: Gestion des processus par un système d’exploitation",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/2-gestion-des-processus-par-un-systeme-dexploitation/exo/index.html#exercice-type-bac",
    "href": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/2-gestion-des-processus-par-un-systeme-dexploitation/exo/index.html#exercice-type-bac",
    "title": "Exercices",
    "section": "4 Exercice type BAC",
    "text": "4 Exercice type BAC\nCet exercice est l’exercice n°2 du sujet n°2 du BAC 2021 métropole en candidat libre.\n\nLes états possibles d’un processus sont : prêt, élu, terminé et bloqué.\n\nExpliquer à quoi correspond l’état élu.\nProposer un schéma illustrant les passages entre les différents états.\n\nOn suppose que quatre processus C₁, C₂, C₃ et C₄ sont créés sur un ordinateur, et qu’aucun autre processus n’est lancé sur celui-ci, ni préalablement ni pendant l’exécution des quatre processus.\nL’ordonnanceur, pour exécuter les différents processus prêts, les place dans une structure de données de type file. Un processus prêt est enfilé et un processus élu est défilé.\n\nParmi les propositions suivantes, recopier celle qui décrit le fonctionnement des entrées/sorties dans une file :\n\nPremier entré, dernier sorti\nPremier entré, premier sorti\nDernier entré, premier sorti\n\nOn suppose que les quatre processus arrivent dans la file et y sont placés dans l’ordre C₁, C₂, C₃ et C₄.\n\nLes temps d’exécution totaux de C₁, C₂, C₃ et C₄ sont respectivement 100 ms, 150 ms, 80 ms et 60 ms.\nAprès 40 ms d’exécution, le processus C₁ demande une opération d’écriture disque, opération qui dure 200 ms. Pendant cette opération d’écriture, le processus C₁ passe à l’état bloqué.\nAprès 20 ms d’exécution, le processus C₃ demande une opération d’écriture disque, opération qui dure 10 ms. Pendant cette opération d’écriture, le processus C₃ passe à l’état bloqué.\n\nSur la frise chronologique donnée en annexe (à rendre avec la copie), les états du processus C₂ sont donnés. Compléter la frise avec les états des processus C₁, C₃ et C₄.\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nAnnexe de l’exercice 2\n\n\n\nOn trouvera ci-dessous deux programmes rédigés en pseudo-code.\nVerrouiller un fichier signifie que le programme demande un accès exclusif au fichier et l’obtient si le fichier est disponible.\n\n\n\nProgramme 1\nProgramme 2\n\n\n\n\nVerrouiller fichier_1\nVerrouiller fichier_2\n\n\nCalculs sur fichier_1\nVerrouiller fichier_1\n\n\nVerrouiller fichier_2\nCalculs sur fichier_1\n\n\nCalculs sur fichier_1\nCalculs sur fichier_2\n\n\nCalculs sur fichier_2\nDéverrouiller fichier_1\n\n\nCalculs sur fichier_1\nDéverrouiller fichier_2\n\n\nDéverrouiller fichier_2\n\n\n\nDéverrouiller fichier_1\n\n\n\n\n\nEn supposant que les processus correspondant à ces programmes s’exécutent simultanément (exécution concurrente), expliquer le problème qui peut être rencontré.\nProposer une modification du programme 2 permettant d’éviter ce problème.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 3: Architectures matérielles, systèmes d’exploitation et réseaux",
      "Chapitre 2: Gestion des processus par un système d’exploitation",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/2-gestion-des-processus-par-un-systeme-dexploitation/exo/index.html#exercice-type-bac-1",
    "href": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/2-gestion-des-processus-par-un-systeme-dexploitation/exo/index.html#exercice-type-bac-1",
    "title": "Exercices",
    "section": "5 Exercice type BAC",
    "text": "5 Exercice type BAC\n\nCet exercice est la première partie de l’exercice 3 du sujet 1 candidat libre Métropole 2021.\n\nLa commande UNIX ps présente un cliché instantané des processus en cours d’exécution.\nAvec l’option −eo pid,ppid,stat,command, cette commande affiche dans l’ordre l’identifiant du processus PID (process identifier), le PPID (parent process identifier), l’état STAT et le nom de la commande à l’origine du processus.\nLes valeurs du champ STAT indique l’état des processus :\n\nR : processus en cours d’exécution\nS : processus endormi\n\nSur un ordinateur, on exécute la commande ps −eo pid,ppid,stat,command et on obtient un affichage dont on donne ci-dessous un extrait.\n$ ps -eo pid,ppid,stat,command\n\nPID   PPID  STAT  COMMAND\n1     0     Ss    /sbin/init\n....  ....  ..    ... \n1912  1908  Ss    Bash\n2014  1912  Ss    Bash\n1920  1747  Sl    Gedit\n2013  1912  Ss    Bash\n2091  1593  Sl    /usr/lib/firefox/firefox\n5437  1912  Sl    python programme1.py\n5440  2013  R     python programme2.py\n5450  1912  R+    ps -eo pid,ppid,stat,command\nÀ l’aide de cet affichage, répondre aux questions ci-dessous.\n\nQuel est le nom de la première commande exécutée par le système d’exploitation lors du démarrage?\nQuels sont les identifiants des processus actifs sur cet ordinateur au moment de l’appel de la commande ps? Justifier la réponse.\nDepuis quelle application a-t-on exécuté la commande ps? Donner les autres commandes qui ont été exécutées à partir de cette application.\nExpliquer l’ordre dans lequel les deux commandes python programme1.py et python programme2.py ont été exécutées.\nPeut-on prédire que l’une des deux commandes python programme1.py et python programme2.py finira avant l’autre?",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 3: Architectures matérielles, systèmes d’exploitation et réseaux",
      "Chapitre 2: Gestion des processus par un système d’exploitation",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/3-protocoles-de-routage/quiz/index.html",
    "href": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/3-protocoles-de-routage/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 3: Architectures matérielles, systèmes d’exploitation et réseaux",
      "Chapitre 3: Protocoles de routage",
      "Quiz"
    ]
  },
  {
    "objectID": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/3-protocoles-de-routage/exo/index.html",
    "href": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/3-protocoles-de-routage/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Cet exercice est l’exercice 3 du sujet 2 métropole 2021.\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nRéseau d’entreprise\n\n\nLa figure 1 ci-dessus représente le schéma d’un réseau d’entreprise. Il y figure deux réseaux locaux L1 et L2. Ces deux réseaux locaux sont interconnectés par les routeurs R2, R3, R4 et R5. Le réseau local L1 est constitué des PC portables P1 et P2 connectés à la passerelle R1 par le switch Sw1. Les serveurs S1 et S2 sont connectés à la passerelle R6 par le switch Sw2.\nLe tableau 1 suivant indique les adresses IPv4 des machines constituant le réseau de l’entreprise.\n\nadresses IPv4 des machines\n\n\nNom\n    Type\n    Adresse IPv4\n\n\n\n\nR1\nrouteur(passerelle)\nInterface 1 : 192.168.1.1/24 Interface 2 : 10.1.1.2/24\n\n\nR2\nrouteur\nInterface 1 : 10.1.1.1/24 Interface 2 : 10.1.2.1/24 Interface 3 : 10.1.3.1/24\n\n\nR3\nrouteur\nInterface 1 : 10.1.2.2/24 Interface 2 : 10.1.4.2/24 Interface 3 : 10.1.5.2/24\n\n\nR4\nrouteur\nInterface 1 : 10.1.2.2/24 Interface 2 : 10.1.4.2/24\n\n\nR5\nrouteur\nInterface 1 : 10.1.3.2/24 Interface 2 : 10.1.4.1/24 Interface 3 : 10.1.6.2/24 Interface 4 : 10.1.7.1/24\n\n\nR6\nrouteur (passerelle)\nInterface 1 : 172.16.0.1/16 Interface 2 : 10.1.7.2/24\n\n\nP1\nordinateur portable\n192.168.1.40/24\n\n\nP2\nordinateur portable\n192.168.1.46/24\n\n\nS1\nserveur\n172.16.8.10/16\n\n\nS2\nserveur\n172.16.9.12/16\n\n\n\nRappels et notations\nRappelons qu’une adresse IP est composée de 4 octets, soit 32 bits. Elle est notée X1.X2.X3.X4, où X1, X2, X3 et X4 sont les valeurs des 4 octets. Dans le tableau 1, les valeurs des 4 octets ont été converties en notation décimale.\nLa notation X1.X2.X3.X4/n signifie que les n premiers bits de poids forts de l’adresse IP représentent la partie « réseau », les bits suivants de poids faibles représentent la partie « machine ».\nToutes les adresses des machines connectées à un réseau local ont la même partie réseau. L’adresse IP dont tous les bits de la partie « machine » sont à 0 est appelée « adresse du réseau ». L’adresse IP dont tous les bits de la partie « machine » sont à 1 est appelée « adresse de diffusion ».\n\n \n\nQuelles sont les adresses des réseaux locaux L1 et L2?\nDonner la plus petite et la plus grande adresse IP valides pouvant être attribuées à un ordinateur portable ou un serveur sur chacun des réseaux L1 et L2 sachant que l’adresse du réseau et l’adresse de diffusion ne peuvent pas être attribuées à une machine.\nCombien de machines peut-on connecter au maximum à chacun des réseaux locaux L1 et L2? On donne ci-dessous les valeurs de quelques puissances de 2?\n\n\n\n262^6\n272^7\n282^8\n292^9\n2102^{10}\n2112^{11}\n2122^{12}\n2132^{13}\n2142^{14}\n2152^{15}\n2162^{16}\n2172^{17}\n\n\n\n\n64\n128\n256\n512\n1024\n2048\n4096\n8192\n16384\n32768\n65536\n131072\n\n\n\n\n \n\nExpliquer l’utilité d’avoir plusieurs chemins possibles reliant les réseaux L1 et L2.\nQuel est le chemin le plus court en nombre de sauts pour relier R1 et R6? Donner le nombre de sauts de ce chemin et préciser les routeurs utilisés.\nLa bande passante d’une liaison Ether (quantité d’information qui peut être transmise en bits/s) est de 10710^7 bits/s et celle d’une liaison FastEther est de 10810^8 bits/s. Le coût d’une liaison est défini par 10810^8/d, où dd est sa bande passante en bits/s.\n\nType des liaisons entre les routeurs\n\n\nLiaison\nR1-R2\nR2-R5\nR5-R6\nR2-R3\nR3-R4\nR4-R5\nR3-R5\n\n\n\n\nType\nEther\nEther\nEther\nFastEther\nFastEther\nFastEther\nEther\n\n\n\nQuel est le chemin reliant R1 et R6 qui a le plus petit coût? Donner le coût de ce chemin et préciser les routeurs utilisés.\n\nDans l’annexe A figurent les tables de routages des routeurs R1, R2, R5 et R6 au démarrage du réseau. Indiquer sur votre copie ce qui doit figurer dans les lignes laissées vides des tables de routage des routeurs R5 et R6 pour que les échanges entre les ordinateurs des réseaux L1 et L2 se fassent en empruntant le chemin le plus court en nombre de sauts.\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nAnnexe A exercice 3",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 3: Architectures matérielles, systèmes d’exploitation et réseaux",
      "Chapitre 3: Protocoles de routage",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/3-protocoles-de-routage/exo/index.html#exercice-type-bac",
    "href": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/3-protocoles-de-routage/exo/index.html#exercice-type-bac",
    "title": "Exercices",
    "section": "",
    "text": "Cet exercice est l’exercice 3 du sujet 2 métropole 2021.\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nRéseau d’entreprise\n\n\nLa figure 1 ci-dessus représente le schéma d’un réseau d’entreprise. Il y figure deux réseaux locaux L1 et L2. Ces deux réseaux locaux sont interconnectés par les routeurs R2, R3, R4 et R5. Le réseau local L1 est constitué des PC portables P1 et P2 connectés à la passerelle R1 par le switch Sw1. Les serveurs S1 et S2 sont connectés à la passerelle R6 par le switch Sw2.\nLe tableau 1 suivant indique les adresses IPv4 des machines constituant le réseau de l’entreprise.\n\nadresses IPv4 des machines\n\n\nNom\n    Type\n    Adresse IPv4\n\n\n\n\nR1\nrouteur(passerelle)\nInterface 1 : 192.168.1.1/24 Interface 2 : 10.1.1.2/24\n\n\nR2\nrouteur\nInterface 1 : 10.1.1.1/24 Interface 2 : 10.1.2.1/24 Interface 3 : 10.1.3.1/24\n\n\nR3\nrouteur\nInterface 1 : 10.1.2.2/24 Interface 2 : 10.1.4.2/24 Interface 3 : 10.1.5.2/24\n\n\nR4\nrouteur\nInterface 1 : 10.1.2.2/24 Interface 2 : 10.1.4.2/24\n\n\nR5\nrouteur\nInterface 1 : 10.1.3.2/24 Interface 2 : 10.1.4.1/24 Interface 3 : 10.1.6.2/24 Interface 4 : 10.1.7.1/24\n\n\nR6\nrouteur (passerelle)\nInterface 1 : 172.16.0.1/16 Interface 2 : 10.1.7.2/24\n\n\nP1\nordinateur portable\n192.168.1.40/24\n\n\nP2\nordinateur portable\n192.168.1.46/24\n\n\nS1\nserveur\n172.16.8.10/16\n\n\nS2\nserveur\n172.16.9.12/16\n\n\n\nRappels et notations\nRappelons qu’une adresse IP est composée de 4 octets, soit 32 bits. Elle est notée X1.X2.X3.X4, où X1, X2, X3 et X4 sont les valeurs des 4 octets. Dans le tableau 1, les valeurs des 4 octets ont été converties en notation décimale.\nLa notation X1.X2.X3.X4/n signifie que les n premiers bits de poids forts de l’adresse IP représentent la partie « réseau », les bits suivants de poids faibles représentent la partie « machine ».\nToutes les adresses des machines connectées à un réseau local ont la même partie réseau. L’adresse IP dont tous les bits de la partie « machine » sont à 0 est appelée « adresse du réseau ». L’adresse IP dont tous les bits de la partie « machine » sont à 1 est appelée « adresse de diffusion ».\n\n \n\nQuelles sont les adresses des réseaux locaux L1 et L2?\nDonner la plus petite et la plus grande adresse IP valides pouvant être attribuées à un ordinateur portable ou un serveur sur chacun des réseaux L1 et L2 sachant que l’adresse du réseau et l’adresse de diffusion ne peuvent pas être attribuées à une machine.\nCombien de machines peut-on connecter au maximum à chacun des réseaux locaux L1 et L2? On donne ci-dessous les valeurs de quelques puissances de 2?\n\n\n\n262^6\n272^7\n282^8\n292^9\n2102^{10}\n2112^{11}\n2122^{12}\n2132^{13}\n2142^{14}\n2152^{15}\n2162^{16}\n2172^{17}\n\n\n\n\n64\n128\n256\n512\n1024\n2048\n4096\n8192\n16384\n32768\n65536\n131072\n\n\n\n\n \n\nExpliquer l’utilité d’avoir plusieurs chemins possibles reliant les réseaux L1 et L2.\nQuel est le chemin le plus court en nombre de sauts pour relier R1 et R6? Donner le nombre de sauts de ce chemin et préciser les routeurs utilisés.\nLa bande passante d’une liaison Ether (quantité d’information qui peut être transmise en bits/s) est de 10710^7 bits/s et celle d’une liaison FastEther est de 10810^8 bits/s. Le coût d’une liaison est défini par 10810^8/d, où dd est sa bande passante en bits/s.\n\nType des liaisons entre les routeurs\n\n\nLiaison\nR1-R2\nR2-R5\nR5-R6\nR2-R3\nR3-R4\nR4-R5\nR3-R5\n\n\n\n\nType\nEther\nEther\nEther\nFastEther\nFastEther\nFastEther\nEther\n\n\n\nQuel est le chemin reliant R1 et R6 qui a le plus petit coût? Donner le coût de ce chemin et préciser les routeurs utilisés.\n\nDans l’annexe A figurent les tables de routages des routeurs R1, R2, R5 et R6 au démarrage du réseau. Indiquer sur votre copie ce qui doit figurer dans les lignes laissées vides des tables de routage des routeurs R5 et R6 pour que les échanges entre les ordinateurs des réseaux L1 et L2 se fassent en empruntant le chemin le plus court en nombre de sauts.\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nAnnexe A exercice 3",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 3: Architectures matérielles, systèmes d’exploitation et réseaux",
      "Chapitre 3: Protocoles de routage",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/1-systeme-sur-puce/index.html",
    "href": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/1-systeme-sur-puce/index.html",
    "title": "Chapitre 1: Système sur puce",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nComposants intégrés d’un système sur puce.\nIdentifier les principaux composants sur un schéma de circuit et les avantages de leur intégration en termes de vitesse et de consommation.\nLe circuit d’un téléphone peut être pris comme un exemple : microprocesseurs, mémoires locales, interfaces radio et filaires, gestion d’énergie, contrôleurs vidéo, accélérateur graphique, réseaux sur puce, etc.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 3: Architectures matérielles, systèmes d’exploitation et réseaux",
      "Chapitre 1: Système sur puce"
    ]
  },
  {
    "objectID": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/4-securisation-des-communications/quiz/index.html",
    "href": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/4-securisation-des-communications/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 3: Architectures matérielles, systèmes d’exploitation et réseaux",
      "Chapitre 4: Sécurisation des communications*",
      "Quiz"
    ]
  },
  {
    "objectID": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/4-securisation-des-communications/exo/index.html",
    "href": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/4-securisation-des-communications/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Pour réaliser ces exercices on peut utiliser le module string de python.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 3: Architectures matérielles, systèmes d’exploitation et réseaux",
      "Chapitre 4: Sécurisation des communications*",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/4-securisation-des-communications/exo/index.html#implémenter-des-chiffrements-symétriques-en-python",
    "href": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/4-securisation-des-communications/exo/index.html#implémenter-des-chiffrements-symétriques-en-python",
    "title": "Exercices",
    "section": "1 Implémenter des chiffrements symétriques en Python",
    "text": "1 Implémenter des chiffrements symétriques en Python\n\nImplémenter le chiffrement de César en créant une fonction cesar qui prend deux paramètres:\n\nmessage une chaîne de caractères à (dé)coder.\nn un entier qui donne le décalage.\n\nCette fonction doit convertir le message en majuscule, et décaler toutes les lettres de nn grâce au codage César, et laisser tous les autres caractères inchangés(ponctuation).\nVoici une série de tests à passer.\nassert cesar('message', 0) == \"MESSAGE\"\nassert cesar('message', 1) == 'NFTTBHF'\nassert cesar('message', -1) == 'LDRRZFD'\nassert cesar('message', 26) == 'MESSAGE'\nassert cesar('message', 53) == 'NFTTBHF'\nassert cesar('message', -27) == 'LDRRZFD'\n\neluard = \"\"\"Sur mes cahiers d’écolier\nSur mon pupitre et les arbres\nSur le sable sur la neige\nJ’écris ton nom\"\"\"\nassert cesar(eluard, 13) == 'FHE ZRF PNUVREF Q’ÉPBYVRE\\nFHE ZBA CHCVGER RG YRF NEOERF\\nFHE YR FNOYR FHE YN ARVTR\\nW’ÉPEVF GBA ABZ'\n\n# vérification du décodage\nassert cesar(cesar(eluard, 13), -13) == eluard.upper()\n\nImplémenter le chiffrement par substitution avec une fonction substitution qui prend deux paramètres:\n\nmessage une chaîne de caractères à (dé)coder.\nclé une chaîne de caractères qui donne les correspondances des caractères. Par exemple: AZERTYUIOPQSDFGHJKLMWXCVBN dans le cours.\n\nOn pourra vérifier son fonctionnement sur l’exemple du cours:\nassert substitution(\"SUBSTITUTION\", \"AZERTYUIOPQSDFGHJKLMWXCVBN\") == \"LWZLMOMWMOGF\"\nComment devra être effectué le décodage à partir du message codé et de la clé?\nImplémenter le chiffrement de Vigenère avec une fonction vigenère qui prend deux paramètres:\n\nmessage une chaîne de caractères à (dé)coder.\nclé une chaîne de caractères qui donne les décalages des caractères. Par exemple: ABC dans le cours.\n\nOn pourra vérifier son fonctionnement sur l’exemple du cours:\nassert vigenère(\"SUBSTITUTION\", \"ABC\") == \"SVDSUKTVVIPP\"\nComment devra être effectué le décodage à partir du message codé et de la clé?",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 3: Architectures matérielles, systèmes d’exploitation et réseaux",
      "Chapitre 4: Sécurisation des communications*",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/sci/0-introduction/quiz/index.html",
    "href": "tg/sci/0-introduction/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 0: Introduction",
      "Quiz"
    ]
  },
  {
    "objectID": "tg/sci/0-introduction/exo/index.html",
    "href": "tg/sci/0-introduction/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Aucun exercice pour l’instant.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 0: Introduction",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/sci/1-science-climat-et-societe/4-energie-choix-de-developpement-et-futur-climatique/index.html",
    "href": "tg/sci/1-science-climat-et-societe/4-energie-choix-de-developpement-et-futur-climatique/index.html",
    "title": "Chapitre 4: Énergie choix de développement et futur climatique",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\n                    Savoirs\n          Savoir-faire\n\n\n\n\nL’énergie utilisée dans le monde provient d’une diversité de ressources parmi lesquelles les combustibles fossiles dominent.\nLa consommation en est très inégalement répartie selon la richesse des pays et des individus.\nUtiliser les différentes unités d’énergie employées (Tonne Équivalent Pétrole (TEP), kWh…) et les convertir en joules – les facteurs de conversion étant fournis.\n\n\nLa croissance de la consommation globale (doublement dans les 40 dernières années) est directement liée au modèle industriel de production et de consommation des sociétés.\nExploiter des données de production et d’utilisation d’énergie à différentes échelles (mondiale, nationale, individuelle…).\n\n\nEn moyenne mondiale, cette énergie est utilisée à parts comparables par le secteur industriel, les transports, le secteur de l’habitat et dans une moindre mesure par le secteur agricole.\nLes énergies primaires sont disponibles sous forme de stocks (combustibles fossiles, uranium) et de flux (flux radiatif solaire, flux géothermique, puissance gravitationnelle à l’origine des marées).\nComparer quelques ordres de grandeur d’énergie et de puissance : corps humain, objets du quotidien, centrale électrique, flux radiatif solaire…\n\n\nLa combustion de carburants fossiles et de biomasse libère du dioxyde de carbone et également des aérosols et d’autres substances (N2O{\\mathrm{N}}_{\\mathrm{2}}{\\mathrm{O}}, O3{\\mathrm{O}_{\\mathrm{3}}}, suies, produits soufrés), qui affectent la qualité de l’air respiré et la santé.\nCalculer la masse de dioxyde de carbone produite par unité d’énergie dégagée pour différents combustibles (l’équation de réaction et l’énergie massique dégagée étant fournies).\nÀ partir de documents épidémiologiques, identifier et expliquer les conséquences sur la santé de certains polluants atmosphériques, telles les particules fines résultant de combustions.\n\n\nL’empreinte carbone d’une activité ou d’une personne est la masse de CO2 produite directement ou indirectement par sa consommation d’énergie et/ou de matière première.\nComparer sur l’ensemble de leur cycle de vie les impacts d’objets industriels (par exemple, voiture à moteur électrique ou à essence).\nÀ partir de documents, analyser l’empreinte carbone de différentes activités humaines et proposer des comportements pour la minimiser ou la compenser.\n\n\nLes scénarios de transition écologique font différentes hypothèses sur la quantité de GES émise dans le futur. Ils évaluent les changements prévisibles, affectant principalement les plus fragiles.\nAnalyser l’impact de l’augmentation du CO2 sur le développement de la végétation, écosystèmes et les conditions de vie des êtres humains,\n\n\nLes projections fournies par les modèles permettent de définir les aléas et peuvent orienter les prises de décision. Les mesures d’adaptation découlent d’une analyse des risques et des options pour y faire face.\nAnalyser des extraits de documents du GIEC ou d’accords internationaux proposant différents scénarios.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 1: Science climat et société",
      "Chapitre 4: Énergie choix de développement et futur climatique"
    ]
  },
  {
    "objectID": "tg/sci/1-science-climat-et-societe/4-energie-choix-de-developpement-et-futur-climatique/index.html#production-et-consommation-dénergie-dans-le-monde",
    "href": "tg/sci/1-science-climat-et-societe/4-energie-choix-de-developpement-et-futur-climatique/index.html#production-et-consommation-dénergie-dans-le-monde",
    "title": "Chapitre 4: Énergie choix de développement et futur climatique",
    "section": "1 Production et consommation d’énergie dans le monde",
    "text": "1 Production et consommation d’énergie dans le monde\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nFaire l’activité PP68-69 du Livre Scolaire: https://lls.fr/ESTP68\n\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nL’énergie utilisée dans le monde provient d’une diversité de ressources parmi lesquelles les combustibles fossiles dominent.\n\n\n\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nLa consommation d’énergie est très inégalement répartie selon la richesse des pays(et des individus).\n\n\n\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\n\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nConsommation énergétique par habitant dans le monde en 2003. Public domain via Wikimedia Commons\n\n\n\n\n\n\nImportant\n\n\n\nLa croissance de la consommation globale (doublement dans les 40 dernières années) est directement liée au modèle industriel de production et de consommation des sociétés.\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nA l'image de la population, la consommation globale d'énergie n'a cessé de croitre ces 40 dernières années.©  CC BY 3.0 via Wikimedia Commons\n\n\n\n\n\n\nImportant\n\n\n\nEn moyenne mondiale, l’énergie est utilisée à parts comparables par le secteur industriel, les transports, le secteur de l’habitat et dans une moindre mesure par le secteur agricole.\n\n\n\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nLes énergies primaires sont disponibles sous forme de stocks (combustibles fossiles, uranium) et de flux (flux radiatif solaire, flux géothermique, puissance gravitationnelle à l’origine des marées).",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 1: Science climat et société",
      "Chapitre 4: Énergie choix de développement et futur climatique"
    ]
  },
  {
    "objectID": "tg/sci/1-science-climat-et-societe/4-energie-choix-de-developpement-et-futur-climatique/index.html#la-pollution-de-lair-et-ses-conséquences",
    "href": "tg/sci/1-science-climat-et-societe/4-energie-choix-de-developpement-et-futur-climatique/index.html#la-pollution-de-lair-et-ses-conséquences",
    "title": "Chapitre 4: Énergie choix de développement et futur climatique",
    "section": "2 La pollution de l’air et ses conséquences",
    "text": "2 La pollution de l’air et ses conséquences\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nFaire l’activité PP72-73 du Livre Scolaire: https://lls.fr/ESTP73\n\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nLa combustion de carburants fossiles et de biomasse libère du dioxyde de carbone et également des aérosols et d’autres substances (N2O{\\mathrm{N}}_{\\mathrm{2}}{\\mathrm{O}}, O3{\\mathrm{O}}_{\\mathrm{3}}, suies, produits soufrés), qui affectent la qualité de l’air respiré et la santé.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 1: Science climat et société",
      "Chapitre 4: Énergie choix de développement et futur climatique"
    ]
  },
  {
    "objectID": "tg/sci/1-science-climat-et-societe/index.html",
    "href": "tg/sci/1-science-climat-et-societe/index.html",
    "title": "Partie 1: Science climat et société",
    "section": "",
    "text": "Chapitre 1: L’atmosphère terrestre et la vie\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 2: La complexité du système climatique\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 3: Le climat du futur\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 4: Énergie choix de développement et futur climatique\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAucun article correspondant",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 1: Science climat et société"
    ]
  },
  {
    "objectID": "tg/sci/1-science-climat-et-societe/3-le-climat-du-futur/index.html",
    "href": "tg/sci/1-science-climat-et-societe/3-le-climat-du-futur/index.html",
    "title": "Chapitre 3: Le climat du futur",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nSavoirs\nSavoir-faire\n\n\n\n\nLes modèles climatiques s’appuient sur :\n\nla mise en équations des mécanismes essentiels qui agissent sur le système Terre;\ndes méthodes numériques de résolution.\n\nLes résultats des modèles sont évalués par comparaison aux observations in situ et spatiales ainsi qu’à la connaissance des paléoclimats.\nCes modèles, nombreux et indépendants, réalisent des projections climatiques. Après avoir anticipé les évolutions des dernières décennies, ils estiment les variations climatiques globales et locales à venir sur des décennies ou des siècles.\nMettre en évidence le rôle des différents paramètres de l’évolution climatique, en exploitant un logiciel de simulation de celle-ci, ou par la lecture de graphiques.\n\n\nL’analyse scientifique combinant observations, éléments théoriques et modélisations numériques permet aujourd’hui de conclure que l’augmentation de température moyenne depuis le début de l’ère industrielle est liée à l’activité humaine : CO2 produit par la combustion d’hydrocarbures, la déforestation, la production de ciment; CH4 produit par les fuites de gaz naturel, la fermentation dans les décharges, certaines activités agricoles.\nLes modèles s’accordent à prévoir, avec une forte probabilité d’occurrence, dans des fourchettes dépendant de la quantité émise de GES :\n\nune augmentation de 1,5 à 5°C de la température moyenne entre 2017 et la fin du XXIe siècle;\nune élévation du niveau moyen des océans entre le début du XXIe siècle et 2100 pouvant atteindre le mètre;\ndes modifications des régimes de pluie et des événements climatiques extrêmes;\nune acidification des océans;\nun impact majeur sur les écosystèmes terrestres et marins.\n\nExploiter les résultats d’un modèle climatique pour expliquer des corrélations par des liens de cause à effet.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 1: Science climat et société",
      "Chapitre 3: Le climat du futur"
    ]
  },
  {
    "objectID": "tg/sci/1-science-climat-et-societe/2-la-complexite-du-systeme-climatique/quiz/index.html",
    "href": "tg/sci/1-science-climat-et-societe/2-la-complexite-du-systeme-climatique/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 1: Science climat et société",
      "Chapitre 2: La complexité du système climatique",
      "Quiz"
    ]
  },
  {
    "objectID": "tg/sci/1-science-climat-et-societe/2-la-complexite-du-systeme-climatique/exo/index.html",
    "href": "tg/sci/1-science-climat-et-societe/2-la-complexite-du-systeme-climatique/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Aucun exercice pour l’instant.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 1: Science climat et société",
      "Chapitre 2: La complexité du système climatique",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/sci/1-science-climat-et-societe/1-latmosphere-terrestre-et-la-vie/index.html",
    "href": "tg/sci/1-science-climat-et-societe/1-latmosphere-terrestre-et-la-vie/index.html",
    "title": "Chapitre 1: L’atmosphère terrestre et la vie",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nSavoirs\nSavoir-faire\n\n\n\n\nIl y a environ 4,6 milliards d’années, l’atmosphère primitive était composée de N2, CO2 et H2O. Sa composition actuelle est d’environ 78% de N2 et 21% de O2, avec des traces d’autres gaz (dont H2O, CO2, CH4, N2O).\nAnalyser des données, en lien avec l’évolution de la composition de l’atmosphère au cours des temps géologiques.\n\n\nLe refroidissement de la surface de la Terre primitive a conduit à la liquéfaction de la vapeur d’eau présente dans l’atmosphère initiale. L’hydrosphère s’est formée, dans laquelle s’est développée la vie.\nDéterminer l’état physique de l’eau pour une température et une pression donnée à partir de son diagramme d’état.\n\n\nLes premières traces de vie sont datées d’il y a au moins 3,5 milliards d’années. Par leur métabolisme photosynthétique, des cyanobactéries ont produit le dioxygène qui a oxydé, dans l’océan, des espèces chimiques réduites. Le dioxygène s’est accumulé à partir de 2,4 milliards d’années dans l’atmosphère. Sa concentration atmosphérique actuelle a été atteinte il y a 500 millions d’années environ.\nMettre en relation la production de O2 dans l’atmosphère avec des indices géologiques (oxydes de fer rubanés, stromatolithes…).\n\n\nLes sources et puits de dioxygène atmosphérique sont aujourd’hui essentiellement liés aux êtres vivants (photosynthèse et respiration) et aux combustions.\nAjuster les équations des réactions chimiques d’oxydation du fer par le dioxygène.\n\n\nSous l’effet du rayonnement ultraviolet solaire, le dioxygène stratosphérique peut se dissocier, initiant une transformation chimique qui aboutit à la formation d’ozone. Celui-ci constitue une couche permanente de concentration maximale située à une altitude d’environ 30 km. La couche d’ozone absorbe une partie du rayonnement ultraviolet solaire et protège les êtres vivants de ses effets mutagènes.\nInterpréter des spectres d’absorption de l’ozone et de l’ADN dans le domaine ultraviolet.\n\n\nLe carbone est stocké dans plusieurs réservoirs superficiels:l’atmosphère, les sols, les océans, la biosphère et les roches. Les échanges de carbone entre ces réservoirs sont quantifiés par des flux (tonne/an). Les quantités de carbone dans les différents réservoirs sont constantes lorsque les flux sont équilibrés. L’ensemble de ces échanges constitue le cycle du carbone sur Terre.\nAnalyser un schéma représentant le cycle biogéochimique du carbone pour comparer les stocks des différents réservoirs et identifier les flux principaux de carbone d’origine anthropique ou non.\n\n\nLes combustibles fossiles se sont formés à partir du carbone des êtres vivants, il y a plusieurs dizaines à plusieurs centaines de millions d’années. Ils ne se renouvellent pas suffisamment vite pour que les stocks se reconstituent:ces ressources en énergie sont dites non renouvelables.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 1: Science climat et société",
      "Chapitre 1: L’atmosphère terrestre et la vie"
    ]
  },
  {
    "objectID": "tg/sci/3-une-histoire-du-vivant/12-les-modeles-demographiques/quiz/index.html",
    "href": "tg/sci/3-une-histoire-du-vivant/12-les-modeles-demographiques/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 3: Une histoire du vivant",
      "Chapitre 12: Les modèles démographiques",
      "Quiz"
    ]
  },
  {
    "objectID": "tg/sci/3-une-histoire-du-vivant/12-les-modeles-demographiques/exo/index.html",
    "href": "tg/sci/3-une-histoire-du-vivant/12-les-modeles-demographiques/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Aucun exercice pour l’instant.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 3: Une histoire du vivant",
      "Chapitre 12: Les modèles démographiques",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/sci/3-une-histoire-du-vivant/13-lintelligence-artificielle/quiz/index.html",
    "href": "tg/sci/3-une-histoire-du-vivant/13-lintelligence-artificielle/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "## Les ordinateurs dans la vie courante\n\nUn ordinateur doit avoir un processeur. Le processeur est un composant électronique qui exécute les instructions du programme.\n\nUn ordinateur doit avoir de la mémoire. La mémoire est un composant électronique qui stocke les données et les programmes.\n\nUn ordinateur doit avoir des périphériques d'entrée/sortie. Les périphériques d'entrée/sortie permettent à l'utilisateur d'interagir avec l'ordinateur et à l'ordinateur de communiquer avec le monde extérieur.\n\n1. Parmi les objets suivants, lesquels sont des ordinateurs ?\n\n\n   - [ ] Télévision\n   - [x] Ordinateur de bureau\n   - [ ] Four\n   - [x] Smartphone\n   - [ ] Machine à laver\n   - [x] Console de jeux vidéo\n   - [x] Objet connecté\n   - [ ] Lecteur DVD\n   - [ ] Radio\n   - [x] Tablette\n   - [x] Serveur\n   - [ ] Lampadaire\n   - [x] Ordinateur portable\n\nParmi ces ordinateurs, certains ordinateurs ne sont pas programmables car leur programme est défini par le fabricant et ne peut pas être modifié par l'utilisateur.\n\n2. Cocher les ordinateurs non programmables dans cette liste.\n\n\n   - [ ] smartphone\n   - [x] Les thermostats\n   - [ ] ordinateur portable\n   - [x] Box internet\n   - [ ] ordinateur de bureau\n   - [x] calculatrice collège\n\n\n\n## Savoir reconnaitre un fichier exécutable\n\nUn fichier exécutable, c'est un fichier qui contient un programme. Ce programme peut être un jeu, un logiciel de bureautique, un navigateur web, etc.\n\nEn général on peut reconnaitre les fichiers exécutables par leur extension\n\nSous Windows, les fichiers exécutables ont généralement une extension de type .exe, .msi ou .bat.\n\nSous Linux, les fichiers exécutables n'ont pas d'extension spécifique. Cependant, ils ont un drapeau qui indique au système d'exploitation qu'ils sont exécutables.\n\n1. Sous Windows, quels sont les types d'extension les plus courants pour les fichiers exécutables ?\n\n   - [x] `.exe`\n   - [ ] `.com`\n   - [x] `.msi`\n   - [x] `.bat`\n\n2. Sous Linux, les fichiers exécutables ont-ils une extension ?\n\n   - [ ] Oui\n   - [x] Non\n\n\n## Savoir calculer la taille en octets d’une page de texte (en ASCII et non compressé).\n\nLe codage ASCII est un codage de caractères. Il permet de représenter les caractères de la langue américaine (lettres, chiffres, ponctuation, etc.) ainsi que certains caractères spéciaux (retour à la ligne, tabulation, etc.).\n\nPour cela il utilise 7 bits pour représenter un caractère. Cela signifie qu'il peut représenter 2^7 = 128 caractères différents.\n\nPar commodité chaque caractère est codé sur 8 bits: 1 octet.\n\n\n\n1. Quelle est la taille de cette phrase codée en ASCII: «Un ordinateur peut manipuler des\n   donnees de natures diverses une fois qu'elles ont ete numerisees : textes, images, sons.» _(On\n   ne compte pas les guillemets.)_\n        \n   - [ ] 121 bits.\n   - [x] 121 octets.\n   - [ ] 121 kilobits.\n   - [ ] 121 kilooctets.\n\n## Taille des fichiers compressés image, son et vidéo\n\nLes fichiers son, image et vidéo sont des types de fichiers qui contiennent des informations numériques. Ces informations sont stockées sous forme de bits, qui sont les unités de base de l'information numérique.\n\nLa taille d'un fichier est mesurée en octets, qui sont des groupes de 8 bits.\n\nUn fichier son contient des informations sur la hauteur, l'intensité et la durée des sons. La taille d'un fichier son dépend de la qualité du son, de la durée du son et du format du fichier.\n\nEn général, un fichier son de qualité CD (44,1 kHz, 16 bits) dure environ 1 minute et pèse environ 10 Mo.\n\nUn fichier image contient des informations sur la couleur et la luminosité des pixels. La taille d'un fichier image dépend de la résolution de l'image, de la profondeur de couleur et du format du fichier.\n\nEn général, une image JPEG de résolution 1080p (1920 x 1080 pixels) pèse environ 1 Mo.\n\nUn fichier vidéo contient des informations sur les images, le son et les mouvements. La taille d'un fichier vidéo dépend de la résolution de la vidéo, de la fréquence d'images, de la profondeur de couleur, du format du fichier et de la durée de la vidéo.\n\nEn général, une vidéo MP4 de résolution 1080p (1920 x 1080 pixels), d'une fréquence d'images de 25 images par seconde et d'une durée de 1 minute pèse environ 100 Mo.\n\nVoici quelques quiz pour vérifier que l'élève a compris :\n\n1. Quel est l'ordre de grandeur de la taille d'un fichier son de 1 minute de qualité CD ?\n\n   - [ ] 1 Mo.\n   - [x] 10 Mo.\n   - [ ] 100 Mo.\n\n2. Quel est l'ordre de grandeur de la taille d'une image JPEG de résolution 1080p ?\n\n   - [ ] 1 ko\n   - [x] 1 Mo\n   - [ ] 1 go\n\n3. Quel est l'ordre de grandeur de la taille d'une vidéo MP4 de résolution 1080p, d'une fréquence d'images de 25 images par seconde et d'une durée de 1 minute ?\n\n   - [ ] 1 Mo\n   - [x] 100 Mo\n   - [ ] 1 Go\n\n4. Quel est le format de fichier le plus utilisé pour les fichiers son ?\n\n   - :100: MP3\n\n5. Quel est le format de fichier le plus utilisé pour les fichiers image ?\n\n   - :100: JPEG\n   - :100: JPG\n\n6. Quel est le format de fichier le plus utilisé pour les fichiers vidéo ?\n\n   - :100: MP4",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 3: Une histoire du vivant",
      "Chapitre 13: L’intelligence artificielle",
      "Quiz"
    ]
  },
  {
    "objectID": "tg/sci/3-une-histoire-du-vivant/13-lintelligence-artificielle/exo/index.html",
    "href": "tg/sci/3-une-histoire-du-vivant/13-lintelligence-artificielle/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Nous abordons ici un problème de classification: «Comment reconnaitre une race de chien?». On utilise des données d’apprentissage de stanford.\n\n\nTrouver une image de chien dont vous connaissez la race et l’enregistrer sur votre ordinateur.\nOuvrir la page https://teachablemachine.withgoogle.com/train/image.\nImporter à partir du dossier du TP des images de cette race de chien et renommer Class 1 avec le nom de la race(Chihuahua par exemple).\nRecommencer avec deux autres races de chiens dans Class 2 et Class 3.\nEntrainer le modèle et attendre…\nUne fois le modèle entraîné, sélectionnez votre image de chien à reconnaitre dans Aperçu et vérifier que votre modèle sait la reconnaitre.\nTrouver d’autres images sur Wikipédia pour vérifier qu’«il sait» les reconnaitre(Peut-on vraiment dire qu’un algorithme sait?). Commenter les résultats obtenus.\n\nInformations sur les données\nSource des données d’entraînement du modèle: http://vision.stanford.edu/aditya86/ImageNetDogs/\nIl y a 120 races de chiens dont voici les traductions(par AI) et le nombre de photo.\n\n\n\nDossier\nRace\nNombre de photos\n\n\n\n\nFrench_bulldog\nBulldog français\n159\n\n\nShetland_sheepdog\nBerger des Shetland\n157\n\n\ncurly-coated_retriever\nretriever à poil bouclé\n151\n\n\nbasenji\nbasenji\n209\n\n\nflat-coated_retriever\nretriever à poil plat\n152\n\n\nbeagle\nbeagle\n195\n\n\nRhodesian_ridgeback\nRhodesian Ridgeback\n172\n\n\ngiant_schnauzer\nschnauzer géant\n157\n\n\notterhound\nlévrier\n151\n\n\npug\ncarlin\n200\n\n\nPekinese\npékinois\n149\n\n\nBrabancon_griffon\nGriffon Brabançon\n153\n\n\nIrish_terrier\nTerrier irlandais\n169\n\n\nIrish_wolfhound\nLévrier irlandais\n218\n\n\nbull_mastiff\ndogue de taureau\n156\n\n\nschipperke\nschipperke\n154\n\n\nLabrador_retriever\nLabrador retriever\n171\n\n\nGordon_setter\nPasseur Gordon\n153\n\n\nkelpie\nvarech\n153\n\n\nScotch_terrier\nTerrier écossais\n158\n\n\nSussex_spaniel\nÉpagneul du Sussex\n151\n\n\nLakeland_terrier\nTerrier des lacs\n197\n\n\nwire-haired_fox_terrier\nfox-terrier à poil dur\n157\n\n\nNorfolk_terrier\nTerrier de Norfolk\n172\n\n\nGreat_Pyrenees\nGrandes Pyrénées\n213\n\n\nWalker_hound\nChien marcheur\n153\n\n\nBedlington_terrier\nTerrier de Bedlington\n182\n\n\nEnglish_springer\nspringer anglais\n159\n\n\nwhippet\nfouetter\n187\n\n\nEskimo_dog\nChien esquimau\n150\n\n\nDandie_Dinmont\nDandie Dinmont\n180\n\n\nmalinois\nmalinois\n150\n\n\nShih-Tzu\nShih Tzu\n214\n\n\nGerman_short-haired_pointer\nBraque allemand à poil court\n152\n\n\nvizsla\nà savoir\n154\n\n\nEntleBucher\nEntleBucher\n202\n\n\ntoy_terrier\nterrier jouet\n172\n\n\nAiredale\nairedale\n202\n\n\nBoston_bull\nTaureau de Boston\n182\n\n\ngolden_retriever\nGolden retriever\n150\n\n\nChihuahua\nChihuahua\n152\n\n\nWest_Highland_white_terrier\nTerrier blanc des West Highlands\n169\n\n\nPembroke\nPembroke\n181\n\n\nJapanese_spaniel\nÉpagneul japonais\n185\n\n\nminiature_schnauzer\nschnauzer nain\n154\n\n\nsoft-coated_wheaten_terrier\nterrier de froment à poil doux\n156\n\n\nsilky_terrier\nterrier soyeux\n183\n\n\nBlenheim_spaniel\nÉpagneul de Blenheim\n188\n\n\nGreater_Swiss_Mountain_dog\nGrand Bouvier Suisse\n168\n\n\nNewfoundland\nTerre-Neuve\n195\n\n\nbasset\nbasset\n175\n\n\nSaluki\nSloughi\n200\n\n\nAustralian_terrier\nTerrier australien\n196\n\n\nEnglish_setter\nSetter anglais\n161\n\n\nTibetan_terrier\nTerrier tibétain\n206\n\n\nOld_English_sheepdog\nVieux chien de berger anglais\n169\n\n\nLeonberg\nLéonberg\n210\n\n\ncairn\ncairn\n197\n\n\nLhasa\nLhassa\n186\n\n\nGreat_Dane\nGrand danois\n156\n\n\ncollie\ncolley\n153\n\n\nSaint_Bernard\nSaint-Bernard\n170\n\n\nCardigan\nCardigan\n155\n\n\nMaltese_dog\nchien maltais\n252\n\n\nstandard_poodle\ncaniche royal\n159\n\n\nbriard\nBriard\n152\n\n\nSealyham_terrier\nTerrier de Sealyham\n202\n\n\ndhole\ndhole\n150\n\n\nWeimaraner\nBraque de Weimar\n160\n\n\nItalian_greyhound\nLévrier italien\n182\n\n\ncocker_spaniel\nCocker\n159\n\n\nDoberman\nDobermann\n150\n\n\nborzoi\nbarzoï\n151\n\n\nEnglish_foxhound\nFoxhound anglais\n157\n\n\nBrittany_spaniel\nÉpagneul breton\n152\n\n\nminiature_pinscher\npinscher nain\n184\n\n\nIbizan_hound\nChien d’Ibiza\n188\n\n\nChesapeake_Bay_retriever\nRetriever de la baie de Chesapeake\n167\n\n\nbluetick\ntique bleue\n171\n\n\nYorkshire_terrier\nYorkshire Terrier\n164\n\n\ntoy_poodle\ncaniche jouet\n151\n\n\nmalamute\nmalamute\n178\n\n\nAmerican_Staffordshire_terrier\nTerrier américain du Staffordshire\n164\n\n\nBouvier_des_Flandres\nBouvier des Flandres\n150\n\n\npapillon\npapillon\n196\n\n\naffenpinscher\naffenpinscher\n150\n\n\nBorder_terrier\nTerrier frontalier\n172\n\n\nIrish_setter\nSetter irlandais\n155\n\n\nblack-and-tan_coonhound\ncoonhound noir et feu\n159\n\n\nGerman_shepherd\nBerger allemand\n152\n\n\nclumber\nclumber\n150\n\n\nkomondor\nkomondor\n154\n\n\ngroenendael\ngroenendael\n150\n\n\nAfrican_hunting_dog\nchien de chasse africain\n169\n\n\nminiature_poodle\ncaniche miniature\n155\n\n\ndingo\ndingo\n156\n\n\nSiberian_husky\nHusky sibérien\n192\n\n\nkeeshond\nkeeshond\n158\n\n\nBorder_collie\nBorder collie\n150\n\n\nNorwegian_elkhound\nLévrier norvégien\n196\n\n\nNorwich_terrier\nTerrier de Norwich\n185\n\n\nScottish_deerhound\nlévrier écossais\n232\n\n\nkuvasz\nkuvasz\n150\n\n\nchow\nbouffe\n196\n\n\nredbone\nredbone\n148\n\n\nTibetan_mastiff\nDogue tibétain\n152\n\n\nPomeranian\npoméranien\n219\n\n\nIrish_water_spaniel\nÉpagneul d’eau irlandais\n150\n\n\nstandard_schnauzer\nschnauzer standard\n155\n\n\nAfghan_hound\nLévrier afghan\n239\n\n\nMexican_hairless\nMexicain sans poils\n155\n\n\nWelsh_springer_spaniel\nÉpagneul springer gallois\n150\n\n\nboxer\nboxeur\n151\n\n\nStaffordshire_bullterrier\nBullterrier du Staffordshire\n155\n\n\nSamoyed\nSamoyède\n218\n\n\nBernese_mountain_dog\nchien de montagne bernois\n218\n\n\nAppenzeller\nAppenzellois\n151\n\n\nRottweiler\nRottweiler\n152\n\n\nbloodhound\nlimier\n187\n\n\nKerry_blue_terrier\nTerrier bleu Kerry\n179",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 3: Une histoire du vivant",
      "Chapitre 13: L’intelligence artificielle",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/sci/3-une-histoire-du-vivant/13-lintelligence-artificielle/exo/index.html#classification-dimages",
    "href": "tg/sci/3-une-histoire-du-vivant/13-lintelligence-artificielle/exo/index.html#classification-dimages",
    "title": "Exercices",
    "section": "",
    "text": "Nous abordons ici un problème de classification: «Comment reconnaitre une race de chien?». On utilise des données d’apprentissage de stanford.\n\n\nTrouver une image de chien dont vous connaissez la race et l’enregistrer sur votre ordinateur.\nOuvrir la page https://teachablemachine.withgoogle.com/train/image.\nImporter à partir du dossier du TP des images de cette race de chien et renommer Class 1 avec le nom de la race(Chihuahua par exemple).\nRecommencer avec deux autres races de chiens dans Class 2 et Class 3.\nEntrainer le modèle et attendre…\nUne fois le modèle entraîné, sélectionnez votre image de chien à reconnaitre dans Aperçu et vérifier que votre modèle sait la reconnaitre.\nTrouver d’autres images sur Wikipédia pour vérifier qu’«il sait» les reconnaitre(Peut-on vraiment dire qu’un algorithme sait?). Commenter les résultats obtenus.\n\nInformations sur les données\nSource des données d’entraînement du modèle: http://vision.stanford.edu/aditya86/ImageNetDogs/\nIl y a 120 races de chiens dont voici les traductions(par AI) et le nombre de photo.\n\n\n\nDossier\nRace\nNombre de photos\n\n\n\n\nFrench_bulldog\nBulldog français\n159\n\n\nShetland_sheepdog\nBerger des Shetland\n157\n\n\ncurly-coated_retriever\nretriever à poil bouclé\n151\n\n\nbasenji\nbasenji\n209\n\n\nflat-coated_retriever\nretriever à poil plat\n152\n\n\nbeagle\nbeagle\n195\n\n\nRhodesian_ridgeback\nRhodesian Ridgeback\n172\n\n\ngiant_schnauzer\nschnauzer géant\n157\n\n\notterhound\nlévrier\n151\n\n\npug\ncarlin\n200\n\n\nPekinese\npékinois\n149\n\n\nBrabancon_griffon\nGriffon Brabançon\n153\n\n\nIrish_terrier\nTerrier irlandais\n169\n\n\nIrish_wolfhound\nLévrier irlandais\n218\n\n\nbull_mastiff\ndogue de taureau\n156\n\n\nschipperke\nschipperke\n154\n\n\nLabrador_retriever\nLabrador retriever\n171\n\n\nGordon_setter\nPasseur Gordon\n153\n\n\nkelpie\nvarech\n153\n\n\nScotch_terrier\nTerrier écossais\n158\n\n\nSussex_spaniel\nÉpagneul du Sussex\n151\n\n\nLakeland_terrier\nTerrier des lacs\n197\n\n\nwire-haired_fox_terrier\nfox-terrier à poil dur\n157\n\n\nNorfolk_terrier\nTerrier de Norfolk\n172\n\n\nGreat_Pyrenees\nGrandes Pyrénées\n213\n\n\nWalker_hound\nChien marcheur\n153\n\n\nBedlington_terrier\nTerrier de Bedlington\n182\n\n\nEnglish_springer\nspringer anglais\n159\n\n\nwhippet\nfouetter\n187\n\n\nEskimo_dog\nChien esquimau\n150\n\n\nDandie_Dinmont\nDandie Dinmont\n180\n\n\nmalinois\nmalinois\n150\n\n\nShih-Tzu\nShih Tzu\n214\n\n\nGerman_short-haired_pointer\nBraque allemand à poil court\n152\n\n\nvizsla\nà savoir\n154\n\n\nEntleBucher\nEntleBucher\n202\n\n\ntoy_terrier\nterrier jouet\n172\n\n\nAiredale\nairedale\n202\n\n\nBoston_bull\nTaureau de Boston\n182\n\n\ngolden_retriever\nGolden retriever\n150\n\n\nChihuahua\nChihuahua\n152\n\n\nWest_Highland_white_terrier\nTerrier blanc des West Highlands\n169\n\n\nPembroke\nPembroke\n181\n\n\nJapanese_spaniel\nÉpagneul japonais\n185\n\n\nminiature_schnauzer\nschnauzer nain\n154\n\n\nsoft-coated_wheaten_terrier\nterrier de froment à poil doux\n156\n\n\nsilky_terrier\nterrier soyeux\n183\n\n\nBlenheim_spaniel\nÉpagneul de Blenheim\n188\n\n\nGreater_Swiss_Mountain_dog\nGrand Bouvier Suisse\n168\n\n\nNewfoundland\nTerre-Neuve\n195\n\n\nbasset\nbasset\n175\n\n\nSaluki\nSloughi\n200\n\n\nAustralian_terrier\nTerrier australien\n196\n\n\nEnglish_setter\nSetter anglais\n161\n\n\nTibetan_terrier\nTerrier tibétain\n206\n\n\nOld_English_sheepdog\nVieux chien de berger anglais\n169\n\n\nLeonberg\nLéonberg\n210\n\n\ncairn\ncairn\n197\n\n\nLhasa\nLhassa\n186\n\n\nGreat_Dane\nGrand danois\n156\n\n\ncollie\ncolley\n153\n\n\nSaint_Bernard\nSaint-Bernard\n170\n\n\nCardigan\nCardigan\n155\n\n\nMaltese_dog\nchien maltais\n252\n\n\nstandard_poodle\ncaniche royal\n159\n\n\nbriard\nBriard\n152\n\n\nSealyham_terrier\nTerrier de Sealyham\n202\n\n\ndhole\ndhole\n150\n\n\nWeimaraner\nBraque de Weimar\n160\n\n\nItalian_greyhound\nLévrier italien\n182\n\n\ncocker_spaniel\nCocker\n159\n\n\nDoberman\nDobermann\n150\n\n\nborzoi\nbarzoï\n151\n\n\nEnglish_foxhound\nFoxhound anglais\n157\n\n\nBrittany_spaniel\nÉpagneul breton\n152\n\n\nminiature_pinscher\npinscher nain\n184\n\n\nIbizan_hound\nChien d’Ibiza\n188\n\n\nChesapeake_Bay_retriever\nRetriever de la baie de Chesapeake\n167\n\n\nbluetick\ntique bleue\n171\n\n\nYorkshire_terrier\nYorkshire Terrier\n164\n\n\ntoy_poodle\ncaniche jouet\n151\n\n\nmalamute\nmalamute\n178\n\n\nAmerican_Staffordshire_terrier\nTerrier américain du Staffordshire\n164\n\n\nBouvier_des_Flandres\nBouvier des Flandres\n150\n\n\npapillon\npapillon\n196\n\n\naffenpinscher\naffenpinscher\n150\n\n\nBorder_terrier\nTerrier frontalier\n172\n\n\nIrish_setter\nSetter irlandais\n155\n\n\nblack-and-tan_coonhound\ncoonhound noir et feu\n159\n\n\nGerman_shepherd\nBerger allemand\n152\n\n\nclumber\nclumber\n150\n\n\nkomondor\nkomondor\n154\n\n\ngroenendael\ngroenendael\n150\n\n\nAfrican_hunting_dog\nchien de chasse africain\n169\n\n\nminiature_poodle\ncaniche miniature\n155\n\n\ndingo\ndingo\n156\n\n\nSiberian_husky\nHusky sibérien\n192\n\n\nkeeshond\nkeeshond\n158\n\n\nBorder_collie\nBorder collie\n150\n\n\nNorwegian_elkhound\nLévrier norvégien\n196\n\n\nNorwich_terrier\nTerrier de Norwich\n185\n\n\nScottish_deerhound\nlévrier écossais\n232\n\n\nkuvasz\nkuvasz\n150\n\n\nchow\nbouffe\n196\n\n\nredbone\nredbone\n148\n\n\nTibetan_mastiff\nDogue tibétain\n152\n\n\nPomeranian\npoméranien\n219\n\n\nIrish_water_spaniel\nÉpagneul d’eau irlandais\n150\n\n\nstandard_schnauzer\nschnauzer standard\n155\n\n\nAfghan_hound\nLévrier afghan\n239\n\n\nMexican_hairless\nMexicain sans poils\n155\n\n\nWelsh_springer_spaniel\nÉpagneul springer gallois\n150\n\n\nboxer\nboxeur\n151\n\n\nStaffordshire_bullterrier\nBullterrier du Staffordshire\n155\n\n\nSamoyed\nSamoyède\n218\n\n\nBernese_mountain_dog\nchien de montagne bernois\n218\n\n\nAppenzeller\nAppenzellois\n151\n\n\nRottweiler\nRottweiler\n152\n\n\nbloodhound\nlimier\n187\n\n\nKerry_blue_terrier\nTerrier bleu Kerry\n179",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 3: Une histoire du vivant",
      "Chapitre 13: L’intelligence artificielle",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/sci/3-une-histoire-du-vivant/13-lintelligence-artificielle/exo/index.html#prévoir-le-prix-dun-appartement-en-fonction-de-ses-caractéristiques",
    "href": "tg/sci/3-une-histoire-du-vivant/13-lintelligence-artificielle/exo/index.html#prévoir-le-prix-dun-appartement-en-fonction-de-ses-caractéristiques",
    "title": "Exercices",
    "section": "2 Prévoir le prix d’un appartement en fonction de ses caractéristiques",
    "text": "2 Prévoir le prix d’un appartement en fonction de ses caractéristiques\n\nNous abordons ici un problème de régression: «Comment prévoir le prix d’un appartement en fonction de ses caractéristiques?».\n\n\n\n\n\n\n\nAstuce\n\n\n\nLes élèves de NSI ou volontaires pourront effectuer les étapes suivantes en Python.\n\n\n\n2.1 Entrainement\n\nOuvrir le fichier train.csv dans le tableur LibreOffice Calc.\nTracer un diagramme XY du prix MEDV en fonction du nombre de pièces RM.\nAjouter une courbe de tendance et vérifier la concordance approximative avec la vignette 2.\nEn utilisant le modèle prédire le prix d’un 5 pièces à Boston.\n\n\n\n2.2 Test de validation du modèle\n\nOuvrir le fichier test.csv dans le tableur LibreOffice Calc.\nTracer un diagramme XY du prix MEDV en fonction du nombre de pièces RM.\nAjouter une nouvelle colonne Erreur qui calcule la distance entre la droite et les points.\nCalculer l’erreur moyenne de votre modèle.\n\n\n\n2.3 Utilisation de plusieurs paramètres\n\n\n\n\n\n\nAvertissement\n\n\n\nCette dernière partie ne peut-être traitée qu’avec Python, mais pas avec le tableur. Les résultats attendus sont présentés.\n\n\n\nImporter les données d’entraînement train.csv grâce à la librairie pandas.\n\n\n\n\n\n\n\n\n\n\nCRIM\nZN\nINDUS\nCHAS\nNOX\nRM\nAGE\nDIS\nRAD\nTAX\nPTRATIO\nB\nLSTAT\nMEDV\n\n\n\n\n0\n0.61154\n20.0\n3.97\n0\n0.6470\n8.704\n86.9\n1.8010\n5\n264\n13.0\n389.70\n5.12\n50.0\n\n\n1\n0.03466\n35.0\n6.06\n0\n0.4379\n6.031\n23.3\n6.6407\n1\n304\n16.9\n362.25\n7.83\n19.4\n\n\n2\n10.06230\n0.0\n18.10\n0\n0.5840\n6.833\n94.3\n2.0882\n24\n666\n20.2\n81.33\n19.69\n14.1\n\n\n3\n0.13960\n0.0\n8.56\n0\n0.5200\n6.167\n90.0\n2.4210\n5\n384\n20.9\n392.69\n12.33\n20.1\n\n\n4\n8.79212\n0.0\n18.10\n0\n0.5840\n5.565\n70.6\n2.0635\n24\n666\n20.2\n3.65\n17.16\n11.7\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n450\n9.51363\n0.0\n18.10\n0\n0.7130\n6.728\n94.1\n2.4961\n24\n666\n20.2\n6.68\n18.71\n14.9\n\n\n451\n0.52014\n20.0\n3.97\n0\n0.6470\n8.398\n91.5\n2.2885\n5\n264\n13.0\n386.86\n5.91\n48.8\n\n\n452\n0.79041\n0.0\n9.90\n0\n0.5440\n6.122\n52.8\n2.6403\n4\n304\n18.4\n396.90\n5.98\n22.1\n\n\n453\n0.11132\n0.0\n27.74\n0\n0.6090\n5.983\n83.5\n2.1099\n4\n711\n20.1\n396.90\n13.35\n20.1\n\n\n454\n0.25199\n0.0\n10.59\n0\n0.4890\n5.783\n72.7\n4.3549\n4\n277\n18.6\n389.43\n18.06\n22.5\n\n\n\n\n455 rows × 14 columns\n\n\n\n\nTracer le graphique en nuage de points(scatter) de la vignette 5 grâce à la librairie matplotlib.\n\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\n\n\n\n\nRéaliser la régression linéaire à deux paramètres grâce à la bibliothèque sklearn.\n\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\n\n\n\n\nEn utilisant le modèle prédire le prix d’un 6 pièces avec 40% de logements occupés par leur propriétaire construits avant 1940 à Boston.\n\n\n'Le prix prévu est: 22.136605928493484'\n\n\nDans les données de test on trouve deux biens qui se rapprochent de ces caractéristiques avec des prix relativement proches de la prévision.\n\n\n\nRM\nAGE\nMEDV\n\n\n\n\n6,162\n38,4\n24,1\n\n\n6,009\n42,3\n21,7\n\n\n\n\nInformations sur les données\nLe jeu de données possède un problème éthique, mais nous travaillerons que sur des colonnes qui ne posent pas ce genre de problème:\n\nRM : nombre moyen de pièces par logement\n\nAGE : proportion de logements occupés par leur propriétaire construits avant 1940\n\nMEDV: Valeur médiane des maisons occupées par leur propriétaire en milliers de dollars\n\nLe tableau de données contient les données concernant 506 quartiers et 14 attributs dont le dernier MEDV indique le prix moyen du logement dans le quartier:\n\n\n\nAttribut\nExplication\n\n\n\n\nCRIM\ntaux de criminalité par habitant par ville\n\n\nZN\nproportion des terrains résidentiels zonés pour les terrains de plus de 25 000 pi.ca.\n\n\nINDUS\nproportion d’acres d’entreprises non commerciales par ville\n\n\nCHAS\nVariable fictive Charles River (= 1 si le secteur délimite la rivière ; 0 sinon)\n\n\nNOX\nconcentration d’oxydes nitriques (parties par 10 millions)\n\n\nRM\nnombre moyen de pièces par logement\n\n\nAGE\nproportion de logements occupés par leur propriétaire construits avant 1940\n\n\nDIS\ndistances pondérées à cinq centres d’emploi de Boston\n\n\nRAD\nindice d’accessibilité aux autoroutes radiales\n\n\nTAX\ntaux d’imposition foncière sur la valeur totale par tranche de 10 000 $\n\n\nPTRATIO\nratio élèves-enseignant par ville\n\n\nB\n1000(Bk - 0.63)^2 où Bk est la proportion de noirs par ville\n\n\nLSTAT\n% de statut inférieur de la population\n\n\nMEDV\nValeur médiane des maisons occupées par leur propriétaire en milliers de dollars",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 3: Une histoire du vivant",
      "Chapitre 13: L’intelligence artificielle",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/sci/3-une-histoire-du-vivant/10-levolution-comme-grille-de-lecture-du-monde/index.html",
    "href": "tg/sci/3-une-histoire-du-vivant/10-levolution-comme-grille-de-lecture-du-monde/index.html",
    "title": "Chapitre 10: L’évolution comme grille de lecture du monde",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nSavoirs\nSavoir-faire\n\n\n\n\nLes structures anatomiques présentent des particularités surprenantes d’un point de vue fonctionnel, pouvant paraître sans fonction avérée ou bien d’une étonnante complexité. Elles témoignent de l’évolution des espèces, dont la nôtre. Les caractères anatomiques peuvent être le résultat de la sélection naturelle mais certains sont mieux expliqués par l’héritage de l’histoire évolutive que par leur fonction.\nL’évolution permet de comprendre des phénomènes biologiques ayant une importance médicale. L’évolution rapide des organismes microbiens nécessite d’adapter les stratégies prophylactiques, les vaccins et les antibiotiques.\nDepuis la révolution agricole, la pratique intensive de la monoculture, la domestication et l’utilisation de produits phytosanitaires ont un impact sur la biodiversité et son évolution.\nExpliquer l’origine d’une structure anatomique en mobilisant les concepts de hasard, de variation, de sélection naturelle et d’adaptation (exemple de l’œil).\nInterpréter des caractéristiques anatomiques humaines en relation avec des contraintes historiques (comme le trajet de la crosse aortique), des contraintes de construction (comme le téton masculin), des compromis sélectifs (comme les difficultés obstétriques) ou des régressions en cours (comme les dents de sagesse).\nMobiliser des concepts évolutionnistes pour expliquer comment des populations microbiennes pourront à longue échéance ne plus être sensibles à un vaccin (ou un antibiotique) ou comment l’utilisation de produits phytosanitaires favorise le développement de ravageurs des cultures qui y sont résistants.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 3: Une histoire du vivant",
      "Chapitre 10: L’évolution comme grille de lecture du monde"
    ]
  },
  {
    "objectID": "tg/sci/3-une-histoire-du-vivant/11-levolution-humaine/quiz/index.html",
    "href": "tg/sci/3-une-histoire-du-vivant/11-levolution-humaine/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 3: Une histoire du vivant",
      "Chapitre 11: L’évolution humaine",
      "Quiz"
    ]
  },
  {
    "objectID": "tg/sci/3-une-histoire-du-vivant/11-levolution-humaine/exo/index.html",
    "href": "tg/sci/3-une-histoire-du-vivant/11-levolution-humaine/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Aucun exercice pour l’instant.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 3: Une histoire du vivant",
      "Chapitre 11: L’évolution humaine",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/sci/3-une-histoire-du-vivant/9-la-biodiversite-et-son-evolution/index.html",
    "href": "tg/sci/3-une-histoire-du-vivant/9-la-biodiversite-et-son-evolution/index.html",
    "title": "Chapitre 9: La biodiversité et son évolution",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nSavoirs\nSavoir-faire\n\n\n\n\nIl existe sur Terre un grand nombre d’espèces dont seule une faible proportion est effectivement connue. La biodiversité se mesure par des techniques d’échantillonnage (spécimens ou ADN) qui permettent d’estimer le nombre d’espèces (richesse spécifique) dans différents milieux. Les composantes de la biodiversité peuvent aussi être décrites par l’abondance (nombre d’individus) d’une population, d’une espèce ou d’un plus grand taxon.\nIl existe plusieurs méthodes permettant d’estimer un effectif à partir d’échantillons. La méthode de « capture-marquage-recapture » repose sur des calculs effectués sur un échantillon. Si on suppose que la proportion d’individus marqués est identique dans l’échantillon de recapture et dans la population totale, l’effectif de celle-ci s’obtient par le calcul d’une quatrième proportionnelle.\nÀ partir d’un seul échantillon, l’effectif d’une population peut également être estimé à l’aide d’un intervalle de confiance. Une telle estimation est toujours assortie d’un niveau de confiance strictement inférieur à 100 % en raison de la fluctuation des échantillons. Pour un niveau de confiance donné, l’estimation est d’autant plus précise que la taille de l’échantillon est grande.\nExploiter des données obtenues au cours d’une sortie de terrain ou d’explorations scientifiques (historiques et/ou actuelles) pour estimer la biodiversité (richesse spécifique et/ou abondance relative de chaque taxon).\nQuantifier l’effectif d’une population ou d’un taxon plus vaste à partir de résultats d’échantillonnage.\nEstimer une abondance par la méthode de capture, marquage, recapture, fondée sur le calcul d’une quatrième proportionnelle. À l’aide d’un tableur, simuler des échantillons de même effectif pour visualiser la fluctuation d’échantillonnage. En utilisant une formule donnée pour un intervalle de confiance au niveau de confiance de 95%, estimer un paramètre inconnu dans une population de grande taille à partir des résultats observés sur un échantillon.\n\n\nAu cours de l’évolution biologique, la composition génétique des populations d’une espèce change de génération en génération.\nLe modèle mathématique de Hardy-Weinberg utilise la théorie des probabilités pour décrire le phénomène aléatoire de transmission des allèles dans une population.\nEn assimilant les probabilités à des fréquences pour des effectifs de grande taille (loi des grands nombres), le modèle prédit que la structure génétique d’une population de grand effectif est stable d’une génération à l’autre sous certaines conditions (absence de migration, de mutation et de sélection). Cette stabilité théorique est connue sous le nom d’équilibre de Hardy-Weinberg.\nLes écarts entre les fréquences observées sur une population naturelle et les résultats du modèle s’expliquent notamment par les effets de forces évolutives (mutation, sélection, dérive, etc.).\nPour la transmission de deux allèles dans le cadre du modèle de Hardy-Weinberg, établir les relations entre les probabilités des génotypes d’une génération et celles de la génération précédente.\nProduire une démonstration mathématique ou un calcul sur tableur ou un programme en Python pour prouver ou constater que les probabilités des génotypes sont constantes à partir de la seconde génération (modèle de Hardy-Weinberg).\nUtiliser des logiciels de simulation basés sur ce modèle mathématique.\nAnalyser une situation d’évolution biologique expliquant un écart par rapport au modèle de Hardy-Weinberg.\n\n\nLes activités humaines (pollution, destruction des écosystèmes, combustions et leurs impacts climatiques, surexploitation d’espèces…) ont des conséquences sur la biodiversité et ses composantes (dont la variation d’abondance) et conduisent à l’extinction d’espèces.\nLa fragmentation d’une population en plusieurs échantillons de plus faibles effectifs entraîne par dérive génétique un appauvrissement de la diversité génétique d’une population.\nLa connaissance et la gestion d’un écosystème permettent d’y préserver la biodiversité.\nUtiliser un modèle géométrique simple (quadrillage) pour calculer l’impact d’une fragmentation sur la surface disponible pour une espèce.\nÀ partir d’un logiciel de simulation, montrer l’impact d’un faible effectif de population sur la dérive génétique et l’évolution rapide des fréquences alléliques.\nAnalyser des documents pour comprendre les mesures de protection de populations à faibles effectifs.\nIdentifier des critères de gestion durable d’un écosystème. Envisager des solutions pour un environnement proche.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 3: Une histoire du vivant",
      "Chapitre 9: La biodiversité et son évolution"
    ]
  },
  {
    "objectID": "tg/sci/programme.html",
    "href": "tg/sci/programme.html",
    "title": "Programme de Enseignement scientifique",
    "section": "",
    "text": "Ce document est une retranscription non officielle du programme d’enseignement scientifique de terminale générale publié au Bulletin officiel n° 25 du 22 juin 2023 et applicable à la rentrée 2024. La version officielle est consultable sur eduscol."
  },
  {
    "objectID": "tg/sci/programme.html#a---comprendre-la-nature-du-savoir-scientifique-et-ses-méthodes-délaboration",
    "href": "tg/sci/programme.html#a---comprendre-la-nature-du-savoir-scientifique-et-ses-méthodes-délaboration",
    "title": "Programme de Enseignement scientifique",
    "section": "A - Comprendre la nature du savoir scientifique et ses méthodes d’élaboration",
    "text": "A - Comprendre la nature du savoir scientifique et ses méthodes d’élaboration\nLe savoir scientifique résulte d’une construction rationnelle. Il se distingue d’une croyance ou d’une opinion. Il s’appuie sur la description et l’analyse de faits extraits de la réalité complexe ou produits au cours d’expériences. Il cherche à comprendre et à expliquer la réalité par des causes matérielles.\nLe savoir scientifique résulte d’une longue construction collective jalonnée d’échanges d’arguments, de controverses parfois vives. Une certitude raisonnable s’installe et se précise progressivement, au gré de la prise en compte de faits nouveaux, souvent en lien avec les progrès techniques. Ce long travail intellectuel met en jeu l’énoncé d’hypothèses dont on tire des conséquences selon un processus logique. Ces modalités sont d’ailleurs en partie variables selon les disciplines concernées.\nDans le cadre de l’enseignement scientifique, il s’agit donc, en permanence, d’associer l’acquisition de quelques savoirs et savoir-faire exigibles à la compréhension de leur nature et de leur construction."
  },
  {
    "objectID": "tg/sci/programme.html#b---identifier-et-mettre-en-œuvre-des-pratiques-scientifiques",
    "href": "tg/sci/programme.html#b---identifier-et-mettre-en-œuvre-des-pratiques-scientifiques",
    "title": "Programme de Enseignement scientifique",
    "section": "B - Identifier et mettre en œuvre des pratiques scientifiques",
    "text": "B - Identifier et mettre en œuvre des pratiques scientifiques\nAu cours de leur activité de production du savoir, les scientifiques mettent en œuvre un certain nombre de pratiques qui, si elles ne sont pas spécifiques de leur travail, en sont néanmoins des aspects incontournables.\nQuelques mots-clés permettent de les présenter : observer, décrire, mesurer, quantifier, calculer, analyser, imaginer, proposer, tester, modéliser, simuler, raisonner, expliquer, créer des scénarios pour envisager des futurs possibles ou remonter dans le passé.\nCet enseignement contribue au développement des compétences langagières orales à travers notamment la pratique de l’argumentation. Celle-ci conduit à préciser sa pensée et à expliciter son raisonnement de manière à convaincre.\nDans le cadre de l’enseignement scientifique, il s’agit, chaque fois que l’on met en œuvre une authentique pratique scientifique, de l’expliciter et de prendre conscience de sa nature."
  },
  {
    "objectID": "tg/sci/programme.html#c---identifier-et-comprendre-les-effets-de-la-science-sur-les-sociétés-et-sur-lenvironnement",
    "href": "tg/sci/programme.html#c---identifier-et-comprendre-les-effets-de-la-science-sur-les-sociétés-et-sur-lenvironnement",
    "title": "Programme de Enseignement scientifique",
    "section": "C - Identifier et comprendre les effets de la science sur les sociétés et sur l’environnement",
    "text": "C - Identifier et comprendre les effets de la science sur les sociétés et sur l’environnement\nLes sociétés modernes sont profondément transformées par la science et ses applications technologiques, dont les effets touchent l’alimentation (agriculture et agroalimentaire), la santé (médecine), les communications (transports, échanges d’informations), l’apprentissage et la réflexion (intelligence artificielle), la maîtrise des risques naturels et technologiques, la protection de l’environnement, etc.\nLa compréhension de ces transformations est indispensable à la prise de décision ; elle distingue l’approche purement scientifique d’autres approches (économiques, éthiques, etc.).\nDe même, les activités humaines exercent sur l’environnement des effets que la science permet de comprendre et de contrôler.\nDans le cadre de l’enseignement scientifique, il s’agit de faire comprendre en quoi la culture scientifique est aujourd’hui indispensable pour saisir l’évolution des sociétés comme celle de l’environnement et limiter les aspects négatifs de ces évolutions.\nEn classe terminale, l’enseignement scientifique peut être mis en relation avec le programme de philosophie concernant les questions d’épistémologie et d’éthique."
  },
  {
    "objectID": "tg/sci/programme.html#a---un-enseignement-en-prise-avec-le-réel-complexe",
    "href": "tg/sci/programme.html#a---un-enseignement-en-prise-avec-le-réel-complexe",
    "title": "Programme de Enseignement scientifique",
    "section": "A - Un enseignement en prise avec le réel complexe",
    "text": "A - Un enseignement en prise avec le réel complexe\nLe scientifique rend intelligible le monde en déchiffrant la réalité complexe dont il extrait des éléments qu’il analyse et dont il élucide les interactions. Il est néanmoins opportun de saisir une ou des occasion(s) de montrer la\ncomplexité du réel lui-même. Une manière privilégiée de le faire consiste à travailler ponctuellement hors des murs de la classe ou de l’établissement (terrain, laboratoire, entreprise, musée, etc.).\nLa prise en compte de la complexité impose aussi le croisement des approches de plusieurs disciplines, ce qui se traduit par le caractère interdisciplinaire de cet enseignement (y compris en dehors du champ scientifique)."
  },
  {
    "objectID": "tg/sci/programme.html#b---une-place-particulière-pour-les-mathématiques",
    "href": "tg/sci/programme.html#b---une-place-particulière-pour-les-mathématiques",
    "title": "Programme de Enseignement scientifique",
    "section": "B - Une place particulière pour les mathématiques",
    "text": "B - Une place particulière pour les mathématiques\nSelon Galilée, le grand livre de la Nature est écrit en langage mathématique. En effet, les modèles mathématiques aident à comprendre le monde. C’est dans cet esprit que les mathématiques trouvent leur place dans ce programme d’enseignement scientifique. De surcroît, l’omniprésence (quoique souvent invisible) des mathématiques dans la vie quotidienne (professionnelle et sociale) invite aujourd’hui tout individu à disposer de savoirs et de savoir-faire mathématiques. Le traitement des thèmes figurant au programme permet de présenter des méthodes, modèles et\noutils mathématiques qui visent à décrire et expliquer la réalité complexe du monde, mais aussi à prédire ses évolutions. Parallèlement, le programme offre de nombreuses occasions de confronter les élèves à une pratique effective des mathématiques dans des contextes issus d’autres disciplines. Cette pratique leur permet à la fois de consolider, dans des contextes nouveaux, des compétences de calcul, de raisonnement logique et de représentation et d’exercer leur esprit critique en interrogeant les résultats d’un modèle mathématique."
  },
  {
    "objectID": "tg/sci/programme.html#c---une-place-réservée-à-lobservation-et-lexpérience-en-laboratoire",
    "href": "tg/sci/programme.html#c---une-place-réservée-à-lobservation-et-lexpérience-en-laboratoire",
    "title": "Programme de Enseignement scientifique",
    "section": "C - Une place réservée à l’observation et l’expérience en laboratoire",
    "text": "C - Une place réservée à l’observation et l’expérience en laboratoire\nSi des études documentaires, des expériences de pensée ou la résolution d’exercices permettent la mise en œuvre d’une démarche scientifique, la pratique expérimentale des élèves est essentielle. En particulier, il est bienvenu, chaque fois que possible, de créer les conditions permettant un travail de laboratoire fondé sur diverses formes de manipulations et d’observations. Ainsi, en se livrant à la confrontation entre faits et idées, l’élève comprend, en la pratiquant, la construction du savoir scientifique."
  },
  {
    "objectID": "tg/sci/programme.html#d---une-place-importante-pour-lhistoire-raisonnée-des-sciences",
    "href": "tg/sci/programme.html#d---une-place-importante-pour-lhistoire-raisonnée-des-sciences",
    "title": "Programme de Enseignement scientifique",
    "section": "D - Une place importante pour l’histoire raisonnée des sciences",
    "text": "D - Une place importante pour l’histoire raisonnée des sciences\nL’une des manières de comprendre comment se construit le savoir scientifique est de retracer le cheminement effectif de sa construction au cours de l’histoire des sciences. Il ne s’agit pas de donner à l’élève l’illusion qu’il trouve en quelques minutes ce qui a demandé le travail de nombreuses générations de chercheurs, mais plutôt, en se focalisant sur un petit nombre d’étapes bien choisies de l’histoire des sciences, de faire comprendre le rôle-clé joué par certaines découvertes et de replacer celles-ci dans le contexte sociétal de l’époque. Le rôle prépondérant de grandes figures de la science, dans l’histoire et dans le monde contemporain, sera souligné. Ce sera aussi l’occasion de montrer que les avancées majeures du savoir scientifique sont des aventures humaines. Cela permettra de poser la question de la dimension sociale et culturelle de la construction du savoir scientifique, en particulier celle de la place des femmes dans l’histoire des sciences. Des controverses agitent la communauté scientifique et conduisent à de nouvelles investigations, et ainsi, peu à peu, le savoir progresse et se précise."
  },
  {
    "objectID": "tg/sci/programme.html#e---un-usage-explicité-des-outils-numériques",
    "href": "tg/sci/programme.html#e---un-usage-explicité-des-outils-numériques",
    "title": "Programme de Enseignement scientifique",
    "section": "E - Un usage explicité des outils numériques",
    "text": "E - Un usage explicité des outils numériques\nDes outils numériques variés trouvent des applications dans le cadre de l’enseignement scientifique : logiciels de calcul ou de simulation, environnements de programmation, logiciels tableurs, etc. Il convient d’associer leur utilisation par les élèves à la compréhension au moins élémentaire de leur nature et de leur fonctionnement."
  },
  {
    "objectID": "tg/sci/programme.html#thème-1-science-climat-et-société",
    "href": "tg/sci/programme.html#thème-1-science-climat-et-société",
    "title": "Programme de Enseignement scientifique",
    "section": "Thème 1 — Science, climat et société",
    "text": "Thème 1 — Science, climat et société\nIntroduction et enjeux. L’atmosphère primitive de la Terre était différente de celle d’aujourd’hui. Sa transformation au cours des 4,6 milliards d’années est liée aux processus géologiques et biologiques. Depuis la révolution industrielle, l’activité humaine modifie de manière significative et rapide la composition atmosphérique. Ces modifications affectent l’équilibre dynamique des enveloppes fluides de la Terre.\nLes conséquences de l’activité́ humaine sur la composition atmosphérique, celles qui sont déjà observées et celles qui sont prévisibles, sont multiples et importantes, tant pour l’humanité́ que pour les écosystèmes. Les choix raisonnés des individus et des sociétés dans ce domaine s’appuient sur les apports des sciences et des technologies.\nObjectifs. Cette partie du programme s’applique à démontrer que la composition de l’atmosphère terrestre résulte d’interactions complexes avec les autres enveloppes superficielles.\nPrésente parmi les gaz de l’atmosphère primitive, l’eau s’est rapidement condensée. L’apparition de l’eau liquide est une condition indispensable à l’émergence de la vie. Le développement des organismes vivants a eu un effet majeur sur l’évolution de la teneur relative des différents gaz au cours du temps. Certains gaz atmosphériques participent de manière importante au bilan radiatif de la planète Terre.\nCe thème met en évidence que les connaissances acquises permettent aujourd’hui aux scientifiques de proposer des\nmodèles robustes du fonctionnement des systèmes climatiques et d’envisager, malgré leur grande complexité, des scénarios des climats du futur.\n\n1.1 - L’atmosphère terrestre et la vie\nDepuis l’époque de sa formation, quasi concomitante de celle du Soleil et des autres planètes du système solaire, la Terre a connu une évolution spécifique de sa surface et de la composition de son atmosphère. Sa température moyenne et sa pression atmosphérique de surface permettent l’existence d’eau liquide, formant l’hydrosphère. Aux facteurs physiques et géologiques (activité́ solaire, distance au Soleil, tectonique) s’est ajoutée l’émergence des êtres vivants et de leurs métabolismes.\n\n\n\nSavoirs\nIl y a environ 4,6 milliards d’années, l’atmosphère primitive était composée de N2, CO2 et H2O. Sa composition actuelle est d’environ 78 % de N2 et 21 % de O2, avec des traces d’autres gaz (dont H2O, CO2, CH4, N2O).\nSavoir-faire\nAnalyser des données, en lien avec l’évolution de la composition de l’atmosphère au cours des temps géologiques.\n\n\n\n\nLe refroidissement de la surface de la Terre primitive a conduit à la liquéfaction très rapide (à l’échelle des temps géologiques) de la vapeur d’eau présente dans l’atmosphère initiale. Dans l’hydrosphère ainsi formée s’est développée la vie.\nDéterminer l’état physique de l’eau pour une température et une pression données à partir de la lecture de son diagramme d’état.\n\n\nLes premières traces de bactéries photosynthétiques sont datées d’il y a au moins 3,5 milliards d’années. Par leur métabolisme photosynthétique, ces bactéries ont contribué à l’oxygénation de l’atmosphère terrestre il y a 2,4 milliards d’années. Les interactions entre l’atmosphère et la biosphère ont contribué à des modifications de la biodiversité. Les sources et puits de dioxygène atmosphérique sont aujourd’hui essentiellement liés aux êtres vivants (photosynthèse et respiration) et aux combustions.\nMettre en relation la production de dioxygène dans l’atmosphère avec des indices géologiques. Suivre l’évolution de la teneur atmosphérique en dioxygène au cours des temps géologiques et la relier à l’évolution de la biodiversité.\n\n\nSous l’effet du rayonnement ultraviolet solaire, le dioxygène de la stratosphère peut se dissocier, engageant une transformation chimique qui aboutit à la formation d’ozone. Cet ozone stratosphérique absorbe une partie du rayonnement ultraviolet solaire et protège les êtres vivants de ses effets mutagènes.\nMettre en relation des spectres d’absorption de l’ozone et de l’ADN dans le domaine ultraviolet. ↔︎ Organisation et exploitation de données.\n↔︎ Lectures graphiques. ↔︎ Ordres de grandeur. Puissances de 10.\n\n\n\nPistes de mise en œuvre du programme\nNature du savoir scientifique et méthodes d’élaboration\nLa présence d’eau dans les corps célestes du système solaire.\nHistoire des sciences : l’apparition de la vie sur Terre, expériences de Ruben et Kamen (1941).\nEsprit critique : l’expression « trou dans la couche d’ozone » est-elle scientifiquement robuste ? Élaboration de l’unité Dobson.\nSciences, société et environnement\nLa diminution d’ozone stratosphérique, une origine purement anthropique ? « Le trou dans la couche d’ozone » : de sa découverte à des prises de décisions mondiales.\nLa vie sans dioxygène.\n\n\n1.2 - La complexité du système climatique\nLe système climatique et son évolution dans le temps résultent de plusieurs facteurs naturels et d’interactions entre océans, atmosphère, biosphère, lithosphère et cryosphère. Il est nécessaire de prendre en compte ces interactions à différentes échelles spatiales et temporelles (de l’année au million d’années, voire davantage). Le système climatique présente une variabilité spontanée et réagit aux perturbations de son bilan énergétique par des mécanismes appelés rétroactions. Les facteurs anthropiques ont des conséquences irréversibles à court terme. Les notions d’équilibre radiatif de la Terre et d’effet de serre atmosphérique, étudiées en classe de première, sont mobilisées.\n\n\n\nSavoirs\nLa climatologie étudie les variations du climat local ou global à moyen ou long terme (années, siècles, millénaires, etc.). La météorologie étudie les phénomènes atmosphériques qu’elle prévoit à court terme (jours, semaines). La température moyenne de la Terre, calculée à partir de mesures de terrain et depuis l’espace par des satellites, est l’un des indicateurs du climat global. Il en existe d’autres : niveau des océans, étendue des glaces polaires et des glaciers, etc. Le climat de la Terre présente une variabilité naturelle sur différentes échelles de temps. Toutefois, depuis plusieurs centaines de milliers d’années, jamais la concentration du dioxyde de carbone atmosphérique n’a augmenté aussi rapidement qu’actuellement.\nSavoir-faire\nDistinguer sur un document des données relevant du climat, d’une part, de la météorologie, d’autre part. Identifier des tendances d’évolution de la température sur plusieurs échelles de temps à partir de graphiques. Identifier des indices de variations climatiques passées (pollens, glaciers, etc.). ↔︎ Lectures graphiques.\n↔︎ Puissance de 10. ↔︎ Organisation et exploitation de données.\n\n\n\n\nDepuis un siècle et demi, on mesure un réchauffement climatique global (environ +1°C). Celui-ci est la réponse du système climatique à l’augmentation du forçage radiatif (différence entre l’énergie radiative reçue et l’énergie radiative émise) due aux émissions de gaz à effet de serre (GES) dans l’atmosphère : CO2, CH4, N2O et vapeur d’eau, principalement. Lorsque la concentration des GES augmente, l’atmosphère absorbe davantage le rayonnement thermique infrarouge émis par la surface de la Terre. Il en résulte une augmentation de la puissance radiative reçue par la surface terrestre de l’atmosphère. Cette puissance additionnelle entraîne une perturbation de l’équilibre radiatif qui existait à l’ère préindustrielle. L’énergie supplémentaire associée est essentiellement stockée par les océans, mais également par l’air et les sols, ce qui se traduit par une augmentation de la température moyenne à la surface de la Terre et la montée du niveau des océans.\nDéterminer la capacité d’un gaz à influencer l’effet de serre atmosphérique à partir de son spectre d’absorption des ondes électromagnétiques et de son abondance. Interpréter des documents donnant la variation d’un indicateur climatique en fonction du temps (occurrence et intensité des événements météorologiques extrêmes, niveau des océans, extension d’un glacier, etc.). Analyser la variation au cours du temps de la teneur atmosphérique en CO2 et la variation de la température moyenne. ↔︎ Lectures graphiques. ↔︎ Pourcentages. ↔︎ Calculs de moyennes. ↔︎ Variation absolue, variation relative.\n\n\nL’évolution de la température terrestre moyenne résulte de plusieurs effets amplificateurs (rétroaction positive), dont : - l’augmentation de la concentration en vapeur d’eau (gaz à effet de serre) dans l’atmosphère ; - la décroissance de la surface couverte par les glaces et la diminution de l’albédo terrestre ; - le dégel partiel du permafrost provoquant une libération de GES dans l’atmosphère.\nIdentifier les relations de causalité (actions et rétroactions) qui agissent sur la dynamique du système climatique. Expliquer la différence d’incidence entre la fusion des glaces continentales et des glaces de mer. Estimer la variation du volume de l’océan associée à une variation de température donnée.\n\n\nL’océan a un rôle amortisseur en absorbant à sa surface une fraction importante de l’apport additionnel d’énergie. Cela conduit à une élévation du niveau des océans causée par la dilatation thermique de l’eau. À celle-ci s’ajoute la fusion des glaces continentales. Cette accumulation d’énergie dans les océans rend le changement climatique irréversible à des échelles de temps de plusieurs siècles. L’océan joue également un rôle d’amortisseur en absorbant une partie du CO2 émis par les activités humaines. À court terme, les organismes chlorophylliens constituent un puits de CO2, ce qui a donc un effet de rétroaction négative (stabilisatrice).\n↔︎ Taux de variation. ↔︎ Logique. ↔︎ Géométrie : calculs d’aires et de volumes.\n\n\n\nPistes de mise en œuvre du programme\nNature du savoir scientifique et méthodes d’élaboration\nDéveloppement des données satellitaires et combinaison avec des mesures de terrain.\nHistoire des sciences : le développement des modèles climatiques des années 1970 à nos jours.\nLes bases physiques de la climatologie (prix Nobel 2021 pour Hasselmann et Manabe).\nClimato-scepticisme : débat scientifique ou biais de raisonnement et d’argumentation.\nSciences, société et environnement\nÉmergence et propagation de maladies vectorielles à la suite des changements climatiques.\nEffet du réchauffement climatique sur les activités et productions agricoles.\nLien entre phénomènes météorologiques extrêmes et réchauffement climatique.\nLa petite ère glaciaire en Europe.\nLes territoires littoraux et le réchauffement climatique (pêche, montée des eaux, etc.).\nChangement climatique et incidence sur les populations : déplacement, taux de reproduction, survie, etc.\n\n\n1.3 - Le climat du futur\nL’analyse du système climatique, réalisée à l’aide de modèles numériques, repose sur des mesures et des calculs faisant appel à des lois physiques, chimiques, biologiques connues. Assorties d’hypothèses portant sur l’évolution de la production des gaz à effet de serre, les projections issues de ces modèles dessinent des fourchettes d’évolution et des scénarios du système climatique au XXIe siècle.\n\n\n\nSavoirs\nLes modèles climatiques s’appuient sur : - la mise en équation des mécanismes essentiels qui agissent sur le système Terre ;\n\ndes méthodes numériques de résolution.\n\nPour évaluer les modèles, et ainsi les valider ou les faire évoluer, les résultats obtenus sont comparés aux observations de terrain et observations spatiales ainsi qu’à la connaissance des paléoclimats. Ces modèles, nombreux et indépendants, produisent des projections climatiques. Après avoir anticipé les évolutions des dernières décennies, ils estiment les variations climatiques globales et locales à venir sur des décennies ou des siècles.\nSavoir-faire\nMettre en évidence le rôle des différents paramètres de l’évolution climatique, en exploitant un logiciel de simulation de celle-ci, ou par la lecture de graphiques.\n↔︎ Lectures graphiques\n↔︎ Corrélation et causalité\n\n\n\n\nL’analyse scientifique combinant observations, éléments théoriques et modélisations numériques permet aujourd’hui de conclure que l’augmentation de température moyenne depuis le début de l’ère industrielle est liée à l’activité humaine : le dioxyde de carbone produit par la combustion de substances carbonées fossiles, l’artificialisation des sols, la calcination des carbonates, le méthane issu de fuites de gaz naturel\nou de pétrole, ou produit par la fermentation dans les décharges et certaines activités agricoles.\nLes modèles s’accordent à prévoir avec une forte probabilité d’occurrence : - une augmentation de 1,5 à 5°C de la température moyenne avant la fin du XXIe siècle ; - une élévation du niveau moyen des océans entre le début et la fin du XXIe siècle pouvant atteindre le mètre ;\n\ndes modifications des régimes de pluie et des événements météorologiques extrêmes ;\nune acidification des océans ;\ndes incidences majeures sur les écosystèmes terrestres et marins.\n\nExploiter les résultats d’un modèle climatique pour justifier que certaines corrélations sont explicables par des liens de cause à effet. ↔︎ Lectures graphiques.\n↔︎ Corrélation et causalité.\n↔︎ Logique.\n\n\n\nPistes de mise en œuvre du programme\nNature du savoir scientifique et méthodes d’élaboration\nLa notion de modèle en sciences : les différents modèles climatiques et leurs prédictions.\nPourquoi les scientifiques ne s’accordent-ils pas sur un modèle unique ? La notion d’incertitude en sciences.\nSciences, société et environnement\nLes acteurs des analyses climatiques : recherche et programmes mondiaux (Organisation météorologique mondiale, modèles climatiques) ; coordination (Organisation des nations unies) ; évaluation (Groupe intergouvernemental pour l’étude du climat).\nLes conséquences du réchauffement climatique et les enjeux géopolitiques (COP).\nLes pistes d’atténuation et d’adaptation au réchauffement climatique.\nLes émissions de CO2 causées par la production du ciment.\nLes différentes sources de production du méthane liées aux activités humaines."
  },
  {
    "objectID": "tg/sci/programme.html#thème-2-le-futur-des-énergies",
    "href": "tg/sci/programme.html#thème-2-le-futur-des-énergies",
    "title": "Programme de Enseignement scientifique",
    "section": "Thème 2 — Le futur des énergies",
    "text": "Thème 2 — Le futur des énergies\nIntroduction et enjeux. La consommation d’énergie joue un rôle essentiel dans le développement des sociétés humaines. Depuis la révolution industrielle, ce dernier s’est appuyé largement sur les combustibles fossiles dont l’utilisation est la principale cause du changement climatique. Produire de l’énergie sans contribuer au changement climatique ou à la dégradation de la planète est devenu un enjeu majeur de la transition écologique.\nObjectifs. Il est essentiel d’identifier les effets, sur la production de gaz à effet de serre, de la fabrication puis de l’usage de tout produit de consommation. L’identification d’autres effets collatéraux, notamment sur l’environnement et la santé, est importante.\nDans le secteur de l’énergie, l’électricité joue depuis deux siècles un rôle particulier. Produire de l’électricité sans contribuer au réchauffement climatique, en concevoir le stockage sous d’autres formes, assurer son transport, sont des enjeux fondamentaux à prendre en compte dans un contexte de transition écologique.\n\n2.1 - Deux siècles d’énergie électrique\nDepuis le XIXe siècle, les progrès de la recherche scientifique fondamentale et de l’invention technique ont conduit à développer des générateurs électriques performants.\nHistoriquement, le développement des techniques d’obtention d’énergie électrique s’est appuyé sur des découvertes expérimentales et des avancées théoriques qui furent souvent le résultat de recherches dont ce développement n’était pas le but premier. Il est ainsi fréquent que les résultats de la recherche fondamentale aboutissent à des innovations technologiques non anticipées.\n\n\n\nSavoirs\nLes alternateurs électriques exploitent le phénomène d’induction électromagnétique découvert par Faraday puis théorisé par Maxwell au XIXe siècle. Ils réalisent une conversion d’énergie mécanique en énergie électrique avec un rendement potentiellement proche de 1. Au début du XXe siècle, la physique a connu une révolution conceptuelle avec la mécanique quantique, qui traite du comportement fondamentalement probabiliste de la nature à l’échelle microscopique. L’exploitation technologique des matériaux semi- conducteurs, en particulier du silicium, en est une conséquence. Ces matériaux sont utilisés en électronique et sont constitutifs des capteurs photovoltaïques. Ceux-ci absorbent l’énergie radiative et la convertissent partiellement en énergie électrique.\nSavoir-faire\nReconnaître les éléments principaux d’un alternateur (source de champ magnétique et fil conducteur en mouvement relatif) dans un schéma fourni. Relier la vitesse de rotation du rotor et la fréquence du courant électrique. Définir le rendement d’un alternateur et citer un phénomène susceptible de l’influencer. Comparer le spectre d’absorption d’un matériau semi- conducteur et le spectre solaire pour discuter si ce matériau est susceptible d’être utilisé pour fabriquer un capteur photovoltaïque. Argumenter autour de la mise en place d’une installation photovoltaïque domestique ou industrielle. ↔︎ Lectures graphiques. ↔︎ Grandeurs et mesures. Grandeurs quotients.\n\n\n\n\n\nPistes de mise en œuvre du programme\nNature du savoir scientifique et méthodes d’élaboration\nHistoire des sciences : l’essor de l’électromagnétisme au XIXe siècle.\nHistoire des sciences et des technologies : « La bataille des courants », le choix entre le courant continu et le courant alternatif.\nHistoire des sciences : Einstein et les quanta.\nSciences, société et environnement\nIncidence environnementale de l’exploitation du silicium pour la fabrication des panneaux solaires.\nChoix de la fréquence du courant alternatif du réseau électrique.\nEnjeux économiques des usages des matériaux semi-conducteurs.\nInteraction entre savoirs scientifiques et société : La Fée Électricité (Raoul Dufy) à l’Exposition universelle de 1937.\n\n\n2.2 - Conversion et transport de l’énergie électrique\nL’énergie électrique joue un rôle central aujourd’hui et présente plusieurs avantages : une distribution sûre, des réseaux de distribution étendus, des convertisseurs de bon rendement permettant d’obtenir l’énergie électrique ou de la transformer en d’autres formes d’énergie.\nL’existence de procédés d’obtention d’énergie électrique sans combustion justifie son importance actuelle et future.\n\n\n\nSavoirs\nTrois méthodes permettent d’obtenir de l’énergie électrique sans nécessiter de combustion : - la conversion d’énergie mécanique, soit directe (dynamos, éoliennes, hydroliennes, barrages hydroélectriques), soit indirecte à partir d’énergie thermique (centrales nucléaires, centrales solaires thermiques, géothermie) ;\n\nla conversion de l’énergie radiative reçue du Soleil\n\n(panneaux photovoltaïques) ; - la conversion électrochimique (piles ou accumulateurs conventionnels, piles à hydrogène).\nSavoir-faire\nDécrire des exemples de chaînes de transformations énergétiques permettant d’obtenir de l’énergie électrique à partir de différentes ressources primaires d’énergie. Calculer le rendement global d’un système de conversion d’énergie. ↔︎ Grandeurs et mesures.\n↔︎ Grandeurs proportionnelles.\n↔︎ Grandeurs quotients.\n\n\n\n\nCes méthodes sans combustion ont néanmoins un effet sur l’environnement et la biodiversité ou présentent des risques spécifiques (pollution chimique, déchets radioactifs, accidents industriels, etc.).\nAnalyser des documents présentant les conséquences de l’installation et du fonctionnement d’une centrale électrique.\n\n\nAu cours du transport, une partie de l’énergie électrique, dissipée dans l’environnement par effet Joule, ne parvient pas à l’utilisateur. L’utilisation de la haute tension dans les lignes électriques limite les pertes par effet Joule, à puissance transportée fixée. Le réseau de transport de l’électricité est maillé au niveau européen. En cas de déséquilibre entre l’offre et la demande, il est nécessaire de mobiliser des réserves d’énergie, de diminuer la consommation ou la production\nou de stocker de l’énergie. Pour faire face à l’intermittence liée à certains modes de production ou à la consommation, une possibilité est de convertir l’énergie électrique sous une forme stockable : - énergie chimique ; - énergie mécanique ; - énergie électromagnétique.\nUtiliser les formules littérales reliant la puissance à l’intensité et la tension pour identifier l’influence de ces grandeurs sur l’effet Joule dans les lignes électriques. Comparer des dispositifs de stockage d’énergie selon différents critères (capacité et durée de stockage, incidence écologique, masses mises en jeu par kilowattheure). ↔︎ Grandeurs quotients. ↔︎ Calcul littéral.\n↔︎ Grandeurs et mesures.\n\n\n\nPistes de mise en œuvre du programme\nNature du savoir scientifique et méthodes d’élaboration\nLe développement des combustibles alternatifs à empreinte carbone réduite.\nHistoire des sciences et des techniques : les piles et les accumulateurs.\nSciences, société et environnement\nLes enjeux de l’utilisation de l’énergie nucléaire : de la fission à la fusion contrôlée.\nLes usages et le recyclage des accumulateurs électrochimiques.\nLa régulation du réseau de transport d’électricité français et européen.\n\n\n2.3 - Énergie, choix de développement et futur climatique\nLa consommation mondiale d’énergie, en forte augmentation, fait majoritairement appel aux combustibles fossiles dont l’utilisation est la principale cause du changement climatique.\nLes activités humaines modifient de manière rapide certains flux associés au cycle du carbone. Dans ce contexte, l’estimation d’une empreinte carbone est essentielle pour élaborer des scénarios et fixer des objectifs de réduction.\nLes différents scénarios de l’évolution globale du climat dépendent des stratégies que l’humanité mettra en œuvre.\nLa notion de risques étudiée au collège et en classe de seconde est convoquée.\n\n\n\nSavoirs\nL’énergie utilisée dans le monde provient d’une diversité de ressources parmi lesquelles les combustibles fossiles dominent. Leur consommation est très inégalement répartie selon la richesse des pays et des individus. La croissance de la consommation globale (doublement dans les 40 dernières années) est directement liée au modèle industriel de production et de consommation des sociétés. En moyenne mondiale, cette énergie est utilisée à parts comparables par le secteur industriel, les transports, le\nsecteur de l’habitat et dans une moindre mesure par le secteur agricole.\nLes énergies primaires sont disponibles sous forme de stocks (combustibles fossiles, uranium) et de flux (radiatif solaire, géothermique et des marées).\nSavoir-faire\nUtiliser les différentes unités d’énergie (tonne équivalent pétrole (tep), kilowattheure (kWh), etc.). Exploiter des données de production et d’utilisation d’énergie à différentes échelles (mondiale, nationale, locale, individuelle). Comparer quelques ordres de grandeur d’énergie et de puissance : corps humain, objets du quotidien, moteurs, centrale électrique, flux radiatif solaire, etc. ↔︎ Organisation et exploitation de données. ↔︎ Lectures graphiques.\n↔︎ Puissances de 10, ordres de grandeur.\n↔︎ Conversion d’unités, proportionnalité.\n↔︎ Grandeurs quotients.\n\n\n\n\nLe carbone est stocké dans plusieurs réservoirs superficiels. L’élément carbone circule entre ces différents réservoirs terrestres, constituant le cycle du carbone. Les combustibles fossiles se sont formés à partir du carbone contenu dans la matière organique des êtres vivants, résultant de la réduction du CO2 par photosynthèse il y a plusieurs dizaines à plusieurs centaines de millions d’années. Ils ne se renouvellent pas suffisamment vite pour que les stocks se reconstituent : ces ressources en énergie sont qualifiées de non renouvelables.\nAnalyser un schéma représentant le cycle biogéochimique du carbone pour comparer les stocks des différents réservoirs et identifier les flux principaux de carbone d’origine anthropique ou non. Citer les ordres de grandeur des durées nécessaires aux transformations du carbone.\n\n\nLa combustion de carburants fossiles et de biomasse libère du dioxyde de carbone, également des aérosols et d’autres substances (N2O, O3, suies, produits soufrés) qui affectent la qualité́ de l’air inhalé et la santé.\nAjuster l’équation d’une réaction chimique d’oxydation par le dioxygène. Comparer la masse de dioxyde de carbone produite par unité d’énergie dégagée pour différents combustibles. Distinguer ozone stratosphérique et troposphérique. À partir de documents épidémiologiques, identifier et expliquer les conséquences sur la santé de certains polluants atmosphériques, telles les particules fines résultant de combustions. ↔︎ Grandeurs et mesures. ↔︎ Grandeurs quotients.\n\n\nL’empreinte carbone d’une activité ou d’une personne est la masse de CO2 produite directement ou indirectement par sa consommation d’énergie et/ou de matière première.\nÀ partir de documents, analyser l’empreinte carbone de différentes activités humaines et proposer des comportements pour la minimiser ou la compenser.\n\n\nLes scénarios de transition écologique font différentes hypothèses sur la quantité de GES émise dans le futur. Ils évaluent les changements prévisibles, affectant les écosystèmes et les conditions de vie des êtres humains, principalement les plus vulnérables. Les projections\nfournies par les modèles permettent de définir les aléas\net peuvent orienter les prises de décision.\nDans le domaine énergétique, le choix des mesures\nd’adaptation et d’atténuation doit tenir compte de nombreux critères et paramètres : disponibilité des ressources et adéquation aux besoins, effets (climatique, écologique, sanitaire, agricole), vulnérabilités et gestion des risques, faisabilité, conséquences économiques et sociales. Les durées longues, liées à l’inertie de certains systèmes (infrastructures énergétiques, transports, production industrielle), sont à confronter à l’urgence de l’action. La transition écologique des sociétés repose sur la créativité scientifique et technologique (recherche de diversification ou d’évolution des ressources, mix énergétique, etc.) et sur l’évolution des comportements individuels et collectifs (consommation, déplacements, etc.).\nDiscuter des incidences de l’augmentation du CO2 sur le développement de la végétation. Analyser des extraits de documents du GIEC ou d’accords internationaux.\nAnalyser d’un point de vue global les incidences de choix\nénergétiques majeurs : exemple du nucléaire en France.\nDans une étude de cas, analyser des choix énergétiques\nlocaux selon les critères et les paramètres mentionnés.\n↔︎ Organisation et exploitation de données. ↔︎ Lectures graphiques. ↔︎ Ordres de grandeur.\n\n\n\nPistes pour la mise en œuvre du programme\nNature du savoir scientifique et méthodes d’élaboration\n\nHistoire des sciences et des techniques : évolution de l’exploitation des ressources hydrauliques au cours des siècles.\nHistoire des sciences : de la mesure de l’incidence du CO2 sur le climat à la naissance du GIEC.\nHistoire des sciences : évolution des scénarios de transition écologique proposés par le GIEC depuis sa création.\nHistoire des sciences : de la découverte de la fission au développement des centrales nucléaires.\nEstimation des réserves de combustibles fossiles.\n\nSciences, société et environnement\n\nGestion des déchets issus des centrales nucléaires.\nImpact environnemental du développement de parcs éoliens et hydroliens.\nÉvaluation de la disponibilité d’une ressource énergétique intermittente.\nDéveloppement de la voiture électrique.\nEmpreinte carbone d’un établissement scolaire.\nLes objectifs de développement durable de l’Organisation des nations unies.\nLes mesures prises pour améliorer la qualité de l’air en lien avec la santé.\nUtilisation de bio-indicateurs pour évaluer les pollutions atmosphériques urbaines.\nLes pistes de décarbonation.\nIncidence de la diminution du phytoplancton sur l’équilibre des flux de carbone."
  },
  {
    "objectID": "tg/sci/programme.html#thème-3-une-histoire-du-vivant",
    "href": "tg/sci/programme.html#thème-3-une-histoire-du-vivant",
    "title": "Programme de Enseignement scientifique",
    "section": "Thème 3 — Une histoire du vivant",
    "text": "Thème 3 — Une histoire du vivant\nIntroduction et enjeux. La Terre est habitée par une grande diversité d’êtres vivants, dont l’espèce humaine. Cette biodiversité est dynamique et issue d’une longue histoire : l’évolution des espèces. Les activités humaines se sont développées et ont des effets directs et indirects sur les écosystèmes. Une approche systémique met en lumière les relations entre la santé humaine, la santé animale et les écosystèmes.\nLes mathématiques proposent des modèles pour mieux appréhender la dynamique des systèmes vivants. L’être humain a construit des machines pour traiter l’information et a créé des langages pour les commander. Avec les méthodes de l’intelligence artificielle, il continue d’étendre les capacités de traitement de données et les domaines d’application de l’informatique.\nLes thématiques abordées sont éventuellement l’occasion pour les professeurs de remobiliser des contenus mathématiques abordés dans le cadre du programme de mathématiques intégré à l’enseignement scientifique en classe de première générale, en particulier concernant les phénomènes aléatoires et les phénomènes d’évolution.\nObjectifs. Une partie de la biodiversité actuelle est encore méconnue. Diverses approches cherchent à l’estimer et à en comprendre l’évolution. Ce thème est l’occasion d’approfondir les processus permettant l’apparition de\nnouveautés au sein de populations. Ces dernières sont soumises à des pressions de sélection qui vont modifier la fréquence de représentation de ces nouveautés et donc participer à l’évolution des espèces. L’être humain peut être à l’origine de façon directe ou indirecte de telles pressions. L’espèce humaine, comme les autres êtres vivants, est issue d’une histoire évolutive complexe que la paléoanthropologie cherche à retracer. Les archives paléontologiques sont rares, mais des techniques de biologie moléculaire les complètent.\nLa démarche de modélisation mathématique comporte plusieurs étapes : identification du type de modèle le mieux adapté pour traduire la réalité, détermination des paramètres du modèle, confrontation des résultats du modèle à des observations, qui peut conduire à limiter son domaine de validité ou à le modifier.\nLes mathématiques et l’informatique contribuent à l’élaboration de modèles démographiques et au développement de l’intelligence artificielle dont les nombreuses potentialités et les limites, notamment éthiques, sont à discuter.\n\n3.1 - La biodiversité et son évolution\nÉvaluer la biodiversité à différentes échelles spatiales et temporelles représente un enjeu majeur pour comprendre sa dynamique et les conséquences des actions humaines. Les populations évoluent au cours du temps. Des modèles mathématiques probabilistes et des outils statistiques permettent d’étudier les mécanismes évolutifs impliqués.\n\n\n\nSavoirs\nIl existe sur Terre un grand nombre d’espèces. Les\nscientifiques estiment cependant qu’une part importante de la biodiversité reste à découvrir. La biodiversité se mesure entre autres par des techniques d’échantillonnage qui permettent d’estimer le nombre d’espèces dans différents écosystèmes. Les composantes\nde la biodiversité peuvent aussi être décrites par\nl’abondance (nombre d’individus) d’une population, d’une espèce ou d’un plus grand taxon.\nLa méthode de capture-marquage-recapture repose sur des calculs effectués sur un échantillon. Si on suppose que la proportion d’individus marqués est identique dans l’échantillon de recapture et dans la population totale, l’effectif de celle-ci s’obtient par le calcul d’une quatrième proportionnelle. À partir d’un seul échantillon, l’effectif d’une population peut également être estimé à l’aide d’un intervalle de confiance. Une telle estimation est toujours assortie d’un niveau de confiance strictement inférieur à 100 % en\nraison de la fluctuation des échantillons. Pour un niveau de confiance donné, l’estimation est d’autant plus précise que la taille de l’échantillon est grande.\nSavoir-faire\nExploiter des données obtenues au cours d’une sortie de\nterrain ou d’explorations scientifiques (historiques et/ou actuelles) pour estimer la biodiversité (richesse spécifique et/ou abondance relative de chaque taxon). Exploiter des résultats de métagénomique.\nQuantifier l’effectif d’une population ou d’un taxon plus\nvaste à partir de résultats d’échantillonnage.\nEstimer une abondance par la méthode de capture- marquage-recapture.\nÀ l’aide d’un tableur, simuler des séries de recaptures, les moyenner et visualiser la fluctuation due à l’expérience. En utilisant une formule donnée pour un intervalle de confiance au niveau de confiance de 95 %, estimer un paramètre inconnu dans une population de grande taille à partir des résultats observés sur un échantillon. ↔︎ Proportions. ↔︎ Fluctuation d’échantillonnage.\n↔︎ Intervalle de confiance.\n\n\n\n\nLa composition génétique des populations d’une espèce change de génération en génération. Le modèle mathématique de Hardy-Weinberg utilise la théorie des probabilités pour décrire le phénomène aléatoire de transmission des allèles dans une population. En assimilant les probabilités à des fréquences pour des effectifs de grande taille (loi des grands nombres), le modèle prédit que la structure génétique d’une population de grand effectif est stable d’une génération à l’autre sous certaines conditions (absence de migration, de mutation, de sélection et de dérive). Cette stabilité\nthéorique est connue sous le nom d’équilibre de Hardy-\nWeinberg.\nLes limites du modèle s’expriment dans les écarts entre les fréquences observées sur une population naturelle et les résultats du modèle trouvent leur explication dans les processus réels mis en jeu notamment par les effets de forces évolutives (mutation, sélection, dérive, etc.).\nPour la transmission de deux allèles, dans le cadre du modèle de Hardy-Weinberg, établir les relations entre les probabilités des génotypes d’une génération et celles de la génération précédente. Produire un calcul sur tableur ou un programme en Python pour constater que les probabilités des génotypes sont constantes à partir de la seconde génération (modèle de Hardy-Weinberg). Exploiter des logiciels de simulation basés sur ce modèle mathématique.\nAnalyser une situation d’évolution biologique expliquant\nun écart par rapport au modèle de Hardy-Weinberg.\n↔︎ Tableaux croisés.\n↔︎ Probabilités conditionnelles. ↔︎ Suites et relations de récurrence.\n\n\nLes activités humaines ont des conséquences sur la biodiversité et ses composantes, dont la variation d’abondance. L’approche « Une seule santé » consiste à relier la santé humaine, la santé animale et la santé des écosystèmes dans lesquels elles coexistent, ces trois composantes ne pouvant plus être dissociées. La fragmentation d’une population en plusieurs échantillons de plus faibles effectifs entraîne un appauvrissement de sa diversité génétique. La connaissance et la gestion d’un écosystème permettent d’y préserver une biodiversité.\nÉtudier un exemple montrant les effets d’une modification de l’écosystème, dont ses conséquences possibles en matière de santé. Justifier le concept « Une seule santé » qui met en relation la santé humaine, la santé animale et l’environnement. Utiliser un modèle géométrique simple (quadrillage) pour calculer l’incidence génétique d’une fragmentation sur la surface disponible pour une espèce. À partir d’un logiciel de simulation, montrer les effets d’un faible effectif de population sur l’évolution rapide des fréquences alléliques. Analyser des documents pour comprendre les mesures de protection de populations à faibles effectifs. Identifier des critères de gestion durable d’un écosystème.\n\n\n\nPistes de mise en œuvre du programme\nNature du savoir scientifique et méthodes d’élaboration\nHistoire des sciences : de l’échantillonnage naturaliste aux données en génomique. Élaboration des listes des espèces à protéger à l’échelle internationale.\nLes représentations de l’évolution : place de l’être humain.\nSciences, société et environnement\nLe concept « Une seule santé » et les pandémies.\nEspèces emblématiques et campagne de sensibilisation. Le déclin des abeilles.\nLa biodiversité sur et dans l’être humain : le microbiote.\nStratégies pour préserver la biodiversité ou l’augmenter dans l’enceinte d’un lycée.\n\n\n3.2 - L’évolution comme grille de lecture du monde\nLes concepts de biologie évolutive ont une large portée explicative, présentée ici à travers plusieurs exemples. Ils permettent de comprendre l’anatomie comme le résultat d’une longue histoire évolutive, faite d’adaptations, de hasard, de contingences et de compromis. Les concepts de variation et de sélection naturelle éclairent des pratiques humaines (médicales et agricoles) et certaines de leurs conséquences.\n\n\n\nSavoirs\nLes structures anatomiques présentent des particularités surprenantes d’un point de vue fonctionnel, pouvant paraître sans fonction avérée ou bien d’une étonnante complexité. Elles témoignent de l’évolution des espèces, dont la nôtre. Les caractères anatomiques peuvent être le résultat de la sélection naturelle, mais certains sont mieux expliqués par l’héritage de l’histoire évolutive que par leur fonction. L’évolution permet de comprendre des phénomènes biologiques ayant une importance médicale. L’évolution rapide des organismes microbiens nécessite d’adapter les stratégies prophylactiques, les vaccins et les antibiotiques. L’évolution des pratiques agricoles a un effet sur la biodiversité et son évolution.\nSavoir-faire\nExpliquer l’origine d’une structure anatomique en mobilisant les concepts de hasard, de variation, de sélection naturelle et d’adaptation. Mobiliser des concepts évolutionnistes pour expliquer l’évolution de populations d’êtres vivants.\n\n\n\n\n\nPistes de mise en œuvre du programme\nNature du savoir scientifique et méthodes d’élaboration\nInterpréter des caractéristiques anatomiques humaines en relation avec des contraintes historiques (comme le trajet de la crosse aortique), des contraintes de construction (comme le téton masculin), des compromis sélectifs (comme les difficultés obstétriques) ou des régressions en cours (comme les dents de sagesse).\nLes stratégies actuelles pour faire face aux antibiorésistances.\nSciences, société et environnement\nLa domestication animale.\nL’utilisation de produits phytosanitaires et le développement de ravageurs des cultures qui y sont résistants.\nDe la recherche agronomique aux pratiques agricoles durables.\nLes variants viraux.\n\n\n3.3 - L’évolution humaine\nLa paléoanthropologie construit un récit scientifique de nos origines à partir des archives fossiles. La phylogénie permet d’étudier les relations de parenté entre les espèces actuelles et les fossiles d’hominidés.\n\n\n\nSavoirs\nL’espèce humaine actuelle (Homo sapiens) fait partie du groupe des primates et est plus particulièrement apparentée aux grands singes, avec lesquels elle partage des caractères morpho-anatomiques, des comportements et des similitudes génétiques. C’est avec le chimpanzé qu’elle partage le plus récent ancêtre commun.\nSavoir-faire\nAnalyser des matrices de comparaison de caractères morpho-anatomiques résultant d’innovations évolutives afin d’établir des liens de parenté et de construire un arbre phylogénétique. Mettre en relation la ressemblance génétique entre les espèces de primates et leur degré de parenté.\n\n\n\n\nDes arguments scientifiques issus de l’analyse comparée de fossiles permettent de reconstituer l’histoire de nos origines. L’étude de fossiles datés de 3 à 7 millions d’années montre des innovations caractéristiques de la lignée humaine (bipédie prolongée, forme de la mandibule). Cette lignée est buissonnante. Le genre Homo regroupe l’espèce humaine actuelle et des espèces fossiles qui se caractérisent notamment par le développement de la capacité crânienne. Plusieurs espèces humaines du genre Homo ont cohabité sur Terre. Certains caractères sont transmis de manière non génétique : microbiote, comportements appris, dont la langue, les habitudes alimentaires, l’utilisation d’outils, etc.\nPositionner quelques espèces fossiles dans un arbre phylogénétique, à partir de l’étude de caractères. Discuter la notion de lignée humaine. Analyser des arguments scientifiques qui ont permis de préciser la parenté d’Homo sapiens avec les autres Homo, et notamment la parenté éventuelle avec les Néandertaliens ou les Dénisoviens.\n\n\n\nPistes de mise en œuvre du programme\nNature du savoir scientifique et méthodes d’élaboration\nDes découvertes successives en paléontologie humaine à la construction permanente du récit de nos origines.\nHistoire des sciences : vie et mort d’une théorie (East Side Story).\nSciences, société et environnement\nÉvolution de la représentation sociétale de l’émergence du genre humain.\nSciences et croyances face à l’évolution.\nMétissage des populations humaines et leurs conséquences au niveau immunitaire.\nQu’est-ce que l’être humain ?\n\n\n3.4 - Les modèles démographiques\nPrédire l’évolution de l’effectif d’une population humaine et des ressources qui lui sont nécessaires est un enjeu majeur du développement durable.\nPour prédire ces évolutions, les scientifiques utilisent des modèles mathématiques. La démarche de modélisation comporte notamment le choix d’un modèle et le contrôle de sa validité. La présentation de l’exemple historique de Malthus permet de mettre en œuvre cette démarche mathématique dans le cas discret.\n\n\n\nSavoirs\nL’évolution d’une population dont la variation absolue par unité de temps est presque constante est représentée par un nuage de points évoquant une droite. Cette évolution peut être modélisée par une suite arithmétique (modèle dit linéaire). L’évolution d’une population dont la variation relative par unité de temps (encore appelée taux d’évolution) est presque constante est représentée par un nuage de points évoquant la courbe d’une exponentielle. Cette évolution peut être modélisée par une suite géométrique (modèle dit exponentiel). Le modèle démographique de Malthus est un modèle exponentiel d’évolution de l’effectif de la population. Il prévoit que l’effectif de la population décroît vers 0 si le taux de mortalité est supérieur au taux de natalité et croît vers l’infini si le taux de natalité est supérieur au taux de mortalité. Si les prédictions du modèle de Malthus peuvent se révéler correctes sur un temps court, elles sont irréalistes sur un temps long, notamment en raison de l’insuffisance des ressources disponibles. Des modèles plus élaborés prévoient que la population mondiale atteindra environ 10 milliards d’humains en 2050.\nSavoir-faire\nÀ partir de données démographiques, calculer des variations absolues par unité de temps et des variations relatives par unité de temps d’une population afin de choisir entre un modèle linéaire et un modèle exponentiel. Selon le modèle de Malthus, prédire l’effectif d’une population au bout de n années à partir de son effectif initial, de son taux de natalité et de son taux de mortalité. À l’aide d’un tableur, d’une calculatrice ou d’une représentation graphique, calculer le temps de doublement d’une population sous l’hypothèse de croissance exponentielle. À partir de documents fournis, proposer un modèle de croissance de ressources alimentaires (par exemple, la production mondiale de blé ou de riz) et la comparer à une croissance exponentielle. À l’aide d’une calculatrice ou d’un tableur, ajuster un nuage de points par une courbe de tendance et utiliser ce modèle pour effectuer des prévisions. Comparer les valeurs fournies par un modèle à des données réelles afin de tester sa validité. ↔︎ Calculs usuels sur les suites arithmétiques et géométriques, représentations graphiques. ↔︎ Lectures graphiques. ↔︎ Résolution d’équations et d’inéquations.\n\n\n\n\n\nPistes de mise en œuvre du programme\nNature du savoir scientifique et méthodes d’élaboration\nHistoire des sciences : modèles démographiques (Malthus, Quetelet, Verhulst, Lotka-Volterra, Fibonacci).\nSciences, société et environnement\nLe malthusianisme et le néomalthusianisme.\nModèles de propagation d’une épidémie au sein d’une population. Évolution d’une population et automate cellulaire.\n\n\n3.5 - De la machine de Turing à l’intelligence artificielle\nL’être humain n’a cessé d’accroître sa capacité d’action sur le monde, utilisant son intelligence pour construire des outils et des machines. Dans le contexte du traitement automatique de l’information (informatique), il a élaboré un mode de pensée algorithmique susceptible d’être codé dans des langages permettant de commander des machines.\nPlus largement, le terme « intelligence artificielle » (IA) se définit comme un champ interdisciplinaire théorique et pratique qui a pour objet la compréhension de mécanismes de la cognition et de la réflexion, et leur imitation par un dispositif matériel et logiciel, à des fins d’assistance ou de substitution à des activités humaines : reconnaître et localiser des objets dans une image, conduire une voiture, traduire un texte, dialoguer, etc. Un champ de l’intelligence artificielle ayant récemment permis des applications spectaculaires est celui de l’apprentissage automatique.\n\n\n\nSavoirs\nJusqu’au début du XXe siècle, les machines traitant l’information étaient limitées à une ou à quelques tâches prédéterminées (tisser grâce à un ruban ou des cartes perforées, trier un jeu de cartes perforées, séparer des cartes selon un critère, sommer des valeurs indiquées sur ces cartes, etc.). Turing a été le premier à proposer le concept de machine universelle qui a été matérialisé dix ans plus tard avec les premiers ordinateurs. Ceux-ci sont constitués au minimum d’un processeur et d’une mémoire vive.\nUn ordinateur peut manipuler des données de natures diverses une fois qu’elles ont été numérisées : textes, images, sons. Les programmes sont également des données : ils peuvent être stockés, transportés et traités par des ordinateurs. En particulier, un programme écrit dans un langage de programmation de haut niveau (Python, Scratch, etc.) peut être traduit en instructions spécifiques à chaque type de processeur.\nUn programme peut comporter jusqu’à plusieurs centaines de millions de lignes de code, ce qui rend très probable la présence d’erreurs appelées bogues (ou bugs). Ces erreurs peuvent conduire un programme à avoir un comportement inattendu et entraîner des conséquences graves.\nSavoir-faire\nAnalyser des documents historiques relatifs au traitement de l’information et à son automatisation. Recenser des outils numériques utilisés dans la vie courante, identifier ceux qui sont programmables, et par qui (ordinateur, thermostat d’ambiance, téléphone intelligent, boîte Internet, ordinateur de bord d’une voiture, etc.).\nSavoir distinguer les fichiers exécutables des autres fichiers sous un système d’exploitation donné.\nConnaître l’ordre de grandeur de la taille d’un fichier image, son, vidéo.\nSavoir calculer la taille en octets d’une page de texte (en ASCII et non compressé). Corriger un algorithme ou un programme bogué simple.\n↔︎ Ordres de grandeur. ↔︎ Proportionnalité. ↔︎ Logique.\n\n\n\n\nL’intelligence artificielle (IA) est née en 1956. À cette époque, elle visait à simuler sur ordinateur les facultés cognitives humaines et recouvrait des approches relevant de l’informatique, des mathématiques et des sciences cognitives. L’approche symbolique (systèmes experts) initiée à la fin des années 50 n’a pas tenu ses promesses.\nAujourd’hui, on a tendance à attribuer le terme d’IA à l’un de ses sous-domaines, celui de l’apprentissage automatique (apprentissage machine). Il s’agit d’un processus par lequel un algorithme évalue et améliore ses propres performances, non pas sous l’intervention d’un humain chargé de programmer la machine, mais en répétant son exécution sur des jeux de données de natures variées (mesures de capteurs pour des prévisions, textes pour la traduction, sons pour la reconnaissance vocale, images pour la reconnaissance visuelle, etc.).\nL’apprentissage machine exploite des méthodes mathématiques qui, à partir du repérage de tendances (par exemple, des corrélations ou des similarités) sur de très grandes quantités de données (données massives), permettent de faire des prédictions ou de prendre des décisions sur d’autres données.\nLa qualité et la représentativité des données fournies sont essentielles pour la qualité des résultats. En effet, l’un des risques de l’apprentissage automatique réside dans l’amplification des biais des données. Par ailleurs, une interprétation trop rapide des données et un amalgame entre corrélation et causalité peuvent aboutir à des résultats erronés.\nAnalyser des documents relatifs à une application de l’intelligence artificielle. Utiliser une courbe de tendance (encore appelée courbe de régression) pour estimer une valeur inconnue à partir de données d’entraînement.\nAnalyser un exemple d’utilisation de l’intelligence artificielle : identifier la source des données utilisées et les corrélations exploitées.\nSur des exemples réels, reconnaître les possibles biais dans les données, les limites de la représentativité. Sur des exemples simples, montrer qu’une corrélation ne correspond pas toujours à une relation de causalité. Expliquer pourquoi certains usages de l’IA peuvent poser des problèmes éthiques.\n↔︎ Calcul algébrique. ↔︎ Lectures graphiques.\n\n\nL’inférence bayésienne est une méthode de calcul de probabilités de causes à partir des probabilités de leurs effets. Elle est utilisée en apprentissage automatique pour modéliser des relations au sein de systèmes complexes, notamment en vue de prononcer un diagnostic.\nDans le contexte d’un diagnostic médical fondé sur un test, produire un tableau de contingence afin de calculer des fréquences de faux positifs, faux négatifs, vrais positifs, vrais négatifs et en déduire le nombre de personnes malades suivant leur résultat au test. Utiliser cette démarche dans d’autres contextes de classification (reconnaissance d’images, détection de messages non sollicités envoyés en masse, etc.).\n↔︎ Probabilités conditionnelles. ↔︎ Formule de Bayes.\n\n\n\nPistes de mise en œuvre du programme\nNature du savoir scientifique et méthodes d’élaboration\nHistoire des sciences : de la machine de Turing aux dialogueurs.\nExemples d’apprentissage automatique : réseaux de neurones simples et principe de l’apprentissage par retour d’erreur, algorithme des k plus proches voisins et modification des prédictions selon les données initiales et le paramètre k.\nSciences, société et environnement\nApports de l’intelligence artificielle : santé (imagerie médicale, diagnostic), commerce électronique et marketing (recommandation de produits), finance (prévisions boursières), activités sociales (réseaux sociaux), traduction automatique, communications, transports (voitures intelligentes), sécurité, création de contenus par des modèles génératifs (ChatGPT), etc.\nPoints de vigilance : protection des données personnelles, propriété intellectuelle, responsabilité juridique, risques liés à l’IA générative dans le cadre des interactions entre l’être humain et la machine (interaction Homme-Machine), etc.\nLe devenir de l’intelligence artificielle, entre les sciences et la fiction."
  },
  {
    "objectID": "tg/sci/2-le-futur-des-energies/6-les-atouts-de-lelectricite/quiz/index.html",
    "href": "tg/sci/2-le-futur-des-energies/6-les-atouts-de-lelectricite/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 2: Le futur des énergies",
      "Chapitre 6: Les atouts de l’électricité",
      "Quiz"
    ]
  },
  {
    "objectID": "tg/sci/2-le-futur-des-energies/6-les-atouts-de-lelectricite/exo/index.html",
    "href": "tg/sci/2-le-futur-des-energies/6-les-atouts-de-lelectricite/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Aucun exercice pour l’instant.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 2: Le futur des énergies",
      "Chapitre 6: Les atouts de l’électricité",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/sci/2-le-futur-des-energies/7-optimisation-du-transport-de-lelectricite/index.html",
    "href": "tg/sci/2-le-futur-des-energies/7-optimisation-du-transport-de-lelectricite/index.html",
    "title": "Chapitre 7: Optimisation du transport de l’électricité",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nSavoirs\nSavoir-faire\n\n\n\n\nAu cours du transport, une partie de l’énergie électrique, dissipée dans l’environnement par effet Joule, ne parvient pas à l’utilisateur.\nL’utilisation de la haute tension dans les lignes électriques limite les pertes par effet Joule, à puissance transportée fixée.\nFaire un schéma d’un circuit électrique modélisant une ligne à haute tension.\nUtiliser les formules littérales reliant la puissance à la résistance, l’intensité et la tension pour identifier l’influence de ces grandeurs sur l’effet Joule.\n\n\nUn réseau de transport électrique peut être modélisé mathématiquement par un graphe orienté dont les arcs représentent les lignes électriques et dont les sommets représentent les sources distributrices, les nœuds intermédiaires et les cibles destinatrices.\nDans ce modèle, l’objectif est de minimiser les pertes par effet Joule sur l’ensemble du réseau sous les contraintes suivantes :\n\nl’intensité totale sortant d’une source est limitée par la puissance maximale distribuée;\nl’intensité totale entrant dans chaque nœud intermédiaire est égale à l’intensité totale qui en sort;\nl’intensité totale arrivant à chaque cible est imposée par la puissance qui y est utilisée.\n\nModéliser un réseau de distribution électrique simple par un graphe orienté. Exprimer mathématiquement les contraintes et la fonction à minimiser.\nSur l’exemple d’un réseau comprenant uniquement deux sources, un nœud intermédiaire et deux cibles, formuler le problème de minimisation des pertes par effet Joule et le résoudre pour différentes valeurs numériques correspondant aux productions des sources et aux besoins des cibles.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 2: Le futur des énergies",
      "Chapitre 7: Optimisation du transport de l’électricité"
    ]
  },
  {
    "objectID": "tg/sci/2-le-futur-des-energies/7-optimisation-du-transport-de-lelectricite/index.html#transport-en-haute-tension",
    "href": "tg/sci/2-le-futur-des-energies/7-optimisation-du-transport-de-lelectricite/index.html#transport-en-haute-tension",
    "title": "Chapitre 7: Optimisation du transport de l’électricité",
    "section": "1 Transport en haute tension",
    "text": "1 Transport en haute tension\n\nLorsqu’un conducteur est traversé par un courant, de l’énergie thermique est perdue: c’est l’effet Joule.\nLa puissance dissipée par effet Joule est donnée par la formule.\nPJ=RI2\nP_J = RI^2\n\n\nLorsqu’on élève la tension pour transporter l’électricité, à puissance égale, l’intensité diminue puisque P=UIP=UI. Ainsi la puissance dissipée par effet Joule diminue aussi.\nVidéo servie sans cookie via yewtu.be\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nUne centrale électrique produit une puissance électrique de 100MW à destination d’une ville située à 40km.\nCalculer la puissance dissipée par effet Joule pour un transport en BT à 400V et le comparer à un transport en THT à 400kV.\nDonnées: la résistance linéique des lignes électriques est de 0,25Ω/km0,25\\Omega/km",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 2: Le futur des énergies",
      "Chapitre 7: Optimisation du transport de l’électricité"
    ]
  },
  {
    "objectID": "tg/sci/2-le-futur-des-energies/7-optimisation-du-transport-de-lelectricite/index.html#minimiser-les-pertes-par-effet-joule",
    "href": "tg/sci/2-le-futur-des-energies/7-optimisation-du-transport-de-lelectricite/index.html#minimiser-les-pertes-par-effet-joule",
    "title": "Chapitre 7: Optimisation du transport de l’électricité",
    "section": "2 Minimiser les pertes par effet Joule",
    "text": "2 Minimiser les pertes par effet Joule\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nActivité P128-129\n\n\n\n\n\nPour minimiser les pertes par effet Joule sur un réseau à deux sources S1S_1 et S2S_2.\n\nOn modélise le réseau par un graphe orienté.\nOn écrit la fonction f(I1,I2)f(I_1, I_2) de calcul de la somme des puissances perdues par effet Joule en fonction de I1I_1 et I2I_2.\nEn appliquant la loi des nœuds on exprime I2I_2 en fonction de I1I_1.\nOn réécrit la fonction ff seulement en fonction de I1I_1.\nOn recherche le minimum de la fonction ff par méthode graphique ou analytique.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 2: Le futur des énergies",
      "Chapitre 7: Optimisation du transport de l’électricité"
    ]
  },
  {
    "objectID": "tg/sci/2-le-futur-des-energies/5-deux-siecles-denergie-electrique/quiz/index.html",
    "href": "tg/sci/2-le-futur-des-energies/5-deux-siecles-denergie-electrique/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 2: Le futur des énergies",
      "Chapitre 5: Deux siècles d’énergie électrique",
      "Quiz"
    ]
  },
  {
    "objectID": "tg/sci/2-le-futur-des-energies/5-deux-siecles-denergie-electrique/exo/index.html",
    "href": "tg/sci/2-le-futur-des-energies/5-deux-siecles-denergie-electrique/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Aucun exercice pour l’instant.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 2: Le futur des énergies",
      "Chapitre 5: Deux siècles d’énergie électrique",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/sci/2-le-futur-des-energies/8-choix-energetiques-et-impacts-sur-les-societes/index.html",
    "href": "tg/sci/2-le-futur-des-energies/8-choix-energetiques-et-impacts-sur-les-societes/index.html",
    "title": "Chapitre 8: Choix énergétiques et impacts sur les sociétés",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nSavoirs\nSavoir-faire\n\n\n\n\n\nPour que soit mise en œuvre une adaptation efficace aux changements inéluctables et qu’en soit atténué l’impact négatif, les choix énergétiques supposent une compréhension globale du système Terre.\nCes choix doivent tenir compte de nombreux critères et paramètres : disponibilité des ressources et adéquation aux besoins, impacts (climatique, écologique, sanitaire, agricole), vulnérabilités et gestion des risques, faisabilité, conséquences économiques et sociales. L’analyse de ces éléments de décision conduit le plus souvent à une recherche de diversification ou d’évolution des ressources (mix énergétique).\nLes durées longues, liées à l’inertie de certains systèmes (infrastructures énergétiques, transports, production industrielle), sont à confronter à l’urgence de l’action.\nLa transition écologique des sociétés repose sur la créativité scientifique et technologique, comme sur l’invention de nouveaux comportements individuels et collectifs (consommations, déplacements, relations Nord-Sud).\n\nAnalyser d’un point de vue global les impacts de choix énergétiques majeurs : exemple du nucléaire.\nDans une étude de cas, analyser des choix énergétiques locaux selon les critères et les paramètres mentionnés.\n\n\n\n\n\n\n\n\nVidéo servie sans cookie via yewtu.be\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nPréparer un oral sur une question personnelle relative au thème du chapitre : «Choix énergétiques et impacts sur les sociétés.»",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 2: Le futur des énergies",
      "Chapitre 8: Choix énergétiques et impacts sur les sociétés"
    ]
  },
  {
    "objectID": "blog/index.html",
    "href": "blog/index.html",
    "title": "Blog",
    "section": "",
    "text": "Quelques articles de blog en rapport avec le contenu du site.\n\n\n\n\n\n\n   \n     \n     \n       Trier par\n       Ordre par défaut\n         \n          Titre\n        \n         \n          Date - Le plus ancien\n        \n         \n          Date - Le plus récent\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\nDomaine de l’éducation ISDEC\n\n\n\n\n\n\n\n\n\n\n\n28 sept. 2023\n\n\nBenjamin Abel\n\n\n\n\n\n\n\n\n\n\n\n\nSujets et corrigés des épreuves pratiques de NSI 2023\n\n\n\n\n\n\n\n\n\n\n\n3 févr. 2023\n\n\nBenjamin Abel\n\n\n\n\n\n\n\n\n\n\n\n\nDensité des nombres flottants\n\n\n\n\n\n\n\n\n\n\n\n22 nov. 2022\n\n\nBenjamin Abel\n\n\n\n\n\n\n\n\n\n\n\n\nS’entrainer aux épreuves pratiques de NSI\n\n\n\n\n\n\n\n\n\n\n\n1 mai 2022\n\n\nBenjamin Abel\n\n\n\n\n\n\n\n\n\n\n\n\nComment passer une liste vide par défaut à une fonction en Python?\n\n\n\n\n\n\n\n\n\n\n\n2 avr. 2021\n\n\nBenjamin Abel\n\n\n\n\n\n\n\n\n\n\n\n\nTracé de vecteurs vitesse et variations de vitesse en Python\n\n\n\n\n\n\n\n\n\n\n\n31 janv. 2020\n\n\nBenjamin Abel\n\n\n\n\n\n\nAucun article correspondant"
  },
  {
    "objectID": "blog/2020-01-31-trace-de-vecteurs-cinematiques-en-python/index.html",
    "href": "blog/2020-01-31-trace-de-vecteurs-cinematiques-en-python/index.html",
    "title": "Tracé de vecteurs vitesse et variations de vitesse en Python",
    "section": "",
    "text": "Dans cette partie nous allons tiliser deux bibliothèques particulièrement adaptées à notre travail:\n\npandas: pour l’import de données sous format texte.\nmatplotlib: pour le tracé des vecteurs.\n\nA priori ces bibliothèques sont directement installées avec la plupart des distributions python.\n\n\nUne fois les pointages réalisés dans Logger Pro©, on les exporte au format csv dans le même dossier que le script python.\nOn obtient un fichier csv qui a cette forme(ici, il s’agit d’un pointage de lancer de ballon de basket avec rebond, je l’ai appelé basket.csv):\n\"Analyse Vidéo: Temps (s)\";\"Analyse Vidéo: X (m)\";\"Analyse Vidéo: Y (m)\";\"Analyse Vidéo: Vitesse X (m/s)\";\"Analyse Vidéo: Vitesse Y (m/s)\"\n0;0,0524329864114;2,06735774994;2,13773602824;1,97072540103\n0,013;0,0898851195624;2,09731945646;0,65546386032;1,3425328963\n0,046;0,0823946929322;2,12728116298;0,416469595422;1,36256531621\n0,079;0,104865972823;2,17971414939;0,821528854964;1,84956069973\nLes valeurs sont séparées par des ; et le séparateur décimal est ,.\nOn les importe dans python grâce à la libraire Python pandas avec la fonction read_csv(), et on simplifie les noms de colonne pour y accéder simplement avec la notation pointée.\n\ndata.x pour les abscisses.\ndata.vitesse_x pour la composant horizontale de la vitesse.\n\nNous allons maintenant les importer dans Python grâce à la bibliothèque pandas.\n\n\n\n\n%matplotlib inline\nimport pandas as pd\nimport matplotlib.pyplot as plt\n## Format A4 pour les graphs(en pouces)\nplt.rcParams[\"figure.figsize\"] = (11.7, 8.3)\n\n\ndata = pd.read_csv(\"basket.csv\", sep=\";\", decimal=\",\")\n## On renomme les colonnes sans le Analyse Vidéo ni l'unité\ndef rename_cols(col):\n    \"\"\"Renomme les colonnes pour garder que le symbole\"\"\"\n    col = col.split(\":\")[-1].lower()\n    col = col.split(\"(\")[0]\n    col = col.replace(\" \", \"_\")\n    col = col.strip(\"_\")\n    return col\n##data.head()    \ndata = data.rename(rename_cols, axis='columns')\ndata.head()\n\n\n\n\n\n\n\n\n\ntemps\nx\ny\nvitesse_x\nvitesse_y\n\n\n\n\n0\n0.000\n0.052433\n2.067358\n2.137736\n1.970725\n\n\n1\n0.013\n0.089885\n2.097319\n0.655464\n1.342533\n\n\n2\n0.046\n0.082395\n2.127281\n0.416470\n1.362565\n\n\n3\n0.079\n0.104866\n2.179714\n0.821529\n1.849561\n\n\n4\n0.113\n0.142318\n2.247128\n1.233414\n2.783728\n\n\n\n\n\n\n\n\n\n\n\nLes positions sont tracées avec plt.scatter, les vecteurs avec plt.quiver. Les arguments utilisés peuvent être changés, notamment pour les échelles qui ne sont pas évidentes à régler.\nVoici les liens vers la doc.\n\nhttps://matplotlib.org/3.1.0/api/_as_gen/matplotlib.pyplot.scatter.html\nhttps://matplotlib.org/3.1.0/api/_as_gen/matplotlib.pyplot.quiver.html?highlight=quiver#matplotlib.pyplot.quiver\n\n\n## Positions en vert\nplt.scatter(data.x, data.y, color='green', alpha=0.5)\n\n## vecteurs vitesse en bleu\n## TODO travailler sur l'échelle\nplt.quiver(data.x,\n           data.y,\n           data.vitesse_x,\n           data.vitesse_y,\n           color=\"blue\",\n           scale_units=\"xy\",\n           scale=3,\n           alpha=0.5,\n           label=\"$\\\\vec{v}$\")\n\n## vecteurs accélération en rouge\n## TODO travailler sur l'échelle\ndiff = data.diff()\nplt.quiver(data.x,\n           data.y,\n           diff.vitesse_x,\n           diff.vitesse_y,\n           color=\"red\",\n           scale_units=\"xy\",\n           scale=1,\n           alpha=0.5,\n           label=\"$\\\\vec{\\Delta v}$\")\nplt.legend()\n\n&lt;matplotlib.legend.Legend at 0x7fabf01415d0&gt;\n\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\n\n\n\n\n\n\n\nOn peut utiliser une moyenne mobile sur les mesures pour avoir moins de points et améliorer la précison.\n\ndata2 = data.rolling(10, center=True).mean()\ndata2\n\n\n\n\n\n\n\n\n\ntemps\nx\ny\nvitesse_x\nvitesse_y\n\n\n\n\n0\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n2\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n3\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n4\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n...\n...\n...\n...\n...\n...\n\n\n69\n2.2649\n5.106973\n1.858375\n0.876044\n-1.294343\n\n\n70\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n71\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n72\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n73\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n\n\n74 rows × 5 columns\n\n\n\n\n\ndef trace_vecteurs(data):\n    # Positions en vert\n    plt.scatter(data.x, data.y, color='green', alpha=0.5)\n\n    # vecteurs vitesse en bleu\n    # TODO travailler sur l'échelle\n    plt.quiver(data.x,\n               data.y,\n               data.vitesse_x,\n               data.vitesse_y,\n               color=\"blue\",\n               scale_units=\"xy\",\n               scale=3,\n               alpha=0.5,\n               label=\"$\\\\vec{v}$\")\n\n    # vecteurs accélération en rouge\n    # TODO travailler sur l'échelle\n    diff = data.diff()\n    plt.quiver(data.x,\n               data.y,\n               diff.vitesse_x,\n               diff.vitesse_y,\n               color=\"red\",\n               scale_units=\"xy\",\n               scale=1,\n               alpha=0.5,\n               label= \"$\\\\vec{\\Delta v}$\")\n    plt.legend()\ntrace_vecteurs(data2)\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\n\n\n\n\n\n## sous échantillonage\nN = 3\ndata3 = data2.loc[[i for i in data2.index if i % N == 0]]\ntrace_vecteurs(data3)"
  },
  {
    "objectID": "blog/2020-01-31-trace-de-vecteurs-cinematiques-en-python/index.html#exploration-des-possibilités-offertes-par-python",
    "href": "blog/2020-01-31-trace-de-vecteurs-cinematiques-en-python/index.html#exploration-des-possibilités-offertes-par-python",
    "title": "Tracé de vecteurs vitesse et variations de vitesse en Python",
    "section": "",
    "text": "Dans cette partie nous allons tiliser deux bibliothèques particulièrement adaptées à notre travail:\n\npandas: pour l’import de données sous format texte.\nmatplotlib: pour le tracé des vecteurs.\n\nA priori ces bibliothèques sont directement installées avec la plupart des distributions python.\n\n\nUne fois les pointages réalisés dans Logger Pro©, on les exporte au format csv dans le même dossier que le script python.\nOn obtient un fichier csv qui a cette forme(ici, il s’agit d’un pointage de lancer de ballon de basket avec rebond, je l’ai appelé basket.csv):\n\"Analyse Vidéo: Temps (s)\";\"Analyse Vidéo: X (m)\";\"Analyse Vidéo: Y (m)\";\"Analyse Vidéo: Vitesse X (m/s)\";\"Analyse Vidéo: Vitesse Y (m/s)\"\n0;0,0524329864114;2,06735774994;2,13773602824;1,97072540103\n0,013;0,0898851195624;2,09731945646;0,65546386032;1,3425328963\n0,046;0,0823946929322;2,12728116298;0,416469595422;1,36256531621\n0,079;0,104865972823;2,17971414939;0,821528854964;1,84956069973\nLes valeurs sont séparées par des ; et le séparateur décimal est ,.\nOn les importe dans python grâce à la libraire Python pandas avec la fonction read_csv(), et on simplifie les noms de colonne pour y accéder simplement avec la notation pointée.\n\ndata.x pour les abscisses.\ndata.vitesse_x pour la composant horizontale de la vitesse.\n\nNous allons maintenant les importer dans Python grâce à la bibliothèque pandas.\n\n\n\n\n%matplotlib inline\nimport pandas as pd\nimport matplotlib.pyplot as plt\n## Format A4 pour les graphs(en pouces)\nplt.rcParams[\"figure.figsize\"] = (11.7, 8.3)\n\n\ndata = pd.read_csv(\"basket.csv\", sep=\";\", decimal=\",\")\n## On renomme les colonnes sans le Analyse Vidéo ni l'unité\ndef rename_cols(col):\n    \"\"\"Renomme les colonnes pour garder que le symbole\"\"\"\n    col = col.split(\":\")[-1].lower()\n    col = col.split(\"(\")[0]\n    col = col.replace(\" \", \"_\")\n    col = col.strip(\"_\")\n    return col\n##data.head()    \ndata = data.rename(rename_cols, axis='columns')\ndata.head()\n\n\n\n\n\n\n\n\n\ntemps\nx\ny\nvitesse_x\nvitesse_y\n\n\n\n\n0\n0.000\n0.052433\n2.067358\n2.137736\n1.970725\n\n\n1\n0.013\n0.089885\n2.097319\n0.655464\n1.342533\n\n\n2\n0.046\n0.082395\n2.127281\n0.416470\n1.362565\n\n\n3\n0.079\n0.104866\n2.179714\n0.821529\n1.849561\n\n\n4\n0.113\n0.142318\n2.247128\n1.233414\n2.783728\n\n\n\n\n\n\n\n\n\n\n\nLes positions sont tracées avec plt.scatter, les vecteurs avec plt.quiver. Les arguments utilisés peuvent être changés, notamment pour les échelles qui ne sont pas évidentes à régler.\nVoici les liens vers la doc.\n\nhttps://matplotlib.org/3.1.0/api/_as_gen/matplotlib.pyplot.scatter.html\nhttps://matplotlib.org/3.1.0/api/_as_gen/matplotlib.pyplot.quiver.html?highlight=quiver#matplotlib.pyplot.quiver\n\n\n## Positions en vert\nplt.scatter(data.x, data.y, color='green', alpha=0.5)\n\n## vecteurs vitesse en bleu\n## TODO travailler sur l'échelle\nplt.quiver(data.x,\n           data.y,\n           data.vitesse_x,\n           data.vitesse_y,\n           color=\"blue\",\n           scale_units=\"xy\",\n           scale=3,\n           alpha=0.5,\n           label=\"$\\\\vec{v}$\")\n\n## vecteurs accélération en rouge\n## TODO travailler sur l'échelle\ndiff = data.diff()\nplt.quiver(data.x,\n           data.y,\n           diff.vitesse_x,\n           diff.vitesse_y,\n           color=\"red\",\n           scale_units=\"xy\",\n           scale=1,\n           alpha=0.5,\n           label=\"$\\\\vec{\\Delta v}$\")\nplt.legend()\n\n&lt;matplotlib.legend.Legend at 0x7fabf01415d0&gt;\n\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\n\n\n\n\n\n\n\nOn peut utiliser une moyenne mobile sur les mesures pour avoir moins de points et améliorer la précison.\n\ndata2 = data.rolling(10, center=True).mean()\ndata2\n\n\n\n\n\n\n\n\n\ntemps\nx\ny\nvitesse_x\nvitesse_y\n\n\n\n\n0\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n2\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n3\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n4\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n...\n...\n...\n...\n...\n...\n\n\n69\n2.2649\n5.106973\n1.858375\n0.876044\n-1.294343\n\n\n70\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n71\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n72\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n73\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n\n\n74 rows × 5 columns\n\n\n\n\n\ndef trace_vecteurs(data):\n    # Positions en vert\n    plt.scatter(data.x, data.y, color='green', alpha=0.5)\n\n    # vecteurs vitesse en bleu\n    # TODO travailler sur l'échelle\n    plt.quiver(data.x,\n               data.y,\n               data.vitesse_x,\n               data.vitesse_y,\n               color=\"blue\",\n               scale_units=\"xy\",\n               scale=3,\n               alpha=0.5,\n               label=\"$\\\\vec{v}$\")\n\n    # vecteurs accélération en rouge\n    # TODO travailler sur l'échelle\n    diff = data.diff()\n    plt.quiver(data.x,\n               data.y,\n               diff.vitesse_x,\n               diff.vitesse_y,\n               color=\"red\",\n               scale_units=\"xy\",\n               scale=1,\n               alpha=0.5,\n               label= \"$\\\\vec{\\Delta v}$\")\n    plt.legend()\ntrace_vecteurs(data2)\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\n\n\n\n\n\n## sous échantillonage\nN = 3\ndata3 = data2.loc[[i for i in data2.index if i % N == 0]]\ntrace_vecteurs(data3)"
  },
  {
    "objectID": "blog/2020-01-31-trace-de-vecteurs-cinematiques-en-python/index.html#création-dun-module-trace_cinematique",
    "href": "blog/2020-01-31-trace-de-vecteurs-cinematiques-en-python/index.html#création-dun-module-trace_cinematique",
    "title": "Tracé de vecteurs vitesse et variations de vitesse en Python",
    "section": "2 Création d’un module trace_cinematique",
    "text": "2 Création d’un module trace_cinematique\nCompte tenu de la complexité du code et des paramètres des tracés, j’ai créé un module trace_cinematique qui contient une fonction trace_vecteurs que les élèves peuvent importer simplement et utiliser en travaillant sur les paramètres proposés de la fonction.\nLe module trace_cinematique est disponible dans un dépôt sur framagit.\nVous pouvez le télécharger à cette adresse: https://framagit.org/benabel/trace_cinematique/-/archive/master/trace_cinematique-master.zip\nN’hésitez pas à faire part de vos remarques en ouvrant un ticket.\n\n2.1 Mode d’emploi\nAprès avoir fait les pointages, les élèves exportent leurs pointages au format csv à partir de Logger Pro© dans le même dossier que le fichier trace_cinematique .\nEnsuite dans un fichier nommé par exemple fichier_eleve.py placé toujours dans le même dossier, les élèves importent la fonction trace_vecteurs et donnent le nom du fichier csv en argument:\n\n## import de la fonction de tracé\nfrom trace_cinematique import trace_vecteurs\n\n## appel de la fonction pour le tracé des vecteurs cinematiques\ntrace_vecteurs(\"basket.csv\")\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\n\n\n\n\n\n\n2.2 Travail sur les paramètres du tracé\nune documentation de la fonction est disponible grâce à la fonction générique help().\n\nhelp(trace_vecteurs)\n&gt;&gt;sortie\n\nHelp on function trace_vecteurs in module trace_cinematique:\n\ntrace_vecteurs(csv_file, echelle_v=1, echelle_dv=1, n_lissage=10, n_select=1)\n    Tracé de vecteurs vitesses et variations de vecteurs vitesse\n    \n    Arguments\n    ---------\n    csv_file\n        chemin vers le fichier csv des pointages\n    echelle_v\n        echelle de tracé des vecteurs vitesse: par défaut 1\n    echelle_dv\n        echelle de tracé des vecteurs variation de vecteurs vitesses: par défaut 1\n    n_lissage\n        nombre de points de lissage par défaut 10\n    n_select\n        fraction des points ou les vecteurs sont tracés\n        p.ex: pour n_s=3, 1 vecteur sur 3 st tracé\n\n\n\nEnsuite en jouant sur les paramètres envoyés à la fonction(échelles , fractions de vecteurs tracés…)\nOn peut obtenir un tracé comme celui-ci:\n\ntrace_vecteurs(\"basket.csv\",\n               echelle_v=3,\n               echelle_dv=1,\n               n_lissage=10,\n               n_select=3)\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\n\n\n\n\n\n\n2.3 Licence et droits d’utilisation\nLe code mis à disposition dans le module trace_cinematique est sous licence ISC, une licence libre qui permet de l’utiliser et le modifier comme bon vous semble.\nLe logiciel Logger Pro© est un logiciel sous droits d’auteurs, je n’ai aucun rapport avec l’entreprise qui le développe, vous pouvez certainement adapter le code au logiciel que vous utilisez dans votre établissement."
  },
  {
    "objectID": "blog/2023-09-28-domaines-education/index.html",
    "href": "blog/2023-09-28-domaines-education/index.html",
    "title": "Domaine de l’éducation ISDEC",
    "section": "",
    "text": "Cette page vous permet de sélectionner une matière parmi les 1279 codes de la classification.\n\nviewof search = Inputs.search(table, {placeholder:\"math, biology...\", value:\"math\"}, )\n\nInputs.table(search.sort((a,b)=&gt; b.code.length &gt;a.code.length))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nchart = {\n  const width = 928;\n  \n  // Compute the tree height; this approach will allow the height of the\n  // SVG to scale according to the breadth (width) of the tree layout.\n  const root = d3.stratify()\n    .id(function(d) { return d.code; })\n    .parentId(function(d) { return d.parent; })\n    (table);\n    \n  //d3.hierarchy(data);\n  const dx = 10;\n  const dy = width / (root.height + 1);\n\n  // Create a tree layout.\n  const tree = d3.cluster().nodeSize([dx, dy]);\n\n  // Sort the tree and apply the layout.\n  root.sort((a, b) =&gt; d3.ascending(a.data.label, b.data.label));\n  \n  tree(root);\n\n  // Compute the extent of the tree. Note that x and y are swapped here\n  // because in the tree layout, x is the breadth, but when displayed, the\n  // tree extends right rather than down.\n  let x0 = Infinity;\n  let x1 = -x0;\n  root.each(d =&gt; {\n    if (d.x &gt; x1) x1 = d.x;\n    if (d.x &lt; x0) x0 = d.x;\n  });\n\n  // Compute the adjusted height of the tree.\n  const height = x1 - x0 + dx * 2;\n\n  const svg = d3.create(\"svg\")\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .attr(\"viewBox\", [-dy / 3, x0 - dx, width, height])\n      .attr(\"style\", \"max-width: 100%; height: auto; font: 10px sans-serif;\");\n\n  const link = svg.append(\"g\")\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"#555\")\n      .attr(\"stroke-opacity\", 0.4)\n      .attr(\"stroke-width\", 1.5)\n    .selectAll()\n      .data(root.links())\n      .join(\"path\")\n        .attr(\"d\", d3.linkHorizontal()\n            .x(d =&gt; d.y)\n            .y(d =&gt; d.x));\n  \n  const node = svg.append(\"g\")\n      .attr(\"stroke-linejoin\", \"round\")\n      .attr(\"stroke-width\", 3)\n    .selectAll()\n    .data(root.descendants())\n    .join(\"g\")\n      .attr(\"transform\", d =&gt; `translate(${d.y},${d.x})`);\n\n  node.append(\"circle\")\n      .attr(\"fill\", d =&gt; d.children ? \"#555\" : \"#999\")\n      .attr(\"r\", 2.5);\n\n  node.append(\"text\")\n      .attr(\"dy\", \"0.31em\")\n      .attr(\"x\", d =&gt; d.children ? -6 : 6)\n      .attr(\"text-anchor\", d =&gt; d.children ? \"end\" : \"start\")\n      .text(d =&gt; d.data.label)\n    .clone(true).lower()\n      .attr(\"stroke\", \"white\");\n  \n  return svg.node();\n}\n\n\n\n\n\n\n\ntree = d3.stratify()\n    .id(function(d) { return d.code; })\n    .parentId(function(d) { return d.parent; })\n    (table);\n\n\n\n\n\n\n\ntable = FileAttachment(\"hierarchy_generated.tsv\").tsv();\n\n\n\n\n\n\n\nd3 = require(\"d3@7\")"
  },
  {
    "objectID": "blog/2021-04-02-comment-passer-une-liste-vide-par-defaut-a-une-fonction-en-python/index.html",
    "href": "blog/2021-04-02-comment-passer-une-liste-vide-par-defaut-a-une-fonction-en-python/index.html",
    "title": "Comment passer une liste vide par défaut à une fonction en Python?",
    "section": "",
    "text": "Il est parfois nécessaire de passer des informations lors d’appels de fonctions récursifs.\nPar exemple, en tentant d’implémenter la recherche d’un cycle dans un graphe, je souhaitais passer une liste de nœuds déjà visités au rappel de la fonction pour détecter le cycle. En donnant une liste vide comme valeur par défaut, je pensais pouvoir m’affranchir du rajout de la liste aux arguments lors des appels.\ndef recherche_cycle(graph, noeud, vus=[])\n    ...\nAurait pu s’appeler recherche_cycle(g, n) et non recherche_cycle(g, n, []). Cependant seule la deuxième forme fonctionnait car la liste vus n’était pas réinitialisée entre deux appels.\nEtrange non?\nvoici un exemple minimal pour comprendre ce qui se passe.\n\ndef liste_vide_par_défaut(vus=[]):\n    print(\"valeur de vus au moment de l'appel:\", vus)\n    vus.extend([i for i in range(4)])\nliste_vide_par_défaut()\nliste_vide_par_défaut()\nliste_vide_par_défaut()\nliste_vide_par_défaut()\n&gt;&gt;sortie\n\nvaleur de vus au moment de l'appel: []\nvaleur de vus au moment de l'appel: [0, 1, 2, 3]\nvaleur de vus au moment de l'appel: [0, 1, 2, 3, 0, 1, 2, 3]\nvaleur de vus au moment de l'appel: [0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3]\n\n\nAinsi la liste ne prend pas sa valeur par défaut à chaque appel, mais quand la définition de la fonction est executée.\nVoici le déroulement de cette suite d’instructions dans pytutor:\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nPython tutor liste\n\n\nLa documentation précise:\n\nLes valeurs par défaut des paramètres sont évaluées de la gauche vers la droite quand la définition de la fonction est exécutée. Cela signifie que l’expression est évaluée une fois, lorsque la fonction est définie, et que c’est la même valeur « pré-calculée » qui est utilisée à chaque appel. C’est particulièrement important à comprendre lorsqu’un paramètre par défaut est un objet mutable, tel qu’une liste ou un dictionnaire : si la fonction modifie l’objet (par exemple en ajoutant un élément à une liste), la valeur par défaut est modifiée. En général, ce n’est pas l’effet voulu."
  },
  {
    "objectID": "blog/2021-04-02-comment-passer-une-liste-vide-par-defaut-a-une-fonction-en-python/index.html#le-problème",
    "href": "blog/2021-04-02-comment-passer-une-liste-vide-par-defaut-a-une-fonction-en-python/index.html#le-problème",
    "title": "Comment passer une liste vide par défaut à une fonction en Python?",
    "section": "",
    "text": "Il est parfois nécessaire de passer des informations lors d’appels de fonctions récursifs.\nPar exemple, en tentant d’implémenter la recherche d’un cycle dans un graphe, je souhaitais passer une liste de nœuds déjà visités au rappel de la fonction pour détecter le cycle. En donnant une liste vide comme valeur par défaut, je pensais pouvoir m’affranchir du rajout de la liste aux arguments lors des appels.\ndef recherche_cycle(graph, noeud, vus=[])\n    ...\nAurait pu s’appeler recherche_cycle(g, n) et non recherche_cycle(g, n, []). Cependant seule la deuxième forme fonctionnait car la liste vus n’était pas réinitialisée entre deux appels.\nEtrange non?\nvoici un exemple minimal pour comprendre ce qui se passe.\n\ndef liste_vide_par_défaut(vus=[]):\n    print(\"valeur de vus au moment de l'appel:\", vus)\n    vus.extend([i for i in range(4)])\nliste_vide_par_défaut()\nliste_vide_par_défaut()\nliste_vide_par_défaut()\nliste_vide_par_défaut()\n&gt;&gt;sortie\n\nvaleur de vus au moment de l'appel: []\nvaleur de vus au moment de l'appel: [0, 1, 2, 3]\nvaleur de vus au moment de l'appel: [0, 1, 2, 3, 0, 1, 2, 3]\nvaleur de vus au moment de l'appel: [0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3]\n\n\nAinsi la liste ne prend pas sa valeur par défaut à chaque appel, mais quand la définition de la fonction est executée.\nVoici le déroulement de cette suite d’instructions dans pytutor:\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nPython tutor liste\n\n\nLa documentation précise:\n\nLes valeurs par défaut des paramètres sont évaluées de la gauche vers la droite quand la définition de la fonction est exécutée. Cela signifie que l’expression est évaluée une fois, lorsque la fonction est définie, et que c’est la même valeur « pré-calculée » qui est utilisée à chaque appel. C’est particulièrement important à comprendre lorsqu’un paramètre par défaut est un objet mutable, tel qu’une liste ou un dictionnaire : si la fonction modifie l’objet (par exemple en ajoutant un élément à une liste), la valeur par défaut est modifiée. En général, ce n’est pas l’effet voulu."
  },
  {
    "objectID": "blog/2021-04-02-comment-passer-une-liste-vide-par-defaut-a-une-fonction-en-python/index.html#la-solution",
    "href": "blog/2021-04-02-comment-passer-une-liste-vide-par-defaut-a-une-fonction-en-python/index.html#la-solution",
    "title": "Comment passer une liste vide par défaut à une fonction en Python?",
    "section": "2 La solution",
    "text": "2 La solution\nLa solution préconisée est d’utiliser None par défaut et de tester explicitement la valeur dans le corps de la fonction.\n\ndef liste_vide_par_défaut(vus=None):\n    if vus is None:\n        vus = []\n    print(\"valeur de vus au moment de l'appel:\", vus)\n    vus.extend([i for i in range(4)])\nliste_vide_par_défaut()\nliste_vide_par_défaut()\nliste_vide_par_défaut()\nliste_vide_par_défaut()\n&gt;&gt;sortie\n\nvaleur de vus au moment de l'appel: []\nvaleur de vus au moment de l'appel: []\nvaleur de vus au moment de l'appel: []\nvaleur de vus au moment de l'appel: []"
  },
  {
    "objectID": "blog/2021-04-02-comment-passer-une-liste-vide-par-defaut-a-une-fonction-en-python/index.html#quand-utiliser-cette-solution",
    "href": "blog/2021-04-02-comment-passer-une-liste-vide-par-defaut-a-une-fonction-en-python/index.html#quand-utiliser-cette-solution",
    "title": "Comment passer une liste vide par défaut à une fonction en Python?",
    "section": "3 Quand utiliser cette solution?",
    "text": "3 Quand utiliser cette solution?\nIl faut bien comprendre que cette solution n’est nécessaire que lorsque le paramètre par défaut est mutable (listes, dictionnaire notamment).\nUn objet non mutable étant par construction non modifiable gradera la valeur qui lui a été donnée par défaut lors de la définition de la fonction.\n\ndef str_vide_par_défaut(txt=\"\"):\n    print(\"valeur de txt au moment de l'appel:\", txt)\n    txt = txt + \"0123\"\nstr_vide_par_défaut()\nstr_vide_par_défaut()\nstr_vide_par_défaut()\nstr_vide_par_défaut()\n&gt;&gt;sortie\n\nvaleur de txt au moment de l'appel: \nvaleur de txt au moment de l'appel: \nvaleur de txt au moment de l'appel: \nvaleur de txt au moment de l'appel: \n\n\nVoici le déroulement de cette suite d’instructions dans pytutor:\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nPython tutor liste\n\n\nUne chaîne de caractère étant immutable, l’argument par défaut reste vide."
  },
  {
    "objectID": "2gt/index.html",
    "href": "2gt/index.html",
    "title": "Seconde",
    "section": "",
    "text": "SNT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAucun article correspondant"
  },
  {
    "objectID": "2gt/snt/6-les-reseaux-sociaux/index.html",
    "href": "2gt/snt/6-les-reseaux-sociaux/index.html",
    "title": "Partie 6: Les réseaux sociaux",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus | Capacités attendues |\n\n\n\n\nIdentité numérique, | Connaître les principaux concepts liés à l’usage des réseaux | e-réputation, identification, | sociaux. | authentification | |\n\n\nRéseaux sociaux existants | Distinguer plusieurs réseaux sociaux selon leurs | | caractéristiques, y compris un ordre de grandeur de leurs | | nombres d’abonnés. | | | | Paramétrer des abonnements pour assurer la confidentialité | | de données personnelles. |\n\n\nModèle économique des réseaux sociaux | Identifier les sources de revenus des entreprises de | | réseautage social. |\n\n\nRayon, diamètre et centre | Déterminer ces caractéristiques sur des graphes simples. | d’un graphe | | | | Notion de « petit monde » | Décrire comment l’information présentée par les réseaux | | sociaux est conditionnée par le choix préalable de ses amis. | Expérience de Milgram | |\n\n\nConnaître les dispositions de l’article 222-33-2-2 du code |\nCyberviolence | pénal. | | | | Connaître les différentes formes de cyberviolence | | (harcèlement, discrimination, sexting…) et les ressources | | disponibles pour lutter contre la cyberviolence. | | |",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 6: Les réseaux sociaux"
    ]
  },
  {
    "objectID": "2gt/snt/6-les-reseaux-sociaux/index.html#identité-numérique",
    "href": "2gt/snt/6-les-reseaux-sociaux/index.html#identité-numérique",
    "title": "Partie 6: Les réseaux sociaux",
    "section": "1 Identité numérique",
    "text": "1 Identité numérique\nLorsqu’on utilise un réseau social, celui-ci nous demande de créer un compte pour nous identifier.\nÀ chaque interaction avec le réseau, nous devons nous authentifier grâce à un mot de passe par exemple.\nVous obtenez alors une identité numérique qui permet d’associer une personne physique ou morale avec un compte de réseau social.\n\n\n@POTUS: le président des États-Unis.\n@taylorswift13: …\n@Cristiano: …\n\nVoir cet article pour une liste à jour des personnes les plus suivies sur Twitter.\n\nLorsque nous sommes identifiés, nous laissons des traces sur le web qui vont façonner notre cyber-réputation.\n\n\nCyber-réputation\n\n\n\nRéputation d’une entité (personne physique ou morale, marque, produit) en fonction des traces la concernant, trouvables sur le Web.",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 6: Les réseaux sociaux"
    ]
  },
  {
    "objectID": "2gt/snt/6-les-reseaux-sociaux/index.html#graphe-social",
    "href": "2gt/snt/6-les-reseaux-sociaux/index.html#graphe-social",
    "title": "Partie 6: Les réseaux sociaux",
    "section": "2 Graphe social",
    "text": "2 Graphe social\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nPour représenter les liens entre les personnes présentes sur un réseau social, on utilise couramment des graphes.©  CC BY-SA 3.0 via Wikimedia Commons\n\n2.1 Vocabulaire\nDans un graphe social, on représente:\n\nLes personnes par des ronds: les sommets,\nLeurs relations par des traits: les arêtes.\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nExemple de graphe social\n\n\n\n\n2.2 Représentations des liens entre personnes\nUn graphe peut-être décrit par un tableau dans lequel on va porter les relations d’amitié entre les personnes.\n\n\n\nJules\nHugo | Ambre\nRaphaël | Rose | Chloé\n\n\n\nJules |\n| |\n\n\n\nHugo | | | | | | |\n\n\nAmbre |\n| |\n\n\n\nRaphaël\n| |\n|\n\n\nRose | | | | | | |\n\n\nChloé |\n| |\n\n\n\n\n\n\n2.3 Rayon, diamètre et centre d’un graphe\nPour mesurer les caractéristiques d’un graphe, on mesure les distances entre les nœuds.\nLa distance entre deux sommets dans un graphe est définie par la longueur d’un plus court chemin entre ces deux sommets.\nIl peut être commode de remplir un tableau de distances pour caractériser le graphe.\n\n\n\ndistance\nJules\nHugo\nAmbre\nRaphaël\nRose\nChloé\n\n\nJules | 0 | | | | | |\n\n\nHugo | | 0 | | |\n\n\n\nAmbre | | | 0 | | | |\n\n\nRaphaël | | | | 0 | | |\n\n\nRose | |\n| 0\n\n\n\nChloé | | | | | | 0 |\n\n\n\n\n\nDiamètre\n\n\n\nLa plus grande distance possible qui puisse exister entre deux de ses sommets.\n\n\n\nRayon\n\n\n\nLa plus petite distance à laquelle puisse se trouver un sommet de tous les autres.\n\n\n\nCentre\n\n\n\nLe ou les nœuds distants d’au maximum un rayon des autres.\n\n\n\nPour déterminer ces caractéristiques on mesure la distance maximale de chaque nœud aux autres (on parle d’excentricité).\n\n\n\ndistance | Jules | Hugo | Ambre | Raphaël | Rose | Chloé |\n\n\ndistance | | | maximale | | | (excentricité)\n| |\n| |\n| | | | |\n\n\n\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nDéterminer le rayon, le diamètre et le centre du graphe précédent.",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 6: Les réseaux sociaux"
    ]
  },
  {
    "objectID": "2gt/snt/6-les-reseaux-sociaux/index.html#les-petits-mondes",
    "href": "2gt/snt/6-les-reseaux-sociaux/index.html#les-petits-mondes",
    "title": "Partie 6: Les réseaux sociaux",
    "section": "3 Les petits mondes",
    "text": "3 Les petits mondes\nSur les réseaux sociaux actuels, 3,5 personnes en moyenne séparent deux personnes choisies au hasard. On est donc effectivement connecté au monde entier.\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nDes petits mondes qui communiquent peu entre eux!©  CC BY 3.0 via Wikimedia Commons\nCependant, de par la conception des algorithmes de recommandations, ces réseaux nous présentent souvent des contenus de personnes qui nous ressemblent et qui pensent comme nous ce qui « étonnamment » nous empêche d’être au contact des autres et de leurs différences. On reste dans notre petit monde.",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 6: Les réseaux sociaux"
    ]
  },
  {
    "objectID": "2gt/snt/index.html",
    "href": "2gt/snt/index.html",
    "title": "SNT",
    "section": "",
    "text": "Partie 0: Programmation Python\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPartie 1: Les données structurées\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPartie 2: Internet\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPartie 3: Le Web\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPartie 4: Localisation, cartographie et mobilité\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPartie 5: La photographie numérique\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPartie 6: Les réseaux sociaux\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPartie 7: Informatique embarquée\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAucun article correspondant",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT"
    ]
  },
  {
    "objectID": "2gt/snt/5-la-photographie-numerique/index.html",
    "href": "2gt/snt/5-la-photographie-numerique/index.html",
    "title": "Partie 5: La photographie numérique",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\n\n\n\n\nPhotosites, pixels, résolution(du capteur, de l’image), profondeur de couleur.\nDistinguer les photosites du capteur et les pixels de l’image en comparant les résolutions du capteur et de l’image selon les réglages de l’appareil.\n\n\nMétadonnées EXIF\nRetrouver les métadonnées d’une photographie.\n\n\nTraitement d’image\nTraiter par programme une image pour la transformer en agissant sur les trois composantes de ses pixels.\n\n\nRôle des algorithmes dans les appareils photo numériques\nExpliciter des algorithmes associés à la prise de vue. Identifier les étapes de la construction de l’image finale.",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 5: La photographie numérique"
    ]
  },
  {
    "objectID": "2gt/snt/5-la-photographie-numerique/index.html#les-images-numériques",
    "href": "2gt/snt/5-la-photographie-numerique/index.html#les-images-numériques",
    "title": "Partie 5: La photographie numérique",
    "section": "1 Les images numériques",
    "text": "1 Les images numériques\nIl existe deux principaux types d’images numériques:\n\nLes images matricielles dans lesquelles l’image est décrite par une suite de pixels colorées: les formats jpg, png, gif, webp, avif…\nLes images vectorielles dans lesquelles l’image est décrite par les formes contenues dans l’image: le format svg principalement.\n\nLes images photographiques que nous étudions dans ce chapitre sont matricielles, elles souffrent des effets de pixelisation lors des zooms. Au contraire les images vectorielles peuvent être affichées à n'importe quel niveau de zoom, on les utilise principalement pour les schémas et graphiques.©  CC BY-SA 2.5 via Wikimedia Commons",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 5: La photographie numérique"
    ]
  },
  {
    "objectID": "2gt/snt/5-la-photographie-numerique/index.html#définition-dune-image",
    "href": "2gt/snt/5-la-photographie-numerique/index.html#définition-dune-image",
    "title": "Partie 5: La photographie numérique",
    "section": "2 Définition d’une image",
    "text": "2 Définition d’une image\n\n\nDéfinition d’une image\n\n\n\nLa définition d’une image matricielle est le nombre de pixels de l’image.\n\n\n\n\n\nFormat Full HD : 1 920 × 1 080\nFormat 4k: 3 840 × 2 160\n\n\n\n\n\n\n\n\n\nEn plus\n\n\n\n\n\n\nÀ ne pas confondre avec la résolution de l’image qui s’exprime en pixels par pouce qui mesure la qualité d’une image affichée ou imprimée.\n\n\n\n\n\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nCalculer la définition des images Full HD et 4K sans calculatrice.",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 5: La photographie numérique"
    ]
  },
  {
    "objectID": "2gt/snt/5-la-photographie-numerique/index.html#codage-des-couleurs",
    "href": "2gt/snt/5-la-photographie-numerique/index.html#codage-des-couleurs",
    "title": "Partie 5: La photographie numérique",
    "section": "3 Codage des couleurs",
    "text": "3 Codage des couleurs\nEn informatique, il existe différentes façons de coder les couleurs, pour s’en rendre, il suffit d’ouvrir un sélecteur de couleur sur votre ordinateur pour s’en rendre compte.\n\n\n\nSystème RVB\n\n\n\nUn des systèmes les plus courants de codage des couleurs en informatique est le système RVB (pour Rouge Vert Bleu) qui code les intensités des composantes rouge, verte et bleue d’un pixel en synthèse additive des couleurs.\n\n\n\n\n\n\n\n\n\nSynthèse additive des couleurs.©  CC BY-SA 3.0 via Wikimedia Commons\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nDispositions possibles des mosaïques de lumières colorées dans un écran.©  CC BY-SA 3.0 via Wikimedia Commons\n\n\n\n\n\n\n\n\n\n\nEn plus: Références des systèmes de couleurs sur MDN\n\n\n\n\n\n\nEncore une fois, consultez cette page sur l’excellent site MDN pour en savoir plus.\nhttps://developer.mozilla.org/fr/docs/Web/CSS/color_value\n\n\n\n\n\n\n\nProfondeur des couleurs\n\n\n\nLa profondeur de couleurs est le nombre de bits utilisés pour représenter la couleur d’un pixel dans une image.\n\n\n\n\n\n1 bit: 0 ou 1 pour Noir et Blanc.\n1 octet: 28=2562^8=256 niveaux pour les images en niveau de gris.\n3 octets: 1 octet pour chaque composante rouge, verte et bleue pour les images en jpeg. (voir cette animation)\n6 octets: 2 octets pour chaque composante rouge, verte et bleue pour les images en tiff ou raw.\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nProfondeur des couleurs source Wikipédia\n\n\nWikipédia\n\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nEn utilisant cette animation. Répondre aux questions suivantes.\n\nCombien de niveaux de couleurs peuvent être codées sur 3 octets?\nEn notant (R, G, B) les couleurs sur 3 octets, expliquer comment obtenir:\n\ndu rouge: (255, 0, 0)\ndu vert:\ndu bleu:\ndu jaune:\ndu magenta:\ndu cyan:\ndu noir:\ndu blanc:",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 5: La photographie numérique"
    ]
  },
  {
    "objectID": "2gt/snt/5-la-photographie-numerique/index.html#les-métadonnées",
    "href": "2gt/snt/5-la-photographie-numerique/index.html#les-métadonnées",
    "title": "Partie 5: La photographie numérique",
    "section": "4 Les métadonnées",
    "text": "4 Les métadonnées\n\n\nMétadonnées\n\n\n\nEn plus des données concernant les couleurs des pixels de l’image, les photographies numériques contiennent de nombreuses informations concernant la prise de vue:\n\n\n\n\nla date\nl’heure\nl’appareil utilisé pour prendre la photo\nles paramètres de la prise de vue(flash, vitesse…)\nla géolocalisation si disponible\n\nUn des formats de métadonnées couramment utilisé dans les photos est le format EXIF.\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nCiter au moins cinq métadonnées présentes dans la photo présentée sur cette page:\nhttps://apps.lyceum.fr/photo-metadata/",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 5: La photographie numérique"
    ]
  },
  {
    "objectID": "2gt/snt/3-le-web/quiz/index.html",
    "href": "2gt/snt/3-le-web/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 3: Le Web",
      "Quiz"
    ]
  },
  {
    "objectID": "2gt/snt/3-le-web/exo/index.html",
    "href": "2gt/snt/3-le-web/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Voici un extrait du code de la première page web crée par Tim Berners Lee au CERN.\n&lt;header&gt;\n    &lt;title&gt;The World Wide Web project&lt;/title&gt;\n&lt;/header&gt;\n\n&lt;body&gt;\n    &lt;h1&gt;World Wide Web&lt;/h1&gt;\n\n    &lt;p&gt;The WorldWideWeb (W3) is a wide-area&lt;a href=\"WhatIs.html\"&gt;hypermedia&lt;/a&gt;\n    information retrieval initiative aiming to give universal access to a large\n    universe of documents.&lt;/p&gt;\n    \n&lt;/body&gt;\nVoici le rendu:\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nRendu de page html par le navigateur\n\n\nLe langage html est un langage qui utilise des balises ouvrantes &lt;balise&gt; et fermantes &lt;/balise&gt;.\n\nQuelle différence y a-t-il entre la balise ouvrante et la balise fermante ?\nRepérer toutes les balises utilisées dans ce document.\nQuelle balise permet de créer des liens hypertextes ?\nEssayer de deviner le rôle des autres balises en observant attentivement le rendu.",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 3: Le Web",
      "Exercices"
    ]
  },
  {
    "objectID": "2gt/snt/3-le-web/exo/index.html#les-bases-du-html",
    "href": "2gt/snt/3-le-web/exo/index.html#les-bases-du-html",
    "title": "Exercices",
    "section": "",
    "text": "Voici un extrait du code de la première page web crée par Tim Berners Lee au CERN.\n&lt;header&gt;\n    &lt;title&gt;The World Wide Web project&lt;/title&gt;\n&lt;/header&gt;\n\n&lt;body&gt;\n    &lt;h1&gt;World Wide Web&lt;/h1&gt;\n\n    &lt;p&gt;The WorldWideWeb (W3) is a wide-area&lt;a href=\"WhatIs.html\"&gt;hypermedia&lt;/a&gt;\n    information retrieval initiative aiming to give universal access to a large\n    universe of documents.&lt;/p&gt;\n    \n&lt;/body&gt;\nVoici le rendu:\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nRendu de page html par le navigateur\n\n\nLe langage html est un langage qui utilise des balises ouvrantes &lt;balise&gt; et fermantes &lt;/balise&gt;.\n\nQuelle différence y a-t-il entre la balise ouvrante et la balise fermante ?\nRepérer toutes les balises utilisées dans ce document.\nQuelle balise permet de créer des liens hypertextes ?\nEssayer de deviner le rôle des autres balises en observant attentivement le rendu.",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 3: Le Web",
      "Exercices"
    ]
  },
  {
    "objectID": "2gt/snt/3-le-web/exo/index.html#comprendre-une-url",
    "href": "2gt/snt/3-le-web/exo/index.html#comprendre-une-url",
    "title": "Exercices",
    "section": "2 Comprendre une URL",
    "text": "2 Comprendre une URL\nCompléter le tableau suivant donnant les diverses informations contenues dans les URL suivantes.\n\nmailto:gaston.lagaffe@mail.com\nftp://ftp.mozilla.org/pub/mozilla.org/firefox/releases/\nhttps://fr.wikipedia.org/wiki/Grace_Hopper#Anecdote\nhttps://developer.mozilla.org/fr/search?q=HTTP&locale=en-US\nhttps://www.google.com/search?q=snt&as_sitesearch=lemonde.fr\n\n\n\n\nURL\nProtocole\nNom de domaine\nChemin vers la ressource\nParamètres\nAncre\n\n\n\n\n1\n\n\n\n\n\n\n\n2\n\n\n\n\n\n\n\n3\n\n\n\n\n\n\n\n4\n\n\n\n\n\n\n\n5",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 3: Le Web",
      "Exercices"
    ]
  },
  {
    "objectID": "2gt/snt/7-informatique-embarquee/index.html",
    "href": "2gt/snt/7-informatique-embarquee/index.html",
    "title": "Partie 7: Informatique embarquée",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\n\n\n\n\nSystèmes informatiques embarqués\nIdentifier des algorithmes de contrôle des comportements physiques à travers les données des capteurs, l’IHM et les actions des actionneurs dans des systèmes courants.\n\n\nInterface homme-machine (IHM)\nRéaliser une IHM simple d’un objet connecté.\n\n\nCommande d’un actionneur, acquisition des données d’un capteur\nÉcrire des programmes simples d’acquisition de données ou de commande d’un actionneur.",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 7: Informatique embarquée"
    ]
  },
  {
    "objectID": "2gt/snt/7-informatique-embarquee/index.html#interface-homme-machine",
    "href": "2gt/snt/7-informatique-embarquee/index.html#interface-homme-machine",
    "title": "Partie 7: Informatique embarquée",
    "section": "1 Interface Homme-Machine",
    "text": "1 Interface Homme-Machine\n: Interface Homme-Machine (IHM)\nMoyens (matériels ou logiciels) prévus pour la communication entre un être humain et une machine.\n\n\nclavier\nsouris",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 7: Informatique embarquée"
    ]
  },
  {
    "objectID": "2gt/snt/7-informatique-embarquee/index.html#les-objets-connectés",
    "href": "2gt/snt/7-informatique-embarquee/index.html#les-objets-connectés",
    "title": "Partie 7: Informatique embarquée",
    "section": "2 Les objets connectés",
    "text": "2 Les objets connectés\nLes objets informatisés avaient autrefois des interfaces homme-machine (IHM) dédiées, souvent dépendantes d’une liaison filaire directe. Mais les technologies du Web intégrées au téléphone portable permettent maintenant d’y rassembler les interfaces des objets du quotidien, ce qui en simplifie et uniformise l’usage. Les objets informatisés deviennent ainsi connectés.\nOn estime à 50 milliards le nombre d’objets connectés en 2020.",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 7: Informatique embarquée"
    ]
  },
  {
    "objectID": "2gt/snt/2-internet/quiz/index.html",
    "href": "2gt/snt/2-internet/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "1. Le protocole `IP` est un protocole de:\n\n   - [x] de réseau.\n   - [ ] de transport.\n   - [ ] d'application.\n\n2. Le protocole `TCP` est un protocole de:\n\n   - [ ] de réseau.\n   - [x] de transport.\n   - [ ] d'application.",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 2: Internet",
      "Quiz"
    ]
  },
  {
    "objectID": "2gt/snt/2-internet/exo/index.html",
    "href": "2gt/snt/2-internet/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Aucun exercice pour l’instant.",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 2: Internet",
      "Exercices"
    ]
  },
  {
    "objectID": "2gt/snt/0-programmation-python/3-boucles-et-fonctions/quiz/index.html",
    "href": "2gt/snt/0-programmation-python/3-boucles-et-fonctions/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 0: Programmation Python",
      "Chapitre 3: Boucles et fonctions",
      "Quiz"
    ]
  },
  {
    "objectID": "2gt/snt/0-programmation-python/3-boucles-et-fonctions/exo/index.html",
    "href": "2gt/snt/0-programmation-python/3-boucles-et-fonctions/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Aucun exercice pour l’instant.",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 0: Programmation Python",
      "Chapitre 3: Boucles et fonctions",
      "Exercices"
    ]
  },
  {
    "objectID": "2gt/snt/0-programmation-python/1-programme-et-variables/index.html",
    "href": "2gt/snt/0-programmation-python/1-programme-et-variables/index.html",
    "title": "Chapitre 1: Programme et variables",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\n\n\n\n\nAffectations, variables\nSéquences\nÉcrire et développer des programmes pour répondre à des problèmes et modéliser des phénomènes physiques, économiques et sociaux.",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 0: Programmation Python",
      "Chapitre 1: Programme et variables"
    ]
  },
  {
    "objectID": "2gt/snt/0-programmation-python/1-programme-et-variables/index.html#algorithme-et-programme",
    "href": "2gt/snt/0-programmation-python/1-programme-et-variables/index.html#algorithme-et-programme",
    "title": "Chapitre 1: Programme et variables",
    "section": "1 Algorithme et programme",
    "text": "1 Algorithme et programme\n\n\nProgramme\n\n\n\nUn programme est une séquence d’instructions destinées à être exécutées par la machine.\n\n\n\n\nprint(\"Bonjour\")\nnom = input(\"Comment vous appelez-vous?\")\nprint(\"Bienvenue\", nom)\n\n\n\n\n\n\n\n\nEn plus: Algorithme et programme\n\n\n\n\n\n\nEn informatique, on parle souvent d’algorithmes, car nos programmes sont en fait des algorithmes exécutés par les ordinateurs.\n\n\nAlgorithme\n\n\n\nUn algorithme est une méthode, une suite d’instructions permettant d’obtenir un résultat.\n\n\n\nCe type de méthode est utilisé depuis la nuit des temps pour fabriquer des tissus, nouer des cordages, ou bien préparer des aliments.\nLa révolution de l’informatique survenue au milieu du XXe siècle vient du fait que l’on a pu faire exécuter ces algorithmes à des machines. Pour cela il a fallu exprimer ces algorithmes dans des langages de programmation afin qu’ils puissent être exécutés par les ordinateurs.",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 0: Programmation Python",
      "Chapitre 1: Programme et variables"
    ]
  },
  {
    "objectID": "2gt/snt/0-programmation-python/1-programme-et-variables/index.html#variables",
    "href": "2gt/snt/0-programmation-python/1-programme-et-variables/index.html#variables",
    "title": "Chapitre 1: Programme et variables",
    "section": "2 Variables",
    "text": "2 Variables\n\n\nVariable\n\n\n\nLes variables sont des noms permettant de désigner des valeurs stockées par le programme.\n\n\n\n\nVoici trois types de variables simples utilisées en Python.\n# type int (integer)\nentier = 13\n# type float (nombre à virgule flottante)\nflottant = 13.0\n# type str (string) les chaînes de caractères\ntexte = \"treize\"\nIl existe aussi le type booléen: True ou False\n\n\n\n\n\n\n\nAvertissement\n\n\n\nAttention à bien distinguer une variable comme age d’une chaine de caractère \"age\".",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 0: Programmation Python",
      "Chapitre 1: Programme et variables"
    ]
  },
  {
    "objectID": "2gt/snt/0-programmation-python/1-programme-et-variables/index.html#la-fonction-print-afficher-une-sortie",
    "href": "2gt/snt/0-programmation-python/1-programme-et-variables/index.html#la-fonction-print-afficher-une-sortie",
    "title": "Chapitre 1: Programme et variables",
    "section": "3 La fonction print(): Afficher une sortie",
    "text": "3 La fonction print(): Afficher une sortie\nLa fonction print permet au programme d’afficher du texte en sortie.\nOn peut utiliser plusieurs arguments séparés par des virgules qui seront alors ajoutés les uns à côté des autres (on dit concaténés).\n\n\nnom = \"Sy\"\nprenom = \"Omar\"\nage = 42\nprint(prenom, nom, \"a\", age, \"ans.\")\n&gt;&gt;sortie\n\nOmar Sy a 42 ans.",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 0: Programmation Python",
      "Chapitre 1: Programme et variables"
    ]
  },
  {
    "objectID": "2gt/snt/0-programmation-python/1-programme-et-variables/index.html#la-fonction-input-récupérer-une-entrée",
    "href": "2gt/snt/0-programmation-python/1-programme-et-variables/index.html#la-fonction-input-récupérer-une-entrée",
    "title": "Chapitre 1: Programme et variables",
    "section": "4 La fonction input(): Récupérer une entrée",
    "text": "4 La fonction input(): Récupérer une entrée\nLa fonction input permet au programme de récupérer du texte en entrée.\nGénéralement, on récupère le texte entré par l’utilisateur dans un variable en le convertissant dans le type souhaité.\n\n# récupère une chaîne de caractère par défaut\nnom = input(\"Comment vous appelez-vous?\")\n# on converti la réponse de l'utilisateur en entier avec la fonction int\nage = int(input(\"Quel âge avez-vous?\"))\n# on converti la réponse de l'utilisateur en fottant avec la fonction float\ntaille = float(input(\"Donnez votre taille en mètre\"))\nLorsque le programme est lancé, l’utilisateur devra répondre aux questions posées, et on pourra utiliser ces réponses grâce aux variables nom, age et taille.",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 0: Programmation Python",
      "Chapitre 1: Programme et variables"
    ]
  },
  {
    "objectID": "2gt/snt/0-programmation-python/2-conditions/quiz/index.html",
    "href": "2gt/snt/0-programmation-python/2-conditions/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 0: Programmation Python",
      "Chapitre 2: Conditions",
      "Quiz"
    ]
  },
  {
    "objectID": "2gt/snt/0-programmation-python/2-conditions/exo/index.html",
    "href": "2gt/snt/0-programmation-python/2-conditions/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Aucun exercice pour l’instant.",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 0: Programmation Python",
      "Chapitre 2: Conditions",
      "Exercices"
    ]
  },
  {
    "objectID": "2gt/snt/1-les-donnees-structurees/quiz/index.html",
    "href": "2gt/snt/1-les-donnees-structurees/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 1: Les données structurées",
      "Quiz"
    ]
  },
  {
    "objectID": "2gt/snt/1-les-donnees-structurees/exo/index.html",
    "href": "2gt/snt/1-les-donnees-structurees/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Comme nous l’avons vu dans le cours, dans un ordinateur toute information est codée sous forme binaire.\nPour mieux comprendre comment cela fonctionne, nous allons étudier l’envoi simplifié d’un message textuel à travers internet.\nLe message est coupé en mots.\nChaque mot est constitué de deux parties:\n\nLe premier octet donne l’ordre du mot dans le message, car les mots peuvent être reçus dans un ordre différent de celui de l’émission. Il s’agit d’une métadonnée.\n\nle premier mot aura le numéro: 00000000\nle deuxième 00000001\nle troisième 00000010\nle quatrième 00000011\nle cinquième 00000100\n...\n\nLes octets suivants représentent les lettres du mot codé selon la norme ASCII, dont la table est donnée ci-dessous.\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nTable ASCII\n\n\nOn lit dans cette table que la représentation binaire du caractère a est 0110 0001 (7e ligne, 2e colonne).\nPar exemple le mot OK est codé: 01001111 01001011\n\n\nSupposons que nous souhaitions envoyer un message de deux mots: OK Computer, il y aura deux envois numérotés 00000000 et 00000001 avec le contenu des mots:\n       n°0      O        K\n    00000000 01001111 01001011 \n\n       n°1      C        o         m       p        u        t         e       r\n    00000001 01000011 01101111 01101101 01110000 01110101 01110100 01100101 01110010 \nAinsi ces deux messages peuvent être reçus dans n’importe quel ordre, ils seront correctement réordonnés grâce à la métadonnée.\n\n\nDécoder le message suivant (en anglais):\n\n00000100 01101001 01110011 \n\n00000110 01110100 01100001 01101011 01100101 01101110 00101110 \n\n00000011 01100101 01101100 01110011 01100101 \n\n00000000 01000010 01100101 \n\n00001000 01010111 01101001 01101100 01100100 01100101 \n\n00000111 00101101 00101101 01001111 01110011 01100011 01100001 01110010 \n\n00000101 01100001 01101100 01110010 01100101 01100001 01100100 01111001 \n\n00000010 01100101 01110110 01100101 01110010 01111001 01101111 01101110 01100101 \n\n00000001 01111001 01101111 01110101 01110010 01110011 01100101 01101100 01100110 00111011 \n\nLe problème de la table ASCII est qu’elle ne permet de coder que les caractères américains, il n’y a pas d’accents. Décoder le message suivant (en français):\n\n00000001 01110000 01101111 01110010 01110100 01100101 01110011 \n\n00000101 01101111 01110101 01110110 01100101 01110010 01110100 01100101 01110011 \n\n00000010 01100100 01100101 \n\n00000011 01101100 00100111 01100001 01110110 01100101 01101110 01101001 01110010 \n\n00000000 01001100 01100101 01110011 \n\n00000111 01100011 01100101 01110101 01111000 \n\n00001000 01110001 01110101 01101001 \n\n00001100 00101101 00101101 01000011 01101111 01101100 01110101 01100011 01101000 01100101 \n\n00000110 00111111 \n\n00001001 01110011 01100001 01110110 01100101 01101110 01110100 \n\n00000100 01110011 01101111 01101110 01110100 \n\n00001010 01101100 01100101 01110011 \n\n00001011 01110000 01101111 01110101 01110011 01110011 01100101 01110010 00101110",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 1: Les données structurées",
      "Exercices"
    ]
  },
  {
    "objectID": "2gt/snt/1-les-donnees-structurees/exo/index.html#codage-binaire-dun-message",
    "href": "2gt/snt/1-les-donnees-structurees/exo/index.html#codage-binaire-dun-message",
    "title": "Exercices",
    "section": "",
    "text": "Comme nous l’avons vu dans le cours, dans un ordinateur toute information est codée sous forme binaire.\nPour mieux comprendre comment cela fonctionne, nous allons étudier l’envoi simplifié d’un message textuel à travers internet.\nLe message est coupé en mots.\nChaque mot est constitué de deux parties:\n\nLe premier octet donne l’ordre du mot dans le message, car les mots peuvent être reçus dans un ordre différent de celui de l’émission. Il s’agit d’une métadonnée.\n\nle premier mot aura le numéro: 00000000\nle deuxième 00000001\nle troisième 00000010\nle quatrième 00000011\nle cinquième 00000100\n...\n\nLes octets suivants représentent les lettres du mot codé selon la norme ASCII, dont la table est donnée ci-dessous.\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nTable ASCII\n\n\nOn lit dans cette table que la représentation binaire du caractère a est 0110 0001 (7e ligne, 2e colonne).\nPar exemple le mot OK est codé: 01001111 01001011\n\n\nSupposons que nous souhaitions envoyer un message de deux mots: OK Computer, il y aura deux envois numérotés 00000000 et 00000001 avec le contenu des mots:\n       n°0      O        K\n    00000000 01001111 01001011 \n\n       n°1      C        o         m       p        u        t         e       r\n    00000001 01000011 01101111 01101101 01110000 01110101 01110100 01100101 01110010 \nAinsi ces deux messages peuvent être reçus dans n’importe quel ordre, ils seront correctement réordonnés grâce à la métadonnée.\n\n\nDécoder le message suivant (en anglais):\n\n00000100 01101001 01110011 \n\n00000110 01110100 01100001 01101011 01100101 01101110 00101110 \n\n00000011 01100101 01101100 01110011 01100101 \n\n00000000 01000010 01100101 \n\n00001000 01010111 01101001 01101100 01100100 01100101 \n\n00000111 00101101 00101101 01001111 01110011 01100011 01100001 01110010 \n\n00000101 01100001 01101100 01110010 01100101 01100001 01100100 01111001 \n\n00000010 01100101 01110110 01100101 01110010 01111001 01101111 01101110 01100101 \n\n00000001 01111001 01101111 01110101 01110010 01110011 01100101 01101100 01100110 00111011 \n\nLe problème de la table ASCII est qu’elle ne permet de coder que les caractères américains, il n’y a pas d’accents. Décoder le message suivant (en français):\n\n00000001 01110000 01101111 01110010 01110100 01100101 01110011 \n\n00000101 01101111 01110101 01110110 01100101 01110010 01110100 01100101 01110011 \n\n00000010 01100100 01100101 \n\n00000011 01101100 00100111 01100001 01110110 01100101 01101110 01101001 01110010 \n\n00000000 01001100 01100101 01110011 \n\n00000111 01100011 01100101 01110101 01111000 \n\n00001000 01110001 01110101 01101001 \n\n00001100 00101101 00101101 01000011 01101111 01101100 01110101 01100011 01101000 01100101 \n\n00000110 00111111 \n\n00001001 01110011 01100001 01110110 01100101 01101110 01110100 \n\n00000100 01110011 01101111 01101110 01110100 \n\n00001010 01101100 01100101 01110011 \n\n00001011 01110000 01101111 01110101 01110011 01110011 01100101 01110010 00101110",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 1: Les données structurées",
      "Exercices"
    ]
  },
  {
    "objectID": "2gt/snt/4-localisation-cartographie-et-mobilite/index.html",
    "href": "2gt/snt/4-localisation-cartographie-et-mobilite/index.html",
    "title": "Partie 4: Localisation, cartographie et mobilité",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\n\n\n\n\nGPS, Galileo\nDécrire le principe de fonctionnement de la géolocalisation.\n\n\nCartes numériques\nIdentifier les différentes couches d’information de GeoPortail pour extraire différents types de données. Contribuer à OpenStreetMap de façon collaborative.\n\n\nProtocole NMEA 0183\nDécoder une trame NMEA pour trouver des coordonnées géographiques.\n\n\nCalculs d’itinéraires\nUtiliser un logiciel pour calculer un itinéraire. Représenter un calcul d’itinéraire comme un problème sur un graphe.\n\n\nConfidentialité\nRégler les paramètres de confidentialité d’un téléphone pour partager ou non sa position.",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 4: Localisation, cartographie et mobilité"
    ]
  },
  {
    "objectID": "2gt/snt/4-localisation-cartographie-et-mobilite/index.html#le-fonctionnement-de-la-géolocalisation",
    "href": "2gt/snt/4-localisation-cartographie-et-mobilite/index.html#le-fonctionnement-de-la-géolocalisation",
    "title": "Partie 4: Localisation, cartographie et mobilité",
    "section": "1 Le fonctionnement de la géolocalisation",
    "text": "1 Le fonctionnement de la géolocalisation\nVidéo servie sans cookie via yewtu.be\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nFaire l’activité 2 P82-83 du manuel de Delagrave sur le fonctionnement de la géolocalisation.\n\n\n\n\n\n\nLa géolocalisation par satellite nécessite qu’il y en ait toujours au moins quatre satellites « visibles » par le terminal équipé d’une puce de géolocalisation(GPS/Galiléo).\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nla géolocalisation nécessite l'utilisation de plusieurs satellites pour déterminer la position d'un objet. Public domain via Wikimedia Commons\n\n\n\nPrincipe de trilatération\n\n\n\nLes coordonnées GPS sont déterminées en mesurant avec une grande précision les distances entre le terminal et trois satellites.\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nDeux cercles se coupent en deux points, il faut un troisième satellite pour déterminer lequel correspond à la position.©  CC BY 4.0 via Wikimedia Commons\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nUn signal de satellite met 1 vingtième de seconde pour se propager du satellite au terminal. En déduire la distance qui sépare le satellite et le terminal sachant que la vitesse de la lumière est de 300 mille km/s.",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 4: Localisation, cartographie et mobilité"
    ]
  },
  {
    "objectID": "2gt/snt/4-localisation-cartographie-et-mobilite/index.html#le-protocole-nmea",
    "href": "2gt/snt/4-localisation-cartographie-et-mobilite/index.html#le-protocole-nmea",
    "title": "Partie 4: Localisation, cartographie et mobilité",
    "section": "2 Le protocole NMEA",
    "text": "2 Le protocole NMEA\nLes informations de géolocalisation peuvent être regroupées au sein d’une trame afin d’être échangées avec d’autres appareils(Maritimes dans le cas de la NMEA).\n\nUne trame NMEA commence par $ et les informations de géolocalisation sont séparées par des virgules dans l’ordre suivant:\n\nType de trame\nHeure d’envoi de la trame au format HHMMSS.SSS (064036.289 -&gt; 06h40min36s289)\nLatitude au format degré minute ddmm.mmmmm\nHémisphère N/S\nLongitude au format degré minute ddmm.mmmmm\nHémisphère E/W\n…\nNombre de satellites utilisés\nPrécision horizontale.\nAltitude\n…\n\nLe format degré minute utilisé peut être converti comme ceci 2503.6319 = 25° 03.6319'\nqui se lit «25 degrés et 03,6319 minute » avec une minute = 1/60 ° soit:\n25+3,6319/60°=25,06053°\n25 + 3,6319/60 ° = 25,06053°\n\n\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\n\nDonner la coordonnée géographique(longitude, latitude, altitude) ainsi que le nombre de satellites et la précision correspondant à ces trames.\n$GPGGA,064036.289,4851.4934,N,0217.6563,E,1,4,3.2,61.5,M,,,,0000*0E\n\n$GPGGA,092751.000,4041.3544,N,7402.6724,W,1,8,1.0,4.5,M,55.3,M,,*75\nVisualiser ces coordonnées sur OpenStreetMap en ajustant l’ancre de l’URL suivante:\nhttps://www.openstreetmap.org/export#map=17/43.69864/7.24820\n\n17 correspond au facteur de zoom de la carte.\n43.69864 la latitude (négatif si Sud).\n7.24820 la longitude (négatif sur ouest)",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 4: Localisation, cartographie et mobilité"
    ]
  },
  {
    "objectID": "2gt/snt/4-localisation-cartographie-et-mobilite/index.html#calculs-ditinéraires-et-graphes",
    "href": "2gt/snt/4-localisation-cartographie-et-mobilite/index.html#calculs-ditinéraires-et-graphes",
    "title": "Partie 4: Localisation, cartographie et mobilité",
    "section": "3 Calculs d’itinéraires et graphes",
    "text": "3 Calculs d’itinéraires et graphes\nPour calculer un itinéraire entre deux villes, on modélise le problème sous forme de graphe.\n\n\ngraphe\n\n\n\nUn graphe est une représentation abstraite de liens appelés arêtes entre des objets appelés sommets.\n\n\n\n\nPrenons l’exemple du réseau routier du sud-est.\n\n\n\n\n\n\n\nOn peut le représenter sous forme de graphe de distance comme ceci:\n\n\n\n\nGraphe du réseau routier du sud-est\n\n\n\n\n\n\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nEn utilisant le graphe ci-dessus, répondre aux questions suivantes.\n\nDonner tous les chemins possibles permettant d’aller de Nice à Lyon.\nCalculer leurs distances et en déduire quelle est la route la plus courte.",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 4: Localisation, cartographie et mobilité"
    ]
  },
  {
    "objectID": "2gt/snt/4-localisation-cartographie-et-mobilite/exo/index.html",
    "href": "2gt/snt/4-localisation-cartographie-et-mobilite/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Aucun exercice pour l’instant.",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 4: Localisation, cartographie et mobilité",
      "Exercices"
    ]
  },
  {
    "objectID": "2gt/snt/4-localisation-cartographie-et-mobilite/quiz/index.html",
    "href": "2gt/snt/4-localisation-cartographie-et-mobilite/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 4: Localisation, cartographie et mobilité",
      "Quiz"
    ]
  },
  {
    "objectID": "2gt/snt/1-les-donnees-structurees/index.html",
    "href": "2gt/snt/1-les-donnees-structurees/index.html",
    "title": "Partie 1: Les données structurées",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\n        Contenus\n                  Capacités attendues\n\n\n\n\nDonnées\nDéfinir une donnée personnelle. Identifier les principaux formats et représentations de données.\n\n\nDonnées structurées\nIdentifier les différents descripteurs d’un objet. Distinguer la valeur d’une donnée de son descripteur. Utiliser un site de données ouvertes, pour sélectionner et récupérer des données.\n\n\nTraitement de données structurées\nRéaliser des opérations de recherche, filtre, tri ou calcul sur une ou plusieurs tables.\n\n\nMétadonnées\nRetrouver les métadonnées d’un fichier personnel.\n\n\nDonnées dans le nuage (cloud)\nUtiliser un support de stockage dans le nuage.\nPartager des fichiers, paramétrer des modes de synchronisation.\nIdentifier les principales causes de la consommation énergétique des centres de données ainsi que leur ordre de grandeur.",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 1: Les données structurées"
    ]
  },
  {
    "objectID": "2gt/snt/1-les-donnees-structurees/index.html#les-formats-de-données",
    "href": "2gt/snt/1-les-donnees-structurees/index.html#les-formats-de-données",
    "title": "Partie 1: Les données structurées",
    "section": "1 Les formats de données",
    "text": "1 Les formats de données\nEn informatique les données sont codées sous forme binaire(des 0 et des 1).\nLa façon de coder l’information dépend du type de fichier que l’on reconnait grâce à son extension.\n\n\nimage: ____________________________________\nvidéo: ____________________________________\ntexte: ____________________________________\naudio: ____________________________________\n…\n\n\nLa plupart des formats ajoutent des données pour décrire le fichier. Ce sont les métadonnées.\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nObserver les données et métadonnées d’une photo sur cette page:\nhttps://apps.lyceum.fr/photo-metadata/\n\nQue représentent les données de cette photo?\nDonner cinq métadonnées ajoutées à cette photo.\n\n\n\n\n\n\n\n\n\n\n\n\n\nEn plus: Comment compter en binaire?\n\n\n\n\n\n\nEn binaire 11=311 = 3 ! Étrange, pas tant que ça si on compte sur nos deux doigts.\n\n0\n1\n10\n11\n100 …\n\nOn a l’habitude de préciser la base de numération en indice 310=1123_{10}= 11_{2}.\n\n\n\n\n\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\n\nCompter jusqu’à 16 en binaire.\nQuelle est la valeur de 1111 1111, la plus grande valeur stockée sur un octet?\nÉcrire 64 en binaire.\n\n\n\n\n\n\n\n\n\n\n\n\n\nEn plus: L'enjeu des métadonnées\n\n\n\n\n\n\nLire cette vidéo du journal Le Monde.\nVidéo servie sans cookie via yewtu.be",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 1: Les données structurées"
    ]
  },
  {
    "objectID": "2gt/snt/1-les-donnees-structurees/index.html#quest-ce-quune-donnée-personnelle",
    "href": "2gt/snt/1-les-donnees-structurees/index.html#quest-ce-quune-donnée-personnelle",
    "title": "Partie 1: Les données structurées",
    "section": "2 Qu’est-ce qu’une donnée personnelle ?",
    "text": "2 Qu’est-ce qu’une donnée personnelle ?\n\n\nDonnée personnelle\n\n\n\nUne donnée personnelle correspond à toute information qui permet d’identifier directement ou indirectement une personne physique.\n\n\n\nCNIL\n\n\nNom,\nPrénom\nphotographie du visage\ndate et lieu de naissance\nadresse, adresse électronique, adresse IP\nnuméro de téléphone\nnuméro de sécurité sociale\nnuméro de carte bancaire\n\n\n\n\n\n\n\n\n\nEn plus\n\n\n\n\n\n\nEn droit français, les personnes morales(non physiques) sont les personnes agissant au sein d’une entreprise ou d’une association par exemple.",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 1: Les données structurées"
    ]
  },
  {
    "objectID": "2gt/snt/1-les-donnees-structurees/index.html#descripteurs-et-valeurs-dun-tableau-de-données",
    "href": "2gt/snt/1-les-donnees-structurees/index.html#descripteurs-et-valeurs-dun-tableau-de-données",
    "title": "Partie 1: Les données structurées",
    "section": "3 Descripteurs et valeurs d’un tableau de données",
    "text": "3 Descripteurs et valeurs d’un tableau de données\nDans un jeu de données, on distingue:\n\nle descripteur par exemple artiste qui est un champ commun à tout le jeu de données.\nde sa valeur Adele, Led Zeppelin… qui est propre à chaque ligne des données.\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nCopie d’écran de libreoffice calc avec des données sur des albums musicaux.",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 1: Les données structurées"
    ]
  },
  {
    "objectID": "2gt/snt/1-les-donnees-structurees/index.html#les-formats-de-données-structurées",
    "href": "2gt/snt/1-les-donnees-structurees/index.html#les-formats-de-données-structurées",
    "title": "Partie 1: Les données structurées",
    "section": "4 Les formats de données structurées",
    "text": "4 Les formats de données structurées\nLes données peuvent être stockées sous divers formats adaptés à leurs usages.\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nopendata.nicecotedazur.org\n\nLes formats de tableur spécifiques aux logiciels, par exemple:\n\nXLS: tableur Microsoft Excel.\nODS: tableur LibreOffice sous licence libre.\n\nLes formats textuels adaptés aux machines et indépendants du logiciel de traitement.\n\nCSV: données séparées par des virgules Coma Separated Values\n\n\nalbum,artiste,année,ventes\nThriller,Michael Jackson,1982,33M\nLed Zeppelin IV,Led Zeppelin,1971,23M\nLegend,Bob Marley & the Wailers,1984,15M\n25,Adele,2015,10M\n\n\n\nJSON: notation objet issue de javascript.\n\n\n{\"album\":\"Thriller\",\"artiste\":\"Michael Jackson\",\"année\":1982,\"ventes\":\"33M\"}\n{\"album\":\"Led Zeppelin IV\",\"artiste\":\"Led Zeppelin\",\"année\":1971,\"ventes\":\"23M\"}\n{\"album\":\"Legend\",\"artiste\":\"Bob Marley & the Wailers\",\"année\":1984,\"ventes\":\"15M\"}\n{\"album\":\"25\",\"artiste\":\"Adele\",\"année\":2015,\"ventes\":\"10M\"}\n\n\n\nXML: format de données avec balises eXtensible Markup Langage\n\n\n&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;data&gt;\n  &lt;row&gt;\n    &lt;album&gt;Thriller&lt;/album&gt;\n    &lt;artiste&gt;Michael Jackson&lt;/artiste&gt;\n    &lt;année&gt;1982&lt;/année&gt;\n    &lt;ventes&gt;33M&lt;/ventes&gt;\n  &lt;/row&gt;\n  &lt;row&gt;\n    &lt;album&gt;Led Zeppelin IV&lt;/album&gt;\n    &lt;artiste&gt;Led Zeppelin&lt;/artiste&gt;\n    &lt;année&gt;1971&lt;/année&gt;\n    &lt;ventes&gt;23M&lt;/ventes&gt;\n  &lt;/row&gt;\n  &lt;row&gt;\n    &lt;album&gt;Legend&lt;/album&gt;\n    &lt;artiste&gt;Bob Marley &amp; the Wailers&lt;/artiste&gt;\n    &lt;année&gt;1984&lt;/année&gt;\n    &lt;ventes&gt;15M&lt;/ventes&gt;\n  &lt;/row&gt;\n  &lt;row&gt;\n    &lt;album&gt;25&lt;/album&gt;\n    &lt;artiste&gt;Adele&lt;/artiste&gt;\n    &lt;année&gt;2015&lt;/année&gt;\n    &lt;ventes&gt;10M&lt;/ventes&gt;\n  &lt;/row&gt;\n&lt;/data&gt;",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 1: Les données structurées"
    ]
  },
  {
    "objectID": "2gt/snt/1-les-donnees-structurees/index.html#les-données-ouvertes",
    "href": "2gt/snt/1-les-donnees-structurees/index.html#les-données-ouvertes",
    "title": "Partie 1: Les données structurées",
    "section": "5 Les données ouvertes",
    "text": "5 Les données ouvertes\nÀ l’inverse des données collectées par certaines entreprises privées pour mieux connaitre leurs utilisateurs ou éventuellement faire un commerce de ces données, les données ouvertes sont librement accessibles grâce à une licence ouverte garantissant leur libre accès et leur réutilisation par tous, sans restriction technique, juridique ou financière.\n\n\nDonnées ouvertes\n\n\n\nLes données ouvertes ou open data sont des données numériques dont l’accès et l’usage sont laissés libres aux usagers.\n\n\n\n\n\nPlateforme ouverte des données publiques françaises: https://www.data.gouv.fr/fr/\nDonnées de la ville de Nice Côte d’azur: http://opendata.nicecotedazur.org/data/dataset\nDonnées structurées de Wikipédia: https://wikidata.org/\n…",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 1: Les données structurées"
    ]
  },
  {
    "objectID": "2gt/snt/1-les-donnees-structurees/index.html#informatique-en-nuage-le-cloud",
    "href": "2gt/snt/1-les-donnees-structurees/index.html#informatique-en-nuage-le-cloud",
    "title": "Partie 1: Les données structurées",
    "section": "6 Informatique en nuage: le cloud",
    "text": "6 Informatique en nuage: le cloud\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n©  CC BY-SA 3.0 via Wikimedia Commons\n\n\nInformatique en nuage\n\n\n\nRéseau d’ordinateurs permettant à leurs utilisateurs de partager et utiliser à distance diverses ressources informatiques comme des fichiers, des logiciels, des capacités de calcul et de la mémoire. Wiktionnaire\n\n\n\n\n\natrium: le cloud des lycées de la région sud.\n_________: __________________________________________\n_________: __________________________________________\n\n\n\n\n\n\n\n\n\nApplication: Partager des documents sur atrium\n\n\n\n\n\n\nÀ l’aide des tutoriels d’atrium, réaliser les actions suivantes:\n\nDéposer un document sur atrium\nPartager un document en réglant les paramètres de partage.\n\n\n\n\n\n\n\n\n\n\n\n\n\nApplication: Paramètres de synchronisation\n\n\n\n\n\n\nEn utilisant le document 2 P 22 du manuel de Delagrave:\n\nVérifier vos paramètres de synchronisation des données de votre téléphone.\nOù sont enregistrées ces données?\nÀ quoi peuvent-elles servir?\n\n\n\n\n\n\n\n\n\n\n\n\n\nApplication: La consommation de données des data-centers\n\n\n\n\n\n\nEn utilisant le document 4 P 23 du manuel de Delagrave:\nRédiger un court paragraphe expliquant quels sont les enjeux de la consommation énergétique des centres de données utilisés dans le cloud.",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 1: Les données structurées"
    ]
  },
  {
    "objectID": "2gt/snt/1-les-donnees-structurees/index.html#les-dictionnaires-en-python",
    "href": "2gt/snt/1-les-donnees-structurees/index.html#les-dictionnaires-en-python",
    "title": "Partie 1: Les données structurées",
    "section": "7 Les dictionnaires en Python",
    "text": "7 Les dictionnaires en Python\nEn python, une entrée peut-être représentée par un dictionnaire ou les couples \"descripteur\": valeur sont séparés par des virgules et entourées d’accolades.\nmatch = {'ligue': 'L1',\n         'saison': '2002-2003',\n         'jour': '1',\n         'date': '2002-08-03 20:00:00+02:00',\n         'lieu': 'Nice',\n         'equipe_domicile': 'Nice',\n         'score_domicile': '1',\n         'equipe_exterieur': 'Le Havre',\n         'score_exterieur': '2'}\nChaque valeur peut-être accédée grâce à son descripteur (ou clé):\nprint(match[\"lieu\"]) # affiche \"Nice\"\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nExpliquer simplement quelle donnée représente le dictionnaire match?",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 1: Les données structurées"
    ]
  },
  {
    "objectID": "2gt/snt/1-les-donnees-structurees/index.html#exploitation-dun-fichier-csv-en-python",
    "href": "2gt/snt/1-les-donnees-structurees/index.html#exploitation-dun-fichier-csv-en-python",
    "title": "Partie 1: Les données structurées",
    "section": "8 Exploitation d’un fichier csv en Python",
    "text": "8 Exploitation d’un fichier csv en Python\nLorsqu’on lit un fichier csv en Python, chaque ligne du fichier est automatiquement converti en dictionnaire.\nVoici par exemple comment afficher toutes les lignes d’un fichier appelé data.csv.\n# import du module csv de Python\nimport csv\n\n# Lecture de chaque ligne sous forme de dictionnaire\nwith open('data.csv') as csv_file:\n    reader = csv.DictReader(csv_file)\n    for ligne in reader:\n        # affiche le dictionnaire complet\n        print(ligne)\n        # ou on affiche qu'une valeur par ligne\n        # print(ligne[\"descripteur\"])\nVoici par exemple la sortie obtenue avec le fichier des musées de Nice:\n{\"Type d'établissement\": 'MUSEE', 'Identité': \"MUSÉE D'ART MODERNE ET D'ART CONTEMPORAIN MAMAC\", 'Adresse': 'Place Yves Klein 06300 Nice'}\n{\"Type d'établissement\": 'MUSEE', 'Identité': 'MUSÉE MATISSE', 'Adresse': '164 Avenue des Arènes de Cimiez, 06000 Nice'}\n{\"Type d'établissement\": 'MUSEE', 'Identité': 'PALAIS LASCARIS', 'Adresse': '15 rue Droite            06300 Nice'}\n{\"Type d'établissement\": 'MUSEE', 'Identité': \"MUSEUM D'HISTOIRE NATURELLE\", 'Adresse': '60 bd Risso           06300 Nice'}\n{\"Type d'établissement\": 'MUSEE', 'Identité': \"MUSEE D'ARCHEOLOGIE DE NICE CIMIEZ\", 'Adresse': '160, avenue des Arènes de Cimiez 06000 Nice'}\n{\"Type d'établissement\": 'MUSEE', 'Identité': \"MUSEE D'ARCHEOLOGIE DE NICE TERRA AMATA\", 'Adresse': '25 bd Carnot\\n06300 Nice'}\n{\"Type d'établissement\": 'MUSEE', 'Identité': 'MUSÉE DES BEAUX-ARTS JULES CHERET', 'Adresse': '33 av des Baumettes    06000 Nice'}\n{\"Type d'établissement\": 'MUSEE', 'Identité': \"MUSÉE INTERNATIONAL D'ART NAÏF ANATOLE JAKOVSKY\", 'Adresse': 'Château Sainte-Hélène 23, avenue de Fabron 06200 NICE'}\n{\"Type d'établissement\": 'MUSEE', 'Identité': 'MUSÉE DE LA PHOTOGRAPHIE CHARLES NEGRE', 'Adresse': '1 Place Pierre Gautier 06300 Nice'}\n{\"Type d'établissement\": 'MUSEE', 'Identité': 'VILLA MASSÉNA', 'Adresse': '65 rue de France   06000 Nice'}\n{\"Type d'établissement\": 'MUSEE', 'Identité': 'PRIEURE DU VIEUX LOGIS', 'Adresse': '59 Avenue de Saint-Barthélémy, 06100 Nice'}\n{\"Type d'établissement\": 'GALERIE ', 'Identité': 'GALERIE DE LA MARINE', 'Adresse': '59 quai des Etats-Unis  06300 Nice'}\n{\"Type d'établissement\": 'GALERIE ', 'Identité': 'GALERIE DES PONCHETTES', 'Adresse': '77 Quai des États-Unis, 06300 Nice'}\n{\"Type d'établissement\": '', 'Identité': 'MONASTERE DES FRANCISCAINS', 'Adresse': 'Place du Monastère - 06000 Nice'}",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 1: Les données structurées"
    ]
  },
  {
    "objectID": "2gt/snt/programme.html",
    "href": "2gt/snt/programme.html",
    "title": "Programme de SNT",
    "section": "",
    "text": "Ce document est une retranscription non officielle du programme de sciences numériques et technologie de seconde générale et technlogique applicable à la rentrée 2019. La version officielle est consultable sur eduscol."
  },
  {
    "objectID": "2gt/snt/programme.html#préambule",
    "href": "2gt/snt/programme.html#préambule",
    "title": "Programme de SNT",
    "section": "1 Préambule",
    "text": "1 Préambule\nL’enseignement de sciences numériques et technologie en classe de seconde a pour objet de permettre d’appréhender les principaux concepts des sciences numériques, mais également de permettre aux élèves, à partir d’un objet technologique, de comprendre le poids croissant du numérique et les enjeux qui en découlent. La numérisation généralisée des données, les nouvelles modalités de traitement ou de stockage et le développement récent d’algorithmes permettant de traiter de très grands volumes de données numériques constituent une réelle rupture dans la diffusion des technologies de l’information et de la communication. Cette révolution multiplie les impacts majeurs sur les pratiques humaines.\nPar exemple, l’actuel mobile multifonction est un objet technologique qui permet, comme le téléphone du XXe siècle, de téléphoner, mais qui sert également à bien d’autres activités : envoyer des messages, photographier, filmer, enregistrer, chercher et partager une information, écouter de la musique, regarder des vidéos, repérer où l’on se trouve, réserver des billets de train, vérifier son rythme cardiaque, programmer le chauffage de son appartement, etc. Ainsi, il est devenu une interface universelle d’accès à l’information et de commande d’autres objets.\nCette convergence d’activités encore récemment indépendantes est un phénomène généralisé lié au développement de la science informatique et des technologies associées, et notamment à leur intégration avec le domaine des télécommunications, à l’informatisation massive de domaines variés (communication, audiovisuel, transports, instrumentation scientifique médicale et technique, outillage numérique, objets connectés, etc.), et bien sûr à la création du réseau internet.\nMalgré leur grande variété, ces avancées se fondent toutes sur l’universalité et la flexibilité d’un petit nombre de concepts en interaction :\n\nles données, qui représentent sous une forme numérique unifiée des informations très diverses : textes, images, sons, mesures physiques, sommes d’argent, etc.;\nles algorithmes, qui spécifient de façon abstraite et précise des traitements à effectuer sur les données à partir d’opérations élémentaires;\nles langages, qui permettent de traduire les algorithmes abstraits en programmes textuels ou graphiques de façon à ce qu’ils soient exécutables par les machines;\nles machines, et leurs systèmes d’exploitation, qui permettent d’exécuter des programmes en enchaînant un grand nombre d’instructions simples, assurant la persistance des données par leur stockage, et de gérer les communications. On y inclut les objets connectés et les réseaux.\n\nÀ ces concepts s’ajoute un élément transversal : les interfaces qui permettent la communication avec les humains, la collecte des données et la commande des systèmes.\nL’enseignement de sciences numériques et technologie aide à mieux comprendre les enjeux scientifiques et sociétaux de la science informatique et de ses applications, à adopter un usage réfléchi et raisonné des technologies numériques dans la vie quotidienne et à se préparer aux mutations présentes et à venir de tous les métiers.\nLa réflexion sur les sciences numériques et sur leur relation à la technologie peut être conduite dans le cadre d’autres enseignements, que ce soit au travers de l’étude d’œuvres littéraires ou artistiques, de la réflexion sur les enjeux éthiques et politiques, d’analyses des conséquences de la révolution numérique sur l’évolution des métiers. Ces perspectives incitent le professeur en charge de l’enseignement de sciences numériques et technologie à collaborer avec ses collègues.\nCet enseignement s’inscrit dans le prolongement de l’enseignement d’algorithmique, d’informatique et de programmation dispensé au collège en mathématiques et en technologie. Il s’appuie sur la maîtrise des compétences numériques des élèves qui font l’objet d’une certification en fin de cycle 4 et en fin de cycle terminal. On approfondit les connaissances et compétences des élèves, notamment la pratique de la programmation à travers les activités liées aux thèmes du programme : internet; le Web; les réseaux sociaux; les données structurées et leur traitement; localisation, cartographie et mobilité; informatique embarquée et objets connectés; la photographie numérique.\nChacun des thèmes a vocation à être enseigné sur une durée d’environ quatre semaines. L’ordre dans lequel sont traités les thèmes est au libre choix des professeurs.\nLa présentation de chaque thème débute par des éléments de culture scientifique et technologique qui peuvent proposer des repères historiques, expliciter les concepts et décrire les impacts sur les pratiques humaines des technologies présentées. Elle se termine par un tableau qui circonscrit précisément les connaissances et les capacités attendues des élèves, puis d’une liste, non exhaustive ni impérative, d’activités qui peuvent être menées avec les élèves.\nCet enseignement a vocation à multiplier les occasions de mise en activité des élèves, sous des formes variées (exposés, travaux en groupe, mini-projets, productions individuelles ou collectives, etc.) qui permettent de développer des compétences transversales :\n\nfaire preuve d’autonomie, d’initiative et de créativité;\nprésenter un problème ou sa solution, développer une argumentation dans le cadre d’un débat;\ncoopérer au sein d’une équipe;\nrechercher de l’information, apprendre à utiliser des sources de qualité, partager des ressources;\nfaire un usage responsable et critique des sciences et technologies numériques.\n\nCet enseignement contribue au développement des compétences orales à travers notamment la pratique de l’argumentation. Celle-ci conduit à préciser sa pensée et à expliciter son raisonnement de manière à convaincre."
  },
  {
    "objectID": "2gt/snt/programme.html#notions-transversales-de-programmation",
    "href": "2gt/snt/programme.html#notions-transversales-de-programmation",
    "title": "Programme de SNT",
    "section": "2 Notions transversales de programmation",
    "text": "2 Notions transversales de programmation\n\n2.1 Présentation\nUn langage de programmation est nécessaire pour l’écriture des programmes : un langage simple d’usage, interprété, concis, libre et gratuit, multiplateforme, largement répandu, riche de bibliothèques adaptées aux thématiques étudiées et bénéficiant d’une vaste communauté d’auteurs dans le monde éducatif est nécessaire. Au moment de la conception de ce programme, le langage choisi est Python version 3 (ou supérieure).\n\n\n2.2 Contenus et capacités\n\n\n\nContenus\nCapacités attendues\n\n\n\n\nAffectations, variables\nSéquences\nInstructions conditionnelles\nBoucles bornées et non bornées\nDéfinitions et appels de fonctions\nÉcrire et développer des programmes pour répondre à des problèmes et modéliser des phénomènes physiques, économiques et sociaux.\n\n\n\n\n\n\nExemples d’activités\n\n\n\n\nIllustrer ces notions par des activités liées aux différents thèmes du programme.\n\n\n\nAu collège (cycle 4), les élèves ont découvert et pratiqué les éléments fondamentaux d’algorithmique et de programmation. Le programme de seconde de mathématiques approfondit l’apprentissage de la programmation. Une coordination avec le cours de mathématiques est donc nécessaire pour déterminer à quel moment des éléments de programmation peuvent être utilisés en sciences numériques et technologie."
  },
  {
    "objectID": "2gt/snt/programme.html#thématiques-du-programme",
    "href": "2gt/snt/programme.html#thématiques-du-programme",
    "title": "Programme de SNT",
    "section": "3 Thématiques du programme",
    "text": "3 Thématiques du programme\n\n3.1 Internet\n\n3.1.1 Présentation\nIntroduction\nGrâce à sa souplesse et à son universalité, internet est devenu le moyen de communication principal entre les hommes et avec les machines.\nRepères historiques\nDès les années cinquante, les ordinateurs ont été mis en réseau pour échanger des informations, mais de façon très liée aux constructeurs d’ordinateurs ou aux opérateurs téléphoniques. Les réseaux généraux indépendants des constructeurs sont nés aux États-Unis avec ArpaNet (1970) et en France avec Cyclades (1971). Cet effort a culminé avec internet, né en 1983.\nLe protocole TCP/IP\nInternet est défini par le protocole IP (Internet Protocol), ensemble de normes qui permettent d’identifier et de nommer de façon uniforme tous les ordinateurs ou objets qui lui sont connectés. IP est accompagné de protocoles de transmission pour transférer l’information par paquets, le principal étant TCP/IP (Transmission Control Protocol). De nature logicielle, internet s’appuie sur une grande variété de réseaux physiques où IP est implémenté. Il uniformise l’accès à tous les ordinateurs, les téléphones et les objets connectés.\nLes données et l’information\nInternet manipule deux types d’information : les contenus envoyés et les adresses du destinataire et de l’émetteur. Ces deux types d’information sont regroupés dans des paquets de taille fixe, de façon uniforme et indépendante du type de données transportées : texte, images, sons, vidéos, etc. Les adresses sont numériques et hiérarchiques mais l’utilisateur connaît surtout des adresses symboliques normalisées, comme wikipedia.fr. Le système DNS (Domain Name System) transforme une adresse symbolique en adresse numérique. Il est réalisé par un grand nombre d’ordinateurs répartis sur le réseau et constamment mis à jour.\nLes algorithmes et les programmes\nLe principal algorithme d’internet est le routage des paquets de leurs émetteurs vers leurs destinataires. Il est effectué par des machines appelées routeurs, qui échangent en permanence avec leurs voisins pour établir une carte locale de ce qu’ils voient du réseau. Chaque paquet transite par une série de routeurs, chacun l’envoyant à un autre routeur selon sa carte locale et la destination prévue. Les routeurs s’ajustent en permanence et de proche en proche quand on les ajoute au réseau ou quand un routeur voisin disparaît. Il n’y a plus besoin de carte globale, ce qui permet le routage à grande échelle.\nLors du routage, un paquet peut ne pas arriver pour deux raisons : une panne matérielle d’une ligne ou d’un routeur, ou sa destruction. Chaque paquet contient l’information d’un nombre maximal de routeurs à traverser : pour ne pas encombrer le réseau, il est détruit si ce nombre est atteint. C’est le protocole TCP qui fiabilise la communication en redemandant les paquets manquants. Il garantit que tout paquet finira par arriver, sauf panne matérielle incontournable. TCP réordonne aussi les paquets arrivés dans le désordre et diminue la congestion du réseau en gérant au mieux les redemandes. Mais ni internet ni TCP ne possèdent de garantie temporelle d’arrivée des paquets, ce qui nuit à la qualité du streaming du son ou des vidéos et de la téléconférence. En effet, dans une vidéo, on peut perdre une image isolée, mais pas le fil du temps.\nD’autres protocoles s’appuient sur ceux d’internet, par exemple les protocoles du Web (HTTP et HTTPS) et le protocole NTP (Network Time Protocol) qui permet de synchroniser finement les heures des ordinateurs et objets connectés.\nLes machines\nRéseau mondial, internet fonctionne à l’aide de routeurs, de lignes de transmissions à très hauts débits (fibres optiques) entre routeurs, de réseaux de téléphonie mobile, et de réseaux locaux. Ses protocoles étant logiciels, il peut s’appuyer sur n’importe quel réseau physique qui les implémente : 4G, Ethernet, ADSL, Wi-Fi, Bluetooth, etc. TCP/IP n’est pas implémenté dans l’infrastructure, mais dans chacun des ordinateurs connectés, et un serveur DNS est aussi un ordinateur connecté. Des mécanismes complexes assurent la continuité de la connexion, par exemple pour passer sans interruption de téléphonie 4G au Wi-Fi, ou son ubiquité, par exemple pour passer de façon invisible d’antenne à antenne avec un téléphone portable quand on voyage.\nDans les réseaux pair-à-pair s’appuyant sur internet et souvent utilisé pour le transport de vidéos, chaque ordinateur sert à la fois d’émetteur et de récepteur.\nImpacts sur les pratiques humaines\nInternet a fait progressivement disparaître beaucoup des moyens de communication précédents : télégramme, télex, le courrier postal pour une bonne partie, et bientôt le téléphone fixe grâce à VoIP (voix sur IP). Son trafic prévu pour 2021 est de 3 300 milliards de milliards d’octets (3,3×10213,3 \\times 10^{21} octets).\nInternet a aussi ses problèmes : absence de garantie temporelle sur l’arrivée des paquets et possibilité d’attaques par saturation en envoyant un très grand nombre de messages à un site donné, pour y provoquer un déni de service.\nLa neutralité du Net, présente dès l’origine du réseau, exprime l’idée que les routeurs doivent transmettre les paquets indépendamment du type de leur contenu : texte, vidéo, etc. Mais elle est constamment remise en cause par certains lobbies industriels.\n\n\n3.1.2 Contenus et capacités\n\n\n\nContenus\nCapacités attendues\n\n\n\n\nProtocole TCP/IP : paquets, routage des paquets\nDistinguer le rôle des protocoles IP et TCP.\nCaractériser les principes du routage et ses limites.\nDistinguer la fiabilité de transmission et l’absence de garantie temporelle.\n\n\nAdresses symboliques et serveurs DNS\nSur des exemples réels, retrouver une adresse IP à partir d’une adresse symbolique et inversement.\n\n\nRéseaux pair-à-pair\nDécrire l’intérêt des réseaux pair-à-pair ainsi que les usages illicites qu’on peut en faire.\n\n\nIndépendance d’internet par rapport au réseau physique\nCaractériser quelques types de réseaux physiques : obsolètes ou actuels, rapides ou lents, filaires ou non.\nCaractériser l’ordre de grandeur du trafic de données sur internet et son évolution.\n\n\n\n\n\n\nExemples d’activités\n\n\n\n\n\nIllustrer le fonctionnement du routage et de TCP par des activités débranchées ou à l’aide de logiciels dédiés, en tenant compte de la destruction de paquets.\nDéterminer l’adresse IP d’un équipement et l’adresse du DNS sur un réseau.\nAnalyser son réseau local pour observer ce qui y est connecté.\nSuivre le chemin d’un courriel en utilisant une commande du protocole IP.\n\n\n\n\n\n\n\n3.2 Le Web\n\n3.2.1 Présentation\nIntroduction\nLe Web (toile ou réseau) désigne un système donnant accès à un ensemble de données (page, image, son, vidéo) reliées par des liens hypertextes et accessibles sur le réseau internet.\nRepères historiques\n\n1965 : invention et programmation du concept d’hypertexte par Ted Nelson;\n1989 : naissance au CERN par Tim Berners Lee;\n1993 : mise dans le domaine public, disponibilité du premier navigateur Mosaic;\n1995 : mise à disposition de technologies pour le développement de site Web interactif (langage JavaScript) et dynamique (langage PHP);\n2001 : standardisation des pages grâce au DOM (Document Object Model);\n2010 : mise à disposition de technologies pour le développement d’applications sur mobiles.\n\nNormalisation de la présentation de l’information\nSur le Web, les textes, photos, vidéos, graphiques, sons, programmes sont exprimés et assemblés dans divers formats normalisés par un consortium mondial (W3C : World Wide Web Consortium), ce qui permet une circulation standardisée de ces informations.\nLes pages Web sont écrites dans le langage de balises HTML (HypertextMarkupLanguage). Leur style graphique est défini dans le langage CSS (Cascading Style Sheets).\nLes pages ont une adresse unique, nommée URL (Uniform Ressource Locator). Elles sont accessibles via internet en utilisant le protocole HTTP (Hypertext Transfer Protocol) ou sa version sécurisée HTTPS qui crypte les échanges. L’affichage des pages est réalisé chez l’utilisateur par un programme appelé navigateur.\nUn hypertexte est un texte augmenté de renvois automatiques à des textes, des images ou des sons. Initialement, un hypertexte se restreignait à la mémoire d’un seul ordinateur. Dans une page Web, ce renvoi se fait sur n’importe quelle machine du réseau internet, par le truchement de l’adresse de la page Web du texte (URL) auquel il fait référence. La toile d’araignée construite par les liens peut être représentée sous la forme d’un graphe qui matérialise la structure du Web.\nMoteurs de recherche\nLes moteurs de recherche permettent de trouver des informations dans des pages dont on ne connaît pas l’adresse, voire dont on ignore l’existence. La méthode de recherche appelée référencement naturel se décompose en trois grandes activités, réalisées par les moteurs de recherche : (1) le parcours automatique du Web pour collecter les pages visitées (aspiration des pages Web effectuée par des robots); (2) l’analyse du contenu des pages et leur indexation sur les mots qu’elles contiennent (constitution d’un annuaire inversé qui associe à chaque terme les URL des pages où il apparaît); (3) la troisième activité, réalisée à chaque fois qu’un internaute fait une requête, construit une liste ordonnée des pages (classement) comportant les mots clés de la requête. Leur ordre dépend notamment de leur popularité (principe des liens), de leur pertinence (aux mots de la requête), et de l’ordre des termes de la requête.\nLes concepteurs de site Web peuvent améliorer le référencement de leurs pages en choisissant bien les mots et en les plaçant à des endroits stratégiques dans les pages.\nInteraction client/serveur\nLe Web s’appuie sur le dialogue entre clients et serveurs. L’interaction est à l’initiative des clients (les applications qui se connectent au Web, dont les navigateurs), qui envoient des requêtes HTTP aux serveurs. Ces derniers renvoient leur résultat : des pages qu’ils ont stockées ou qu’ils créent dynamiquement en fonction de la requête formulée. Les pages reçues par les clients peuvent contenir des codes exécutables (souvent en JavaScript) qui permettent aux clients d’effectuer des traitements en accédant aux ressources de son ordinateur et en interagissant avec les serveurs.\nLes applications peuvent être paramétrées pour autoriser ou interdire l’accès à des ressources locales aux programmes téléchargés par les pages.\nSécurité et confidentialité\nEn formulant des requêtes sur des sites Web dynamiques et en laissant des programmes s’exécuter sur sa machine, l’utilisateur prend des risques : il peut communiquer des informations personnelles à son insu à des serveurs qui en gardent une trace, à distance ou localement par des cookies, ou encore charger des pages contenant des programmes malveillants, par exemple permettant d’espionner en continu les actions de l’utilisateur. Par ailleurs, un navigateur peut garder un historique de toutes les interactions, et le laisser accessible aux sites connectés. L’utilisateur peut utiliser des services qui s’engagent à ne pas garder de traces de ses interactions, par exemple certains moteurs de recherche. Il peut aussi paramétrer son navigateur de façon à ce que celui-ci n’enregistre pas d’historique des interactions. De fausses pages peuvent encore être utilisées pour l’hameçonnage des utilisateurs. Un nom de lien pouvant cacher une adresse Web malveillante, il faut examiner cette adresse avant de l’activer par un clic.\nImpacts sur les pratiques humaines\nDans l’histoire de la communication, le Web est une révolution : il a ouvert à tous la possibilité et le droit de publier; il permet une coopération d’une nature nouvelle entre individus et entre organisations : commerce en ligne, création et distribution de logiciels libres multi-auteurs, création d’encyclopédies mises à jour en permanence, etc.; il devient universel pour communiquer avec les objets connectés.\nLe Web permet aussi de diffuser toutes sortes d’informations dont ni la qualité, ni la pertinence, ni la véracité ne sont garanties et dont la vérification des sources n’est pas toujours facile. Il conserve des informations, parfois personnelles, accessibles partout sur de longues durées sans qu’il soit facile de les effacer, ce qui pose la question du droit à l’oubli. Il permet une exploitation de ses données, dont les conséquences sociétales sont encore difficiles à estimer : recommandation à des fins commerciales, bulles informationnelles, etc. En particulier, des moteurs de recherche permettent à certains sites d’acquérir de la visibilité sur la première page des résultats de recherche en achetant de la publicité qui apparaîtra parmi les liens promotionnels.\n\n\n3.2.2 Contenus et capacités\n\n\n\nContenus\nCapacités attendues\n\n\n\n\nRepères historiques\nConnaître les étapes du développement du Web.\n\n\nNotions juridiques\nConnaître certaines notions juridiques (licence, droit d’auteur, droit d’usage, valeur d’un bien).\n\n\nHypertexte\nMaîtriser les renvois d’un texte à différents contenus.\n\n\nLangages HTML et CSS\nDistinguer ce qui relève du contenu d’une page et de son style de présentation. Étudier et modifier une page HTML simple.\n\n\nURL\nDécomposer l’URL d’une page. Reconnaître les pages sécurisées.\n\n\nRequête HTTP\nDécomposer le contenu d’une requête HTTP et identifier les paramètres passés.\n\n\nModèle client/serveur\nInspecter le code d’une page hébergée par un serveur et distinguer ce qui est exécuté par le client et par le serveur.\n\n\nMoteurs de recherche : principes et usages\nMener une analyse critique des résultats fournis par un moteur de recherche. Comprendre les enjeux de la publication d’informations.\n\n\nParamètres de sécurité d’un navigateur\nMaîtriser les réglages les plus importants concernant la gestion des cookies, la sécurité et la confidentialité d’un navigateur. Sécuriser sa navigation en ligne et analyser les pages et fichiers.\n\n\n\n\n\n\nExemples d’activités\n\n\n\n\n\nConstruire une page Web simple contenant des liens hypertextes, la mettre en ligne.\nModifier une page Web existante, changer la mise en forme d’une page en modifiant son CSS. Insérer un lien dans une page Web.\nComparer les paramétrages de différents navigateurs.\nUtiliser plusieurs moteurs de recherche, comparer les résultats et s’interroger sur la pertinence des classements.\nRéaliser à la main l’indexation de quelques textes sur quelques mots puis choisir les textes correspondant à une requête.\nCalculer la popularité d’une page à l’aide d’un graphe simple puis programmer l’algorithme.\nParamétrer un navigateur de manière qu’il interdise l’exécution d’un programme sur le client.\nComparer les politiques des moteurs de recherche quant à la conservation des informations sur les utilisateurs.\nEffacer l’historique du navigateur, consulter les cookies, paramétrer le navigateur afin qu’il ne garde pas de traces.\nUtiliser un outil de visualisation tel que Cookieviz pour mesurer l’impact des cookies et des traqueurs lors d’une navigation.\nRégler les paramètres de confidentialité dans son navigateur ou dans un service en ligne.\n\n\n\n\n\n\n\n3.3 Les réseaux sociaux\n\n3.3.1 Présentation\nIntroduction\nLes réseaux sociaux sont des applications basées sur les technologies du Web qui offrent un service de mise en relation d’internautes pour ainsi développer des communautés d’intérêts.\nRepères historiques\n\n1995 : Classmates est l’un des premiers réseaux sociaux qui permettent aux étudiants de rester en relation;\n2003 : apparition de Myspace, aujourd’hui en perte de vitesse, et de LinkedIn (racheté depuis par Microsoft), à vocation professionnelle;\n2004 : apparition de Facebook, d’abord réservé aux étudiants de l’université Harvard, puis ouvert au grand public en 2006;\n2006 : apparition de Twitter, qui permet l’échange de courts messages, limités au départ à 140 puis à 280 caractères (on parle de microblogage);\n2009 : lancement de la messagerie instantanée WhatsApp (rachetée depuis par Facebook) qui se substitue à l’utilisation des SMS et MMS chez beaucoup d’utilisateurs;\n2010 : arrivée d’Instagram (racheté depuis par Facebook), qui permet le partage de photos et de vidéos;\n2011 : début de Snapchat qui permet, sur plateformes mobiles, le partage de photos et de vidéos, avec une limitation de durée;\n2018 : on estime à 3,2 milliards le nombre d’utilisateurs actifs des réseaux sociaux.\n\nEn 2018, les réseaux sociaux utilisés en France sont états-uniens, toutefois il en existe bien d’autres : en Chine, par exemple, apparaît en 2009 l’application de microblogage Weibo avec plus de 350 millions d’utilisateurs actifs en 2018; en 2012 naît l’application de messagerie Weixin (développée par Tencent) qui compte en 2018 plus d’un milliard de comptes utilisateurs.\nLes données et l’information\nLes différents réseaux sociaux permettent l’échange d’informations de natures différentes : textes, photos, vidéos. Certains limitent strictement la taille des informations, d’autres autorisent la publication, mais de façon limitée dans le temps. Certains permettent l’adjonction d’applications tierces (plug-ins) qui peuvent ajouter des fonctionnalités supplémentaires.\nToutes les applications de réseautage social utilisent d’importantes bases de données qui gèrent leurs utilisateurs, l’ensemble des données qu’ils partagent, mais aussi celles qu’ils consentent à fournir (sans toujours le savoir), y compris sur leur vie personnelle.\nLes algorithmes et les programmes\nDe très nombreux algorithmes sont mis en œuvre par les applications de réseautage social.\nToutes les applications s’appuient sur des services de mise en relation avec des internautes membres du réseau, relations ou amis communs : des algorithmes opérant sur les graphes et sur les bases de données sont au cœur de ces services.\nÀ l’aide d’algorithmes de recommandation, les réseaux sociaux suggèrent aux utilisateurs des amis, des contenus, des annonces promotionnelles. Ils permettent aussi aux plateformes sociales d’étudier les comportements de leurs utilisateurs à des fins commerciales, politiques ou d’amélioration du service.\nImpacts sur les pratiques humaines\nLe développement des réseaux sociaux introduit un nouveau type de liens sur le Web, qui ne relève pas de l’hypertexte : il s’agit de l’abonnement à des relations/des amis et de la possibilité de recommander de l’information en fonction du réseau ainsi constitué.\nL’objectif annoncé des applications de réseautage social est de mettre les individus en relation les uns avec les autres. Quelle est la réalité? L’expérience de Milgram (1967) semble indiquer la constitution de «petits mondes» où chacun est au plus à six liens de distance d’un autre. Peut-on éviter les phénomènes de communautés liés à des recommandations se renforçant les unes les autres pouvant aller jusqu’à un appauvrissement de la pensée critique? Ces questions font référence au concept de bonding (renforcement de liens existants au sein d’un même groupe) versus bridging (construction de nouveaux liens non redondants).\nLes affaires de fuite de données personnelles mettent en avant les questions liées aux modèles économiques des applications de réseautage social symbolisés par le slogan « quand c’est gratuit, c’est vous le produit ».\nLes réseaux sociaux peuvent être le support d’une cyberviolence, par le biais de photographies partagées sans consentement ou impossibles à retirer, par la diffusion de fausses nouvelles, de dénonciations ou de calomnies. Des pratiques, des outils et des services permettent de se protéger, lutter et dénoncer de tels agissements.\nSensibilisés au collège dans le cadre de l’éducation aux médias et à l’information, les lycéens doivent acquérir les démarches nécessaires pour se protéger et une conduite appropriée dans le cadre d’usages scolaires pour se préparer au monde professionnel. Les espaces numériques de travail (ENT) constituent le cadre privilégié de cet apprentissage.\n\n\n3.3.2 Contenus et capacités\n\n\n\nContenus\nCapacités attendues\n\n\n\n\nIdentité numérique, e-réputation, identification, authentification\nConnaître les principaux concepts liés à l’usage des réseaux sociaux.\n\n\nRéseaux sociaux existants\nDistinguer plusieurs réseaux sociaux selon leurs caractéristiques, y compris un ordre de grandeur de leurs nombres d’abonnés.\nParamétrer des abonnements pour assurer la confidentialité de données personnelles.\n\n\nModèle économique des réseaux sociaux\nIdentifier les sources de revenus des entreprises de réseautage social.\n\n\nRayon, diamètre et centre d’un graphe\nNotion de « petit monde »\nExpérience de Milgram\nDéterminer ces caractéristiques sur des graphes simples.\nDécrire comment l’information présentée par les réseaux sociaux est conditionnée par le choix préalable de ses amis.\n\n\nCyberviolence\nConnaître les dispositions de l’article 222-33-2-2 du code pénal.\nConnaître les différentes formes de cyberviolence (harcèlement, discrimination, sexting…) et les ressources disponibles pour lutter contre la cyberviolence.\n\n\n\n\n\n\nExemples d’activités\n\n\n\n\n\nConstruire ou utiliser une représentation du graphe des relations d’un utilisateur. S’appuyer sur la densité des liens pour identifier des groupes, des communautés.\nSur des exemples de graphes simples, en informatique débranchée, étudier les notions de rayon, diamètre et centre d’un graphe, de manière à illustrer la notion de « petit monde ».\nComparer les interfaces et fonctionnalités de différents réseaux sociaux.\nDresser un comparatif des formats de données, des possibilités d’échange ou d’approbation (bouton like), de la persistance des données entre différents réseaux sociaux.\nAnalyser les paramètres d’utilisation d’un réseau social. Analyser les autorisations données aux applications tierces.\nDiscuter des garanties d’authenticité des comptes utilisateurs ou des images.\nLire et expliquer les conditions générales d’utilisation d’un réseau social.\nConsulter le site nonauharcelement.education.gouv.fr.\n\n\n\n\n\n\n\n3.4 Les données structurées et leur traitement\n\n3.4.1 Présentation\nIntroduction\nLes données constituent la matière première de toute activité numérique. Afin de permettre leur réutilisation, il est nécessaire de les conserver de manière persistante. Les structurer correctement garantit que l’on puisse les exploiter facilement pour produire de l’information. Cependant, les données non structurées peuvent aussi être exploitées, par exemple par les moteurs de recherche.\nRepères historiques\n\n1930 : utilisation des cartes perforées, premier support de stockage de données;\n1956 : invention du disque dur permettant de stocker de plus grandes quantités de données, avec un accès de plus en plus rapide;\n1970 : invention du modèle relationnel (E. L. Codd) pour la structuration et l’indexation des bases de données;\n1979 : création du premier tableur, VisiCalc;\n2009 : Open Government Initiative du président Obama;\n2013 : charte du G8 pour l’ouverture des données publiques.\n\nLes données et l’information\nUne donnée est une valeur décrivant un objet, une personne, un événement digne d’intérêt pour celui qui choisit de la conserver. Par exemple, le numéro de téléphone d’un contact est une donnée. Plusieurs descripteurs peuvent être utiles pour décrire un même objet (par exemple des descripteurs permettant de caractériser un contact : nom, prénom, adresse et numéro de téléphone).\nUne collection regroupe des objets partageant les mêmes descripteurs (par exemple, la collection des contacts d’un carnet d’adresses). La structure de table permet de présenter une collection : les objets en ligne, les descripteurs en colonne et les données à l’intersection. Les données sont alors dites structurées.\nPour assurer la persistance des données, ces dernières sont stockées dans des fichiers. Le format CSV (Comma Separated Values, les données avec des séparateurs) est un format de fichier simple permettant d’enregistrer une table. À tout fichier sont associées des métadonnées qui permettent d’en décrire le contenu. Ces métadonnées varient selon le type de fichier (date et coordonnées de géolocalisation d’une photographie, auteur et titre d’un fichier texte, etc.).\nLes données comme les métadonnées peuvent être capturées et enregistrées par un dispositif matériel ou bien renseignées par un humain. Elles sont de différents types (numériques, textes, dates) et peuvent être traitées différemment (calcul, tri, affichage, etc.).\nCertaines collections typiques sont utilisées dans des applications et des formats standardisés leur sont associés : par exemple le format ouvert vCard (extension .vfc) pour une collection de contacts.\nUne base de données regroupe plusieurs collections de données reliées entre elles. Par exemple, la base de données d’une bibliothèque conserve les données sur les livres, les abonnés et les emprunts effectués.\nLes algorithmes et les programmes\nLa recherche dans des données structurées a d’abord été effectuée selon une indexation préalable faite par l’homme. Des algorithmes ont ensuite permis d’automatiser l’indexation à partir de textes, d’images ou de sons.\nUne table de données peut faire l’objet de différentes opérations : rechercher une information précise dans la collection, trier la collection sur une ou plusieurs propriétés, filtrer la collection selon un ou plusieurs tests sur les valeurs des descripteurs, effectuer des calculs, mettre en forme les informations produites pour une visualisation par les utilisateurs.\nLa recherche dans une base comportant plusieurs collections peut aussi croiser des collections différentes sur un descripteur commun ou comparable.\nLes machines\nLes fichiers de données sont stockés sur des supports de stockage : internes (disque dur ou SSD) ou externes (disque, clé USB), locaux ou distants (cloud). Ces supports pouvant subir des dommages entraînant des altérations ou des destructions des données, il est nécessaire de réaliser des sauvegardes.\nDes recherches dans les fichiers se font à l’intérieur même des ordinateurs, soit sur la base de leurs métadonnées, soit sur la base d’une indexation (à la manière des moteurs de recherche sur le Web).\nLes grandes bases de données sont souvent implémentées sur des serveurs dédiés (machines puissantes avec une importante capacité de stockage sur disques). Ces centres de données doivent être alimentés en électricité et maintenus à des températures suffisamment basses pour fonctionner correctement.\nImpacts sur les pratiques humaines\nL’évolution des capacités de stockage, de traitement et de diffusion des données fait qu’on assiste aujourd’hui à un phénomène de surabondance des données et au développement de nouveaux algorithmes capables de les exploiter.\nL’exploitation de données massives (Big Data) est en plein essor dans des domaines aussi variés que les sciences, la santé ou encore l’économie. Les conséquences sociétales sont nombreuses tant en termes de démocratie, de surveillance de masse ou encore d’exploitation des données personnelles.\nCertaines de ces données sont dites ouvertes (OpenData), leurs producteurs considérant qu’il s’agit d’un bien commun. Mais on assiste aussi au développement d’un marché de la donnée où des entreprises collectent et revendent des données sans transparence pour les usagers. D’où l’importance d’un cadre juridique permettant de protéger les usagers, préoccupation à laquelle répond le règlement général sur la protection des données (RGPD).\nLes centres de données (datacenter) stockent des serveurs mettant à disposition les données et des applications les exploitant. Leur fonctionnement nécessite des ressources (en eau pour le refroidissement des machines, en électricité pour leur fonctionnement, en métaux rares pour leur fabrication) et génère de la pollution (manipulation de substances dangereuses lors de la fabrication, de la destruction ou du recyclage). De ce fait, les usages numériques doivent être pensés de façon à limiter la transformation des écosystèmes (notamment le réchauffement climatique) et à protéger la santé humaine.\n\n\n3.4.2 Contenus et capacités\n\n\n\nContenus\nCapacités attendues\n\n\n\n\nDonnées\nDéfinir une donnée personnelle. Identifier les principaux formats et représentations de données.\n\n\nDonnées structurées\nIdentifier les différents descripteurs d’un objet. Distinguer la valeur d’une donnée de son descripteur. Utiliser un site de données ouvertes, pour sélectionner et récupérer des données.\n\n\nTraitement de données structurées\nRéaliser des opérations de recherche, filtre, tri ou calcul sur une ou plusieurs tables.\n\n\nMétadonnées\nRetrouver les métadonnées d’un fichier personnel.\n\n\nDonnées dans le nuage (cloud)\nUtiliser un support de stockage dans le nuage.\nPartager des fichiers, paramétrer des modes de synchronisation.\nIdentifier les principales causes de la consommation énergétique des centres de données ainsi que leur ordre de grandeur.\n\n\n\n\n\n\nExemples d’activités\n\n\n\n\n\nConsulter les métadonnées de fichiers correspondant à des informations différentes et repérer celles collectées par un dispositif et celles renseignées par l’utilisateur.\nTélécharger des données ouvertes (sous forme d’un fichier au format CSV avec les métadonnées associées), observer les différences de traitements possibles selon le logiciel choisi pour lire le fichier : programme Python, tableur, éditeur de textes ou encore outils spécialisés en ligne.\nExplorer les données d’un fichier CSV à l’aide d’opérations de tri et de filtre, effectuer des calculs sur ces données, réaliser une visualisation graphique des données.\nÀ partir de deux tables de données ayant en commun un descripteur, montrer l’intérêt des deux tables pour éviter les redondances et les anomalies d’insertion et de suppression, réaliser un croisement des données permettant d’obtenir une nouvelle information.\nIllustrer, par des exemples simples, la consommation énergétique induite par le traitement et le stockage des données.\n\n\n\n\n\n\n\n3.5 Localisation, cartographie et mobilité\n\n3.5.1 Présentation\nIntroduction\nLa cartographie est essentielle pour beaucoup d’activités : agriculture, urbanisme, transports, loisirs, etc. Elle a été révolutionnée par l’arrivée des cartes numériques accessibles depuis les ordinateurs, tablettes et téléphones, bien plus souples à l’usage que les cartes papier.\nLes cartes numériques rassemblent toutes les échelles et permettent de montrer différents aspects de la région visualisée sur une seule carte. Les algorithmes de recherche permettent de retrouver sur la carte les endroits en donnant simplement leur nom, et de calculer des itinéraires entre points selon des modes de transports variés.\nRepères historiques\nLes cartes ont été systématiquement numérisées à la fin du XXe siècle.\nLe principal instrument de localisation, GPS (Global Positioning System), a été conçu par l’armée américaine dans les années soixante. Le premier satellite GPS fut lancé en 1978. Il y en a actuellement une trentaine, de sorte qu’à tout moment quatre à six satellites au moins sont visibles depuis tout point de la Terre. Couplé aux cartes numériques, le système GPS permet de se situer. Il n’est pas toujours efficace en ville, et peut être complété par d’autres moyens de localisation comme la détection de bornes Wi-Fi proches. D’autres systèmes plus précis, dont Galileo, sont en cours de déploiement.\nLes données et l’information\nLes informations des cartes numériques proviennent de nombreuses sources : services géographiques des États, photos prises par des satellites, avions ou voitures, données fournies par les utilisateurs, etc. Ces informations sont de natures diverses : topographiques, géologiques, photographiques, liées aux transports, à l’activité industrielle ou touristique, etc. Des projets collaboratifs comme OpenStreetMap permettent à chaque utilisateur d’ajouter des informations à une carte en libre accès, qui deviennent alors visibles par tous les utilisateurs.\nUn satellite GPS contient une horloge atomique mesurant le temps à une très grande précision et envoyant régulièrement des messages contenant cette heure. Chaque message se propageant à la vitesse de la lumière, le récepteur peut calculer sa distance au satellite. On peut en déduire sa position en suivant plusieurs satellites, ce que fait automatiquement le récepteur GPS.\nLes algorithmes et les programmes\nLes algorithmes cartographiques concernent principalement l’affichage sélectif d’informations variées et le calcul d’itinéraires. L’affichage est paramétré par les informations à montrer, que l’on peut choisir par simples clics. Une difficulté est liée au mélange d’informations de types différents lors des changements d’échelle : les graphismes peuvent être très différents et beaucoup d’informations doivent être supprimées pour les grandes échelles, mais une route doit être représentée avec à peu près la même largeur, quelle que soit l’échelle.\nLes récepteurs GPS fournissent la localisation sous une forme normalisée facilement décodable, par exemple selon le protocole NMEA 0183 (National Marine Electronics Association), ou directement dans les métadonnées EXIF d’une photo. La localisation et les cartes se couplent dans le suivi permanent de la position sur la carte ou sur un itinéraire précalculé.\nLes machines\nLes machines utilisées pour la cartographie sont surtout les ordinateurs, tablettes et téléphones classiques équipés d’une application ad hoc. Les récepteurs GPS spécialisés restent importants pour la navigation maritime ou aérienne, mais ceux pour la randonnée pédestre sont en voie de disparition, supplantés par les téléphones.\nL’heure fournie par le GPS sert aussi de base pour la synchronisation précise des horloges internes des ordinateurs connectés à internet, ce qui est très important pour tous les échanges d’informations.\nImpacts sur les pratiques humaines\nLes cartes numériques, accessibles depuis un téléphone, remplacent progressivement les cartes sur papier. Leurs interfaces permettent d’accéder commodément à de nombreux types d’information. Couplé aux algorithmes de calculs d’itinéraires, le GPS est utilisé systématiquement pour les transports, l’agriculture, la randonnée, la navigation à voile, etc.\nLe maintien à jour des cartes numériques est un problème difficile qui demande beaucoup de ressources au plan mondial. Les erreurs dans les cartes, inévitables à cause de l’énorme quantité d’informations à collecter, peuvent avoir des conséquences dramatiques.\nPar ailleurs, de nombreuses applications ont accès à la localisation dans un téléphone, ce qui leur permet d’envoyer des publicités non désirées, de suivre vos itinéraires, ou de localiser une personne. Enfin, le GPS n’est pas toujours sûr, car facile à brouiller à l’aide d’appareils simples.\n\n\n3.5.2 Contenus et capacités\n\n\n\nContenus\nCapacités attendues\n\n\n\n\nGPS, Galileo\nDécrire le principe de fonctionnement de la géolocalisation.\n\n\nCartes numériques\nIdentifier les différentes couches d’information de GeoPortail pour extraire différents types de données. Contribuer à OpenStreetMap de façon collaborative.\n\n\nProtocole NMEA 0183\nDécoder une trame NMEA pour trouver des coordonnées géographiques.\n\n\nCalculs d’itinéraires\nUtiliser un logiciel pour calculer un itinéraire. Représenter un calcul d’itinéraire comme un problème sur un graphe.\n\n\nConfidentialité\nRégler les paramètres de confidentialité d’un téléphone pour partager ou non sa position.\n\n\n\n\n\n\nExemples d’activités\n\n\n\n\n\nExpérimenter la sélection d’informations à afficher et l’impact sur le changement d’échelle de cartes (par exemple sur GeoPortail), ainsi que les ajouts d’informations par les utilisateurs dans OpenStreetMap.\nMettre en évidence les problèmes liés à un changement d’échelle dans la représentation par exemple des routes ou de leur nom sur une carte numérique pour illustrer l’aspect discret du zoom.\nCalculer un itinéraire routier entre deux points à partir d’une carte numérique.\nConnecter un récepteur GPS sur un ordinateur afin de récupérer la trame NMEA, en extraire la localisation.\nExtraire la géolocalisation des métadonnées d’une photo.\nSituer sur une carte numérique la position récupérée.\nConsulter et gérer son historique de géolocalisation.\n\n\n\n\n\n\n\n3.6 Informatique embarquée et objets connectés\n\n3.6.1 Présentation\nIntroduction\nEmbarquer l’informatique dans les objets a beaucoup d’avantages : simplifier leur fonctionnement, leur donner plus de possibilités d’usage et de sûreté, et leur permettre d’intégrer de nouvelles possibilités à matériel constant par simple modification de leur logiciel.\nAprès avoir transformé les chaînes de montage des automobiles et les avions dans les années quatre-vingt-dix, l’informatique intervient maintenant dans des domaines toujours plus nombreux : automobile, réseau ferroviaire et transports urbains, domotique, robotique, loisirs, etc., conduisant à un nouvel internet des objets.\nPour les avions par exemple, l’informatique gère le vol en commandant finement des servomoteurs électriques, plus légers et plus fiables que les vérins hydrauliques, les réacteurs, la navigation et le pilotage automatique, et permet l’atterrissage automatique par temps de brouillard. Elle a eu un impact décisif sur l’amélioration de la sécurité aérienne.\nLes objets informatisés avaient autrefois des interfaces homme-machine (IHM) dédiées, souvent dépendantes d’une liaison filaire directe. Mais les technologies du Web intégrées au téléphone portable permettent maintenant d’y rassembler les interfaces des objets du quotidien, ce qui en simplifie et uniformise l’usage. Les objets informatisés deviennent ainsi connectés.\nRepères historiques\n\n1967 : premier système embarqué de guidage lors de la mission lunaire Apollo;\n1971 : premier processeur produit par Intel;\n1984 : sortie de l’Airbus 320, premier avion équipé de commandes électriques informatisées;\n1998 : mise en service du métro informatisé sans conducteur Météor (ligne 14 à Paris);\n1999 : introduction de l’expression « internet des objets » par Kevin Ashton;\n2007 : arrivée du smartphone.\n\nOn estime à 50 milliards le nombre d’objets connectés en 2020.\nLes données et l’information\nDans les systèmes informatiques embarqués, l’information provient soit des IHM soit des capteurs, pour contrôler automatiquement ou manuellement le fonctionnement physique par des actionneurs et transmettre des informations aux utilisateurs. Le flux d’informations à travers les IHM permet ainsi une interaction continue entre l’homme et la machine.\nLes algorithmes et les programmes\nLe développement des logiciels embarqués est délicat, car il pose souvent des questions de temps-réel, c’est-à-dire de respect de temps de réponse imposé. Ceci conduit à des méthodes de programmation spécifiques.\nLes machines\nLes microprocesseurs sont beaucoup plus nombreux dans les objets que dans les ordinateurs et téléphones, mais ils sont souvent plus petits, moins chers et moins rapides. Les capteurs et actionneurs reposent sur des technologies physiques et électroniques variées, allant quelquefois vers l’électronique de puissance. Un problème essentiel est la réduction de la consommation électrique, surtout pour les appareils sur pile.\nImpacts sur les pratiques humaines\nL’impact de l’informatisation des objets devient considérable, surtout depuis que leurs interfaces s’unifient. Le but est de fabriquer des machines d’utilisation facile permettant des fonctionnalités améliorées, voire complètement nouvelles comme la voiture autonome. Celle- ci utilise à la fois des techniques de systèmes embarqués pour son fonctionnement et sa navigation et de l’intelligence artificielle pour l’analyse en temps-réel de l’environnement à l’aide de capteurs variés (caméras, radars, lidars, etc.).\nComme l’informatique embarquée interagit avec le monde physique en exposant quelquefois des vies humaines ou des équipements critiques (réseaux électriques par exemple), elle est soumise à de fortes contraintes de sûreté (absence d’erreurs) et de sécurité (résistance aux attaques). En avionique, ferroviaire ou autres applications critiques, des processus lourds de certification externe sont utilisés. Cependant, dans beaucoup de systèmes embarqués moins critiques, la sécurité reste souvent un point faible, et les objets connectés sont de plus en plus utilisés comme robots pour lancer des attaques sur internet.\n\n\n3.6.2 Contenus et capacités\n\n\n\nContenus\nCapacités attendues\n\n\n\n\nSystèmes informatiques embarqués\nIdentifier des algorithmes de contrôle des comportements physiques à travers les données des capteurs, l’IHM et les actions des actionneurs dans des systèmes courants.\n\n\nInterface homme-machine (IHM)\nRéaliser une IHM simple d’un objet connecté.\n\n\nCommande d’un actionneur, acquisition des données d’un capteur\nÉcrire des programmes simples d’acquisition de données ou de commande d’un actionneur.\n\n\n\n\n\n\nExemples d’activités\n\n\n\n\n\nIdentifier les évolutions apportées par les algorithmes au contrôle des freins et du moteur d’une automobile, ou à l’assistance au pédalage d’un vélo électrique.\nRéaliser une IHM pouvant piloter deux ou trois actionneurs et acquérir les données d’un ou deux capteurs.\nGérer des entrées/sorties à travers les ports utilisés par le système.\nUtiliser un tableau de correspondance entre caractères envoyés ou reçus et commandes physiques (exemple : le moteur A est piloté à 50 % de sa vitesse maximale lorsque le robot reçoit la chaîne de caractères « A50 »).\n\n\n\n\n\n\n\n3.7 La photographie numérique\n\n3.7.1 Présentation\nIntroduction\nLes technologies de la photographie argentique ont eu une évolution très lente, liée aux progrès en optique, mécanique et chimie. Ce n’est plus du tout le cas de l’évolution actuelle, davantage due aux algorithmes qu’à la physique : algorithmes de développement et d’amélioration de l’image brute, algorithmes d’aide à la prise de vue. Cet exemple est caractéristique des façons de procéder de la révolution informatique par rapport aux approches traditionnelles.\nLa photographie numérique présente un coût marginal très faible et une diffusion par internet facile et immédiate : chaque jour, des milliards de photos sont prises et partagées.\nRepères historiques\n\n1826 : naissance de la photographie argentique;\n1900 : photographie en couleurs. Après la seconde guerre mondiale, généralisation du format 24 x 36 et de la visée reflex;\n1969 : arrivée des premiers capteurs CCD (Charge Coupled Device);\n1975 : apparition des premiers appareils numériques;\n2007 : arrivée du smartphone.\n\nLes données et l’information\nEn entrée, le capteur est formé de photosites en matrice de petits carrés de quatre photosites, deux verts, un bleu et un rouge, correspondant à la répartition des cônes de la rétine. La résolution du capteur se mesure en millions de photosites.\nEn sortie, l’image est formée de pixels colorés homogènes, représentés par trois nombres RVB (rouge, vert, bleu). La résolution de l’image se compte en mégapixels; elle n’est pas forcément égale à celle du capteur. La profondeur de couleur est en général de 8 bits par pixel et par couleur pour l’image finale.\nDes métadonnées sont stockées dans les fichiers images sous format EXIF (Exchangeable Image File Format) : modèle de l’appareil, objectif, vitesse, diaphragme, distance de mise au point, auteur, copyright, localisation, etc.\nLes couleurs peuvent être représentées dans différents systèmes : RVB, TSL (teinte, saturation, lumière), avec des formules empiriques de passage d’un modèle à l’autre. On distingue différents formats des fichiers images, compressés ou non, avec ou sans perte : RAW, BMP, TIFF, JPEG.\nLes algorithmes et les programmes\nDes algorithmes permettent de traiter toutes les lumières, d’effectuer une retouche facile, avec une qualité maintenant bien supérieure à l’argentique. Avec l’arrivée du téléphone mobile, des algorithmes de fusion d’images permettent de concilier une excellente qualité avec un capteur et un objectif minuscules.\nDe nombreux algorithmes sophistiqués sont utilisés dans les appareils de photographie numérique :\n\nLors de la prise de vue : calcul de l’exposition, mise au point, stabilisation par le capteur et/ou l’objectif, le tout en automatique ou manuel assisté, focus-peaking (scintillement des contours nets), prise en rafales rapides d’images multiples avant et après appui sur le déclencheur.\nLors du développement de l’image issue du capteur en une image pixellisée : gestion de la lumière et du contraste, balance des blancs, netteté, débouchage des ombres, correction automatique des distorsions ou des aberrations optiques.\nAprès le développement : compression du fichier (TIFF sans perte, JPEG avec perte).\nEn utilisant la fusion d’images : réduction du bruit et amélioration de la netteté, panoramas, HDR (High Dynamic Range), super-résolution par micro-décalages du capteur, focus stacking pour étendre la netteté avec plusieurs mises au point successives, réduction du bruit et amélioration de la netteté.\nCertains appareils peuvent augmenter leurs fonctionnalités par téléchargement de nouveaux logiciels.\n\nLes machines\nComme les algorithmes de prise de vue et de développement demandent beaucoup de calcul, les appareils embarquent plusieurs processeurs, généraux ou spécialisés.\nLes algorithmes prennent le relais des capteurs physiques en calculant les pixels de l’image finale: ils compensent par exemple les distorsions des lentilles. Des algorithmes permettent également de commander la mise au point et l’exposition automatique, ainsi que de compenser le bougé de l’utilisateur (stabilisation).\nImpacts sur les pratiques humaines\nLa gratuité et l’immédiateté de la réplication des images introduisent de nouveaux usages de la photographie : à la photographie archive (histoire de famille) s’ajoutent la photographie à partager et la photographie utilitaire, prothèse de la mémoire (photo d’un ticket de caisse, d’une présentation lors d’une réunion de travail, d’une place de parking, etc.). Les images s’intègrent à tous les dispositifs de communication et de partage, téléphones, Web et réseaux sociaux.\nDe nouveaux problèmes apparaissent, liés à la diffusion de photos qui ne disparaîtront jamais (notion de droit à l’oubli), au trucage difficile à détecter des images, au pistage des individus ou à l’obsolescence des supports. Est ainsi posée la question de l’archivage de photographies historiques, scientifiques ou culturelles.\n\n\n3.7.2 Contenus et capacités\n\n\n\nContenus\nCapacités attendues\n\n\n\n\nPhotosites, pixels, résolution (du capteur, de l’image), profondeur de couleur\nDistinguer les photosites du capteur et les pixels de l’image en comparant les résolutions du capteur et de l’image selon les réglages de l’appareil.\n\n\nMétadonnées EXIF\nRetrouver les métadonnées d’une photographie.\n\n\nTraitement d’image\nTraiter par programme une image pour la transformer en agissant sur les trois composantes de ses pixels.\n\n\nRôle des algorithmes dans les appareils photo numériques\nExpliciter des algorithmes associés à la prise de vue.\nIdentifier les étapes de la construction de l’image finale.\n\n\n\n\n\n\nExemples d’activités\n\n\n\n\n\nProgrammer un algorithme de passage d’une image couleur à une image en niveaux de gris : par moyenne des pixels RVB ou par changement de modèle de représentation (du RVB au TSL, mise de la saturation à zéro, retour au RVB).\nProgrammer un algorithme de passage au négatif d’une image.\nProgrammer un algorithme d’extraction de contours par comparaison entre pixels voisins et utilisation d’un seuil.\nUtiliser un logiciel de retouche afin de modifier les courbes de luminosité, de contraste, de couleur d’une photographie."
  },
  {
    "objectID": "2gt/snt/0-programmation-python/2-conditions/index.html",
    "href": "2gt/snt/0-programmation-python/2-conditions/index.html",
    "title": "Chapitre 2: Conditions",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\n\n\n\n\nInstructions conditionnelles\nÉcrire et développer des programmes pour répondre à des problèmes et modéliser des phénomènes physiques, économiques et sociaux.",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 0: Programmation Python",
      "Chapitre 2: Conditions"
    ]
  },
  {
    "objectID": "2gt/snt/0-programmation-python/2-conditions/index.html#la-logique-booléenne",
    "href": "2gt/snt/0-programmation-python/2-conditions/index.html#la-logique-booléenne",
    "title": "Chapitre 2: Conditions",
    "section": "1 La logique booléenne",
    "text": "1 La logique booléenne\nLes booléens sont un type particulier de variables qui n’ont que deux valeurs possibles:\n\nTrue: Vrai\nFalse: Faux\n\n\n1.1 Les opérateurs de comparaison\nPour comparer des variables en Python, on utilise les opérateurs suivants:\n\nx &lt; y: x est-il inférieur à y ?\nx &lt;= y: x est-il inférieur ou égal à y ?\nx &gt; y: x est-il supérieur à y ?\nx &gt;= y: x est-il supérieur ou égal à y ?\nx == y: x est-il égal à y ?\nx != y: x est-il différent y ?\n\nLes opérateurs de comparaison retournent un booléen: True ou False.\n\n\n# affectation des variables\na = 7\nb = 13\nc = 7\n\n# comparaisons\nprint(a &lt; b) \nprint(a == b)\nprint(a != b)\nprint(a == c)\n&gt;&gt;sortie\n\nTrue\nFalse\nTrue\nTrue\n\n\n\n\n\n\n\n\n\nAvertissement\n\n\n\nIl faut bien distinguer le simple égal = utilisé pour l’affectation des variables et le double égal == utilisé pour la condition d’égalité.\n\n\n\n\n1.2 Opérateurs booléens\nOn peut réaliser des combinaisons de valeurs booléennes avec les opérateurs:\n\nand: ET LOGIQUE vrai si deux conditions sont vraies.\nor: OU LOGIQUE vrai si au moins une des deux conditions est vraie.\n\n\n\nage = 15\n\n# comparaisons\nprint(age &gt; 10)  \nprint(age &gt;= 18) \n\n# combinaisons\nprint(age &gt; 10 and age &gt;= 18)  \nprint(age &gt; 10 or age &gt;= 18)   \n&gt;&gt;sortie\n\nTrue\nFalse\nFalse\nTrue",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 0: Programmation Python",
      "Chapitre 2: Conditions"
    ]
  },
  {
    "objectID": "2gt/snt/0-programmation-python/2-conditions/index.html#les-instructions-conditionnelles",
    "href": "2gt/snt/0-programmation-python/2-conditions/index.html#les-instructions-conditionnelles",
    "title": "Chapitre 2: Conditions",
    "section": "2 Les instructions conditionnelles",
    "text": "2 Les instructions conditionnelles\nEn fonction de conditions on va exécuter des blocs de code différents.\nEn Python, les blocs sont précédés de : et sont indentés avec 4 espaces.\nentrée dans le bloc:\n    1ère instruction du bloc\n    2e instruction du bloc\n    ...\nsortie du bloc\n\n2.1 L’instruction SI if\nLe bloc d’instruction contenu n’est exécuté que si la condition est vérifiée.\nSyntaxe\nif condition:\n    instruction 1\n    instruction 2\n    ...\n\nmdp = input(\"Entrez votre mot de passe.\")\nif mdp == \"azerty :\n    print(\"Connexion réussie\")\n\n\n\n2.2 L’instruction SINON else\nIndique le bloc d’instruction a exécuté si la condition n’est pas vérifiée.\nSyntaxe\nif condition:\n    bloc d'instructions exécuté si la condition est vraie\nelse:\n    bloc d'instructions exécuté si la condition est fausse\n\nmdp = input(\"Entrez votre mot de passe.\")\nif mdp == \"azerty :\n    print(\"Connexion réussie\")\nelse:\n    print(\"Mot de passe faux\")\n\n\n\n2.3 L’instruction SINON SI elif\nCette instruction permet de réaliser des tests imbriqués, c’est un raccourci pour les instructions else et if.\nSyntaxe\nif condition 1:\n    bloc d'instructions exécuté si la condition 1 est vraie\nelif condition 2:\n    bloc d'instructions exécuté si la condition 1 est fausse et la condition 2 vraie\nelse:\n    bloc d'instructions exécuté si les conditions 1 et 2 sont fausses\n\nnom = input(\"Entrez votre nom d'utilisateur.\")\nmdp = input(\"Entrez votre mot de passe.\")\nif nom != \"nice06\" :\n    print(\"Nom d'utilisateur inconnu\")\nelif mdp != \"azerty\":\n    print(\"Mot de passe incorrect\")\nelse:\n    # le mot de passe et le nom d'utilisateurs sont corrects\n    print(\"Connexion réussie\")",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 0: Programmation Python",
      "Chapitre 2: Conditions"
    ]
  },
  {
    "objectID": "2gt/snt/0-programmation-python/1-programme-et-variables/exo/index.html",
    "href": "2gt/snt/0-programmation-python/1-programme-et-variables/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Aucun exercice pour l’instant.",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 0: Programmation Python",
      "Chapitre 1: Programme et variables",
      "Exercices"
    ]
  },
  {
    "objectID": "2gt/snt/0-programmation-python/1-programme-et-variables/quiz/index.html",
    "href": "2gt/snt/0-programmation-python/1-programme-et-variables/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "1. Qu'est-ce qu'une variable en programmation ?\n   \n   - [ ] Un moyen de communiquer avec l'utilisateur\n   - [x] Un emplacement mémoire pour stocker des données\n   - [ ] Un outil pour effectuer des calculs\n\n2. Comment déclarez-vous une variable en Python ?\n\n   - [ ] `var nom_de_variable = valeur`\n   - [ ] `let nom_de_variable = valeur`\n   - [x] `nom_de_variable = valeur`\n\n3. Quel est le type de la valeur `-15` ?\n \n   - [x] Entier: `int`\n   - [ ] Nombre à virgule: `float`\n   - [ ] Chaîne de caractère: `str`\n   - [ ] Booléen: `bool`\n\n4. Quel est le type de la valeur `\"3.0\"` ?\n \n   - [ ] Entier: `int`\n   - [ ] Nombre à virgule: `float`\n   - [x] Chaîne de caractère: `str`\n   - [ ] Booléen: `bool`\n\n5. Quel est le type de la valeur `3.14` ?\n   \n \n   - [ ] Entier: `int`\n   - [x] Nombre à virgule: `float`\n   - [ ] Chaîne de caractère: `str`\n   - [ ] Booléen: `bool`\n\n6. Quel est le type de la valeur `3.14` ?\n   \n \n   - [ ] Entier: `int`\n   - [ ] Nombre à virgule: `float`\n   - [ ] Chaîne de caractère: `str`\n   - [x] Booléen: `bool`\n\n7. À quoi sert la fonction `print` en Python ?\n \n   - [ ] Effectuer des calculs mathématiques\n   - [x] Afficher des messages à l'écran pour l'utilisateur\n   - [ ] Stocker des données dans une variable\n\n8. Comment utilisez-vous la fonction `print` pour afficher le message `Hello World!` en Python ?\n   \n   - [ ] `print(\"Hello\" + \"World!\")`\n   - [ ] `print(\"Hello\"; \"World!\")`\n   - [x] `print(\"Hello\", \"World!\")`\n\n9. À quoi sert la fonction `input` en Python ?\n \n   - [x] Demander une saisie à l'utilisateur\n   - [ ] Afficher des messages à l'écran pour l'utilisateur\n   - [ ] Effectuer des calculs mathématiques\n\n10. Comment utilisez-vous la fonction `input` pour demander à l'utilisateur de saisir un nombre\n    entier en Python ?\n    \n    - [ ] `x = get_int(input(\"Entrez un nombre entier : \"))`\n    - [x] `x = int(input(\"Entrez un nombre entier : \"))`\n    - [ ] `x = read_int(input(\"Entrez un nombre entier : \"))`",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 0: Programmation Python",
      "Chapitre 1: Programme et variables",
      "Quiz"
    ]
  },
  {
    "objectID": "2gt/snt/0-programmation-python/3-boucles-et-fonctions/index.html",
    "href": "2gt/snt/0-programmation-python/3-boucles-et-fonctions/index.html",
    "title": "Chapitre 3: Boucles et fonctions",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\n\n\n\n\nBoucles bornées et non bornées\nDéfinitions et appels de fonctions\nÉcrire et développer des programmes pour répondre à des problèmes et modéliser des phénomènes physiques, économiques et sociaux.",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 0: Programmation Python",
      "Chapitre 3: Boucles et fonctions"
    ]
  },
  {
    "objectID": "2gt/snt/0-programmation-python/3-boucles-et-fonctions/index.html#les-boucles",
    "href": "2gt/snt/0-programmation-python/3-boucles-et-fonctions/index.html#les-boucles",
    "title": "Chapitre 3: Boucles et fonctions",
    "section": "1 Les boucles",
    "text": "1 Les boucles\nLes boucles permettent de répéter des blocs d’instructions.\nIl en existe deux types:\n\nLes boucles bornées avec le mot-clé for.\nLes boucles non bornées avec le mot-clé while.\n\n\n1.1 Les boucles bornées: for\nLorsqu’on connait le nombre de répétitions à effectuer, on utilise la boucle for associée à la fonction range().\n\nPour répéter 7 fois un bloc d’instructions, on utilise:\n\nfor i in range(7):\n    print(i)\n&gt;&gt;sortie\n\n0\n1\n2\n3\n4\n5\n6\n\n\n\n\n\n\n\n\n\n\nEn plus\n\n\n\n\n\n\nOn peut aussi réaliser des boucles sur des types construits qui seront vus en première.\n\nSur des chaînes de caractères:\n\nfor lettre in \"Bonjour!\":\n    print(lettre)\n&gt;&gt;sortie\n\nB\no\nn\nj\no\nu\nr\n!\n\n\nSur des listes:\n\nfor premier in [2, 3, 5, 7, 11, 13]:\n    print(premier)\n&gt;&gt;sortie\n\n2\n3\n5\n7\n11\n13\n\n\n\n\n\n\n\n\n\n\n1.2 Les boucles non bornées: while\nLorsqu’on ne connait pas le nombre de répétitions à effectuer, on utilise la boucle while associée à une variable de contrôle.\n\nVoici un programme qui permet de vérifier la saisie d’un mot de passe par un utilisateur.\nmdp = \"\"                # initialisation\nwhile mdp != \"azerty\":  # condition d'arrêt de la boucle\n    mdp = input(\"Entrez votre mot de passe.\")   # mise à jour de\n                                                # la variable de boucle\n\n# On sort de la boucle\nprint(\"Vous êtes connecté\")\n\n\n\n\n\n\n\nMise en garde\n\n\n\nAttention à bien vérifier que votre boucle finira par se terminer sinon votre programme rentrera dans une boucle infinie, et il faudra obligatoirement le stopper.",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 0: Programmation Python",
      "Chapitre 3: Boucles et fonctions"
    ]
  },
  {
    "objectID": "2gt/snt/0-programmation-python/3-boucles-et-fonctions/index.html#les-fonctions",
    "href": "2gt/snt/0-programmation-python/3-boucles-et-fonctions/index.html#les-fonctions",
    "title": "Chapitre 3: Boucles et fonctions",
    "section": "2 Les fonctions",
    "text": "2 Les fonctions\nIl s’agit de blocs d’instructions exécutés à la demande, on les définit par le mot-clef def.\n\n\n# définition de la fonction\ndef dit_bonjour(prenom):\n    print(\"Bonjour \" + prenom)\n\nNous venons de définir la fonction, mais pour l’instant, il ne se passe rien.\nPour exécuter le code de la fonction, il faut maintenant appeler la fonction avec un paramètre pour l’exécuter.\n\n# appel de la fonction avec l'argument Ada\ndit_bonjour(\"Ada\")\n&gt;&gt;sortie\n\nBonjour Ada\n\n\n\n\n2.1 Renvoyer une valeur avec return\nAu lieu d’afficher une valeur, il est préférable de renvoyer une valeur grâce au mot-clé return.\n\n\ndef périmètre(rayon):\n    p = 2*3.14*rayon\n    return p\n\nCette fois-ci l’appel renverra la valeur du périmètre, on peut alors l’affecter à une variable.\n\n# on appelle la fonction avec l'argument 0.5\np = périmètre(0.5)\nprint(p)\n&gt;&gt;sortie\n\n3.14\n\n\n\n\n\n2.2 Les paramètres de fonction\nUne fonction peut accepter un nombre quelconque de paramètres, il suffit de les séparer par des virgules.\n\nAvec deux paramètres.\n\ndef surface_rectangle(l, L):\n    return l*L\n# appel\nsurface_rectangle(2, 3) # renvoie 6\n\n6\n\n\nAvec aucun paramètre:\n\nimport time\ndef affiche_heure():\n    print(time.asctime())\n\n# Pour l'appel on met les parénthèses même s'il n'y a pas d'arguments\naffiche_heure()\n&gt;&gt;sortie\n\nFri Dec  8 10:27:28 2023",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 0: Programmation Python",
      "Chapitre 3: Boucles et fonctions"
    ]
  },
  {
    "objectID": "2gt/snt/0-programmation-python/index.html",
    "href": "2gt/snt/0-programmation-python/index.html",
    "title": "Partie 0: Programmation Python",
    "section": "",
    "text": "Chapitre 1: Programme et variables\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 2: Conditions\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 3: Boucles et fonctions\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAucun article correspondant",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 0: Programmation Python"
    ]
  },
  {
    "objectID": "2gt/snt/2-internet/index.html",
    "href": "2gt/snt/2-internet/index.html",
    "title": "Partie 2: Internet",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus | Capacités attendues\n\n\n\n\n\nIndépendance d’internet | Caractériser quelques types de réseaux physiques : obsolètes | par rapport au réseau physique | ou actuels, rapides ou lents, filaires ou non. | | | | Caractériser l’ordre de grandeur du trafic de données sur | | internet et son évolution. |\n\n\nRéseaux pair-à-pair | Décrire l’intérêt des réseaux pair-à-pair ainsi que les usages | | illicites qu’on peut en faire. |\n\n\nProtocole TCP/IP : paquets, | Distinguer le rôle des protocoles IP et TCP. | routage des paquets | | | Caractériser les principes du routage et ses limites. | | | | Distinguer la fiabilité de transmission et l’absence de garantie | | temporelle. |\n\n\nAdresses symboliques et | Sur des exemples réels, retrouver une adresse IP à partir | serveurs DNS | d’une adresse symbolique et inversement. |\n\n\n\n\n\n\nExemples d’activités |\n\n\n\n\n\nIllustrer le fonctionnement du routage et de TCP par des activités débranchées ou à l’aide de logiciels dédiés, en tenant compte de la destruction de paquets. |\nDéterminer l’adresse IP d’un équipement et l’adresse du DNS sur un réseau. |\nSuivre le chemin d’un courriel en utilisant une commande du protocole IP. |",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 2: Internet"
    ]
  },
  {
    "objectID": "2gt/snt/2-internet/index.html#lhistoire-dinternet",
    "href": "2gt/snt/2-internet/index.html#lhistoire-dinternet",
    "title": "Partie 2: Internet",
    "section": "1 L’histoire d’Internet",
    "text": "1 L’histoire d’Internet\nVidéo servie sans cookie via yewtu.be\nL’ancêtre d’internet s’appelait  ________________. Sur internet, les données sont acheminées sous forme de  ________________.\nLes règles permettant la transmission des données sont les protocoles:\n\nTCP qui  _________________________________.\nIP qui  _________________________________.",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 2: Internet"
    ]
  },
  {
    "objectID": "2gt/snt/2-internet/index.html#lessor-dinternet",
    "href": "2gt/snt/2-internet/index.html#lessor-dinternet",
    "title": "Partie 2: Internet",
    "section": "2 L’essor d’internet",
    "text": "2 L’essor d’internet\nInternet a fait progressivement disparaître beaucoup des moyens de communication précédents:\n\n__________________________,\n__________________________,\n__________________________,\n…\n\nSon trafic augmente de façon exponentielle.\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nÉvolution du trafic d’internet\n\n\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nRecherchez dans cette page les consommations associées à divers usages d’internet et les classer par ordre croissant.\n\n\n\n\n\n\n\n\n\n\n\n\nEn plus: Le bit et l'octet: unités d'information\n\n\n\n\n\n\nLes machines que nous utilisons actuellement fonctionnent sur des circuits électroniques à deux états notés 0 ou 1.\nToutes les données sont codées en binaire, mais cette unité est tellement petite on utilise plus communément d’autres unités comme:\n\nl’octet: 1o=8bits1~o = 8~bits,\nle kibioctet: 1kio=210octets=1024o≈1ko1kio=2^{10} octets = 1~024~o \\approx 1~ko,\nle mébioctet: 1Mio=220octets=1048576o≈1Mo1Mio=2^{20} octets = 1~048~576~o \\approx 1~Mo,\nle gibioctet: 1Gio=230octets=1073741824≈1Go1Gio=2^{30} octets = 1~073~741~824 \\approx 1~Go",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 2: Internet"
    ]
  },
  {
    "objectID": "2gt/snt/2-internet/index.html#les-protocoles-dinternet",
    "href": "2gt/snt/2-internet/index.html#les-protocoles-dinternet",
    "title": "Partie 2: Internet",
    "section": "3 Les protocoles d’internet",
    "text": "3 Les protocoles d’internet\nVidéo servie sans cookie via yewtu.be\nAfin que deux machines puissent communiquer, entre-elles à travers internet, des règles sont définies mondialement: les protocoles.\n\n\n\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nLes réseaux constituant internet sont reliés par des routeurs. Les protocoles de routage indiquent les directions que doivent suivre les paquets en fonction de l'IP de destination notamment. Certains paquets peuvent se «perdre» et ils n'arrivent pas forcément dans l'ordre.©  CC BY-SA 4.0 via Wikimedia Commons\n\n\n\nLe protocole IP donne une adresse unique à chaque machine du réseau internet.\nLe protocole TCP découpe l’information en paquets avant envoi et les vérifie à la réception puis les réordonne.\n\n\n\n\nIl existe deux versions des adresses IP:\n\n\n\nIPv4\nIPv6\n\n\n\n\nUne adresse IP (version 4) est constituée de 4 nombres compris entre 0 et 255 séparés par des points.\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nChacun des quatre octets (8 bits) est un nombre compris entre 0 et 255 en notation décimale. Public domain via Wikimedia Commons\nLes adresses IPv6 sont représentées par huit nombres de quatre chiffres hexadécimaux(de 0 à F, voir) chacun, séparés par deux-points.\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nChacun des 8x4=24 chiffres hexadécimaux est compris entre 0 et F( soit 15 en décimal). Public domain via Wikimedia Commons\n\n\nLe nombre total d’adresse est 255×255×255×255=2554255 \\times 255 \\times 255 \\times 255 = 255^4 soit environ 4 milliards d’adresse ce qui est largement insuffisant.\nLe nombre total d’adresse est 164×8≈3×103816^{4\\times8} \\approx 3\\times 10^{38} qui devrait largement suffire pour longtemps.\n\n\n\n\nQuand on s’abonne auprès d’un FAI, on obtient une adresse IP, cette adresse permet d’identifier votre appareil sur le réseau.\nExemple: 185.15.58.224 est l’adresse des serveurs de Wikipédia: https://185.15.58.224\nPour obtenir son adresse IP on peut consulter un site comme: https://www.whatsmyip.org/.\nPou connaitre l’adresse d’un site, on peut utiliser la commande ping. Par exemple: ping wikipedia.org\nping -4 wikipedia.org\n&gt;&gt;&gt; PING  (185.15.58.224) 56(84) octets de données.\nVoici l’adresse IPv6 de Wikipédia.org 2a02:ec80:0600:ed1a:0000:0001.\nPour l’utiliser dans un navigateur, il faut l’écrire entre crochets: https://[2a02:ec80:600:ed1a::1]/\nping -6 wikipedia.org\n&gt;&gt;&gt;64 octets de text-lb.drmrs.wikimedia.org (2a02:ec80:600:ed1a::1) : icmp_seq=1 ttl=47 temps=30.3 ms",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 2: Internet"
    ]
  },
  {
    "objectID": "2gt/snt/2-internet/index.html#noms-de-domaine-le-protocole-dns",
    "href": "2gt/snt/2-internet/index.html#noms-de-domaine-le-protocole-dns",
    "title": "Partie 2: Internet",
    "section": "4 Noms de domaine, le protocole DNS",
    "text": "4 Noms de domaine, le protocole DNS\n\n\nNom de domaine\n\n\n\nUn nom de domaine est un « masque » sur une adresse IP. Le but d’un nom de domaine est de retenir et communiquer facilement l’adresse d’un ensemble de serveurs (site web, courrier électronique, FTP). Article Wikipédia\n\n\n\n\nPar exemple, wikipedia.org est plus simple à mémoriser que 208.80.154.224 ou 91.198.174.192. Article Wikipédia DNS\n\n\n\n\n\n\n\n\nLe système de nom de domaine est hiérarchique, permettant la définition de sous-domaines.\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nLe nom de.wikipedia.org appartient aux domaines de premier niveau «.org».©  CC BY-SA 2.5 via Wikimedia Commons\n\n\n\n\n\n\nDNS\n\n\n\nLe Domain Name System ou DNS est un service informatique distribué sur Internet qui résout les noms de domaine Internet en adresse IP. Article Wikipedia DNS\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nUn nom de domaine est résolu de droite à gauche grâce aux serveurs de noms DNS de plus en plus spécialisés jusqu'à obtenir l'adresse IP du nom de domaine tapé. Public domain via Wikimedia Commons",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 2: Internet"
    ]
  },
  {
    "objectID": "2gt/snt/2-internet/index.html#communication-sur-internet",
    "href": "2gt/snt/2-internet/index.html#communication-sur-internet",
    "title": "Partie 2: Internet",
    "section": "5 Communication sur Internet",
    "text": "5 Communication sur Internet\nVidéo servie sans cookie via yewtu.be\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nRépondre aux questions de l’activité PP 44-45 du manuel de Delagrave.\n\n\n\n\n\nOn distingue deux principaux modes de communication.\n\n\n\nCommunication client-serveur\nCommunication pair à pair\n\n\n\n\nUne machine (le client) émet une requête vers une autre machine (le serveur) qui est la seule à pouvoir répondre à ces requêtes.\nDans un réseau pair à pair au contraire, chaque machine est à la fois client et serveur. Les deux machines communiquent directement sans intermédiaire.\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\n\n\nLa communication client-serveur est la plus utilisée actuellement web, courriel, Vod …\nLa communication pair à pair est beaucoup moins utilisée actuellement: Torrentpour le partage de fichiers, Skype: Communications audio et vidéos. peertube: partage de vidéos alternative à youtube… Mais beaucoup y voit un avenir prometteur pour décentraliser le web et éviter le recours systématique au serveur des géants du web (GAFAM) qui au passage aspirent des données.\n\n\n\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nCiter au moins un avantage et un inconvénient pour chaque type de communication.",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 2: Internet"
    ]
  },
  {
    "objectID": "2gt/snt/7-informatique-embarquee/exo/index.html",
    "href": "2gt/snt/7-informatique-embarquee/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Aucun exercice pour l’instant.",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 7: Informatique embarquée",
      "Exercices"
    ]
  },
  {
    "objectID": "2gt/snt/7-informatique-embarquee/quiz/index.html",
    "href": "2gt/snt/7-informatique-embarquee/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 7: Informatique embarquée",
      "Quiz"
    ]
  },
  {
    "objectID": "2gt/snt/3-le-web/index.html",
    "href": "2gt/snt/3-le-web/index.html",
    "title": "Partie 3: Le Web",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus | Capacités attendues |\n\n\n\n\nRepères historiques | Connaître les étapes du développement du Web. |\n\n\nHypertexte | Maîtriser les renvois d’un texte à différents contenus. |\n\n\nRequête HTTP | Décomposer le contenu d’une requête HTTP et identifier les paramètres passés. |\n\n\nURL | Décomposer l’URL d’une page. | | Reconnaître les pages sécurisées. |\n\n\nModèle client/serveur | Inspecter le code d’une page hébergée par un serveur et distinguer ce qui est | | exécuté par le client et par le serveur. |\n\n\nLangages HTML et CSS | Distinguer ce qui relève du contenu d’une page et de son style | | de présentation. | | Étudier et modifier une page HTML simple. |\n\n\nMoteurs de recherche : | Mener une analyse critique des résultats fournis par un moteur | principes et usages | de recherche. | | Comprendre les enjeux de la publication d’informations. |\n\n\nParamètres de sécurité d’un | Maîtriser les réglages les plus importants concernant la | navigateur | gestion des cookies, la sécurité et la confidentialité d’un | | navigateur. | | Sécuriser sa navigation en ligne et analyser les pages et | | fichiers. |",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 3: Le Web"
    ]
  },
  {
    "objectID": "2gt/snt/3-le-web/index.html#lhypertexte",
    "href": "2gt/snt/3-le-web/index.html#lhypertexte",
    "title": "Partie 3: Le Web",
    "section": "1 L’hypertexte",
    "text": "1 L’hypertexte\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nEn utilisant les documents PP 58-59 du manuel de Delagrave, répondre aux questions suivantes :\n\nExpliquer ce qu’est un lien hypertexte, et quand il est apparu.\nQuelles relations existent entre l’hypertexte, les pages Web et les navigateurs.\nQuelle est la différence entre une page web statique et dynamique ?\n\n\n\n\n\n\nLes documents hypertextes ont été imaginés en 1965 par Ted Nelson puis mis en pratique dans le Web inventé en 1989 par Tim Berners-Lee.\n\n\nLien hypertexte\n\n\n\nUn lien hypertexte ou hyperlien permet de passer automatiquement d’un document consulté à un document lié.",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 3: Le Web"
    ]
  },
  {
    "objectID": "2gt/snt/3-le-web/index.html#le-langage-html",
    "href": "2gt/snt/3-le-web/index.html#le-langage-html",
    "title": "Partie 3: Le Web",
    "section": "2 Le langage html",
    "text": "2 Le langage html\nLes documents du web sont écrits en html(HypertText Markup Langage), le navigateur web traduit le code html et l’affiche à l’utilisateur.\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nCode HTML et rendu d’une page par le navigateur web.\n\n\n\nLe langage html est un langage qui utilise des balises ouvrantes &lt;balise&gt; et fermantes &lt;/balise&gt;.\n\n\n\nUn titre de niveau 1: &lt;h1&gt;Mon titre&lt;/h1&gt;\nUn lien hypertexte dans un paragraphe: &lt;p&gt;Le &lt;a href=\"https://www.w3.org/\"&gt;w3c&lt;/a&gt; gère les normes du web.&lt;/p&gt;\n\n\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nFaire l’exercice 1.\n\n\n\n\n\n\n\n\n\n\n\n\nEn plus: Les normes du html\n\n\n\n\n\n\nBien entendu, les premiers navigateurs n’étaient pas aussi évolués qu’aujourd’hui, vous pouvez d’ailleurs avoir une idée du rendu de cette page à l’époque de sa création à cette adresse: http://line-mode.cern.ch/www/hypertext/WWW/TheProject.html\nLe langage html ne cesse d’évoluer pour répondre à tous les nouveaux usages d’internet, utilisation d’écrans tactiles, lectures de vidéos, paiements…\nOn peut trouver sa spécification ici",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 3: Le Web"
    ]
  },
  {
    "objectID": "2gt/snt/3-le-web/index.html#les-adresses-url-uniforme-resource-locator",
    "href": "2gt/snt/3-le-web/index.html#les-adresses-url-uniforme-resource-locator",
    "title": "Partie 3: Le Web",
    "section": "3 Les adresses URL (Uniforme Resource Locator)",
    "text": "3 Les adresses URL (Uniforme Resource Locator)\nSur le web, chaque page web possède une adresse unique qui permet de l’identifier.\n\n\nURL\n\n\n\nUne URL ou adresse universelle est l’adresse d’une ressource donnée(document, image, vidéo…), unique sur le Web.\n\n\n\n\n\nboîte aux lettres électronique : mailto:gaston.lagaffe@mail.com ;\nnuméro de téléphone: tel:+33 1 234 567 890.\npage web: https://fr.wikipedia.org/wiki/Grace_Hopper#Anecdote\n\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nDescription complète d’une URL issue du site MDN sous licence CC-BY-SA 3.0\n\n\nArticle URL sur MDN\n\nUne URL se décompose en plusieurs parties :\n\nLe protocole (Obligatoire): http, https, mailto, tel…\nLe domaine précédé éventuellement du sous-domaine (Obligatoire): fr.wikipedia.org\nLe chemin vers la ressource sur le serveur: /blog/index.html\nL’ancre sur une partie de la page: #exo2\nLes paramètres d’URL: ?q=CSS&locale=ja\n\n\n\n\n/2gt/snt/3-le-web/#les-adresses-url\nhttps://developer.mozilla.org/fr/search?q=CSS&locale=ja\n\n\n\n\n\n\n\n\n\nEn plus: Caractères spéciaux dans les URL\n\n\n\n\n\n\nAttention de nombreux caractères sont interdits dans les URL. Vous rencontrerez parfois le %20, c’est tout simplement un espace, ou encore %C3%A9 pour é.\nPour connaitre les codes ouvrez votre console navigateur et tapez: encodeURI(\"é\").",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 3: Le Web"
    ]
  },
  {
    "objectID": "2gt/snt/3-le-web/index.html#le-protocole-http",
    "href": "2gt/snt/3-le-web/index.html#le-protocole-http",
    "title": "Partie 3: Le Web",
    "section": "4 Le protocole HTTP",
    "text": "4 Le protocole HTTP\nLe protocole HTTP (HyperText Transfer Protocol) gère l’échange de données entre le client et le serveur sur le Web.\n\nHTTPS est la version sécurisée du protocole HTTP dans laquelle les données échangées entre le client et le serveur sont cryptées.\n\n\nLe client effectue des demandes au serveur comme: - GET: Demande d’une page. - POST: Envoi de données. Pour un formulaire par exemple. - DELETE: Suppression d’une ressource du serveur. - …\n\nLes informations nécessaires à la requête sont placées dans des en-têtes un peu comme si les messages étaient placés dans une enveloppe.\n\nVoici la requête HTTP(un extrait) envoyée pour demander la page la page https://fr.wikipedia.org/wiki/Hypertext_Transfer_Protocol en cliquant sur le lien du moteur de recherche www.qwant.com.\nLa première ligne indique le type de requête(GET, POST…), l’adresse de la ressource et la version du protocole.\nGET /wiki/Hypertext_Transfer_Protocol HTTP/2\nHost: fr.wikipedia.org\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:80.0) Gecko/20100101 Firefox/80.0\nAccept-Language: fr,fr-FR;q=0.8,en-US;q=0.5,en;q=0.3\nReferer: https://www.qwant.com/\nCookie: WMF-Last-Access=14-Sep-2020; WMF-Last-Access-Global=14-Sep-2020; GeoIP=FR:PAC:Nice:43.71:7.26:v4;\n...\n\n\nLe serveur répond au client en commençant par lui envoyer un code d’état:\n - `200`: succès de la requête\n - ...\n - `301` ou `302`: redirection vers une autre page;\n - `404`: page non trouvée\n - ...\n - `500`: erreur du serveur\n - ...\n\n\nEt voici l’en-tête (un extrait) de la réponse du serveur:\nHTTP/2 200 OK\ndate: Sun, 13 Sep 2020 09:14:27 GMT\ncontent-language: fr\nlast-modified: Sun, 06 Sep 2020 18:23:06 GMT\ncontent-type: text/html; charset=UTF-8\ncontent-length: 33988\n...\nLa réponse renvoyée (après l’en-tête) étant la page html demandée dont nous parlerons juste après :\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"fr\"&gt;\n&lt;head&gt;\n&lt;meta charset=\"UTF-8\"/&gt;\n&lt;title&gt;Hypertext Transfer Protocol — Wikipédia&lt;/title&gt;\n...\n&lt;/html&gt;\n\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nEn analysant les en-têtes de la requête et de la réponse, expliquez quelles sont les informations:\n\nEnvoyées par le client,\net celles renvoyées par le serveur.",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 3: Le Web"
    ]
  },
  {
    "objectID": "2gt/snt/3-le-web/index.html#comment-fonctionne-un-moteur-de-recherche",
    "href": "2gt/snt/3-le-web/index.html#comment-fonctionne-un-moteur-de-recherche",
    "title": "Partie 3: Le Web",
    "section": "5 Comment fonctionne un moteur de recherche?",
    "text": "5 Comment fonctionne un moteur de recherche?\n\nVidéo servie sans cookie via yewtu.be\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nRépondre aux questions de l’activité PP 64-65 du manuel de Delagrave, puis conclure en expliquant quels sont les principaux critères de classement des résultats sur un moteur de recherche.\n\n\n\n\n\n\nDes robots logiciels explorent toutes les pages web: l’exploration.\nLes pages sont ensuite classées: l’indexation.\nLorsque l’utilisateur fait une recherche l’algorithme du moteur de recherche affiche une liste de pages en les classant dans un ordre qui lui est propre: le classement.\n\n\n\n\n\n\n\n\nEn plus: Impact écologique\n\n\n\n\n\n\nSelon l’étude de l’ADEME, aller directement à l’adresse d’un site, soit en tapant son adresse dans son navigateur, soit en l’ayant enregistré comme « favori » (plutôt que de rechercher ce site via un moteur de recherche) divise par 4 les émissions de gaz à effet de serre.",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 3: Le Web"
    ]
  },
  {
    "objectID": "2gt/snt/3-le-web/index.html#les-cookies",
    "href": "2gt/snt/3-le-web/index.html#les-cookies",
    "title": "Partie 3: Le Web",
    "section": "6 Les cookies",
    "text": "6 Les cookies\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nRépondre aux questions suivantes en utilisant les documents de l’activité PP 66-67 du manuel de Delagrave.\n\nComment paramétrer son navigateur pour améliorer sa confidentialité?\nQue sont les cookies? Et les cookies tiers?\nAi-je le droit de copier-coller n’importe quelles informations sur les sites web?\n\n\n\n\n\n\n\n\ncookie\n\n\n\nLes cookies sont de petits fichiers stockés sur votre navigateur par le serveur pour maintenir votre connexion ou stocker votre panier par exemple.\n\n\n\nLes cookies tiers sont des cookies déposés par des serveurs autres que ceux du site que vous visitez. Ces cookies sont souvent utilisés pour vous suivre lors de votre navigation afin d’établir un profil publicitaire ou autre.\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nParamétrage des cookies sur chromium",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 3: Le Web"
    ]
  },
  {
    "objectID": "2gt/snt/3-le-web/index.html#les-droits-sur-internet",
    "href": "2gt/snt/3-le-web/index.html#les-droits-sur-internet",
    "title": "Partie 3: Le Web",
    "section": "7 Les droits sur internet",
    "text": "7 Les droits sur internet\nLe droit d’auteur s’applique sur internet comme ailleurs. Tous les textes, photos, vidéos sont la propriété de leur auteur ou ayant-droits(maison de disques, descendants…) et ce jusqu’à leur entrée dans le domaine public 70 ans après la mort de leur auteur.\nCertains sites comme Wikipédia tentent de promouvoir un nouveau type de licence Creative Commons afin que les œuvres puissent être copiées, distribuées, modifiées et adaptées.\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nLa licence libre Creative Commons existe sous diverses variations plus ou moins ouvertes.©  CC BY-SA 4.0 via Wikimedia Commons",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 3: Le Web"
    ]
  },
  {
    "objectID": "2gt/snt/5-la-photographie-numerique/exo/index.html",
    "href": "2gt/snt/5-la-photographie-numerique/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Aucun exercice pour l’instant.",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 5: La photographie numérique",
      "Exercices"
    ]
  },
  {
    "objectID": "2gt/snt/5-la-photographie-numerique/quiz/index.html",
    "href": "2gt/snt/5-la-photographie-numerique/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 5: La photographie numérique",
      "Quiz"
    ]
  },
  {
    "objectID": "2gt/snt/6-les-reseaux-sociaux/exo/index.html",
    "href": "2gt/snt/6-les-reseaux-sociaux/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Soit le graphe d’amitié suivant.\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nExemple de graphe social\n\n\nEduscol\n\nDéterminer le ou les centres, le rayon et le diamètre.\nQue remarque-t-on?",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 6: Les réseaux sociaux",
      "Exercices"
    ]
  },
  {
    "objectID": "2gt/snt/6-les-reseaux-sociaux/exo/index.html#étude-dun-graphe",
    "href": "2gt/snt/6-les-reseaux-sociaux/exo/index.html#étude-dun-graphe",
    "title": "Exercices",
    "section": "",
    "text": "Soit le graphe d’amitié suivant.\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nExemple de graphe social\n\n\nEduscol\n\nDéterminer le ou les centres, le rayon et le diamètre.\nQue remarque-t-on?",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 6: Les réseaux sociaux",
      "Exercices"
    ]
  },
  {
    "objectID": "2gt/snt/6-les-reseaux-sociaux/quiz/index.html",
    "href": "2gt/snt/6-les-reseaux-sociaux/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "2<sup>de</sup> SNT",
      "Partie 6: Les réseaux sociaux",
      "Quiz"
    ]
  },
  {
    "objectID": "home.html",
    "href": "home.html",
    "title": "Accueil",
    "section": "",
    "text": "1 Bienvenue sur le site de NSI du lycée Estienne d’Orves à Nice\nCette nouvelle version du site a été réalisée avec Quarto.\nPour toutes suggestions ou remarques sur le contenu de ce site, contactez-moi sur github."
  },
  {
    "objectID": "blog/2023-02-03-ep2023/index.html",
    "href": "blog/2023-02-03-ep2023/index.html",
    "title": "Sujets et corrigés des épreuves pratiques de NSI 2023",
    "section": "",
    "text": "Comme l’année dernière, les sujets et corrigés proposés par Gilles Lassus sous licence CC-BY-SA ont été mis au format notebook pour s’entrainer en ligne notebook à l’adresse suivante: https://jupyterlite.lyceum.fr.\nLes 45 sujets de 2023 sont dans le répertoire ep-nsi-2023. Voici un lien direct vers le premier sujet.\n\n\n\n\n\n\nAstuce\n\n\n\nUn tableau en bas de page donne quelques caractéristiques des 45 sujets de 2023 avec leurs liens, difficultés et fonctions implémentées pour caque exercice.\n\n\nPour chaque sujet trois fichiers sont disponibles:\n\n23-NSI-xx.ipynb: le sujet au format notebook.\n23-NSI-xx.pdf: le sujet officiel disponible sur eduscol au format pdf.\n23-NSI-xx-correction.ipynb: la correction au format notebook proposée par Gilles Lassus sous licence CC-BY-SA.\n\nL’ensemble est hébergé sur framagit où vous pouvez proposer des corrections ou améliorations."
  },
  {
    "objectID": "blog/2023-02-03-ep2023/index.html#site-dentrainement-en-ligne",
    "href": "blog/2023-02-03-ep2023/index.html#site-dentrainement-en-ligne",
    "title": "Sujets et corrigés des épreuves pratiques de NSI 2023",
    "section": "",
    "text": "Comme l’année dernière, les sujets et corrigés proposés par Gilles Lassus sous licence CC-BY-SA ont été mis au format notebook pour s’entrainer en ligne notebook à l’adresse suivante: https://jupyterlite.lyceum.fr.\nLes 45 sujets de 2023 sont dans le répertoire ep-nsi-2023. Voici un lien direct vers le premier sujet.\n\n\n\n\n\n\nAstuce\n\n\n\nUn tableau en bas de page donne quelques caractéristiques des 45 sujets de 2023 avec leurs liens, difficultés et fonctions implémentées pour caque exercice.\n\n\nPour chaque sujet trois fichiers sont disponibles:\n\n23-NSI-xx.ipynb: le sujet au format notebook.\n23-NSI-xx.pdf: le sujet officiel disponible sur eduscol au format pdf.\n23-NSI-xx-correction.ipynb: la correction au format notebook proposée par Gilles Lassus sous licence CC-BY-SA.\n\nL’ensemble est hébergé sur framagit où vous pouvez proposer des corrections ou améliorations."
  },
  {
    "objectID": "blog/2023-02-03-ep2023/index.html#analyse-du-contenu-des-sujets",
    "href": "blog/2023-02-03-ep2023/index.html#analyse-du-contenu-des-sujets",
    "title": "Sujets et corrigés des épreuves pratiques de NSI 2023",
    "section": "2 Analyse du contenu des sujets",
    "text": "2 Analyse du contenu des sujets\n\nL’analyse se restreint à l’analyse du code grâce à l’outil radon et sa métrique de difficulté de Halstead.\n\n2.1 Comparaison par rapport aux années précédentes\nOutre le nombre de sujets qui passe à 45, on peut remarquer qu’ils sont d’une difficulté moyenne comparable à ceux de 2022 avec un écart type resserré.\n\n\n\nAnnée\nNombre de sujets\nDifficulté moyenne\nÉcart-type\n\n\n\n\n2021\n30\n5.3\n2.5\n\n\n2022\n40\n4.9\n2.4\n\n\n2023\n45\n4.8\n2.2\n\n\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nHistogramme de comparaison des difficultés des sujets selon la métrique de Halstead\n\n\n\n\n2.2 Comparaison des sujets entre eux\nTout d’abord, un histogramme des difficultés des sujets de 2023.\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nAttention la difficulté de Halstead n’est qu’un indicateur de la difficulté réelle de l’exercice! À utiliser avec précaution.\n\n\nVoici les liens vers les sujets classés par difficulté décroissante avec les difficultés de chaque exercice et le nom des fonctions de chaque exercice.\n\n\n\nsujet\ndifficulté1\ndifficulté2\ndifficulté\nfnames1\nfnames2\n\n\n\n\n23-NSI-43\n5\n4.8\n9.8\necriture_binaire_entier_positif\ntri_bulles\n\n\n23-NSI-36\n2.5\n6.9\n9.4\ncouples_consecutifs\npropager\n\n\n23-NSI-19\n6\n3.1\n9.1\nrecherche\nposition_alphabet, cesar\n\n\n23-NSI-12\n3.6\n4.8\n8.4\najoute, __init__, __repr__\nempaqueter\n\n\n23-NSI-28\n1.7\n6.2\n7.9\nmoyenne\ndichotomie\n\n\n23-NSI-26\n2.5\n4.8\n7.3\nmultiplication\ndichotomie\n\n\n23-NSI-11\n3.8\n3.4\n7.2\nconvertir\ntri_insertion\n\n\n23-NSI-18\n1\n6.2\n7.2\nmax_et_indice\nest_un_ordre, nombre_points_rupture\n\n\n23-NSI-09\n2.5\n4.6\n7.1\nmultiplication\nchercher\n\n\n23-NSI-42\n1.8\n5.1\n6.9\ntri_selection\nplus_ou_moins\n\n\n23-NSI-30\n1.3\n4.8\n6.1\nmoyenne\nbinaire\n\n\n23-NSI-24\n1\n5\n6\nnbr_occurrences\nfusion\n\n\n23-NSI-31\n1\n4.8\n5.8\nnb_repetitions\nbinaire\n\n\n23-NSI-07\n3.7\n2\n5.7\nfusion\ntraduire_romain\n\n\n23-NSI-45\n1.5\n4\n5.5\nrangement_valeurs, notes_triees\ndec_to_bin, bin_to_dec\n\n\n23-NSI-29\n1.5\n3.8\n5.3\ntaille, hauteur, __init__\najoute\n\n\n23-NSI-34\n1.8\n3.3\n5.1\nmoyenne\ntri\n\n\n23-NSI-23\n0.5\n4.5\n5\nselection_enclos\ntrouver_intrus\n\n\n23-NSI-14\n1.5\n3.3\n4.8\nrecherche\ninsere\n\n\n23-NSI-16\n1.3\n3.4\n4.7\nrecherche_indices_classement\nmoyenne\n\n\n23-NSI-04\n1.8\n2.9\n4.7\na_doublon\nvoisinage, incremente_voisins, genere_grille\n\n\n23-NSI-37\n2.6\n2\n4.6\nrecherche\n__init__, liste_octet, est_reservee, adresse_suivante\n\n\n23-NSI-08\n0.5\n3.8\n4.3\nmax_dico\n__init__, est_vide, empiler, depiler, eval_expression\n\n\n23-NSI-17\n2.4\n1.7\n4.1\nmoyenne\npascal\n\n\n23-NSI-33\n3.5\n0.5\n4\ntaille\ntri_selection\n\n\n23-NSI-39\n2.7\n1.2\n3.9\nfibonacci\npantheon\n\n\n23-NSI-41\n1\n2.9\n3.9\nrecherche\nrendu_glouton\n\n\n23-NSI-27\n0.5\n3.3\n3.8\nrecherche_min\nsepare\n\n\n23-NSI-40\n1.7\n2\n3.7\nnombre_de_mots\n__init__, getValeur, droitExiste, gaucheExiste, inserer\n\n\n23-NSI-22\n1.7\n2\n3.7\nliste_puissances, liste_puissances_borne\nest_parfait\n\n\n23-NSI-35\n1.5\n2.2\n3.7\nou_exclusif\n__init__, affiche, somme_ligne, somme_col, est_semimagique\n\n\n23-NSI-20\n1\n2.5\n3.5\najoute_dictionnaires\nnbre_coups\n\n\n23-NSI-03\n2.9\n0.5\n3.4\nmoyenne\naffiche, zoomListe, zoomDessin\n\n\n23-NSI-01\n1\n2.3\n3.3\nverifie\ndepouille, vainqueur\n\n\n23-NSI-25\n1\n2.2\n3.2\nenumere\ninsere, __init__, parcours\n\n\n23-NSI-13\n1\n2\n3\nrecherche\nrendu_monnaie\n\n\n23-NSI-21\n0.5\n2.5\n3\ndelta\n__init__, __str__, est_une_feuille, expression_infixe\n\n\n23-NSI-05\n1.8\n1\n2.8\nlancer, paire_6\nnbLig, nbCol, negatif, binaire\n\n\n23-NSI-38\n1\n1.8\n2.8\ncorrespond\nest_cyclique\n\n\n23-NSI-06\n0.5\n2.2\n2.7\nrecherche\ndistance, plus_courte_distance\n\n\n23-NSI-32\n1.3\n1\n2.3\nmin_et_max\n__init__, get_valeur, get_couleur, get_carte\n\n\n23-NSI-02\n1.3\n1\n2.3\nindices_maxi\npositif\n\n\n23-NSI-15\n0.5\n1\n1.5\nmini\ninverse_chaine, est_palindrome, est_nbre_palindrome\n\n\n23-NSI-44\n0.5\n1\n1.5\nrenverse\ncrible\n\n\n23-NSI-10\n0.5\n0.6\n1.1\nmaxliste\n__init__, est_vide, empiler, depiler, parenthesage"
  },
  {
    "objectID": "blog/2022-05-01-sentrainer-aux-epreuves-pratiques-de-nsi/index.html",
    "href": "blog/2022-05-01-sentrainer-aux-epreuves-pratiques-de-nsi/index.html",
    "title": "S’entrainer aux épreuves pratiques de NSI",
    "section": "",
    "text": "J’ai mis à disposition l’ensemble des sujets et corrigés de l’épreuve pratique de NSI au format notebook à l’adresse suivante: https://jupyterlite.lyceum.fr.\nLes 40 sujets de 2022 sont dans le répertoire ep-nsi-2022. Voici un lien direct vers le premier sujet.\nPour chaque sujet trois fichiers sont disponibles:\n\n22-NSI-xx.ipynb: le sujet au format notebook.\n22-NSI-xx.pdf: le sujet officiel disponible sur eduscol au format pdf.\n22-NSI-xx-correction.ipynb: la correction au format notebook proposée par Gilles Lassus sous licence CC-BY-SA.\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nCopie d’écran du site jupyterlite d’entrainement aux épreuves pratiques\n\n\nL’ensemble est hébergé sur framagit où vous pouvez proposer des corrections ou améliorations."
  },
  {
    "objectID": "blog/2022-11-22-densite-flottants/index.html",
    "href": "blog/2022-11-22-densite-flottants/index.html",
    "title": "Densité des nombres flottants",
    "section": "",
    "text": "Pour rappel, il est très fréquent d’encoder les nombres à virgule sous forme de nombre flottant sous la forme:\nsm⋅2n\ns\\ m \\cdot 2^n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nPour encoder un nombre flottant on\nutilise 1 bit de signe f bits pour la mantisse et e bits pour l'exposant.©  CC BY-SA 3.0 via Wikimedia Commons\nIl faut cependant bien comprendre que la représentation des nombres flottants est loin d’être continue comme les nombres réels mathématiques."
  },
  {
    "objectID": "blog/2022-11-22-densite-flottants/index.html#représentation-dun-nombre-normalisée",
    "href": "blog/2022-11-22-densite-flottants/index.html#représentation-dun-nombre-normalisée",
    "title": "Densité des nombres flottants",
    "section": "1 Représentation d’un nombre normalisée",
    "text": "1 Représentation d’un nombre normalisée\n\nle signe, +1 ou -1, sous la forme d’un bit ;\nl’exposant décalé, sous la forme de e bits représentant un nombre entier ;\nla mantisse, sous la forme de m bits représentant un nombre positif strictement inférieur à 1.\n\nLa valeur du nombre représenté vaut : valeur = signe × (1 + mantisse) × 2^(exposant − décalage)^\nC’est ce qu’on appelle la représentation d’un nombre normalisé.\nTous les nombres réels ne sont pas représentés et les nombres ne sont pas régulièrement espacés comme le montre la représentation graphique ci-dessous pour des nombres flottants représentés sur 7 bits avec 3 bits de mantisse et 3 bits d’exposant.\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib import ticker\nfrom scipy.stats import gaussian_kde\nfrom lyceum.repr import bin2float\n# On limite les points pour y voir quelquechose\nNBITS = 7\nEXPOSANT=3\nMANTISSE=3\nx_list= [i for i in range(2**NBITS)]\nN = len(x_list)\nx = np.array(x_list)\nx_bin = np.array([format(i, f'0{NBITS}b') for i in x])\n\ny = np.array([bin2float(i, e=EXPOSANT, f=MANTISSE) for i in x_bin])\n\n# Calculate the point density\nxy = np.vstack([x,y])\nz = gaussian_kde(xy)(xy)\n# Sort the points by density, so that the densest points are plotted last\nidx = z.argsort()\nx, y, z = x[idx], y[idx], z[idx]\n\nfig, ax = plt.subplots()\nim = ax.scatter(x, y, marker='+', c=z, s=100, alpha=0.5)\n\nxs = [i for i in x_list if 10*i % 2**(NBITS-2) == 0] + [2**(NBITS)-1]\nx_labels = [format(i, f'0{NBITS}b') for i in xs]\nplt.xticks(xs, x_labels, rotation='vertical')\nplt.xlabel(\"Valeur binaire\")\nplt.ylabel(\"Valeur décimale du nombre flottant\")\nplt.title('Densité des valeurs flottantes sur 7 bits(e=3, f=3)',pad=30)\n\n\n# Add colorbar\ncbar = fig.colorbar(im, label=\"Densité des nombres\")\n#ax.set_yscale('log')\nplt.show()\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\n\n\n\n\nOn voit que la densité est plus importante pour les nombres autour de 100=110^0 = 1 et plus faible pour les très petits et très grands nombres."
  },
  {
    "objectID": "blog/2022-11-22-densite-flottants/index.html#représentation-dun-nombre-dénormalisée",
    "href": "blog/2022-11-22-densite-flottants/index.html#représentation-dun-nombre-dénormalisée",
    "title": "Densité des nombres flottants",
    "section": "2 Représentation d’un nombre dénormalisée",
    "text": "2 Représentation d’un nombre dénormalisée\nLa norme IEEE-754 prévoit d’attribuer des valeurs spéciales aux nombres ayant un exposant nul ou maximum.\nNotamment pour les nombres avec un exposant nul et une mantisse non nulle, on utilise une représentation d’un nombre dénormalisé.\nLa valeur du nombre représenté vaut : valeur = signe × (mantisse) × 2^− décalage^\n\n# On limite les points pour y voir quelquechose\nNBITS = 7\nEXPOSANT=3\nMANTISSE=3\nx_list= [i for i in range(2**NBITS)]\nN = len(x_list)\nx = np.array(x_list)\nx_bin = np.array([format(i, f'0{NBITS}b') for i in x])\n\ny = np.array([bin2float(i, e=EXPOSANT, f=MANTISSE, ieee=True) for i in x_bin])\nnp.nan_to_num(y, copy=False, nan=2**(NBITS-2.5), posinf=2**(NBITS-2), neginf=-2**(NBITS-2))\n# Calculate the point density\nxy = np.vstack([x,y])\nz = gaussian_kde(xy)(xy)\n# Sort the points by density, so that the densest points are plotted last\nidx = z.argsort()\nx, y, z = x[idx], y[idx], z[idx]\n\nfig, ax = plt.subplots()\nim = ax.scatter(x, y, marker='+', c=z, s=100, alpha=0.5)\n\nxs = [i for i in x_list if 10*i % 2**(NBITS-2) == 0] + [2**(NBITS)-1]\nx_labels = [format(i, f'0{NBITS}b') for i in xs]\nplt.xticks(xs, x_labels, rotation='vertical')\nplt.xlabel(\"Valeur binaire\")\nplt.ylabel(\"Valeur décimale du nombre flottant\")\nplt.title('Densité des valeurs flottantes sur 7 bits(e=3, f=3)',pad=15)\nplt.suptitle('La norme IEEE754 est appliquée avec les valeurs normalisés les nan et les infinis')\n# Add colorbar\ncbar = fig.colorbar(im, label=\"Densité des nombres\")\n#ax.set_yscale('log')\nplt.show()\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\n\n\n\n\nOn peut voir que l’on a perdu en étendue, mais cela d’avoir des points trop éloignés pour les grandes valeurs.\nD’autre part, grâce à la normalisation la densité semble plus uniforme."
  },
  {
    "objectID": "tg/sci/2-le-futur-des-energies/8-choix-energetiques-et-impacts-sur-les-societes/exo/index.html",
    "href": "tg/sci/2-le-futur-des-energies/8-choix-energetiques-et-impacts-sur-les-societes/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Aucun exercice pour l’instant.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 2: Le futur des énergies",
      "Chapitre 8: Choix énergétiques et impacts sur les sociétés",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/sci/2-le-futur-des-energies/8-choix-energetiques-et-impacts-sur-les-societes/quiz/index.html",
    "href": "tg/sci/2-le-futur-des-energies/8-choix-energetiques-et-impacts-sur-les-societes/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 2: Le futur des énergies",
      "Chapitre 8: Choix énergétiques et impacts sur les sociétés",
      "Quiz"
    ]
  },
  {
    "objectID": "tg/sci/2-le-futur-des-energies/5-deux-siecles-denergie-electrique/index.html",
    "href": "tg/sci/2-le-futur-des-energies/5-deux-siecles-denergie-electrique/index.html",
    "title": "Chapitre 5: Deux siècles d’énergie électrique",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nSavoirs\nSavoir-faire\n\n\n\n\nLes alternateurs électriques exploitent le phénomène d’induction électromagnétique découvert par Faraday puis théorisé par Maxwell au XIXe siècle.\nIls réalisent une conversion d’énergie mécanique en énergie électrique avec un rendement potentiellement très proche de 1.\nReconnaître les éléments principaux d’un alternateur (source de champ magnétique et fil conducteur mobile) dans un schéma fourni.\nAnalyser les propriétés d’un alternateur modèle étudié expérimentalement en classe. Définir le rendement d’un alternateur et citer un phénomène susceptible de l’influencer.\n\n\nAu début du XXe siècle, la physique a connu une révolution conceptuelle à travers la vision quantique qui introduit un comportement probabiliste de la nature. Le caractère discret des spectres de raies d’émission des atomes s’explique de cette façon.\nInterpréter et exploiter un spectre d’émission atomique.\n\n\nL’exploitation technologique des matériaux semi-conducteurs, en particulier du silicium, en est également une conséquence.\nCes matériaux sont utilisés en électronique et sont constitutifs des capteurs photovoltaïques. Ceux-ci absorbent l’énergie radiative et la convertissent en énergie électrique.\nComparer le spectre d’absorption d’un matériau semi-conducteur et le spectre solaire pour décider si ce matériau est susceptible d’être utilisé pour fabriquer un capteur photovoltaïque.\nTracer la caractéristique i(u) d’une cellule photovoltaïque et exploiter cette représentation pour déterminer la résistance d’utilisation maximisant la puissance électrique délivrée.\nDans ce chapitre nous allons voir deux inventions qui permettent la production d’énergie électrique:\nVoici une vidéo d’excellente qualité produite par la BBC qui retrace l”«âge des inventions» de l’électricité durant le XIXe siècle et diffusée sur arte.tv.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 2: Le futur des énergies",
      "Chapitre 5: Deux siècles d’énergie électrique"
    ]
  },
  {
    "objectID": "tg/sci/2-le-futur-des-energies/5-deux-siecles-denergie-electrique/index.html#lalternateur",
    "href": "tg/sci/2-le-futur-des-energies/5-deux-siecles-denergie-electrique/index.html#lalternateur",
    "title": "Chapitre 5: Deux siècles d’énergie électrique",
    "section": "1 L’alternateur",
    "text": "1 L’alternateur\nL’alternateur permet la conversion d’énergie mécanique en énergie électrique.\n\nAlternateur d’une voiture thermique\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nPour recharger la batterie du véhicule, l'alternateur est entraîné par le moteur via une courroie.©  CC BY-SA 3.0 via Wikimedia Commons\n\n\n1.1 Principe de l’alternateur\nL’alternateur utilise le phénomène d’induction électromagnétique découvert par Faraday au XIXe siècle.\n\n\nUn fil électrique fixe(le stator) soumis à un champ magnétique tournant (le rotor) produit un mouvement alternatif des électrons au sein du stator: on crée ainsi un courant alternatif.\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nLe mouvement de rotation de l'aimant produit un courant alternatif par l'effet d 'induction éléctromagnétique dans le fil conducteur électrique.©  CC BY 3.0 via Wikimedia Commons\n\n\n\n\n\n\n\nEn plus: La bobine\n\n\n\n\n\n\nOn utilise souvent une bobine pour produire le courant électrique. Une bobine est enroulement de fil électrique qui lorsqu’elle est parcourue un courant produit un champ magnétique.\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nUne bobine électronique de faible puissance. Les bobines haute-puissance dont au contraire utilisées en électrotechnique.©  CC BY-SA 4.0 via Wikimedia Commons\n\n\n\n\n\n\n\n1.2 Rendement d’un alternateur\nLe rendement η\\eta de l’alternateur est le quotient de l’énergie électrique obtenue par de l’énergie mécanique fournie.\nη=PélectriquePmécanique\n\\eta = \\frac{P_{électrique}}{P_{mécanique}}\n\n\nLes alternateurs réalisent une conversion d’énergie mécanique en énergie électrique avec un rendement potentiellement très proche de 1.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 2: Le futur des énergies",
      "Chapitre 5: Deux siècles d’énergie électrique"
    ]
  },
  {
    "objectID": "tg/sci/2-le-futur-des-energies/5-deux-siecles-denergie-electrique/index.html#les-cellules-photovoltaïques",
    "href": "tg/sci/2-le-futur-des-energies/5-deux-siecles-denergie-electrique/index.html#les-cellules-photovoltaïques",
    "title": "Chapitre 5: Deux siècles d’énergie électrique",
    "section": "2 Les cellules photovoltaïques",
    "text": "2 Les cellules photovoltaïques\nVidéo servie sans cookie via yewtu.be\nLes cellules photovoltaïques sont aujourd’hui utilisées pour convertir l’énergie radiative solaire en énergie électrique. C’est une technologie autour de laquelle la recherche est acharnée compte tenu des impacts économiques et environnementaux envisageables.\nCe type de cellules utilise des matériaux bien particuliers utilisés en électronique: les semi-conducteurs comme le silicium.\n\n2.1 Qu’est-ce qu’un semi-conducteur?\nVous avez déjà vu que les atomes présentent des spectres discrets qui ont été expliqués au début du XXe siècle par la description quantique de la matière à l’échelle de l’infiniment petit.\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nLes raies d'émission de l'hydrogène sont dues à la liberation de photons lors du passage d'un atome d'un niveau d'énergie à un autre.©  CC BY 2.5 via Wikimedia Commons\nLes spectres des solides présentent quant à eux des bandes d’énergie.\nUn matériau semi-conducteur est un matériau dont les bandes de conduction et de valence sont disjointes, mais proches.\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nDans un matériau semi-conducteur la bande de conduction est proche de la bande de valence.©  CC BY-SA 4.0 via Wikimedia Commons\n\n\n2.2 Rendement de la conversion\n\nPour être efficace et rentable, le matériau semi-conducteur doit absorber un maximum de l’énergie radiative solaire pour la convertir en énergie électrique.\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nLe maximum d’émission du spectre solaire est dans le vert (λ=504 nm). Une cellule photodiode en silicium a son maximum d'absorption aux alentours de 1µm(IR), absorbe tout de même une grande partie du spectre solaire.©  CC BY-SA 4.0 via Wikimedia Commons\n\n\n\n\n\n\n\n\nEn plus: Rendement des cellules photovoltaïques\n\n\n\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nLa limite théorique de rendement dite limite de Shockley-Queisser est de l'ordre de 33% pour une\ncellule unijonction, les meilleures cellules de ce type ont actuellement un rendement de 20 à 25%,\nmais on peut améliorer le rendement en utilisant par exemple des cellules à jonctions multiples. Public domain via Wikimedia Commons",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 2: Le futur des énergies",
      "Chapitre 5: Deux siècles d’énergie électrique"
    ]
  },
  {
    "objectID": "tg/sci/2-le-futur-des-energies/7-optimisation-du-transport-de-lelectricite/exo/index.html",
    "href": "tg/sci/2-le-futur-des-energies/7-optimisation-du-transport-de-lelectricite/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Aucun exercice pour l’instant.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 2: Le futur des énergies",
      "Chapitre 7: Optimisation du transport de l’électricité",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/sci/2-le-futur-des-energies/7-optimisation-du-transport-de-lelectricite/quiz/index.html",
    "href": "tg/sci/2-le-futur-des-energies/7-optimisation-du-transport-de-lelectricite/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 2: Le futur des énergies",
      "Chapitre 7: Optimisation du transport de l’électricité",
      "Quiz"
    ]
  },
  {
    "objectID": "tg/sci/2-le-futur-des-energies/6-les-atouts-de-lelectricite/index.html",
    "href": "tg/sci/2-le-futur-des-energies/6-les-atouts-de-lelectricite/index.html",
    "title": "Chapitre 6: Les atouts de l’électricité",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nSavoirs\nSavoir-faire\n\n\n\n\nTrois méthodes permettent d’obtenir de l’énergie électrique sans nécessiter de combustion :\n\nla conversion d’énergie mécanique, soit directe (dynamos, éoliennes, hydroliennes, barrages hydroélectriques), soit indirecte à partir d’énergie thermique (centrales nucléaires, centrales solaires thermiques, géothermie);\nla conversion de l’énergie radiative reçue du Soleil (panneaux photovoltaïques);\nla conversion électrochimique (piles ou accumulateurs conventionnels, piles à hydrogène).\n\nDécrire des exemples de chaînes de transformations énergétiques permettant d’obtenir de l’énergie électrique à partir de différentes ressources primaires d’énergie.\nCalculer le rendement global d’un système de conversion d’énergie.\n\n\nCes méthodes sans combustion ont néanmoins un impact sur l’environnement et la biodiversité ou présentent des risques spécifiques (pollution chimique, déchets radioactifs, accidents industriels…).\nAnalyser des documents présentant les conséquences de l’utilisation de ressources géologiques (métaux rares, etc.).\n\n\nPour faire face à l’intermittence liée à certains modes de production ou à la consommation, l’énergie électrique doit être convertie sous une forme stockable :\n\nénergie chimique (accumulateurs);\nénergie potentielle (barrages);\nénergie électromagnétique (super- capacités).\n\nComparer différents dispositifs de stockage d’énergie selon différents critères (masses mises en jeu, capacité et durée de stockage, impact écologique).",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 2: Le futur des énergies",
      "Chapitre 6: Les atouts de l’électricité"
    ]
  },
  {
    "objectID": "tg/sci/2-le-futur-des-energies/6-les-atouts-de-lelectricite/index.html#comment-produire-de-lénergie-électrique-sans-combustion",
    "href": "tg/sci/2-le-futur-des-energies/6-les-atouts-de-lelectricite/index.html#comment-produire-de-lénergie-électrique-sans-combustion",
    "title": "Chapitre 6: Les atouts de l’électricité",
    "section": "1 Comment produire de l’énergie électrique sans combustion?",
    "text": "1 Comment produire de l’énergie électrique sans combustion?\nTrois méthodes permettent d’obtenir de l’énergie électrique sans nécessiter de combustion :\n\nla conversion d’énergie mécanique,\n\nsoit directe (dynamos, éoliennes, hydroliennes, barrages hydroélectriques),\nsoit indirecte à partir d’énergie thermique (centrales nucléaires, centrales solaires thermiques, géothermie);\n\n\nla conversion de l’énergie radiative reçue du Soleil (panneaux photovoltaïques);\n\nla conversion électrochimique (piles ou accumulateurs conventionnels, piles à hydrogène).",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 2: Le futur des énergies",
      "Chapitre 6: Les atouts de l’électricité"
    ]
  },
  {
    "objectID": "tg/sci/2-le-futur-des-energies/6-les-atouts-de-lelectricite/index.html#rendement-de-conversion",
    "href": "tg/sci/2-le-futur-des-energies/6-les-atouts-de-lelectricite/index.html#rendement-de-conversion",
    "title": "Chapitre 6: Les atouts de l’électricité",
    "section": "2 Rendement de conversion",
    "text": "2 Rendement de conversion\n\n\nRendement\n\n\n\nÀ puissance constante, le rendement rr est le rapport entre l’énergie (ou la puissance) après conversion et l’énergie (ou la puissance) avant conversion.\n\n\n\nr=EsortieEentrée=PsortiePentrée\nr=\\frac{E_{sortie}}{E_{entrée}}=\\frac{P_{sortie}}{P_{entrée}}\n\n\nLe rendement a toujours une valeur comprise entre 0 et 1. On l’exprime souvent en pourcentage.\n\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nChantier du réacteur EPR de Flamanville en 2010. Celui-ci devait être mis en service en 2012, mais n'est toujours pas en service en 2022.©  CC BY 3.0 via Wikimedia Commons\nLe réacteur EPR(dit aussi de troisième génération) de Flamanville 3 est dimensionné avec une puissance thermique de 4 300 MW, pour une puissance électrique délivrée sur le réseau de 1 630 MW.\n\nCalculer son rendement.\nLe comparer au rendement des réacteurs de Flamanville 1 et 2 de deuxième génération puissance thermique de 3817 MW, pour une puissance électrique délivrée sur le réseau de 1 330 MW.\n\nArticle Wikipédia",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 2: Le futur des énergies",
      "Chapitre 6: Les atouts de l’électricité"
    ]
  },
  {
    "objectID": "tg/sci/2-le-futur-des-energies/6-les-atouts-de-lelectricite/index.html#comment-stocker-lénergie-électrique",
    "href": "tg/sci/2-le-futur-des-energies/6-les-atouts-de-lelectricite/index.html#comment-stocker-lénergie-électrique",
    "title": "Chapitre 6: Les atouts de l’électricité",
    "section": "3 Comment stocker l’énergie électrique ?",
    "text": "3 Comment stocker l’énergie électrique ?\nPour faire face à l’intermittence liée à certains modes de production ou à la consommation, l’énergie électrique doit être convertie sous une forme stockable :\n\nénergie chimique (accumulateurs),\nénergie potentielle (barrages),\nénergie électromagnétique (super-capacités).",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 2: Le futur des énergies",
      "Chapitre 6: Les atouts de l’électricité"
    ]
  },
  {
    "objectID": "tg/sci/2-le-futur-des-energies/index.html",
    "href": "tg/sci/2-le-futur-des-energies/index.html",
    "title": "Partie 2: Le futur des énergies",
    "section": "",
    "text": "Chapitre 5: Deux siècles d’énergie électrique\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 6: Les atouts de l’électricité\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 7: Optimisation du transport de l’électricité\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 8: Choix énergétiques et impacts sur les sociétés\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAucun article correspondant",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 2: Le futur des énergies"
    ]
  },
  {
    "objectID": "tg/sci/3-une-histoire-du-vivant/9-la-biodiversite-et-son-evolution/exo/index.html",
    "href": "tg/sci/3-une-histoire-du-vivant/9-la-biodiversite-et-son-evolution/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Aucun exercice pour l’instant.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 3: Une histoire du vivant",
      "Chapitre 9: La biodiversité et son évolution",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/sci/3-une-histoire-du-vivant/9-la-biodiversite-et-son-evolution/quiz/index.html",
    "href": "tg/sci/3-une-histoire-du-vivant/9-la-biodiversite-et-son-evolution/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 3: Une histoire du vivant",
      "Chapitre 9: La biodiversité et son évolution",
      "Quiz"
    ]
  },
  {
    "objectID": "tg/sci/3-une-histoire-du-vivant/11-levolution-humaine/index.html",
    "href": "tg/sci/3-une-histoire-du-vivant/11-levolution-humaine/index.html",
    "title": "Chapitre 11: L’évolution humaine",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nSavoirs\nSavoir-faire\n\n\n\n\nL’espèce humaine actuelle (Homo sapiens) fait partie du groupe des primates et est plus particulièrement apparentée aux grands singes avec lesquels elle partage des caractères morpho-anatomiques et des similitudes génétiques.\nC’est avec le chimpanzé qu’elle partage le plus récent ancêtre commun.\nAnalyser des matrices de comparaison de caractères morpho-anatomiques résultant d’innovations évolutives afin d’établir des liens de parenté et de construire un arbre phylogénétique.\nMettre en relation la ressemblance génétique entre les espèces de primates et leur degré de parenté.\n\n\nDes arguments scientifiques issus de l’analyse comparée de fossiles permettent de reconstituer l’histoire de nos origines.\nL’étude de fossiles datés de 3 à 7 millions d’années montre des innovations caractéristiques de la lignée humaine (bipédie prolongée, forme de la mandibule).\nPositionner quelques espèces fossiles dans un arbre phylogénétique, à partir de l’étude de caractères.\n\n\nLe genre Homo regroupe l’espèce humaine actuelle et des espèces fossiles qui se caractérisent notamment par le développement de la capacité crânienne. Plusieurs espèces humaines ont cohabité sur Terre.\nCertains caractères sont transmis de manière non génétique : microbiote, comportements appris dont la langue, les habitudes alimentaires, l’utilisation d’outils…\nAnalyser des arguments scientifiques qui ont permis de préciser la parenté de Homo sapiens avec les autres Homo, et notamment la parenté éventuelle avec les Néandertaliens ou les Dénisoviens.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 3: Une histoire du vivant",
      "Chapitre 11: L’évolution humaine"
    ]
  },
  {
    "objectID": "tg/sci/3-une-histoire-du-vivant/10-levolution-comme-grille-de-lecture-du-monde/exo/index.html",
    "href": "tg/sci/3-une-histoire-du-vivant/10-levolution-comme-grille-de-lecture-du-monde/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Aucun exercice pour l’instant.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 3: Une histoire du vivant",
      "Chapitre 10: L’évolution comme grille de lecture du monde",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/sci/3-une-histoire-du-vivant/10-levolution-comme-grille-de-lecture-du-monde/quiz/index.html",
    "href": "tg/sci/3-une-histoire-du-vivant/10-levolution-comme-grille-de-lecture-du-monde/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 3: Une histoire du vivant",
      "Chapitre 10: L’évolution comme grille de lecture du monde",
      "Quiz"
    ]
  },
  {
    "objectID": "tg/sci/3-une-histoire-du-vivant/13-lintelligence-artificielle/index.html",
    "href": "tg/sci/3-une-histoire-du-vivant/13-lintelligence-artificielle/index.html",
    "title": "Chapitre 13: L’intelligence artificielle",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nSavoirs\nSavoir-faire\n\n\n\n\nJusqu’au début du XXe siècle, les machines traitant l’information sont limitées à une ou quelques tâches prédéterminées (tisser grâce à un ruban ou des cartes perforées, trier un jeu de carte perforées, séparer des cartes selon un critère, sommer des valeurs indiquées sur ces cartes, …). Turing a été le premier à proposer le concept de machine universelle qui a été matérialisé dix ans plus tard avec les premiers ordinateurs. Ceux-ci sont constitués a minima d’un processeur et d’une mémoire vive.\nAnalyser des documents historiques relatifs au traitement de l’information et à son automatisation.\nRecenser les différentes situations de la vie courante où sont utilisés les ordinateurs, identifier lesquels sont programmables et par qui (thermostat d’ambiance, smartphone, box internet, ordinateur de bord d’une voiture…).\n\n\nUn ordinateur peut manipuler des données de natures diverses une fois qu’elles ont été numérisées : textes, images, sons. Les programmes sont également des données : ils peuvent être stockés, transportés, et traités par des ordinateurs. En particulier, un programme écrit dans un langage de programmation de haut niveau (Python, Scratch…) peut être traduit en instructions spécifiques à chaque type de processeur.\nSavoir distinguer les fichiers exécutables des autres fichiers sous un système d’exploitation donné.\nConnaître l’ordre de grandeur de la taille d’un fichier image, son, vidéo.\nSavoir calculer la taille en octets d’une page de texte (en ASCII et non compressé).\n\n\nUn programme peut comporter jusqu’à plusieurs centaines de millions de lignes de code, ce qui rend très probable la présence d’erreurs appelées bogues (ou bugs). Ces erreurs peuvent conduire un programme à avoir un comportement inattendu et entraîner des conséquences graves.\nÉtant donné un programme très simple, proposer des jeux de données d’entrée permettant d’en tester toutes les lignes.\nCorriger un algorithme ou un programme bogué simple.\n\n\nLe terme « intelligence artificielle » (IA) recouvre un ensemble de théories et de techniques qui traite de problèmes dont la résolution fait appel à l’intelligence humaine.\nL’apprentissage machine (ou « apprentissage automatique ») utilise des programmes capables de s’entraîner à partir de données. Il exploite des méthodes mathématiques qui, à partir du repérage de tendances (corrélations, similarités) sur de très grandes quantités de données (big data), permet de faire des prédictions ou de prendre des décisions sur d’autres données.\nLa qualité et la représentativité des données d’entraînement sont essentielles pour la qualité des résultats. Les biais dans les données peuvent se retrouver amplifiés dans les résultats.\nAnalyser des documents relatifs à une application de l’intelligence artificielle.\nUtiliser une courbe de tendance (encore appelée courbe de régression) pour estimer une valeur inconnue à partir de données d’entraînement.\nAnalyser un exemple d’utilisation de l’intelligence artificielle : identifier la source des données utilisées et les corrélations exploitées.\nSur des exemples réels, reconnaître les possibles biais dans les données, les limites de la représentativité.\nExpliquer pourquoi certains usages de l’IA peuvent poser des problèmes éthiques.\n\n\nL’inférence bayésienne est une méthode de calcul de probabilités de causes à partir des probabilités de leurs effets. Elle est utilisée en apprentissage automatique pour modéliser des relations au sein de systèmes complexes, notamment en vue de prononcer un diagnostic (médical, industriel, détection de spam…). Cela permet de détecter une anomalie à partir d’un test imparfait.\nÀ partir de données, par exemple issues d’un diagnostic médical fondé sur un test, produire un tableau de contingence afin de calculer des fréquences de faux positifs, faux négatifs, vrais positifs, vrais négatifs. En déduire le nombre de personnes malades suivant leur résultat au test.\nVoici un excellent article du CEA qui explique L’essentiel sur … L’intelligence artificielle.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 3: Une histoire du vivant",
      "Chapitre 13: L’intelligence artificielle"
    ]
  },
  {
    "objectID": "tg/sci/3-une-histoire-du-vivant/13-lintelligence-artificielle/index.html#quest-ce-que-lintelligence-artificielle",
    "href": "tg/sci/3-une-histoire-du-vivant/13-lintelligence-artificielle/index.html#quest-ce-que-lintelligence-artificielle",
    "title": "Chapitre 13: L’intelligence artificielle",
    "section": "1 Qu’est-ce que l’intelligence artificielle ?",
    "text": "1 Qu’est-ce que l’intelligence artificielle ?\nVidéo servie sans cookie via yewtu.be",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 3: Une histoire du vivant",
      "Chapitre 13: L’intelligence artificielle"
    ]
  },
  {
    "objectID": "tg/sci/3-une-histoire-du-vivant/13-lintelligence-artificielle/index.html#comment-fonctionne-une-ia",
    "href": "tg/sci/3-une-histoire-du-vivant/13-lintelligence-artificielle/index.html#comment-fonctionne-une-ia",
    "title": "Chapitre 13: L’intelligence artificielle",
    "section": "2 Comment fonctionne une IA ?",
    "text": "2 Comment fonctionne une IA ?\nVidéo servie sans cookie via yewtu.be",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 3: Une histoire du vivant",
      "Chapitre 13: L’intelligence artificielle"
    ]
  },
  {
    "objectID": "tg/sci/3-une-histoire-du-vivant/13-lintelligence-artificielle/index.html#lhistoire-de-lintelligence-artificielle",
    "href": "tg/sci/3-une-histoire-du-vivant/13-lintelligence-artificielle/index.html#lhistoire-de-lintelligence-artificielle",
    "title": "Chapitre 13: L’intelligence artificielle",
    "section": "3 L’histoire de l’intelligence artificielle",
    "text": "3 L’histoire de l’intelligence artificielle\nVidéo servie sans cookie via yewtu.be",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 3: Une histoire du vivant",
      "Chapitre 13: L’intelligence artificielle"
    ]
  },
  {
    "objectID": "tg/sci/3-une-histoire-du-vivant/13-lintelligence-artificielle/index.html#quiz",
    "href": "tg/sci/3-une-histoire-du-vivant/13-lintelligence-artificielle/index.html#quiz",
    "title": "Chapitre 13: L’intelligence artificielle",
    "section": "4 Quiz",
    "text": "4 Quiz\nhttps://www.cea.fr/multimedia/Lists/StaticFiles/quizz/vehicule-autonome/indexHtml5.html#/",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 3: Une histoire du vivant",
      "Chapitre 13: L’intelligence artificielle"
    ]
  },
  {
    "objectID": "tg/sci/3-une-histoire-du-vivant/index.html",
    "href": "tg/sci/3-une-histoire-du-vivant/index.html",
    "title": "Partie 3: Une histoire du vivant",
    "section": "",
    "text": "Chapitre 9: La biodiversité et son évolution\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 10: L’évolution comme grille de lecture du monde\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 11: L’évolution humaine\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 12: Les modèles démographiques\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 13: L’intelligence artificielle\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAucun article correspondant",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 3: Une histoire du vivant"
    ]
  },
  {
    "objectID": "tg/sci/3-une-histoire-du-vivant/12-les-modeles-demographiques/index.html",
    "href": "tg/sci/3-une-histoire-du-vivant/12-les-modeles-demographiques/index.html",
    "title": "Chapitre 12: Les modèles démographiques",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nSavoirs\nSavoir-faire\n\n\n\n\nUn modèle mathématique simple est le modèle linéaire.\nUne grandeur discrète uu varie de manière linéaire en fonction d’un palier entier nn si sa variation absolue u(n+1)−u(n)u(n+1)-u(n) est constante. Dans ce cas, les points (n,u(n))(n, u(n)) sont situés sur une droite. La suite de terme général u(n)u(n) est arithmétique.\nDans la réalité, pour une population dont la variation absolue est presque constante d’un palier à l’autre, on peut ajuster le nuage de points qui la représente par une droite (modèle linéaire).\nExprimer u(n) en fonction de u(0) et n.\nProduire et interpréter des graphiques statistiques traduisant l’évolution d’effectif d’une population ou de ressources, notamment sous forme de nuages de points.\nÀ l’aide d’une calculatrice ou d’un tableur, ajuster un nuage de points par une droite et utiliser ce modèle linéaire pour effectuer des prévisions.\n\n\nLe modèle linéaire est inadapté pour représenter l’évolution d’une grandeur dont la variation absolue change fortement d’un palier à l’autre.\nUne grandeur discrète uu varie de manière exponentielle en fonction du palier entier n si sa variation absolue u(n+1)−u(n)u(n+1) - u(n) est proportionnelle à sa valeur courante u(n)u(n). Dans ce cas, sa variation relative (ou taux de variation) est constante et la suite de terme général u(n)u(n) est géométrique.\nExprimer u(n) en fonction de u(0) et de n.\nÀ partir de données démographiques, calculer le taux de variation d’une population entre deux dates.\nCalculer l’effectif final d’une population à partir de son effectif initial, de son taux de natalité et de son taux de mortalité. Dans la réalité, pour une population dont le taux de variation est presque constant d’un palier à l’autre, on peut ajuster le nuage de points par un modèle exponentiel.\n\n\nLe modèle démographique de Malthus est un modèle exponentiel d’évolution de l’effectif de la population. Il prévoit que l’effectif de la population décroît vers 0 si le taux de mortalité est supérieur au taux de natalité et croît vers l’infini si le taux de natalité est supérieur au taux de mortalité.\nSi les prédictions du modèle de Malthus peuvent se révéler correctes sur un temps court, elles sont irréalistes sur un temps long, notamment en raison de l’insuffisance des ressources disponibles.\nDes modèles plus élaborés prévoient que la population mondiale atteindra environ 10 milliards d’humains en 2050. modèle de Malthus, prédire l’effectif d’une population au bout de n années.\nÀ l’aide d’un tableur, d’une calculatrice ou d’une représentation graphique, calculer le temps de doublement d’une population sous l’hypothèse de croissance exponentielle.\nÀ partir de documents fournis, proposer un modèle de croissance de ressources alimentaires (par exemple la production mondiale de blé ou de riz) et la comparer à une croissance exponentielle.\nComparer les valeurs fournies par un modèle à des données réelles afin de tester sa validité.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 3: Une histoire du vivant",
      "Chapitre 12: Les modèles démographiques"
    ]
  },
  {
    "objectID": "tg/sci/3-une-histoire-du-vivant/12-les-modeles-demographiques/index.html#évolution-de-la-population",
    "href": "tg/sci/3-une-histoire-du-vivant/12-les-modeles-demographiques/index.html#évolution-de-la-population",
    "title": "Chapitre 12: Les modèles démographiques",
    "section": "1 Évolution de la population",
    "text": "1 Évolution de la population\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nEvolutions et prédictions des populations du monde.©  CC BY-SA 3.0 via Wikimedia Commons\nSi on néglige les migrations, la variation de la taille de la population entre l’année nn et l’année n+1n+1 est:\npop(n+1)−pop(n)=Naissance(n)−Morts(n)\npop(n+1) - pop(n) = Naissance(n)  - Morts(n)\n\n\n\nSuite\n\n\n\nEn mathématique, une suite est un ensemble de valeurs indexé par les entiers strictement positifs. On note ces valeurs u(n)u(n).\n\n\n\n\nDans ce chapitre, on traite de l’évolution des populations au cours du temps, ainsi, u(n)u(n) représente la population à l’année nn.\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nPopulation mondiale : 3 scénarios d'évolution possible de la population mondiale. sources : Nations unies, Projections de population 2013 ; 1800-1950 : estimations US Census Bureau©  CC BY-SA 3.0 via Wikimedia Commons",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 3: Une histoire du vivant",
      "Chapitre 12: Les modèles démographiques"
    ]
  },
  {
    "objectID": "tg/sci/3-une-histoire-du-vivant/12-les-modeles-demographiques/index.html#modèle-linéaire-suite-arithmétique",
    "href": "tg/sci/3-une-histoire-du-vivant/12-les-modeles-demographiques/index.html#modèle-linéaire-suite-arithmétique",
    "title": "Chapitre 12: Les modèles démographiques",
    "section": "2 Modèle linéaire: suite arithmétique",
    "text": "2 Modèle linéaire: suite arithmétique\n\nUne suite est arithmétique si sa variation u(n+1)−u(n)u(n+1) - u(n) est constante.\nu(n+1)−u(n)=r\nu(n+1)-u(n)=r\n\nSoit:\nu(n+1)=u(n)+r\nu(n+1)=u(n)+r\n\nLa constante rr est appelée raison de la suite.\n\nDans ce cas, les points (n,u(n))(n, u(n)) sont situés sur une droite. La suite de terme général u(n)u(n) est:\nu(n)=u(0)+n×r\nu(n)=u(0)+n\\times r\n\n\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\n\n\n\n\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nUn village avait une population de 1000 habitants en l’an 1990, sa population diminue de 10 habitants par an. La représentation de la population en fonction des années est représentée ci-dessus.\n\nExprimer u(n+1)u(n+1) en fonction de u(n)u(n).\nExprimer u(n)u(n) en fonction de u(0)u(0) et nn. u(0)u(0) étant la population en 1990.\nEn quelle année la population serait divisée par 2 d’après ce modèle?\nPrédire la population de ce village en 2200. Commenter.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 3: Une histoire du vivant",
      "Chapitre 12: Les modèles démographiques"
    ]
  },
  {
    "objectID": "tg/sci/3-une-histoire-du-vivant/12-les-modeles-demographiques/index.html#modèle-exponentiel-suite-géométrique",
    "href": "tg/sci/3-une-histoire-du-vivant/12-les-modeles-demographiques/index.html#modèle-exponentiel-suite-géométrique",
    "title": "Chapitre 12: Les modèles démographiques",
    "section": "3 Modèle exponentiel: Suite géométrique",
    "text": "3 Modèle exponentiel: Suite géométrique\n\nUne suite est géométrique si sa variation u(n+1)−u(n)u(n+1) - u(n) est proportionnelle à sa valeur u(n)u(n).\nu(n+1)−u(n)=t×u(n)t est le taux de variation\nu(n+1)-u(n)=t\\times u(n) \\text{t est le taux de variation}\n\nSoit\nu(n+1)=q×u(n)\nu(n+1)=q\\times u(n)\n\nAvec q=1+tq=1+t le facteur constant appelé raison de la suite.\n\nDans ce cas, les points (n,u(n))(n, u(n)) sont situés sur une courbe exponentielle. La suite de terme général u(n)u(n) est:\nu(n)=u(0)×qn\nu(n)=u(0)\\times q^n\n\n\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\n\n\n\n\nEn fonction du taux de variation tt de la population, on obtient le modèle de Malthus:\nu(n)=u(0)×(1+t)n\nu(n)=u(0)\\times (1+t)^n\n\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nUne petite ville avait une population de 10 000 habitants en l’an 1990, sa population augmente de 5% par an. La représentation de la population en fonction des années est représentée ci-dessus.\n\nExprimer u(n+1)u(n+1) en fonction de u(n)u(n).\nExprimer u(n)u(n) en fonction de u(0)u(0) et nn. u(0)u(0) étant la population en 1990.\nEn quelle année la population serait doublée d’après ce modèle?\nPrédire la population de cette petite ville en 2200. Commenter.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 3: Une histoire du vivant",
      "Chapitre 12: Les modèles démographiques"
    ]
  },
  {
    "objectID": "tg/sci/1-science-climat-et-societe/1-latmosphere-terrestre-et-la-vie/exo/index.html",
    "href": "tg/sci/1-science-climat-et-societe/1-latmosphere-terrestre-et-la-vie/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Aucun exercice pour l’instant.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 1: Science climat et société",
      "Chapitre 1: L’atmosphère terrestre et la vie",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/sci/1-science-climat-et-societe/1-latmosphere-terrestre-et-la-vie/quiz/index.html",
    "href": "tg/sci/1-science-climat-et-societe/1-latmosphere-terrestre-et-la-vie/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 1: Science climat et société",
      "Chapitre 1: L’atmosphère terrestre et la vie",
      "Quiz"
    ]
  },
  {
    "objectID": "tg/sci/1-science-climat-et-societe/2-la-complexite-du-systeme-climatique/index.html",
    "href": "tg/sci/1-science-climat-et-societe/2-la-complexite-du-systeme-climatique/index.html",
    "title": "Chapitre 2: La complexité du système climatique",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nSavoirs\nSavoir-faire\n\n\n\n\nUn climat est défini par un ensemble de moyennes de grandeurs atmosphériques observées dans une région donnée pendant une période donnée. Ces grandeurs sont principalement la température, la pression, le degré d’hygrométrie, la pluviométrie, la nébulosité, la vitesse et la direction des vents.\n\n\n\nLa climatologie étudie les variations du climat local ou global à moyen ou long terme (années, siècles, millénaires…).\nLa météorologie étudie les phénomènes atmosphériques qu’elle prévoit à court terme (jours, semaines).\nDistinguer sur un document des données relevant du climat d’une part, de la météorologie d’autre part.\n\n\nLa température moyenne de la Terre, calculée à partir de mesures in situ et depuis l’espace par des satellites, est l’un des indicateurs du climat global. Il en existe d’autres : volume des océans, étendue des glaces et des glaciers…\nIdentifier des tendances d’évolution de la température sur plusieurs échelles de temps à partir de graphiques.\n\n\nLe climat de la Terre présente une variabilité naturelle sur différentes échelles de temps. Toutefois, depuis plusieurs centaines de milliers d’années, jamais la concentration du CO2 atmosphérique n’a augmenté aussi rapidement qu’actuellement.\nIdentifier des traces géologiques de variations climatiques passées (pollens, glaciers).\n\n\nDepuis un siècle et demi, on mesure un réchauffement climatique global (environ +1°C). Celui-ci est la réponse du système climatique à l’augmentation du forçage radiatif (différence entre l’énergie radiative reçue et l’énergie radiative émise) due aux émissions de gaz à effet de serre (GES) dans l’atmosphère : CO2, CH4 , N2O et vapeur d’eau principalement.\nDéterminer la capacité d’un gaz à influencer l’effet de serre atmosphérique à partir de son spectre d’absorption des ondes électromagnétiques.\n\n\nLorsque la concentration des GES augmente, l’atmosphère absorbe davantage le rayonnement thermique infrarouge émis par la surface de la Terre. En retour, il en résulte une augmentation de la puissance radiative reçue par le sol de la part de l’atmosphère.\nCette puissance additionnelle entraîne une perturbation de l’équilibre radiatif qui existait à l’ère préindustrielle.\nInterpréter des documents donnant la variation d’un indicateur climatique en fonction du temps (date de vendanges, niveau de la mer, extension d’un glacier, …).\n\n\nL’énergie supplémentaire associée est essentiellement stockée par les océans, mais également par l’air et les sols, ce qui se traduit par une augmentation de la température moyenne à la surface de la Terre et la montée du niveau des océans.\nAnalyser la variation au cours du temps de certaines grandeurs telles que l’augmentation de la teneur atmosphérique en CO2 , la variation de température moyenne, des indicateurs de l’activité économique mondiale.\n\n\nL’évolution de la température terrestre moyenne résulte de plusieurs effets amplificateurs (rétroaction positive), dont :\n\nl’augmentation de la concentration en vapeur d’eau (gaz à effet de serre) dans l’atmosphère;\nla décroissance de la surface couverte par les glaces et diminution de l’albédo terrestre;\nle dégel partiel du permafrost provoquant une libération de GES dans l’atmosphère.\n\nIdentifier les relations de causalité (actions et rétroactions) qui sous- tendent la dynamique d’un système.\n\n\nL’océan a un rôle amortisseur en absorbant à sa surface une fraction importante de l’apport additionnel d’énergie. Cela conduit à une élévation du niveau de la mer causée par la dilatation thermique de l’eau. À celle-ci s’ajoute la fusion des glaces continentales.\nCette accumulation d’énergie dans les océans rend le changement climatique irréversible à des échelles de temps de plusieurs siècles. À court terme, un accroissement de la végétalisation constitue un puits de CO2 et a donc un effet de rétroaction négative (stabilisatrice).\nRéaliser et interpréter une expérience simple, mettant en évidence la différence d’impact entre la fusion des glaces continentales et des glaces de mer.\nEstimer la variation du volume de l’océan associée à une variation de température donnée, en supposant cette variation limitée à une couche superficielle d’épaisseur donnée.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 1: Science climat et société",
      "Chapitre 2: La complexité du système climatique"
    ]
  },
  {
    "objectID": "tg/sci/1-science-climat-et-societe/3-le-climat-du-futur/exo/index.html",
    "href": "tg/sci/1-science-climat-et-societe/3-le-climat-du-futur/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Aucun exercice pour l’instant.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 1: Science climat et société",
      "Chapitre 3: Le climat du futur",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/sci/1-science-climat-et-societe/3-le-climat-du-futur/quiz/index.html",
    "href": "tg/sci/1-science-climat-et-societe/3-le-climat-du-futur/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 1: Science climat et société",
      "Chapitre 3: Le climat du futur",
      "Quiz"
    ]
  },
  {
    "objectID": "tg/sci/1-science-climat-et-societe/4-energie-choix-de-developpement-et-futur-climatique/exo/index.html",
    "href": "tg/sci/1-science-climat-et-societe/4-energie-choix-de-developpement-et-futur-climatique/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "En utilisant cette infographie du site planete-energie.com, répondre aux questions suivantes.\n\nQuelles sont les unités d’énergie et de puissance dans le système international d’unités(SI)?\nDonner trois autres unités dont vous avez déjà entendu parler en précisant s’il s’agit d’unités d’énergie ou de puissance. Donner leur équivalent dans le système international.\nRappeler les valeurs des préfixes multiplicatifs SI.\nComparer la puissance d’un ordinateur portable et d’un humain.\nCombien de villes de 100 mille habitants peut alimenter un réacteur nucléaire standard.\n\nVoir la version pdf",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 1: Science climat et société",
      "Chapitre 4: Énergie choix de développement et futur climatique",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/sci/1-science-climat-et-societe/4-energie-choix-de-developpement-et-futur-climatique/exo/index.html#unités-dénergie-et-de-puissance",
    "href": "tg/sci/1-science-climat-et-societe/4-energie-choix-de-developpement-et-futur-climatique/exo/index.html#unités-dénergie-et-de-puissance",
    "title": "Exercices",
    "section": "",
    "text": "En utilisant cette infographie du site planete-energie.com, répondre aux questions suivantes.\n\nQuelles sont les unités d’énergie et de puissance dans le système international d’unités(SI)?\nDonner trois autres unités dont vous avez déjà entendu parler en précisant s’il s’agit d’unités d’énergie ou de puissance. Donner leur équivalent dans le système international.\nRappeler les valeurs des préfixes multiplicatifs SI.\nComparer la puissance d’un ordinateur portable et d’un humain.\nCombien de villes de 100 mille habitants peut alimenter un réacteur nucléaire standard.\n\nVoir la version pdf",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 1: Science climat et société",
      "Chapitre 4: Énergie choix de développement et futur climatique",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/sci/1-science-climat-et-societe/4-energie-choix-de-developpement-et-futur-climatique/quiz/index.html",
    "href": "tg/sci/1-science-climat-et-societe/4-energie-choix-de-developpement-et-futur-climatique/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "1. Le watt est une unité de:\n\n   - [ ] force\n   - [x] puissance\n   - [ ] énergie\n\n2. Le joule est une unité de:\n\n   - [ ] force\n   - [ ] puissance\n   - [x] énergie\n\n3. L'équivalence entre watt et joule est:\n\n   - [ ] 1W = 1J\n   - [x] 1W = 1J/s\n   - [ ] 1W = 1J.s\n\n3. L'équivalence entre joule et watt est:\n\n   - [ ] 1J = 1W\n   - [ ] 1J = 1W/s\n   - [x] 1J = 1W.s",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 1: Science climat et société",
      "Chapitre 4: Énergie choix de développement et futur climatique",
      "Quiz"
    ]
  },
  {
    "objectID": "tg/sci/0-introduction/index.html",
    "href": "tg/sci/0-introduction/index.html",
    "title": "Partie 0: Introduction",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\nL’ensemble des disciplines scientifiques concourt à la compréhension du monde, de son organisation, de son fonctionnement et des lois qui le régissent, ainsi qu’à la maîtrise des outils et des technologies. L’histoire des sciences raconte une aventure de l’esprit humain, lancé dans une exploration du monde (la science pour savoir) et dans une action sur le monde (la science pour faire).\nLe développement des sciences et des technologies a profondément modifié les conditions de vie des êtres humains et les sociétés dans lesquelles ils vivent. Cela s’est traduit par d’importants progrès, dans les domaines de l’alimentation, de la santé, de la communication, des transports, etc. Grâce à ses inventions, l’être humain a désormais les moyens d’agir sur son environnement immédiat. Par son impact, l’espèce humaine modifie également les équilibres à l’échelle globale de la planète. La présence humaine modifie le climat; ses déchets s’accumulent et son utilisation des ressources naturelles est massive. Si l’espèce humaine n’est pas la première forme de vie à transformer la planète, c’est sans aucun doute la première qui s’en préoccupe.\nGrâce, notamment, à l’approche scientifique, l’être humain dispose des outils intellectuels nécessaires pour devenir un acteur conscient et responsable de la relation au monde et de la transformation des sociétés. L’approche scientifique nourrit le jugement critique et rencontre des préoccupations d’ordre éthique. Ainsi, c’est de façon rationnellement éclairée que chacun doit être en mesure de participer à la prise de décisions, individuelles et collectives, locales ou globales.\nLa science construit peu à peu un corpus de connaissances grâce à des méthodes spécifiques : elle élabore un ensemble de théories, établit des lois, invente des concepts, découvre des mécanismes; cet ensemble se perfectionne par la confrontation à des faits nouvellement connus, souvent en lien avec l’évolution des techniques. Le savoir scientifique est une construction collective qui a une histoire. Il est fondé sur le raisonnement rationnel et la recherche de causes matérielles; il se développe parfois en réfutation des intuitions premières au-delà desquelles le scientifique doit s’aventurer.\nLa compréhension de l’histoire des savoirs scientifiques et de leur mode de construction, la pratique véritable d’une démarche scientifique (y compris dans sa dimension concrète) développent des qualités de l’esprit utiles à tous. En fréquentant la science, chacun développe son intelligence, sa curiosité sa raison, son humilité devant les faits et les idées pour enrichir son savoir.\nLe but essentiel de l’enseignement scientifique est de dispenser une formation scientifique générale pour tous les élèves, tout en offrant un point d’appui pour ceux qui poursuivent et veulent poursuivre des études scientifiques. Il ne vise pas à construire un savoir encyclopédique mais cherche plutôt à atteindre trois buts intimement liés :\n\ncontribuer à faire de chaque élève une personne lucide, consciente de ce qu’elle est, de ce qu’est le monde et de ce qu’est sa relation au monde;\ncontribuer à faire de chaque élève un citoyen ou une citoyenne responsable, qui connaît les conséquences de ses actions sur le monde et dispose des outils nécessaires pour les contrôler;\ncontribuer au développement en chaque élève d’un esprit rationnel, autonome et éclairé, capable d’exercer une analyse critique face aux fausses informations et aux rumeurs.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 0: Introduction"
    ]
  },
  {
    "objectID": "tg/sci/0-introduction/index.html#galiléexviie",
    "href": "tg/sci/0-introduction/index.html#galiléexviie",
    "title": "Partie 0: Introduction",
    "section": "1 Galilée(XVIIe)",
    "text": "1 Galilée(XVIIe)\nGalilée est considéré depuis 1680 comme le fondateur de la physique, qui s’est imposée comme la première des sciences modernes.\nVidéo servie sans cookie via yewtu.be\nPar ses études et ses nombreuses expériences, parfois uniquement de pensée, ainsi que par la généralisation des mesures, en particulier du temps ce chercheur a posé les bases de la science.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 0: Introduction"
    ]
  },
  {
    "objectID": "tg/sci/0-introduction/index.html#la-démarche-scientifique",
    "href": "tg/sci/0-introduction/index.html#la-démarche-scientifique",
    "title": "Partie 0: Introduction",
    "section": "2 La démarche scientifique",
    "text": "2 La démarche scientifique\nVidéo servie sans cookie via yewtu.be\nÀ partir de l’observation d’un phénomène et de la formulation d’une problématique.\nDifférentes hypothèses vont être émises, testées par l’observation et l’expérimentation.\nLa confirmation d’une hypothèse permet de construire un modèle ou une théorie.\n\nhttps://www.cea.fr/comprendre/Pages/physique-chimie/essentiel-sur-demarche-scientifique.aspx",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci",
      "Partie 0: Introduction"
    ]
  },
  {
    "objectID": "tg/sci/index.html",
    "href": "tg/sci/index.html",
    "title": "Enseignement scientifique",
    "section": "",
    "text": "Partie 0: Introduction\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPartie 1: Science climat et société\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPartie 2: Le futur des énergies\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPartie 3: Une histoire du vivant\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAucun article correspondant",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> Ens. Sci"
    ]
  },
  {
    "objectID": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/4-securisation-des-communications/index.html",
    "href": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/4-securisation-des-communications/index.html",
    "title": "Chapitre 4: Sécurisation des communications*",
    "section": "",
    "text": "Ce chapitre ne pourra pas faire l’objet d’une évaluation lors de l’épreuve terminale écrite et pratique de l’enseignement de spécialité. BO MENE2121274N",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 3: Architectures matérielles, systèmes d’exploitation et réseaux",
      "Chapitre 4: Sécurisation des communications*"
    ]
  },
  {
    "objectID": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/4-securisation-des-communications/index.html#cryptographie-symétrique",
    "href": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/4-securisation-des-communications/index.html#cryptographie-symétrique",
    "title": "Chapitre 4: Sécurisation des communications*",
    "section": "1 Cryptographie symétrique",
    "text": "1 Cryptographie symétrique\n\nLa cryptographie symétrique, également dite à clé secrète (par opposition à la cryptographie asymétrique), est la plus ancienne forme de chiffrement. Elle permet à la fois de chiffrer et de déchiffrer des messages à l’aide d’un même mot clé. On a des traces de son utilisation par les Égyptiens vers 2000 av. J.-C.\n\nArticle Wikipédia sur la cryptographie symétrique\nCette technique repose sur l’utilisation d’une clé unique qui doit être connue par l’expéditeur et le destinataire.\nIl existe de nombreux chiffrements de ce type qui ont évolué en complexité au cours du temps.\n\n1.1 Le chiffrement César\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nExemple d'un chifrement Cesar par décalage de trois lettres. Public domain via Wikimedia Commons\nOn décale les lettres de nn rangs la clé est tout simplement nn: le décalage.\nPar exemple, César utilisait un décalage de 3 lettres:\nSi on connait le décalage, on déchiffre le message en réalisant le décalage opposé, moins trois lettres dans note exemple.\nSi on utilise 26 lettres majuscules, il n’existe que 26 clés possibles!\n\n\n1.2 Chiffrement par substitution\nOn remplace une lettre par une autre de l’alphabet, on a donc 26!≈4×102626!\\approx 4\\times 10^{26} clés possibles.\n\nAvec la clé suivante:\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nAZERTYUIOPQSDFGHJKLMWXCVBN\nle message SUBSTITUTION devient LWZLMOMWMOGF\n\n\n\n1.3 Chiffrement de Vigenère (XVIe siècle)\nCette méthode a été mise au point durant la renaissance pour contrer la cryptanalyse par la méthode des fréquences de lettres qui permettait de “casser” les clés de cryptage assez facilement.\nOn choisit une clé sous la forme d’un mot ou d’une phrase qui donne le décalage à appliquer qui devient alors variable.\nSupposons que la clé soit ABC, les décalages successifs seront 0, 1, 2, 0, 1, 2, 0…\n\nAvec la clé ABC\nLe message SUBSTITUTION devient: SVDSUKTVVIPP\nSUBSTITUTION\nABCABCABCABC\n------------\nSVDSUKTVVIPP\n\n\n\n1.4 Chiffrement de Vernam (XXe siècle)\nIl s’agit d’un système parfaitement sûr, le mathématicien C.Shannon a montré que si on respecte bien les 3 règles de Vernam, ce système est inviolable.\n\nLa clé doit être une suite de caractères au moins aussi longue que le message à chiffrer.\nLes caractères composant la clé doivent être choisis de façon totalement aléatoire.\nChaque clé, ou « masque », ne doit être utilisée qu’une seule fois (d’où le nom de masque jetable).\n\nUne méthode particulièrement efficace pour traiter le chiffrement et le déchiffrement de messages à partir de la clé est d’utiliser la fonction logique XOR, le ou exclusif qui a une particularité très intéressante dans notre cas.\nOn note MM le message et SS la clé secrète, XOR se note ⊕\\oplus.\nOn obtient le message chiffré CC en faisant: C=M⊕SC = M \\oplus S.\nLe déchiffrement se fait tout simplement en appliquant la même opération C⊕S=MC \\oplus S = M car:\n(M⊕S)⊕S=M\n(M \\oplus S)\\oplus S = M\n\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nOn souhaite transmettre le message NSI de façon privée. Le code ASCII correspondant est 01001110 01010011 01001001.\nOn crée un masque aléatoirement que l’on transmet au destinataire: 11001001 11001101 01100011.\n\nÉcrire le message chiffré CC en faisant: C=M⊕SC = M \\oplus S.\nVérifier qu’on déchiffre par la même opération C⊕S=MC \\oplus S = M.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 3: Architectures matérielles, systèmes d’exploitation et réseaux",
      "Chapitre 4: Sécurisation des communications*"
    ]
  },
  {
    "objectID": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/4-securisation-des-communications/index.html#cryptographie-asymétrique",
    "href": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/4-securisation-des-communications/index.html#cryptographie-asymétrique",
    "title": "Chapitre 4: Sécurisation des communications*",
    "section": "2 Cryptographie asymétrique",
    "text": "2 Cryptographie asymétrique\nLa cryptographie asymétrique permet de résoudre le problème de l’échange de la clé secrète.\nElle fut inventée par Whitfield Diffie et Martin Hellman en 1976, qui reçurent le prix Turing de 2015 pour cette découverte.\nEn cryptographie asymétrique on a 2 clés:\n\nla clé publique: Celle-ci, tout le monde peut la posséder, il n’y a aucun risque, vous pouvez la transmettre à n’importe qui. Elle sert à chiffrer le message.\nla clé privée: que seul le récepteur possède, en l’occurrence vous. Elle servira à déchiffrer le message chiffré avec la clé publique. Pour clarifier mon charabia, une petite illustration :\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nIllustration du chiffrement asymétrique\n\n\nCours l’algorithme RSA sur OpenClassRoom\nPour que cela fonctionne, il faut que la paire clé publique/clé privée ait une propriété particulière.\nSoit FPF_P la fonction de chiffrement utilisée avec la clé publique, et FSF_S la fonction relative à la clé privée. Une relation particulière relie ces deux fonctions:\nm=FS(FP(m))\nm = F_S(F_P(m))\n\nEnfin pour que ce système fonctionne, il faut que:\n\nla fonction FPF_P soit facile à calculer pour tout le monde,\nla fonction FSF_S soit facile à calculer uniquement pour le détenteur de la clé privée.\n\nUn système qui satisfait ces deux critères est le système de chiffrement RSA utilisé pour échanger des données confidentielles sur Internet.\nCet algorithme fut inventé en 1977 par Ronald Rivest, Adi Shamir et Leonard Adleman breveté par le MIT en 1983. Le brevet a expiré le 21 septembre 2000 ce qui permet de l’utiliser librement depuis.\n\n2.1 Principe original\nCe système de cryptographie repose sur l’utilisation de nombres premiers et certaines propriétés de l’arithmétique modulaire.\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nIllustration de l'échange d'informations entre Alice et Bob.©  CC BY-SA 4.0 via Wikimedia Commons\n\nAlice et Bob ont choisi un nombre premier pp et un nombre gg strictement plus petit que pp (ils peuvent aussi, comme montré sur la figure, ne décider de ce choix qu’au moment de l’échange, et se le communiquer en clair, ce qui n’améliore pas les chances d’Ève qui cherche à casser le code)\nAlice choisit un nombre au hasard aa, élève gg à la puissance aa, et envoie à Bob le nombre A=ga[modulop]A = g^a [modulo\\ p].\nDe même Bob choisit un nombre au hasard bb, et fait de même; il transmet le nombre B=gb[modulop]B = g^b[modulo\\ p] à Alice\nEn élevant le nombre BB reçu de Bob à la puissance aa, obtient gba[modulop]g^{ba}[modulo\\ p].\nBob fait le calcul analogue avec le nombre AA reçu d’Alice et obtient gab[modulop]^{gab}[modulo\\ p], qui est le même résultat.\n\nA la fin du protocole, Alice et Bob connaissent tous les deux le nombre gab[modulop]g^{ab}[modulo\\ p] mais pas Ève car elle ne peut pas calculer gab[modulop]g^{ab}[modulo\\ p] facilement.\n\n\n2.2 Exemple\n\nAlice et Bob ont choisi un nombre premier pp et une base gg. Dans notre exemple, p=23p=23 et g=5g=5\nAlice choisit un nombre secret a=6a=6\nElle envoie à Bob la valeur A=ga[modulop]=56[23]=8A = g^a [modulo\\ p] =  5^6 [23] = 8\nBob choisit à son tour un nombre secret b=15b=15\nBob envoie à Alice la valeur B=gb[modulop]=515[23]=19B = g^b[modulo\\ p] = 5^{15} [23] = 19\nAlice peut maintenant calculer la clé secrète : Ba[modulop]=196[23]=2B^a [modulo\\ p] = 19^6 [23] = 2\nBob fait de même et obtient la même clé qu’Alice : Ab[modulop]=815[23]=2A^b [modulo\\ p] = 8^{15} [23] = 2\n\nArticle Wikipédia\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nCréez une clé secrète sur ce principe avec votre voisin en Python:\n\nChoisir ensemble un nombre premier pp et une base gg pas trop grands.\nChoisir chacun de votre côté un nombre secret nn puis calculer N=gn[p]N=g^n [p].\nVérifier que chacun peut générer la même clé secrète à partir du nombre NN calculé par votre voisin.\nEssayez de retrouver la clé à partir des informations échangées en clair: gg, pp, AA et BB(Ne faites pas cette question, elle est impossible).",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 3: Architectures matérielles, systèmes d’exploitation et réseaux",
      "Chapitre 4: Sécurisation des communications*"
    ]
  },
  {
    "objectID": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/4-securisation-des-communications/index.html#cryptosystèmes-hybrides",
    "href": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/4-securisation-des-communications/index.html#cryptosystèmes-hybrides",
    "title": "Chapitre 4: Sécurisation des communications*",
    "section": "3 Cryptosystèmes hybrides",
    "text": "3 Cryptosystèmes hybrides\nBien que le système RSA à clé publique soit a priori sûr et pratique puisqu’il n’est pas nécessaire d’échanger la clé de chiffrement comme dans le cas du chiffrement symétrique. On utilise en pratique plutôt un système hybride, car le système à clé asymétrique est assez lourd à exécuter et prend du temps.\nRegardons par exemple le cas d’échange d’informations sécurisées grâce au protocole HTTPS.\n\nLe client — par exemple le navigateur Web — contacte un serveur — par exemple Wikipédia — et demande une connexion sécurisée.\nLe serveur répond en produisant un certificat qui contient entre autres sa clé publique.\nCela permet au client d’envoyer de manière secrète une clé symétrique qui sera utilisée à tous les échanges entre le serveur et le client de façon que tous les contenus de la communication — y compris l’adresse même du site web, l’URL — soient chiffrées.\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nLa clé secrète est calculée en combinant votre clé privée et la clé publique de votre destinatiare Public domain via Wikimedia Commons\n\nDans le schéma d’échange de clés Diffie-Hellman, chaque partie génère une paire de clés publique / privée et distribue la clé publique. Après avoir obtenu une copie authentique des clés publiques de chacun, Alice et Bob peuvent calculer une clé secrète partagée hors ligne. La clé secrète partagée peut être utilisée, comme clé pour un chiffrement symétrique.\n\n\n\nAlgorithmes notions de base\nCours l’algorithme RSA sur OpenClassRoom\nInformatique MP-PC-PT-PSI\nArticle Wikipédia Échange de clés Diffie-Hellman",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 3: Architectures matérielles, systèmes d’exploitation et réseaux",
      "Chapitre 4: Sécurisation des communications*"
    ]
  },
  {
    "objectID": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/1-systeme-sur-puce/exo/index.html",
    "href": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/1-systeme-sur-puce/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Aucun exercice pour l’instant.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 3: Architectures matérielles, systèmes d’exploitation et réseaux",
      "Chapitre 1: Système sur puce",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/1-systeme-sur-puce/quiz/index.html",
    "href": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/1-systeme-sur-puce/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 3: Architectures matérielles, systèmes d’exploitation et réseaux",
      "Chapitre 1: Système sur puce",
      "Quiz"
    ]
  },
  {
    "objectID": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/3-protocoles-de-routage/index.html",
    "href": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/3-protocoles-de-routage/index.html",
    "title": "Chapitre 3: Protocoles de routage",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nProtocoles de routage.\nIdentifier, suivant le protocole de routage utilisé, la route empruntée par un paquet.\nEn mode débranché, les tables de routage étant données, on se réfère au nombre de sauts (protocole RIP) ou au coût des routes (protocole OSPF).\nLe lien avec les algorithmes de recherche de chemin sur un graphe est mis en évidence.\nOn commence par une vidéo qui rappelle le vocabulaire essentiel des réseaux:\nMr.Techno via youtube sous licence CC-BY",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 3: Architectures matérielles, systèmes d’exploitation et réseaux",
      "Chapitre 3: Protocoles de routage"
    ]
  },
  {
    "objectID": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/3-protocoles-de-routage/index.html#comment-se-frayer-un-chemin-à-travers-le-réseau",
    "href": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/3-protocoles-de-routage/index.html#comment-se-frayer-un-chemin-à-travers-le-réseau",
    "title": "Chapitre 3: Protocoles de routage",
    "section": "1 Comment se «frayer» un chemin à travers le réseau ?",
    "text": "1 Comment se «frayer» un chemin à travers le réseau ?\nAvant d’aborder dans le détail les techniques et algorithmes utilisés, nous allons commencer par étudier un exemple pour comprendre ce qui se passe.\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nDiagramme d’un réseau\n\n\nDavid Roche via pixees.fr CC-BY-SA\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\n\nCombien y a-t-il de réseaux locaux?\nQuel chemin sur le réseau doit parcourir l’information pour relier deux machines d’un même réseau local comme M13 -&gt; M15?\nMontrer qu’il existe plusieurs chemins possibles pour communiquer entre deux machines appartenant à des réseaux locaux différents comme M1 -&gt; M9.\n\n\n\n\n\n\nSur cet exemple on a pu montrer qu’il existe plusieurs chemins possibles pour relier deux machines appartenant à des réseaux locaux différents. Certains seront certainement plus efficaces que d’autres, mais n’étant jamais à l’abri de problèmes techniques sur certains routeurs ou certaines liaisons, l’existence de plusieurs routes rend le réseau internet plus résilient aux pannes.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 3: Architectures matérielles, systèmes d’exploitation et réseaux",
      "Chapitre 3: Protocoles de routage"
    ]
  },
  {
    "objectID": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/3-protocoles-de-routage/index.html#le-protocole-tcpip",
    "href": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/3-protocoles-de-routage/index.html#le-protocole-tcpip",
    "title": "Chapitre 3: Protocoles de routage",
    "section": "2 Le protocole TCP/IP",
    "text": "2 Le protocole TCP/IP\nOn a vu en première que la communication sur le réseau était basée sur le modèle TCP/IP à quatre couches.\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nLe modèle TCP/IP ne possède que quatre couches alors que le modèle OSI (Open System Interconnection) en a sept.©  CC BY-SA 3.0 via Wikimedia Commons\nDans ce protocole, on a vu en seconde.\n\nLe protocole IP(COUCHE RÉSEAU) qui permet d’attribuer à chaque machine une adresse IP unique pour l’identifier sur le réseau.\nLe protocole TCP(COUCHE TRANSPORT) qui permet d’assurer la communication de l’information en la découpant en paquets, et en s’assurant que tous les paquets sont reçus et conformes à l’information envoyée.\n\nOn utilise deux versions d’adresses IP.\n\nIPv4: avec des adresses de 4 octets = 32 bits.\nIPv6: avec des adresses de 16 octets = 128 bits.\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nAvec 32 bits on ne peut avoir que 4 milliards d'adresses. Public domain via Wikimedia Commons\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nAvec 128 bits on passe à 340 sextillons d'adresses, ça devrait suffir pour quelques temps! CC0 via Wikimedia Commons",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 3: Architectures matérielles, systèmes d’exploitation et réseaux",
      "Chapitre 3: Protocoles de routage"
    ]
  },
  {
    "objectID": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/3-protocoles-de-routage/index.html#les-tables-de-routage",
    "href": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/3-protocoles-de-routage/index.html#les-tables-de-routage",
    "title": "Chapitre 3: Protocoles de routage",
    "section": "3 Les tables de routage",
    "text": "3 Les tables de routage\nLorsqu’un routeur reçoit un paquet celui-ci comporte une adresse IP de destination. Pour savoir dans quelle direction envoyer le paquet, chaque routeur possède une table de routage.\nUne table de routage est un tableau indiquant pour chaque réseau de destination(connu à partir de l’IP de la destination), quelle interface réseau on peut utiliser en lui associant également une métrique qui mesure la «distance» séparant le routeur du réseau de destination.\n\n\n\n\n\n\n\nEn plus: Afficher une table de routage\n\n\n\n\n\n\n\nSous Windows : route print ou netsh int ipv4/ipv6 sh route\nSous Unix/OS X : netstat -rn\nSous Linux : ip -4/-6 route\n\n\n\n\nRéseau destination (format CIDR)\nMasque\nPasserelle\nInterface\nMétrique\n\n\n\n\n0.0.0.0/0\n0.0.0.0\n192.168.0.1\n192.168.0.100\n1\n\n\n127.0.0.0/8\n255.0.0.0\n127.0.0.1\n127.0.0.1\n1\n\n\n192.168.0.0/24\n255.255.255.0\n192.168.0.100\n192.168.0.100\n1\n\n\n192.168.0.100/32\n255.255.255.255\n127.0.0.1\n127.0.0.1\n1\n\n\n192.168.0.1/32\n255.255.255.255\n192.168.0.100\n192.168.0.100\n1\n\n\n\nArticle Wikipédia sur les tables de routage\n\n\n\n\n\nEncore une fois, nous allons utiliser un exemple pour illustrer cette notion.\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nDiagramme d’un réseau\n\n\nDavid Roche via pixees.fr CC-BY-SA\nCe réseau contient:\n\nTrois réseaux locaux:\n\nR1 dont l’adresse est 172.168.0.0/16 avec trois machines M1 à M3.\nR2 dont l’adresse est 10.0.0.0/8 avec trois machines M4 à M6.\nR3 dont l’adresse est 172.169.0.0/16 avec deux machines M7 et M8.\n\nDeux routeurs:\n\nRouteur A qui possède 3 interfaces réseau que l’on nomme eth0, eth1 et eth2. Les adresses IP liées à ces interfaces réseau sont : 172.168.255.254/16 (eth0), 172.169.255.254/16 (eth2) et 192.168.7.1/24 (eth1).\nRouteur G qui possède 2 interfaces réseau que l’on nomme eth0 et eth1. Les adresses IP liées à ces interfaces réseau sont : 10.255.255.254/8 (eth0) et 192.168.7.2/24 (eth1).\n\n\nVoici la table de routage simplifiée du routeur A:\n\n\n\nRéseau\nMoyen de l’atteindre(Passerelle ou _Gateway)\nMétrique\n\n\n172.168.0.0/16\neth0\n0\n\n\n192.168.7.2/24\neth1\n0\n\n\n172.169.0.0/16\neth2\n0\n\n\n10.0.0.0/8\n192.168.7.2/24\n1\n\n\n\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nÉtablir la table de routage du routeur G.\n\n\n\n\n\n\nComment un routeur arrive à remplir sa table de routage ?   La réponse est simple pour les réseaux qui sont directement reliés au routeur (métrique = 0), mais comment cela se passe-t-il pour les autres réseaux (métrique supérieure à zéro) ?   Il existe 2 méthodes :   - le routage statique : chaque ligne doit être renseignée “à la main”. Cette solution est seulement envisageable pour des très petits réseaux de réseaux - le routage dynamique : tout se fait “automatiquement”, on utilise des protocoles qui vont permettre de “découvrir” les différentes routes automatiquement afin de pouvoir remplir la table de routage tout aussi automatiquement.\n\nDavid Roche via pixees.fr CC-BY-SA",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 3: Architectures matérielles, systèmes d’exploitation et réseaux",
      "Chapitre 3: Protocoles de routage"
    ]
  },
  {
    "objectID": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/3-protocoles-de-routage/index.html#les-protocoles-de-routage",
    "href": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/3-protocoles-de-routage/index.html#les-protocoles-de-routage",
    "title": "Chapitre 3: Protocoles de routage",
    "section": "4 Les protocoles de routage",
    "text": "4 Les protocoles de routage\nNous allons étudier deux algorithmes de routage:\n\nRIP (Routing Information Protocol)\net OSPF (Open Shortest Path First).\n\nVoici le réseau sur lequel nous allons illustrer ces algorithmes.\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nExemple de réseau\n\n\nDavid Roche via pixees.fr CC-BY-SA\n\n4.1 Le protocole RIP\nC’était le premier protocole utilisé, il associe à chaque le nombre de sauts minimal, c’est-à-dire le nombre minimal de routeurs à traverser.\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nEn supposant un nombre de sauts d'origine 0. Le nombre de sauts entre les ordinateurs dans ce cas est de 2.©  CC BY-SA 3.0 via Wikimedia Commons\nAu départ chaque routeur ne connait que les réseaux directement accessibles, avec une distance nulle.\nEnsuite, toutes les 30 secondes, les réseaux envoient leurs tables de routages à leurs voisins directement accessibles, à la réception chaque routeur met à jour sa table de routage en associant à chaque destination la passerelle avec la plus courte distance en saut.\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\n\nEn vous basant sur le protocole RIP (métrique = nombre de sauts), déterminez la table de routage du routeur A\nQuel est, d’après la table de routage construite ci-dessus, le chemin qui sera emprunté par un paquet pour aller d’une machine ayant pour adresse IP 172.18.1.1/16 à une machine ayant pour adresse IP 172.16.5.3/16 ?\n\n\n\n\n\n\nCe protocole n’est plus utilisé, car sur de grands réseaux il provoque un trafic important, et de plus il possède des failles de sécurité rendant ces réseaux vulnérables à certaines attaques.\n\n\n4.2 Le protocole OSPF\nDans le protocole OSPF, les routeurs ont une vision globale du réseau et pas seulement de leurs voisins directs.\nDe plus, la métrique utilisée n’est plus le nombre de sauts, mais le coût de la liaison. Celui-ci tient compte du débit binaire de chaque liaison en bits par seconde.\nOn définit le coût par l’expression:\ncoût=108débitenMbit/s\ncoût  = \\frac{10^8}{débit\\ en\\ Mbit/s}\n\nOn peut représenter le réseau par un graphe dans laquelle les routeurs et les switchs sont des noeuds et les liaisons des arêtes étiquetées avec des coûts.\nOn applique alors l’algorithme de Djikistra pour trouver le plus court chemin.\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nL'algorithme de Dijkstra pour trouver le chemin le plus court entre a et b. Il choisit le sommet non visité avec la distance la plus faible, calcule la distance à travers lui à chaque voisin non visité, et met à jour la distance du voisin si elle est plus petite. Il marque le sommet visité (en rouge) lorsque il a terminé avec les voisins. Public domain via Wikimedia Commons\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\n\nEn vous basant sur le protocole OSPF (métrique = somme des coûts), déterminez la table de routage du routeur A.\nOn donne les débits suivants :\n\nliaison routeur A - routeur B : 1 Mbps\nliaison routeur A - routeur C : 10 Mbps\nliaison routeur C - routeur B : 10 Mbps\n\nQuel est, d’après la table de routage construite ci-dessus, le chemin qui sera emprunté par un paquet pour aller d’une machine ayant pour adresse IP 172.18.1.1/16 à une machine ayant pour adresse IP 172.16.5.3/16 ?\n\n\n\n\n\n\n\n\nProtocoles de routage sur pixees.fr",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 3: Architectures matérielles, systèmes d’exploitation et réseaux",
      "Chapitre 3: Protocoles de routage"
    ]
  },
  {
    "objectID": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/index.html",
    "href": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/index.html",
    "title": "Partie 3: Architectures matérielles, systèmes d’exploitation et réseaux",
    "section": "",
    "text": "Chapitre 1: Système sur puce\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 2: Gestion des processus par un système d’exploitation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 3: Protocoles de routage\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 4: Sécurisation des communications*\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAucun article correspondant",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 3: Architectures matérielles, systèmes d’exploitation et réseaux"
    ]
  },
  {
    "objectID": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/2-gestion-des-processus-par-un-systeme-dexploitation/index.html",
    "href": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/2-gestion-des-processus-par-un-systeme-dexploitation/index.html",
    "title": "Chapitre 2: Gestion des processus par un système d’exploitation",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nGestion des processus et des ressources par un système d’exploitation.\nDécrire la création d’un processus, l’ordonnancement de plusieurs processus par le système.\nMettre en évidence le risque de l’interblocage (deadlock).\nÀ l’aide d’outils standard, il s’agit d’observer les processus actifs ou en attente sur une machine. Une présentation débranchée de l’interblocage peut être proposée.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 3: Architectures matérielles, systèmes d’exploitation et réseaux",
      "Chapitre 2: Gestion des processus par un système d’exploitation"
    ]
  },
  {
    "objectID": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/2-gestion-des-processus-par-un-systeme-dexploitation/index.html#différence-entre-programme-et-processus",
    "href": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/2-gestion-des-processus-par-un-systeme-dexploitation/index.html#différence-entre-programme-et-processus",
    "title": "Chapitre 2: Gestion des processus par un système d’exploitation",
    "section": "1 Différence entre programme et processus",
    "text": "1 Différence entre programme et processus\n\n\nProgramme\n\n\n\nUn programme est statique: c’est un fichier contenant une suite d’instructions qui lorsqu’elles sont exécutées modifient l’état du processeur et de la mémoire afin de réaliser une tâche donnée.\n\n\n\nUn même programme peut-être exécuté plusieurs fois sur une même machine, il faut alors allouer à chacune de ces exécutions des ressources de mémoire et de processeur distinctes au cours de ces exécutions. C’est le système d’exploitation qui gère l’allocation de ces ressources.\n\n\nProcessus\n\n\n\nUn processus est dynamique: c’est une instance d’exécution d’un programme sur une machine de son lancement jusqu’à sa fin.\n\n\n\nLes systèmes d’exploitation permettent à l’utilisateur de visualiser et gérer les processus grâce à un gestionnaire de processus.\n\n\n\n\n\n\n\nApplication: Programmes et processus sous linux\n\n\n\n\n\n\n\nSi vous êtes sous linux ou OSX, vous pouvez simplement lancer un terminal pour ouvrir une console. Sinon vous pouvez lancer une instance jupyterlab en ligne grâce à Binder.\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nBinder\n\n\nSous linux, les programmes sont par convention situées dans les dossiers bin pour binaries en anglais:\n\n/bin/: commandes de base nécessaires au démarrage et à l’utilisation d’un système minimaliste.\n/sbin/: Exécutables pour les administrateurs (abréviation de system binaries, soit binaires système en français).\n/usr/bin/: Binaires exécutables qui ne sont pas déjà présents dans /bin et donc pas indispensables à un système minimaliste.\n\nOn peut lister les programmes avec la commande ls et les exécuter en tapant leur nom dans une console.\n# la commande ls vue en première (abbréviation de list en anglais)\nls /bin\n\nls /sbin\n\nls /usr/bin\nVous pouvez afficher un programme en particulier grâce à la commande cat.\ncat /bin/ls\nComme vous le voyez c’est un fichier binaire car ce programme a été compilé pour s’exécuter plus rapidement.\nVous pouvez lancer un programme en particulier en écrivant son nom (sans préciser son chemin s’il appartient au PATH).\n# affichage sortie\necho \"Voulez-vous continuer\"\n# lecture entrée\nread \nMaintenant si vous voulez lister les processus en cours d’exécution on utilise la commande ps.\n# affiche mes processus en exécution\nps\n# affiche tous les processus\nps -A\n# affiche une aide simple\nps --help s\nVoici un exemple de sortie avec l’option -l pour obtenir plus détails:\njovyan@jupyter-jupyterlab-2djupyterlab-2ddemo-2dgmyobfo6:~$ ps -lA\nF S   UID     PID    PPID  C PRI  NI ADDR SZ WCHAN  TTY          TIME CMD\n4 S  1000       1       0  0  80   0 - 137942 epoll_ ?       00:00:45 jupyter-noteboo\n0 Z  1000    2293       1  0  80   0 -     0 -      ?        00:00:00 dash &lt;defunct&gt;\n4 S  1000    4031       1  0  80   0 -  5116 wait   pts/0    00:00:00 bash\n4 S  1000    4900    4031  0  80   0 -  5083 select pts/0    00:00:00 bash\n4 S  1000    5105       1  0  80   0 -  5116 wait   pts/1    00:00:00 bash\n0 R  1000    5984    5105  0  80   0 -  6910 -      pts/1    00:00:00 ps\nOn peut créer des affichages particuliers par exemple pour voir quels processus sont les plus gourmands en mémoire: ps -eo pid,ppid,cmd,%mem,%cpu --sort=-%mem | head\nPID    PPID CMD                         %MEM %CPU\n  1       0 /srv/conda/envs/notebook/bi  0.1 17.0\n122       1 /srv/conda/envs/notebook/bi  0.0  4.6\n 84       1 /bin/bash -l                 0.0  1.7\n137      84 ps -eo pid,ppid,cmd,%mem,%c  0.0  0.0\n138      84 head                         0.0  0.0\nEnfin on peut tuer un processus avec la commande kill.\n# tuer avec le PID processus id\nkill 122\n# tuer par le nom du programme ATTENTION cela tue votre instance binder\n# pkill jupyter",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 3: Architectures matérielles, systèmes d’exploitation et réseaux",
      "Chapitre 2: Gestion des processus par un système d’exploitation"
    ]
  },
  {
    "objectID": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/2-gestion-des-processus-par-un-systeme-dexploitation/index.html#les-états-dun-processus",
    "href": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/2-gestion-des-processus-par-un-systeme-dexploitation/index.html#les-états-dun-processus",
    "title": "Chapitre 2: Gestion des processus par un système d’exploitation",
    "section": "2 Les états d’un processus",
    "text": "2 Les états d’un processus\nUn processus n’a pas seulement besoin d’accéder au processeur, mais il a souvent besoin d’accéder à des ressources autres comme:\n\nLa mémoire vive: RAM,\nLa mémoire de masse: disques durs, clés USB, mémoire flash…\nLa lecture ou l’écriture d’un fichier…\nLes périphériques d’entrée et de sortie: clavier, souris, écran, imprimante…\n\nCes ressources externes étant beaucoup moins rapides que le processeur, elles bloquent les processus lors de leur exécution.\nAinsi, lors de la vie d’un processus, celui-ci peut passer par trois états:\n\nPRÊT: le processus est lancé et attend l’accès au processeur.\nÉLU: le processus a obtenu l’accès au processeur: il peut s’exécuter.\nBLOQUÉ: le processus est en cours d’exécution, mais attend une ressource en mémoire par exemple, il quitte le processeur pour libérer les ressources.\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nLes trois états d'un processus, et le passage d'un état à un autre. Public domain via Wikimedia Commons",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 3: Architectures matérielles, systèmes d’exploitation et réseaux",
      "Chapitre 2: Gestion des processus par un système d’exploitation"
    ]
  },
  {
    "objectID": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/2-gestion-des-processus-par-un-systeme-dexploitation/index.html#ordonnancement",
    "href": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/2-gestion-des-processus-par-un-systeme-dexploitation/index.html#ordonnancement",
    "title": "Chapitre 2: Gestion des processus par un système d’exploitation",
    "section": "3 Ordonnancement",
    "text": "3 Ordonnancement\nÀ un instant donné, il y a souvent davantage de processus à exécuter que de processeurs.\nLors de leur lacement les processus sont placés dans une file d’attente.\nL’ordonnanceur désigne le composant du noyau du système d’exploitation choisissant l’ordre d’exécution des processus sur les processeurs d’un ordinateur.\nIl existe divers algorithmes d’ordonnancement:\n\nLa méthode du tourniquet (Round Robin): l’ordonnanceur traite la file d’attente comme une file circulaire et alloue successivement un temps processeur à chacun des processus de la file.\nFIFO: First In First Out (voir le cours sur les files)\nSJF Shortest job first (SJF, ou SJN -Shortest Job Next-).\n…\n\nArticle Wikipédia sur l’ordonnancement",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 3: Architectures matérielles, systèmes d’exploitation et réseaux",
      "Chapitre 2: Gestion des processus par un système d’exploitation"
    ]
  },
  {
    "objectID": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/2-gestion-des-processus-par-un-systeme-dexploitation/index.html#interblocage",
    "href": "tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/2-gestion-des-processus-par-un-systeme-dexploitation/index.html#interblocage",
    "title": "Chapitre 2: Gestion des processus par un système d’exploitation",
    "section": "4 Interblocage",
    "text": "4 Interblocage\n\n\ninterblocage\n\n\n\nUn interblocage (ou étreinte fatale, deadlock en anglais pour impasse) est un phénomène qui peut se produire en programmation concurrente lorsque des processus s’attendent mutuellement.\n\n\n\n\nUn exemple concret d’interblocage peut se produire lorsque deux processus essayent d’acquérir deux ressources dans un ordre différent.\n \n\nP1 acquiert R1.\nP2 acquiert R2.\nP1 attend pour acquérir R2 (qui est détenu par P2).\nP2 attend pour acquérir R1 (qui est détenu par P1).\n\nDans cette situation, les deux processus sont définitivement bloqués.\n\n\nDeux processus en concurrence pour deux ressources dans un ordre opposé.\n\nBy Abacoo - Own work, CC BY-SA 4.0, Link\n\n\nA Un seul processus se déroule.\nB Le processus ultérieur doit attendre.\nC Un blocage se produit lorsque le premier processus verrouille la première ressource en même temps que le second processus verrouille la seconde ressource.\nD Le blocage peut être résolu en annulant et en redémarrant le premier processus.\n\n\nIl existe plusieurs façons de gérer les interblocages:\n\nles ignorer ce qui était fait initialement par UNIX qui supposait que la fréquence des interblocages était faible et que la perte de données encourue à chaque fois est tolérable.\nles détecter: Un algorithme est utilisé pour suivre l’allocation des ressources et les états des processus, il annule et redémarre un ou plusieurs processus afin de supprimer le blocage détecté\nles éviter: des algorithmes sont utilisés pour supprimer une des quatre conditions nécessaires à la possibilité de l’interblocage(Conditions de Coffman)\n\n\n\n\n\n\n\n\nEn plus: Conditions de Coffman\n\n\n\n\n\n\nCoffman a prouvé en 1971 qu’il y a quatre conditions nécessaires pour qu’un blocage puisse avoir lieu.\nVoir l’article Wikipédia Conditions de Coffman pour plus de détails.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 3: Architectures matérielles, systèmes d’exploitation et réseaux",
      "Chapitre 2: Gestion des processus par un système d’exploitation"
    ]
  },
  {
    "objectID": "tg/nsi/2-bases-de-donnees/3-langage-sql/exo/index.html",
    "href": "tg/nsi/2-bases-de-donnees/3-langage-sql/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Un TP en ligne avec correction est proposé par le CNAM et vous permet de vous entraîner sur 4 jeux de données: http://deptfod.cnam.fr/bd/tp.\nLa base de données films a été importée sur https://apps.lyceum.fr/sqlite.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 2: Bases de données",
      "Chapitre 3: Langage SQL",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/2-bases-de-donnees/3-langage-sql/exo/index.html#tp-du-cnam-sur-les-requêtes-sql",
    "href": "tg/nsi/2-bases-de-donnees/3-langage-sql/exo/index.html#tp-du-cnam-sur-les-requêtes-sql",
    "title": "Exercices",
    "section": "",
    "text": "Un TP en ligne avec correction est proposé par le CNAM et vous permet de vous entraîner sur 4 jeux de données: http://deptfod.cnam.fr/bd/tp.\nLa base de données films a été importée sur https://apps.lyceum.fr/sqlite.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 2: Bases de données",
      "Chapitre 3: Langage SQL",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/2-bases-de-donnees/3-langage-sql/exo/index.html#enquête-en-ligne-et-en-anglais",
    "href": "tg/nsi/2-bases-de-donnees/3-langage-sql/exo/index.html#enquête-en-ligne-et-en-anglais",
    "title": "Exercices",
    "section": "2 Enquête en ligne (et en anglais)",
    "text": "2 Enquête en ligne (et en anglais)\nRésolvez l’enquête du meurtre de SQL City. Pour accéder à cette enquête, il existe diverses possibilités:\n\nVersion interactive en html: http://mystery.knightlab.com\nFichiers dont la base de données sqlite sur github: https://github.com/NUKnightLab/sql-mysteries\nVersion interactive sur repl.it: https://repl.it/@ToniScullion1/Silver-TASK-2-SQL-Murder-Mystery#actvity.md",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 2: Bases de données",
      "Chapitre 3: Langage SQL",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/2-bases-de-donnees/3-langage-sql/exo/index.html#mini-projet-application-web-avec-base-de-données-sqlite",
    "href": "tg/nsi/2-bases-de-donnees/3-langage-sql/exo/index.html#mini-projet-application-web-avec-base-de-données-sqlite",
    "title": "Exercices",
    "section": "3 Mini-projet: application web avec base de données sqlite",
    "text": "3 Mini-projet: application web avec base de données sqlite\nLe dépôt git suivant contient une mini-application web utilisant python pour accéder aux données d’une base de données sqlite.\nhttps://framagit.org/lyceum/flask-sqlite\nPar groupe de 2 ou 3, développez l’ébauche d’application proposée pour qu’elle utilise des données intéressantes de votre choix mais non personnelles.\nOutre le changement de données, vous pourrez:\n\nutiliser plusieurs relations dans votre base de données, et les joindre dans vos requêtes.\nproposer plusieurs pages html pour la visualisation de données différentes, leur édition…",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 2: Bases de données",
      "Chapitre 3: Langage SQL",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/2-bases-de-donnees/3-langage-sql/exo/index.html#exercice-type-bac",
    "href": "tg/nsi/2-bases-de-donnees/3-langage-sql/exo/index.html#exercice-type-bac",
    "title": "Exercices",
    "section": "4 Exercice type BAC",
    "text": "4 Exercice type BAC\n\nCet exercice est issu du sujet zéro.\n\nL’énoncé de cet exercice utilise les mots du langage SQL suivant :\nSELECT, FROM, WHERE, JOIN, INSERT INTO, VALUES, COUNT, ORDER BY.\nDans un lycée imaginaire, les données relatives aux élèves de secondes sont regroupées dans un fichier nommé seconde_lyc.csv. Un extrait de son contenu est représenté figure 1.\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nExtrait du fichier seconde_lyc.csv\n\n\nPour les besoins de l’organisation du lycée, le chef d’établissement exploite la base de données par des requêtes en langage SQL. Il a pour cela créé une table (ou relation) SQL dénommée seconde dans son système de gestion de bases de données dont la structure est la suivante :\n+--------------------------+\n| seconde                  |\n+==========================+\n| num_eleve(clef primaire) |\n+--------------------------+\n| langue1                  |\n+--------------------------+\n| langue2                  |\n+--------------------------+\n| option                   |\n+--------------------------+\n| classe                   |\n+--------------------------+\nL’attribut num_eleve est un entier, les autres sont des chaines de caractère (le type CHAR).\n\n \n\nDans le modèle relationnel, quel est l’intérêt de l’attribut num_eleve.\nÉcrire une requête SQL d’insertion permettant d’enregistrer l’élève ACHIR Mussa dans la table seconde. Les informations relatives à cet élève sont données dans la ligne 1 du fichier seconde_lyc.csv.\nLors de l’insertion de l’élève ALTMEYER Yohan (ligne 2 du fichier seconde_lyc.csv), une erreur de saisie a été commise sur la première langue, qui devrait être allemand. Écrire une requête SQL de mise à jour corrigeant les données de cet élève.\n\nOn suppose maintenant que la table seconde contient les informations issues de la figure 1 (ni plus, ni moins, même si la figure 1 n’est qu’un extrait du fichier seconde_lyc.csv).\n\nQuel est le résultat de la requête suivante?\nSELECT num_eleve FROM seconde;\nOn rappelle qu’en SQL, la fonction d’agrégation COUNT() permet de compter le nombre d’enregistrements dans une table. Quel est le résultat de la requête suivante?\nSELECT COUNT(num_eleve) FROM seconde;\nÉcrire la requête permettant de connaître le nombre d’élèves qui font allemand en langue1 ou langue2.\n\nLe chef d’établissement souhaite faire évoluer la structure de sa base de données. Pour ce faire, il créé une nouvelle table eleve dont la structure est la suivante:\n+-------------------------------------+\n| eleve                               |\n+=====================================+\n| num_eleve (clef primaire,           |\n+-------------------------------------+\n| clef étrangère de la table seconde) |\n+-------------------------------------+\n| nom                                 |\n+-------------------------------------+\n| prenom                              |\n+-------------------------------------+\n| datenaissance                       |\n+-------------------------------------+\n\nLà encore, l’attribut num_eleve est un entier, les autres sont des chaines de caractère (le type CHAR).\n\nExpliquer ce qu’apporte l’information clef étrangère pour l’attribut num_eleve de cette table en termes d’intégrité et de cohérence.\nOn suppose la table eleve correctement créée et complétée. Le chef d’établissement aimerait lister les élèves (nom, prénom, date de naissance) de la classe 2A.\nÉcrire la commande qui permet d’établir cette liste à l’aide d’une jointure entre eleve et seconde.\nProposer la structure d’une table coordonnees dans laquelle on pourra indiquer, pour chaque élève, son adresse, son code postal, sa ville, son adresse mail. Préciser la clef primaire et/ou la clé étrangère en vue de la mise en relation avec les autres tables.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 2: Bases de données",
      "Chapitre 3: Langage SQL",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/2-bases-de-donnees/3-langage-sql/quiz/index.html",
    "href": "tg/nsi/2-bases-de-donnees/3-langage-sql/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "1. Comment traduire `SQL` en français ?\n\n   - [ ] `Langage de question fort`\n   - [x] `Langage de requête structuré`\n   - [ ] `Langage de question structuré`\n\n2. Quelle instruction SQL est utilisée pour _lire_ des données d'une base de données?\n\n   - [ ] `GET`\n   - [ ] `FIND`\n   - [ ] `OPEN`\n   - [x] `SELECT`\n\n3. Quelle instruction SQL est utilisée pour _mettre à jour_ les données dans une base de données?\n\n   - [ ] `SAVE`\n   - [ ] `APPEND`\n   - [ ] `MODIFY`\n   - [x] `UPDATE`\n\n4. Quelle instruction SQL est utilisée pour _supprimer_ des données d'une base de données?\n\n   - [ ] `DEL`\n   - [ ] `REMOVE`\n   - [x] `DELETE`\n   - [ ] `POP`\n\n5. Quelle instruction SQL est utilisée pour _insérer_ de nouvelles données dans une base de\n   données?\n\n   - [ ] `ADD`\n   - [x] `INSERT`\n   - [ ] `RECORD`\n   - [ ] `APPEND`\n\n6. Avec SQL, comment sélectionner _tous_ les attributs d'une relation nommée `Personnes`?\n\n   - [ ] `SELECT Personnes;`\n   - [ ] `SELECT ALL FROM Personnes;`\n   - [x] `SELECT * FROM Personnes;`\n   - [ ] `SELECT *.Personnes;`\n\n7. Avec SQL, comment sélectionnez-vous tous les enregistrements d'une relation nommée `Personnes`\n   où\n   la valeur de l'attribut `prenom` est `\"Toto\"`?\n\n   - [x] `SELECT * FROM Personnes WHERE prenom='Toto';`\n   - [ ] `SELECT [all] FROM Personnes WHERE prenom LIKE 'Toto';`\n   - [ ] `SELECT [all] FROM Personnes WHERE prenom=\"Toto\";`\n   - [ ] `SELECT * Personnes WHERE prenom=\"Toto\";`\n\n8. Quelle instruction SQL est utilisée pour renvoyer uniquement des valeurs différentes?\n\n   - [x] `SELECT DISTINCT`\n   - [ ] `SELECT UNIQUE`\n   - [ ] `SELECT DIFFERENT`\n\n9. Quel mot-clé SQL est utilisé pour trier l'ensemble de résultats?\n\n   - [ ] `SORT BY`\n   - [ ] `SORT`\n   - [x] `ORDER BY`\n   - [ ] `ORDER`\n\n10. Avec `SQL`, comment insérer un nouvel enregistrement dans la relation `Personnes`?\n\n    - [x] `INSERT INTO Personnes VALUES ('Jimi', 'Hendrix');`\n    - [ ] `INSERT VALUES ('Jimi', 'Hendrix') INTO Personnes;`\n    - [ ] `INSERT ('Jimi', ‘Hendrix’) INTO Personnes;`\n\n11. Comment pouvez-vous changer \"Dujardin\" en \"Desjardins\" dans l'attribut \"nom\" de la relation\n    `Personnes`?\n\n    - [ ] `MODIFY Personnes SET nom='Dujardin' INTO nom='Desjardins';`\n    - [ ] `MODIFY Personnes SET nom='Dujardin' WHERE nom='Desjardins';`\n    - [x] `UPDATE Personnes SET nom='Desjardins' WHERE nom='Dujardin';`\n    - [ ] `UPDATE Personnes SET nom='Desjardins' INTO nom='Dujardin';`\n\n12. Avec SQL, comment pouvez-vous supprimer les enregistrements où le `prenom` est `Donald` dans\n    la relation `Personnes`?\n\n    - [ ] `DELETE ROW prenom=\"Donald\" FROM Personnes;`\n    - [x] `DELETE FROM Personnes WHERE prenom = 'Donald';`\n    - [ ] `DELETE prenom=\"Donald\" FROM Personnes;`",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 2: Bases de données",
      "Chapitre 3: Langage SQL",
      "Quiz"
    ]
  },
  {
    "objectID": "tg/nsi/2-bases-de-donnees/2-schema-relationnel/index.html",
    "href": "tg/nsi/2-bases-de-donnees/2-schema-relationnel/index.html",
    "title": "Chapitre 2: Schéma relationnel",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nBase de données relationnelle.\nSavoir distinguer la structure d’une base de données de son contenu.\nRepérer des anomalies dans le schéma d’une base de données.\nLa structure est un ensemble de schémas relationnels qui respecte les contraintes du modèle relationnel.\nLes anomalies peuvent être des redondances de données ou des anomalies d’insertion, de suppression, de mise à jour.\nOn privilégie la manipulation de données nombreuses et réalistes.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 2: Bases de données",
      "Chapitre 2: Schéma relationnel"
    ]
  },
  {
    "objectID": "tg/nsi/2-bases-de-donnees/2-schema-relationnel/index.html#vocabulaire",
    "href": "tg/nsi/2-bases-de-donnees/2-schema-relationnel/index.html#vocabulaire",
    "title": "Chapitre 2: Schéma relationnel",
    "section": "1 Vocabulaire",
    "text": "1 Vocabulaire\nNous allons définir le vocabulaire de l’algèbre relationnelle inventée en 1970 par Edgar Frank Codd, et le mettre en relation avec le vocabulaire plus abordable des tableaux.\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nLe vocabulaire des bases de données.© Puerto01 at French Wikipedia CC BY 2.5 via Wikimedia Commons\n\n\nRelation\n\n\n\nDans le modèle relationnel, les données sont stockées dans des tables, aussi appelées relations.\n\n\n\nL’illustration ci-dessus présente une relation appelée voiture.\n\n\nAttribut\n\n\n\nLe nom d’une colonne d’une relation est appelé attribut.\n\n\n\nLa relation voiture possède trois attributs: marque, couleur et plaque.\n\n\nn-uplet\n\n\n\nUn enregistrement (ligne) d’une relation est appelé n-uplet.\n\n\n\n\n\nID voiture, marque de la table voiture.\nID carburant, type de la table carburant.\n\n\n\n\nDomaine\n\n\n\nLe domaine d’un attribut est l’ensemble des valeurs qui peuvent être prises par cet attribut.\n\n\n\n\nUne base de donnée sqlite il n’y a que cinq domaines de valeurs possibles:\n\nNULL. La valeur est une valeur NULL.\nINTEGER. La valeur est un entier signé, stocké dans 1, 2, 3, 4, 6 ou 8 octets en fonction de l’amplitude de la valeur.\nREAL. La valeur est une valeur à virgule flottante, stockée sous forme de nombre à virgule flottante IEEE de 8 octets.\nTEXT. La valeur est une chaîne de texte, stockée à l’aide du codage de la base de données (UTF-8, UTF-16BE ou UTF-16LE).\nBLOB. La valeur est une donnée binaire brute, stocké exactement comme elle a été entrée.\n\nDans le SGBD MariaDB il y a beaucoup plus de types avec notamment des formats pour les dates (voir doc).\n\nPour résumer, le tableau suivant montre celui, rigoureux, issu de l’algèbre relationnelle et celui, plus vague, correspondant à la représentation par table. Les termes de chaque ligne seront considérés comme équivalents, mais on privilégiera les premiers qui sont plus précis.\n\n\n\nTerme de l’algèbre relationnelle\nTerme de la représentation par table\n\n\n\n\nRelation\nTable\n\n\nn-uplet\nligne\n\n\nNom d’attribut\nNom de colonne\n\n\nValeur d’attribut\nCellule\n\n\nDomaine\nType\n\n\n\nPhilippe Rigaux sur sql.dbpedia.fr CC-BY-NC-SA",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 2: Bases de données",
      "Chapitre 2: Schéma relationnel"
    ]
  },
  {
    "objectID": "tg/nsi/2-bases-de-donnees/2-schema-relationnel/index.html#clés-primaire-et-secondaire",
    "href": "tg/nsi/2-bases-de-donnees/2-schema-relationnel/index.html#clés-primaire-et-secondaire",
    "title": "Chapitre 2: Schéma relationnel",
    "section": "2 Clés primaire et secondaire",
    "text": "2 Clés primaire et secondaire\n\n\nClé primaire\n\n\n\nChaque ligne de la table doit comporter un attribut qui l’identifie de façon unique, on l’appelle la clé primaire.\n\n\n\n\n\nDans la table voiture l’attribut plaque pourrait constituer la clé primaire.\nEn s’inscrivant sur un site, on vous impose d’utiliser un identifiant unique pour créer votre ligne dans la base de données.\nL’email d’un utilisateur peut servir de clé primaire, mais ce n’est pas conseillé.\n\n\n\n\n\n\n\n\n\nEn plus\n\n\n\n\n\n\nOn préférera utiliser une clé primaire complètement indépendante des données métier, afin de s’assurer que le champ est toujours rempli et n’évolue pas dans le temps.\nToutes les bases de données proposent des mécanismes prenant en charge une numérotation utilisable pour les clés primaires.\n\n\n\n\n\n\n\nClé secondaire\n\n\n\nUne clé secondaire ou clé étrangère est une clé utilisée dans une table pour faire référence à un enregistrement d’une autre table.\n\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nLa clé primaire ID carburant de la relation carburant sert de clé secondaire dans la relation voiture.© Puerto01 at French Wikipedia CC BY 2.5 via Wikimedia Commons\n\n\nL’ensemble constitué d’une clé primaire et d’une clé étrangère sert à établir des relations entre tables.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 2: Bases de données",
      "Chapitre 2: Schéma relationnel"
    ]
  },
  {
    "objectID": "tg/nsi/2-bases-de-donnees/2-schema-relationnel/index.html#contraintes-dintégrité",
    "href": "tg/nsi/2-bases-de-donnees/2-schema-relationnel/index.html#contraintes-dintégrité",
    "title": "Chapitre 2: Schéma relationnel",
    "section": "3 Contraintes d’intégrité",
    "text": "3 Contraintes d’intégrité\nLes SGBD modernes permettent de garder les données conformes au modèle relationnel. Trois types de contraintes d’intégrité font partie intégrante du modèle de données relationnel:\n\nL’intégrité de clé primaire: cette règle stipule que chaque table doit avoir une clé primaire et que la ou les colonnes choisies pour être la clé primaire doivent être uniques et non nulles.\n\n\nDans la table voiture essayez d’ajouter la troisième voiture avec l’ID 2, l’ajout sera refusé, car ID voiture a été déclaré comme clé primaire\n\n\nL’intégrité référentielle est une situation dans laquelle pour chaque information d’une table A qui fait référence à une information d’une table B, l’information référencée existe dans la table B.\n\n\nSi vous tentez de supprimer la ligne 2 de la table carburant, le SGBD vous le refusera en raison de sa présence dans la table des voitures à la ligne de la BMW.\nIl est aussi impossible d’ajouter dans la table voitures un id carburant qui n’existe pas dans la relation carburant.\n\n\nL’intégrité du domaine spécifie que toutes les colonnes d’une base de données relationnelle doivent être déclarées sur un domaine défini.\n\n\nS’assurer qu’une valeur est bien un email, un numéro de téléphone ou un code postal.\nLe support des types dans sqlite étant relativement limité, vous pouvez par exemple vérifier qu’on ne peut ajouter un id voiture qui ne soit pas un entier comme A par exemple.\n\n\nUne fois la contrainte déclarée, le SGBD refusera toute modification du contenu de la base de données qui violerait une de ces règles et casserait l’intégrité.\n\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nTélécharger la base de données sqlite voitures.db à l’adresse suivante: https://apps.lyceum.fr/sqlite/dbs/voitures.db.\nL’ouvrir dans sqliteBrowser et vérifier que les trois contraintes d’intégrité sont bien gérées par le SGBD sqlite.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 2: Bases de données",
      "Chapitre 2: Schéma relationnel"
    ]
  },
  {
    "objectID": "tg/nsi/2-bases-de-donnees/2-schema-relationnel/index.html#exemples-danomalies",
    "href": "tg/nsi/2-bases-de-donnees/2-schema-relationnel/index.html#exemples-danomalies",
    "title": "Chapitre 2: Schéma relationnel",
    "section": "4 Exemples d’anomalies",
    "text": "4 Exemples d’anomalies\nNous allons montrer sur un l’exemple d’une base de donnée de DVD mal construite quels types d’anomalies peuvent apparaître.\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nexemple de table de DVDs\n\n\nMirian Halfeld-Ferrari Université d’Orléans\nComme vous le voyez cette table est mal construite:\n\nLes données sont redondantes: À chaque fois qu’un film apparaît, les valeurs pour le genre, length et rating apparaissent aussi.\nLes attributs concernent à la fois le DVD et le film, il faudrait créer des tables séparées.\n\nMaintenant, intéressons-nous aux anomalies qui pourraient se présenter:\n\nAnomalie de mise à jour: Que se passe-t-il si le film Elisabeth est renommé Élisabeth pour satisfaire les clients francophones?\nAnomalie d’insertion: Que se passe-t-il avec l’insertion du n-uplet : 〈102,1/1/99,   Elisabeth, drama,110, PG13〉\nAnomalie de suppression: Que se passe-t-il lors de la suppression du DVD numéro 123?",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 2: Bases de données",
      "Chapitre 2: Schéma relationnel"
    ]
  },
  {
    "objectID": "tg/nsi/2-bases-de-donnees/2-schema-relationnel/index.html#comment-concevoir-une-base-de-données-bien-structurée",
    "href": "tg/nsi/2-bases-de-donnees/2-schema-relationnel/index.html#comment-concevoir-une-base-de-données-bien-structurée",
    "title": "Chapitre 2: Schéma relationnel",
    "section": "5 Comment concevoir une base de données bien structurée?",
    "text": "5 Comment concevoir une base de données bien structurée?\nUne base de données bien structurée:\n\nÉconomise de l’espace disque en éliminant les données redondantes.\nMaintient l’exactitude et l’intégrité des données.\nFournit un accès facile aux données utiles.\n\nLe processus de conception peut-être scindé comme suit:\n\nAnalyse des besoins ou identification de l’objectif de votre base de données.\nOrganisation des données en tableaux.\nSpécification des clés primaires et analyse des relations.\n\nL’utilisation d’un diagramme relationnel aide à visualiser les relations entre les données.\nVoici l’exemple de la base de données «Rock60» qui rassemble des données sur les albums de rock des années 60 ainsi que les musiciens et producteurs qui y ont participé.\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nSchéma relationnel de la base de données rock60\n\n\nOutre l’utilisation de clés primaires et secondaires, on a ajouté des tables particulières qui permettent de relier deux tables lorsque qu’on a une relation dite N:N.\n\nUne personne peut jouer dans plusieurs groupes et un groupe est constitué de plusieurs personnes.\nLa table Joue Dans permet d’exprimer cette relation en utilisant deux clés étrangères.\n\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nEn étudiant le schéma ci-dessus:\n\nDonner le nom de toutes les clés primaires.\nDonner le nom de toutes les clés secondaires.\nDonner le nom de toutes les tables exprimant les relations N:N comme la table Joue Dans.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 2: Bases de données",
      "Chapitre 2: Schéma relationnel"
    ]
  },
  {
    "objectID": "tg/nsi/2-bases-de-donnees/1-les-bases-de-donnees-relationnelles/exo/index.html",
    "href": "tg/nsi/2-bases-de-donnees/1-les-bases-de-donnees-relationnelles/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "En utilisant les données des oscars issues de wikidata, nous allons montrer les limites de l’utilisation de fichiers de tableaux type csv vus en première.\nPour cela vous travaillerez sur le fichier framacalc disponible en ligne à l’adresse suivante: https://lite.framacalc.org/oscars-9rvu\nQui contient les données sur les Oscars seulement jusqu’en 2020.\nVotre mission si vous l’acceptez est de rajouter les données manquantes disponibles dans l’&lt;iframe&gt;ci-dessous.\nAprès avoir (tenté) de mettre à jour ces données, expliquez quelles sont les limites de l’utilisation de fichiers de tables(csv, ods, xlsx), et quel est l’intérêt d’utiliser un SGBD(Système de gestion de bases de données).",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 2: Bases de données",
      "Chapitre 1: Les bases de données relationnelles",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/2-bases-de-donnees/1-les-bases-de-donnees-relationnelles/exo/index.html#édition-de-données-csv",
    "href": "tg/nsi/2-bases-de-donnees/1-les-bases-de-donnees-relationnelles/exo/index.html#édition-de-données-csv",
    "title": "Exercices",
    "section": "",
    "text": "En utilisant les données des oscars issues de wikidata, nous allons montrer les limites de l’utilisation de fichiers de tableaux type csv vus en première.\nPour cela vous travaillerez sur le fichier framacalc disponible en ligne à l’adresse suivante: https://lite.framacalc.org/oscars-9rvu\nQui contient les données sur les Oscars seulement jusqu’en 2020.\nVotre mission si vous l’acceptez est de rajouter les données manquantes disponibles dans l’&lt;iframe&gt;ci-dessous.\nAprès avoir (tenté) de mettre à jour ces données, expliquez quelles sont les limites de l’utilisation de fichiers de tables(csv, ods, xlsx), et quel est l’intérêt d’utiliser un SGBD(Système de gestion de bases de données).",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 2: Bases de données",
      "Chapitre 1: Les bases de données relationnelles",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/2-bases-de-donnees/1-les-bases-de-donnees-relationnelles/exo/index.html#traitement-de-données-en-table",
    "href": "tg/nsi/2-bases-de-donnees/1-les-bases-de-donnees-relationnelles/exo/index.html#traitement-de-données-en-table",
    "title": "Exercices",
    "section": "2 Traitement de données en table",
    "text": "2 Traitement de données en table\nEn utilisant le fichier de données csv sur les bornes de recharges de véhicules électriques de la Ville de Nice disponible à cette adresse:\nhttps://www.data.gouv.fr/fr/datasets/bornes-de-recharges-ville-de-nice/\n\nTélécharger le fichier, puis l’ouvrir avec Python comme décrit dans le cours de première. Commencer par afficher toutes les lignes.\nFiltrer les données pour n’afficher que les stations présentant une puissance de 50kW. Les compter avec un algorithme.\nCalculer la puissance moyenne des stations de charge en ne tenant compte que des stations pour lesquelles les données sont présentes.\nEn vous aidant du cours de première, vérifier si les données ne présentent pas de doublons.\nTrouver quelle est la station de recharge la plus proche du lycée Estienne d’Orves dont la coordonnée GPS est: 43° 42′ 01″ nord, 7° 15′ 01″ est soit en notation décimale [43.700278,7.250278]. On pourra utiliser la fonction dist du module math pour calculer la distance euclidienne entre deux points.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 2: Bases de données",
      "Chapitre 1: Les bases de données relationnelles",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/2-bases-de-donnees/1-les-bases-de-donnees-relationnelles/quiz/index.html",
    "href": "tg/nsi/2-bases-de-donnees/1-les-bases-de-donnees-relationnelles/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 2: Bases de données",
      "Chapitre 1: Les bases de données relationnelles",
      "Quiz"
    ]
  },
  {
    "objectID": "tg/nsi/programme.html",
    "href": "tg/nsi/programme.html",
    "title": "Programme de NSI",
    "section": "",
    "text": "Ce document est une retranscription non officielle du programme de numérique et sciences informatiques de terminale générale applicable à la rentrée 2020. La version officielle est consultable sur eduscol."
  },
  {
    "objectID": "tg/nsi/programme.html#préambule",
    "href": "tg/nsi/programme.html#préambule",
    "title": "Programme de NSI",
    "section": "1 Préambule",
    "text": "1 Préambule\nL’enseignement de spécialité de numérique et sciences informatiques du cycle terminal de la voie générale vise l’appropriation des fondements de l’informatique pour préparer les élèves à une poursuite d’études en les formant à la pratique d’une démarche scientifique et en développant leur appétence pour des activités de recherche.\nL’objectif de cet enseignement général est l’appropriation des concepts et des méthodes qui fondent l’informatique, dans ses dimensions scientifiques et techniques. Il s’appuie sur l’universalité de quatre concepts fondamentaux et la variété de leurs interactions :\n\nles données, qui représentent sous une forme numérique unifiée des informations très diverses: textes, images, sons, mesures physiques, sommes d’argent, etc. ;\nles algorithmes, qui spécifient de façon abstraite et précise des traitements à effectuer sur les données à partir d’opérations élémentaires ;\nles langages, qui permettent de traduire les algorithmes abstraits en programmes textuels ou graphiques de façon à ce qu’ils soient exécutables par les machines ;\nles machines, et leurs systèmes d’exploitation, qui permettent d’exécuter des programmes en enchaînant un grand nombre d’instructions simples, assurent la persistance des données par leur stockage et gèrent les communications. Y sont inclus les objets connectés et les réseaux.\n\nÀ ces concepts s’ajoute un élément transversal : les interfaces qui permettent la communication, la collecte des données et la commande des systèmes.\nCet enseignement prolonge les enseignements d’informatique dispensés à l’école primaire, au collège en mathématiques et en technologie et, en classe de seconde, l’enseignement commun Sciences numériques et technologie. Il s’appuie aussi sur l’algorithmique pratiquée en mathématiques en classe de seconde. Il approfondit les notions étudiées et les compétences travaillées en classe de première dans l’enseignement de spécialité. Il autorise tous les choix de couplage avec les autres spécialités.\nL’enseignement de spécialité en classe terminale concerne les élèves ayant confirmé ce choix parmi les trois spécialités suivies en classe de première. À ce titre, dans le cadre des six heures hebdomadaires et dans une logique d’exigence disciplinaire et de préparation à l’enseignement supérieur, les élèves sont amenés à approfondir leurs connaissances et à développer un solide niveau de compétences.\nL’enseignement de spécialité de numérique et sciences informatiques permet de développer les compétences suivantes, constitutives de la pensée informatique :\n\nanalyser et modéliser un problème en termes de flux et de traitement d’informations ;\ndécomposer un problème en sous-problèmes, reconnaître des situations déjà analysées et réutiliser des solutions ;\nconcevoir des solutions algorithmiques ;\ntraduire un algorithme dans un langage de programmation, en spécifier les interfaces et les interactions, comprendre et réutiliser des codes sources existants, développer des processus de mise au point et de validation de programmes ;\nmobiliser les concepts et les technologies utiles pour assurer les fonctions d’acquisition, de mémorisation, de traitement et de diffusion des informations ;\ndévelopper des capacités d’abstraction et de généralisation.\n\nCet enseignement se déploie en mettant en activité les élèves, sous des formes variées qui permettent de développer des compétences transversales :\n\nfaire preuve d’autonomie, d’initiative et de créativité ;\nprésenter un problème ou sa solution, développer une argumentation dans le cadre d’un débat ;\ncoopérer au sein d’une équipe dans le cadre d’un projet ;\nrechercher de l’information, partager des ressources ;\nfaire un usage responsable et critique de l’informatique.\n\nLa progression peut suivre un rythme annuel construit autour de périodes spécifiques favorisant une alternance entre divers types d’activités.\nL’enseignement de numérique et sciences informatiques permet l’acquisition des compétences numériques qui font l’objet d’une certification en fin de cycle terminal. Comme tous les enseignements de spécialité, il contribue au développement des compétences orales à travers notamment la pratique de l’argumentation. Celle-ci conduit à préciser sa pensée et à expliciter son raisonnement de manière à convaincre. Elle permet à chacun de faire évoluer sa pensée, jusqu’à la remettre en cause si nécessaire, pour accéder progressivement à la vérité par la preuve. Elle prend un relief particulier pour ceux qui choisiront de préparer l’épreuve orale terminale du baccalauréat en l’adossant à cet enseignement de spécialité.\n\n1.1 Démarche de projet\nUn enseignement d’informatique ne saurait se réduire à une présentation de concepts ou de méthodes sans permettre aux élèves de se les approprier en développant des projets.\nUn quart au moins de l’horaire total de la spécialité est réservé à la conception et à l’élaboration de projets conduits par les élèves.\nLes projets réalisés par les élèves, sous la conduite du professeur, constituent un apprentissage fondamental tant pour l’appropriation des concepts informatiques que pour l’acquisition de compétences. En classe de première comme en classe terminale, ils peuvent porter sur des problématiques issues d’autres disciplines et ont essentiellement pour but d’imaginer des solutions répondant à un problème ; dans la mesure du possible, il convient de laisser le choix du thème du projet aux élèves. Il peut s’agir d’un approfondissement théorique des concepts étudiés en commun, d’une application à d’autres disciplines telle qu’une simulation d’expérience, d’exploitation de modules liés à l’intelligence artificielle et en particulier à l’apprentissage automatique, d’un travail sur des données socioéconomiques, du développement d’un logiciel de lexicographie, d’un projet autour d’un objet connecté ou d’un robot, de la conception d’une bibliothèque implémentant une structure de données complexe, d’un problème de traitement d’image ou de son, d’une application mobile, par exemple de réalité virtuelle ou augmentée, du développement d’un site Web associé à l’utilisation d’une base de données, de la réalisation d’un interpréteur d’un mini-langage, de la recherche d’itinéraire sur une carte (algorithme A*), d’un programme de jeu de stratégie, etc.\nLa conduite d’un projet inclut des points d’étape pour faire un bilan avec le professeur, valider des éléments, contrôler l’avancement du projet ou en adapter les objectifs, voire le redéfinir partiellement, afin de maintenir la motivation des élèves.\nLes professeurs veillent à ce que les projets restent d’une ambition raisonnable afin de leur permettre d’aboutir.\n\n\n1.2 Modalités de mise en œuvre\nLes activités pratiques et la réalisation de projets supposent que chaque élève ait un accès individuel à un équipement relié à Internet.\nUn langage de programmation est nécessaire pour l’écriture des programmes : un langage simple d’usage, interprété, concis, libre et gratuit, multiplateforme, largement répandu, riche de bibliothèques adaptées et bénéficiant d’une vaste communauté d’auteurs dans le monde éducatif est à privilégier. Au moment de la conception de ce programme, le langage choisi est Python version 3 (ou supérieure).\nL’expertise dans tel ou tel langage de programmation n’est cependant pas un objectif de formation.\nLe professeur s’attachera à contextualiser le plus souvent possible les activités pratiques en s’appuyant sur des thèmes d’actualité et des problématiques du monde numérique et d’ingénierie numérique dans lesquels évoluent les élèves.\nLa culture du numérique et les sciences informatiques s’acquièrent par la pratique. Il convient de placer au maximum l’élève en situation d’activité. L’emploi de démarche de résolution de problèmes est ainsi à privilégier pour mobiliser les différents contenus scientifiques du programme."
  },
  {
    "objectID": "tg/nsi/programme.html#éléments-de-programme",
    "href": "tg/nsi/programme.html#éléments-de-programme",
    "title": "Programme de NSI",
    "section": "2 Éléments de programme",
    "text": "2 Éléments de programme\nLe programme, organisé en six rubriques, ne constitue pas un plan de cours. Il appartient aux professeurs de choisir leur progression. Les mêmes notions peuvent être développées et éclairées dans différentes rubriques et leurs interactions mises en évidence.\n\n2.1 Histoire de l’informatique\nCette rubrique transversale se décline dans chacune des cinq autres.\nComme tous les concepts scientifiques et techniques, ceux de l’informatique ont une histoire et ont été forgés par des personnes. Les algorithmes sont présents dès l’Antiquité, les machines à calculer apparaissent progressivement au XVIIe siècle, les sciences de l’information sont fondées au XIXe siècle, mais c’est en 1936 qu’apparaît le concept de machine universelle, capable d’exécuter tous les algorithmes, et que les notions de machine, algorithme, langage et information sont pensées comme un tout cohérent. Les premiers ordinateurs ont été construits en 1948 et leur puissance a ensuite évolué exponentiellement. Parallèlement, les ordinateurs se sont diversifiés dans leurs tailles, leurs formes et leurs emplois : téléphones, tablettes, montres connectées, ordinateurs personnels, serveurs, fermes de calcul, méga-ordinateurs. Le réseau Internet, développé depuis 1969, relie aujourd’hui ordinateurs et objets connectés.\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nÉvénements clés de l’histoire de l’informatique\nSituer dans le temps les principaux événements de l’histoire de l’informatique et leurs protagonistes.\nIdentifier l’évolution des rôles relatifs des logiciels et des matériels.\nCes repères viennent compléter ceux qui ont été introduits en première.\nCes repères historiques sont construits au fur et à mesure de la présentation des concepts et techniques.\n\n\n\n\n\n2.2 Structures de données\nL’écriture sur des exemples simples de plusieurs implémentations d’une même structure de données permet de faire émerger les notions d’interface et d’implémentation, ou encore de structure de données abstraite.\nLe paradigme de la programmation objet peut être utilisé pour réaliser des implémentations effectives des structures de données, même si ce n’est pas la seule façon de procéder.\nLe lien est établi avec la notion de modularité qui figure dans la rubrique « langages et programmation » en mettant en évidence l’intérêt d’utiliser des bibliothèques ou des API (Application Programming Interface).\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nStructures de données, interface et implémentation.\nSpécifier une structure de données par son interface.\nDistinguer interface et implémentation.\nÉcrire plusieurs implémentations d’une même structure de données.\nL’abstraction des structures de données est introduite après plusieurs implémentations d’une structure simple comme la file (avec un tableau ou avec deux piles).\n\n\nVocabulaire de la programmation objet : classes, attributs, méthodes, objets.\nÉcrire la définition d’une classe.\nAccéder aux attributs et méthodes d’une classe.\nOn n’aborde pas ici tous les aspects de la programmation objet comme le polymorphisme et l’héritage.\n\n\nListes, piles, files : structures linéaires.\nDictionnaires, index et clé.\nDistinguer des structures par le jeu des méthodes qui les caractérisent.\nChoisir une structure de données adaptée à la situation à modéliser.\nDistinguer la recherche d’une valeur dans une liste et dans un dictionnaire.\nOn distingue les modes FIFO(first in first out) et LIFO (last in first out) des piles et des files.\n\n\nArbres : structures hiérarchiques.\nArbres binaires : nœuds, racines, feuilles, sous-arbres gauches, sous-arbres droits.\nIdentifier des situations nécessitant une structure de données arborescente.\nÉvaluer quelques mesures des arbres binaires (taille, encadrement de la hauteur, etc.).\nOn fait le lien avec la rubrique « algorithmique ».\n\n\nGraphes : structures relationnelles.\nSommets, arcs, arêtes, graphes orientés ou non orientés.\nModéliser des situations sous forme de graphes.\nÉcrire les implémentations correspondantes d’un graphe : matrice d’adjacence, liste de successeurs/de prédécesseurs.\nPasser d’une représentation à une autre.\nOn s’appuie sur des exemples comme le réseau routier, le réseau électrique, Internet, les réseaux sociaux.\nLe choix de la représentation dépend du traitement qu’on veut mettre en place : on fait le lien avec la rubrique « algorithmique ».\n\n\n\n\n\n2.3 Bases de données\nLe développement des traitements informatiques nécessite la manipulation de données de plus en plus nombreuses. Leur organisation et leur stockage constituent un enjeu essentiel de performance.\nLe recours aux bases de données relationnelles est aujourd’hui une solution très répandue. Ces bases de données permettent d’organiser, de stocker, de mettre à jour et d’interroger des données structurées volumineuses utilisées simultanément par différents programmes ou différents utilisateurs. Cela est impossible avec les représentations tabulaires étudiées en classe de première.\nDes systèmes de gestion de bases de données (SGBD) de très grande taille (de l’ordre du pétaoctet) sont au centre de nombreux dispositifs de collecte, de stockage et de production d’informations.\nL’accès aux données d’une base de données relationnelle s’effectue grâce à des requêtes d’interrogation et de mise à jour qui peuvent par exemple être rédigées dans le langage SQL (Structured Query Language). Les traitements peuvent conjuguer le recours au langage SQL et à un langage de programmation.\nIl convient de sensibiliser les élèves à un usage critique et responsable des données.\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nModèle relationnel : relation, attribut, domaine, clef primaire, clef étrangère, schéma relationnel.\nIdentifier les concepts définissant le modèle relationnel.\nCes concepts permettent d’exprimer les contraintes d’intégrité (domaine, relation et référence).\n\n\nBase de données relationnelle.\nSavoir distinguer la structure d’une base de données de son contenu.\nRepérer des anomalies dans le schéma d’une base de données.\nLa structure est un ensemble de schémas relationnels qui respecte les contraintes du modèle relationnel.\nLes anomalies peuvent être des redondances de données ou des anomalies d’insertion, de suppression, de mise à jour.\nOn privilégie la manipulation de données nombreuses et réalistes.\n\n\nSystème de gestion de bases de données relationnelles.\nIdentifier les services rendus par un système de gestion de bases de données relationnelles : persistance des données, gestion des accès concurrents, efficacité de traitement des requêtes, sécurisation des accès.\nIl s’agit de comprendre le rôle et les enjeux des différents services sans en détailler le fonctionnement.\n\n\nLangage SQL : requêtes d’interrogation et de mise à jour d’une base de données.\nIdentifier les composants d’une requête.\nConstruire des requêtes d’interrogation à l’aide des clauses du langage SQL : SELECT, FROM, WHERE, JOIN.\nConstruire des requêtes d’insertion et de mise à jour à l’aide de : UPDATE, INSERT, DELETE.\nOn peut utiliser DISTINCT, ORDER BY ou les fonctions d’agrégation sans utiliser les clauses GROUP BY et HAVING.\n\n\n\n\n\n2.4 Architectures matérielles, systèmes d’exploitation et réseaux\nLa réduction de taille des éléments des circuits électroniques a conduit à l’avènement de systèmes sur puce (SoCs pour Systems on Chips en anglais) qui regroupent dans un seul circuit nombre de fonctions autrefois effectuées par des circuits séparés assemblés sur une carte électronique. Un tel système sur puce est conçu et mis au point de façon logicielle, ses briques électroniques sont accessibles par des API, comme pour les bibliothèques logicielles.\nToute machine est dotée d’un système d’exploitation qui a pour fonction de charger les programmes depuis la mémoire de masse et de lancer leur exécution en leur créant des processus, de gérer l’ensemble des ressources, de traiter les interruptions ainsi que les entrées-sorties et enfin d’assurer la sécurité globale du système.\nDans un réseau, les routeurs jouent un rôle essentiel dans la transmission des paquets sur Internet : les paquets sont routés individuellement par des algorithmes. Les pertes logiques peuvent être compensées par des protocoles reposant sur des accusés de réception ou des demandes de renvoi, comme TCP.\nLa protection des données sensibles échangées est au cœur d’Internet. Les notions de chiffrement et de déchiffrement de paquets pour les communications sécurisées sont explicitées.\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nComposants intégrés d’un système sur puce.\nIdentifier les principaux composants sur un schéma de circuit et les avantages de leur intégration en termes de vitesse et de consommation.\nLe circuit d’un téléphone peut être pris comme un exemple : microprocesseurs, mémoires locales, interfaces radio et filaires, gestion d’énergie, contrôleurs vidéo, accélérateur graphique, réseaux sur puce, etc.\n\n\nGestion des processus et des ressources par un système d’exploitation.\nDécrire la création d’un processus, l’ordonnancement de plusieurs processus par le système.\nMettre en évidence le risque de l’interblocage (deadlock).\nÀ l’aide d’outils standard, il s’agit d’observer les processus actifs ou en attente sur une machine. Une présentation débranchée de l’interblocage peut être proposée.\n\n\nProtocoles de routage.\nIdentifier, suivant le protocole de routage utilisé, la route empruntée par un paquet.\nEn mode débranché, les tables de routage étant données, on se réfère au nombre de sauts (protocole RIP) ou au coût des routes (protocole OSPF).\nLe lien avec les algorithmes de recherche de chemin sur un graphe est mis en évidence.\n\n\nSécurisation des communications.\nDécrire les principes de chiffrement symétrique (clef partagée) et asymétrique (avec clef privée/clef publique).\nDécrire l’échange d’une clef symétrique en utilisant un protocole asymétrique pour sécuriser une communication HTTPS.\nLes protocoles symétriques et asymétriques peuvent être illustrés en mode débranché, éventuellement avec description d’un chiffrement particulier.\nLa négociation de la méthode chiffrement du protocole SSL (Secure Sockets Layer) n’est pas abordée.\n\n\n\n\n\n2.5 Langages et programmation\nLe travail entrepris en classe de première sur les méthodes de programmation est prolongé. L’accent est mis sur une programmation assurant une meilleure sûreté, c’est-à-dire minimisant le nombre d’erreurs. Parallèlement, on montre l’universalité et les limites de la notion de calculabilité.\nLa récursivité est une méthode fondamentale de programmation. Son introduction permet également de diversifier les algorithmes étudiés. En classe terminale, les élèves s’initient à différents paradigmes de programmation pour ne pas se limiter à une démarche impérative.\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nNotion de programme en tant que donnée.\nCalculabilité, décidabilité.\nComprendre que tout programme est aussi une donnée.\nComprendre que la calculabilité ne dépend pas du langage de programmation utilisé.\nMontrer, sans formalisme théorique, que le problème de l’arrêt est indécidable.\nL’utilisation d’un interpréteur ou d’un compilateur, le téléchargement de logiciel, le fonctionnement des systèmes d’exploitation permettent de comprendre un programme comme donnée d’un autre programme.\n\n\nRécursivité.\nÉcrire un programme récursif.\nAnalyser le fonctionnement d’un programme récursif.\nDes exemples relevant de domaines variés sont à privilégier.\n\n\nModularité.\nUtiliser des API (Application Programming Interface) ou des bibliothèques.\nExploiter leur documentation. Créer des modules simples et les documenter.\n\n\n\nParadigmes de programmation.\nDistinguer sur des exemples les paradigmes impératif, fonctionnel et objet.\nChoisir le paradigme de programmation selon le champ d’application d’un programme. Avec un même langage de programmation, on peut utiliser des paradigmes différents. Dans un même programme, on peut utiliser des paradigmes différents.\n\n\nMise au point des programmes.\nGestion des bugs.\nDans la pratique de la programmation, savoir répondre aux causes typiques de bugs : problèmes liés au typage, effets de bord non désirés, débordements dans les tableaux, instruction conditionnelle non exhaustive, choix des inégalités, comparaisons et calculs entre flottants, mauvais nommage des variables, etc.\nOn prolonge le travail entrepris en classe de première sur l’utilisation de la spécification, des assertions, de la documentation des programmes et de la construction de jeux de tests.\nLes élèves apprennent progressivement à anticiper leurs erreurs.\n\n\n\n\n\n2.6 Algorithmique\nLe travail de compréhension et de conception d’algorithmes se poursuit en terminale notamment via l’introduction des structures d’arbres et de graphes montrant tout l’intérêt d’une approche récursive dans la résolution algorithmique de problèmes.\nOn continue l’étude de la notion de coût d’exécution, en temps ou en mémoire et on montre l’intérêt du passage d’un coût quadratique en n^2 à n log 2 n ou de n à log 2 n. Le logarithme en base 2 est ici manipulé comme simple outil de comptage (taille en bits d’un nombre entier).\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nAlgorithmes sur les arbres binaires et sur les arbres binaires de recherche.\nCalculer la taille et la hauteur d’un arbre.\nParcourir un arbre de différentes façons (ordres infixe, préfixe ou suffixe ; ordre en largeur d’abord).\nRechercher une clé dans un arbre de recherche, insérer une clé.\nUne structure de données récursive adaptée est utilisée.\nL’exemple des arbres permet d’illustrer la programmation par classe.\nLa recherche dans un arbre de recherche équilibré est de coût logarithmique.\n\n\nAlgorithmes sur les graphes.\nParcourir un graphe en profondeur d’abord, en largeur d’abord.\nRepérer la présence d’un cycle dans un graphe.\nChercher un chemin dans un graphe.\nLe parcours d’un labyrinthe et le routage dans Internet sont des exemples d’algorithme sur les graphes.\nL’exemple des graphes permet d’illustrer l’utilisation des classes en programmation.\n\n\nMéthode « diviser pour régner ».\nÉcrire un algorithme utilisant la méthode « diviser pour régner ».\nLa rotation d’une image bitmap d’un quart de tour avec un coût en mémoire constant est un bon exemple.\nL’exemple du tri fusion permet également d’exploiter la récursivité et d’exhiber un algorithme de coût en n log 2 n dans les pires des cas.\n\n\nProgrammation dynamique.\nUtiliser la programmation dynamique pour écrire un algorithme.\nLes exemples de l’alignement de séquences ou du rendu de monnaie peuvent être présentés.\nLa discussion sur le coût en mémoire peut être développée.\n\n\nRecherche textuelle.\nÉtudier l’algorithme de Boyer- Moore pour la recherche d’un motif dans un texte.\nL’intérêt du prétraitement du motif est mis en avant.\nL’étude du coût, difficile, ne peut être exigée."
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/4-arbres/index.html",
    "href": "tg/nsi/1-structures-de-donnees/4-arbres/index.html",
    "title": "Chapitre 4: Arbres",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nArbres : structures hiérarchiques.\nArbres binaires : nœuds, racines, feuilles, sous-arbres gauches, sous-arbres droits.\nIdentifier des situations nécessitant une structure de données arborescente.\nÉvaluer quelques mesures des arbres binaires (taille, encadrement de la hauteur, etc.).\nOn fait le lien avec la rubrique « algorithmique ».",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 4: Arbres"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/4-arbres/index.html#vocabulaire",
    "href": "tg/nsi/1-structures-de-donnees/4-arbres/index.html#vocabulaire",
    "title": "Chapitre 4: Arbres",
    "section": "1 Vocabulaire",
    "text": "1 Vocabulaire\n\n\nArbre\n\n\n\nUn arbre est constitué de nœuds reliés par des arêtes. Souvent les nœuds ont une valeur: l’étiquette.\n\n\n\nRacine d’un arbre enraciné\n\n\n\nUn arbre enraciné (ou arborescence) possède à sa base une racine auxquels sont reliés d’autres nœuds qui sont ses descendants.\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nDans cet arbre, la racine est le noeud 2 au sommet coloré en vert.©  CC BY-SA 4.0 via Wikimedia Commons\nUn nœud situé à l’extrémité de l’arbre qui n’a donc pas de descendants est une feuille.\n\nChaque nœud peut avoir un nombre quelconque de nœuds fils, mais il n’a qu’un nœud père (sauf la racine qui n’a pas de nœud père).\n\n\n\nProfondeur d’un nœud\n\n\n\nLa profondeur d’un nœud est la distance, c’est-à-dire, le nombre d’arêtes de la racine au nœud.\n\n\n\nHauteur d’un arbre\n\n\n\nLa hauteur d’un arbre est la plus grande profondeur d’une feuille de l’arbre.\n\n\n\nTaille d’un arbre\n\n\n\nLa taille d’un arbre est son nombre de nœuds.\n\n\n\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nReproduire l’arbre ci-dessus, et l’annoter en légendant:\n\nla racine,\ndes feuilles,\nun nœud père et ses fils.\n\nCalculer la hauteur et la taille de cet arbre.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 4: Arbres"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/4-arbres/index.html#arbres-binaires",
    "href": "tg/nsi/1-structures-de-donnees/4-arbres/index.html#arbres-binaires",
    "title": "Chapitre 4: Arbres",
    "section": "2 Arbres binaires",
    "text": "2 Arbres binaires\n\n2.1 Définition\n\n\nArbre binaire\n\n\n\nLes arbres binaires sont un type d’arbres particuliers pour lesquels chaque nœud a au plus deux fils.\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nDans un arbre binaire, un noeud ne peut avoir plus de 2 enfants. Public domain via Wikimedia Commons\n\n\n2.2 Implémentation récursive\nComme chaque nœud d’un arbre binaire a au plus deux enfants, on définit les sous arbres gauche et sous arbre droit d’un nœud.\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nsous arbres d’un nœud\n\n\nCC-BY-SA David Roche\n\nUn arbre binaire est une structure de données récursive. Tout nœud d’un arbre binaire est un arbre binaire.\n\nOn peut ainsi définir une classe ArbreBinaire récursive comme suit:\n# nécessaire pour pouvoir annoter le type de la classe\nfrom __future__ import annotations\n\n\nclass ArbreBinaire:\n    \"\"\"Structure de donnée d'arbre binaire\"\"\"\n\n    def __init__(self, étiquette: str, gauche: ArbreBinaire, droit: ArbreBinaire):\n        self.étiquette = étiquette\n        self.gauche = gauche\n        self.droit = droit\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\n\nÉcrire la séquence d’instructions permettant de construire l’arbre binaire présenté en exemple ci-dessus.\nExpliquer comment accéder à l’étiquette du nœud 7(en partant de la racine) à partir de cette implémentation.\n\n\n\n\n\n\n\n\n2.3 Parcours d’un arbre binaire\nIl existe diverses façons de parcourir les nœuds d’un arbre.\nLe parcours en largeur d’abord: les nœuds sont parcourus comme si on lisait l’arbre, de haut en bas et de gauche à droite.\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nParcours en largeur©  CC BY-SA 3.0 via Wikimedia Commons\nLe parcours en profondeur d’abord: on explore complétement le sous-arbre gauche avant de commencer l’exploration du droit. Il existe trois façons de faire:\n\nParcours préfixe ou préordre (NGD): on visite d’abord le nœud, puis son sous-arbre gauche, puis son sous-arbre droit.\nParcours infixe ou en ordre (GND): on visite d’abord le sous-arbre gauche, puis le nœud, puis le sous-arbre droit.\nParcours postfixe ou en postordre (GDN): on visite d’abord le sous-arbre gauche, puis le sous-arbre droit, et enfin le nœud.\n\n\nParcours en profondeur d’abord d’un exemple d’arbre:\n\npréfixe (rouge): F, B, A, D, C, E, G, I, H;\ninfixe (jaune): A, B, C, D, E, F, G, H, I;\npostfixe (vert): A, C, E, D, B, H, I, G, F.\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nLes trois ordres possibles de parcours en profondeur. Public domain via Wikimedia Commons\n\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nDonner les quatre ordres de parcours de l’arbre ci-dessous qui représente une expression arithmétique.\nL'arbre de l'expression A*(B-C)+(D+E). Public domain via Wikimedia Commons\nQuel parcours représente la notation habituelle de nos calculatrices actuelles?",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 4: Arbres"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/4-arbres/index.html#arbres-binaires-de-recherche",
    "href": "tg/nsi/1-structures-de-donnees/4-arbres/index.html#arbres-binaires-de-recherche",
    "title": "Chapitre 4: Arbres",
    "section": "3 Arbres binaires de recherche",
    "text": "3 Arbres binaires de recherche\n\n3.1 Définition\n\n\nArbre binaire de recherche\n\n\n\nIl s’agit d’un arbre binaire dans lequel toutes les valeurs dans le sous-arbre gauche d’un nœud sont inférieures à la valeur à la racine de l’arbre et toutes les valeurs dans le sous-arbre droit d’un nœud sont supérieures ou égales à la valeur à la racine de l’arbre.\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nUn arbre binaire de recherche est l'équivalent d'une liste triée pour les arbres binaire, ils permettent des recherches très efficaces. Public domain via Wikimedia Commons\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\n\nProposer deux arbres binaires de recherche avec tous les entiers entre 1 et 6 dont l’un est complet(tous les étages sont entièrement remplis, sauf le dernier ou les feuilles sont tassées à gauche).\nProposer deux arbres binaires de recherche avec tous les entiers entre 1 et 15 dont l’un est parfait(tous les étages sont entièrement remplis).\n\n\n\n\n\n\n\n\n3.2 Implémentation en P.O.O.\nDans un arbre binaire de recherche, les nœuds ne peuvent pas être placés n’importe comment et doivent respecter l’ordre entre les sous arbres et le nœud: G&lt;N&lt;DG&lt;N&lt;D.\nOn peut créer une classe ABR semblable à la classe ArbreBinaire, mais en lui ajoutant une méthode insérer pour ajouter l’élément à sa place dans l’arbre binaire de recherche.\nOn peut ainsi définir une classe ArbreBinaire récursive comme suit:\n# nécessaire pour pouvoir annoter le type de la classe\nfrom __future__ import annotations\n\n\nclass ABR:\n    \"\"\"Structure de donnée d'arbre binaire de recherche\"\"\"\n\n    def __init__(self, étiquette: int, gauche: ABR, droit: ABR):\n        self.étiquette = étiquette\n        self.gauche = gauche\n        self.droit = droit\n\n    def insérer(self, valeur):\n        \"\"\"Insère une valeur à sa place dans l'arbre\"\"\"\n\n        # si la valeur est inférieure on l'insère à gauche\n        if valeur &lt; self.étiquette:\n            # si il y a pas de noeud à gauche, on l'insère\n            if self.gauche is None:\n                self.gauche = ABR(valeur, None, None)\n            # sinon on fait un appel récursif sur le sous arbre gauche\n            else:\n                self.gauche.insérer(valeur)\n        else:\n            if self.droit is None:\n                self.droit = ABR(valeur, None, None)\n            else:\n                self.droit.insérer(valeur)\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\n\nÀ quoi ressemblerait l’arbre créé en insérant successivement tous les entiers entre 1 et 6 comme ceci.\nabr = ABR(1, None, None)\nfor i in range(2, 7):\n    abr.insérer(i)\nCorriger l’ordre d’insertion afin d’obtenir un arbre complet.\n\n\n\n\n\n\n\n\n3.3 Intérêt des arbres binaires de recherche\nLe caractère trié d’un arbre binaire de recherche permet des opérations rapides pour rechercher une clé, ce que nous verrons dans la partie algorithmique.\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\n\nComparer le nombre d’opérations nécessaires à la recherche de l’élément 15 dans l’arbre ci-dessus:\n\npar une méthode brutale (brute force): on itère sur tous les éléments de l’arbre par exemple avec un parcours en largeur.\npar une méthode dichotomique utilisant le fait que l’arbre binaire de recherche est « trié ».\n\nDonner la complexité des deux méthodes pour un arbre de taille nn.\n\n\n\n\n\n\n\n\nOption informatique MPSI/MP\nPrépabac NSI aux éditions Hatier\nArticle Wikipedia sur les arbres\nArticle Wikipedia sur les arbres binaires de recherche",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 4: Arbres"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/1-interface-et-implementation/exo/index.html",
    "href": "tg/nsi/1-structures-de-donnees/1-interface-et-implementation/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Dans chaque cas, indiquer quelle structure de données vous semble la plus adaptée, et donner une exemple de création et d’interaction avec la structure de données.\n\nUne personne avec son nom, prénom, adresse email.\nLes notes de nsi d’un élève au cours d’un trimestre.\nLes notes de nsi de tous les élèves d’une classe au cours d’un trimestre.\nUne grille de sudoku \n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n CC0 via Wikimedia Commons",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 1: Interface et implémentation",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/1-interface-et-implementation/exo/index.html#choisir-une-structure-de-donnée",
    "href": "tg/nsi/1-structures-de-donnees/1-interface-et-implementation/exo/index.html#choisir-une-structure-de-donnée",
    "title": "Exercices",
    "section": "",
    "text": "Dans chaque cas, indiquer quelle structure de données vous semble la plus adaptée, et donner une exemple de création et d’interaction avec la structure de données.\n\nUne personne avec son nom, prénom, adresse email.\nLes notes de nsi d’un élève au cours d’un trimestre.\nLes notes de nsi de tous les élèves d’une classe au cours d’un trimestre.\nUne grille de sudoku \n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n CC0 via Wikimedia Commons",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 1: Interface et implémentation",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/1-interface-et-implementation/exo/index.html#implémentation-de-la-classe-tableau",
    "href": "tg/nsi/1-structures-de-donnees/1-interface-et-implementation/exo/index.html#implémentation-de-la-classe-tableau",
    "title": "Exercices",
    "section": "2 Implémentation de la classe Tableau",
    "text": "2 Implémentation de la classe Tableau\n\nCréer une classe Tableau qui implémente les quatre méthodes ci-dessous en stockant les données du tableau dans un attribut appelé data de type liste.\n\n« Insérer » : ajoute un élément dans le tableau à l’index souhaité. tableau.ajout(index, élément) ;\n« Retirer » : retire un élément de le tableau à l’index souhaité. tableau.suppr(index) ;\n« Le tableau est-il vide ? » : renvoie « vrai » si le tableau est vide, « faux » sinon. tableau.est_vide()\n« Nombre d’éléments dans le tableau » : renvoie le nombre d’éléments dans le tableau. tableau.longueur()\n\nOn donne ci-dessous une séquence d’instructions d’initialisation et d’utilisation d’un tableau.\n# instanciation\ntab = Tableau()\n\n# utilisation\ntab.longueur() # renvoie 0\ntab.est_vide() # renvoie True\ntab.ajout(0, \"pomme\")\ntab.data # renvoie ['pomme']\ntab.ajout(1, \"poire\")\ntab.ajout(0, \"pêche\")\ntab.data # ['pêche', 'pomme', 'poire']\ntab.est_vide() # renvoie False\ntab.suppr(2)\ntab.suppr(0)\ntab.data # renvoie ['pomme']\nAjoutez ensuite la possibilité d’initialiser (méthode __init__())les données du tableau en fournissant un paramètre de type liste lors de l’instanciation. Et ajoutez également une méthode d’affichage du tableau (méthode __repr__()) pour afficher les tableaux sous la forme: \"Tableau([e1, e2, ..., en])\".\nOn donne ci-dessous une séquence d’instructions d’initialisation et d’utilisation d’un tableau.\n# instanciation\ntab1 = Tableau([2, 6, 5])\n\n# utilisation\ntab1.longueur() # renvoie 3\ntab1.est_vide() # renvoie False\ntab1.ajout(0, 12)\ntab1.suppr(2)\nprint(tab1) # renvoie \"Tableau([12, 2, 5])\"\nPour aller plus loin: Cacher la structure de liste de l’attribut data en autorisant l’initialisation sans les crochets: tab2 = Tableau(2, 6, 5), et en modifiant la méthode d’affichage pour que: print(tab2) renvoie: \"Tableau(2, 6, 5)\".\nPour cela on utilisera le paramètre spécial *args, et la méthode join des str en Python.\nPour aller encore plus loin: Rendre l’utilisation des tableaux plus aisée en permettant le chaînage des méthodes tableau.méthode1().méthode2().méthode1()...\nOn donne ci-dessous une séquence d’instructions d’initialisation et d’utilisation d’un tableau.\n# instanciation\ntab3 = Tableau()\n\n# utilisation\ntab3.ajout(0, 12).ajout(1, 13).ajout(0, 9)\nprint(tab3) # renvoie \"Tableau(9, 12, 13)\"\ntab3.suppr(2).suppr(0)\nprint(tab3) # renvoie \"Tableau(12)\"\ntab3.suppr(0).est_vide() # renvoie True",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 1: Interface et implémentation",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/1-interface-et-implementation/quiz/index.html",
    "href": "tg/nsi/1-structures-de-donnees/1-interface-et-implementation/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "1. On accède aux données par clef dans un:\n\n   - [ ] tableau(`list` en python) \n   - [x] tableau associatif(`dict` en python)\n\n2. On accède aux données par index dans un:\n\n   - [x] tableau(`list` en python) \n   - [ ] tableau associatif(`dict` en python)\n\n3. Une interface est de nature:\n\n   - [ ] pratique\n   - [x] théorique\n\n4. Une implémentation est de nature:\n\n   - [x] pratique\n   - [ ] théorique\n\n5. Quelle est la sortie du code suivant (`end=\" \"` place un espace entre chaque affichage.):\n   \n   ```python\n   tab = [2, 3, 5, 7, 11]\n   for v in tab:\n      print(v, end=\",\")\n\n2 3 5 7 11\n1 2 3 4 5\n0 1 2 3 4\n\n\nQuelle est la sortie du code suivant:\ntab = [2, 3, 5, 7, 11]\nfor i in range(len(tab)):\n   print(v, end=\",\")\n\n2 3 5 7 11\n1 2 3 4 5\n0 1 2 3 4\n\nQuelle est la sortie du code suivant:\ngaston = {'nom': 'Lagaffe', 'prenom': 'Gaston', 'age': 22, 'expression': \"M'enfin\"}\nfor k in gaston:\n    print(k, end=\" \")\n\nnom Lagaffe prenom Gaston age 22 expression M'enfin\nnom prenom age expression\n('nom', 'Lagaffe') ('prenom', 'Gaston') ('age', 22) ('expression', \"M'enfin\")\nLagaffe Gaston 22 M'enfin\n\nQuelle est la sortie du code suivant:\ngaston = {'nom': 'Lagaffe', 'prenom': 'Gaston', 'age': 22, 'expression': \"M'enfin\"}\nfor k in gaston.keys():\n    print(k, end=\" \")\n\nnom Lagaffe prenom Gaston age 22 expression M'enfin\nnom prenom age expression\n('nom', 'Lagaffe') ('prenom', 'Gaston') ('age', 22) ('expression', \"M'enfin\")\nLagaffe Gaston 22 M'enfin\n\nQuelle est la sortie du code suivant:\n\ngaston = {'nom': 'Lagaffe', 'prenom': 'Gaston', 'age': 22, 'expression': \"M'enfin\"}\nfor k in gaston.values():\n    print(k, end=\" \")\n\nnom Lagaffe prenom Gaston age 22 expression M'enfin\nnom prenom age expression\n('nom', 'Lagaffe') ('prenom', 'Gaston') ('age', 22) ('expression', \"M'enfin\")\nLagaffe Gaston 22 M'enfin\n\n\nQuelle est la sortie du code suivant:\n\ngaston = {'nom': 'Lagaffe', 'prenom': 'Gaston', 'age': 22, 'expression': \"M'enfin\"}\nfor k in gaston.items():\n    print(k, end=\" \")\n\nnom Lagaffe prenom Gaston age 22 expression M'enfin\nnom prenom age expression\n('nom', 'Lagaffe') ('prenom', 'Gaston') ('age', 22) ('expression', \"M'enfin\")\nLagaffe Gaston 22 M'enfin\n\n\nQuelle est la sortie du code suivant:\n\ngaston = {'nom': 'Lagaffe', 'prenom': 'Gaston', 'age': 22, 'expression': \"M'enfin\"}\nfor k, v in gaston.items():\n    print(k, v, end=\" \")\n\nnom Lagaffe prenom Gaston age 22 expression M'enfin\nnom prenom age expression\n('nom', 'Lagaffe') ('prenom', 'Gaston') ('age', 22) ('expression', \"M'enfin\")\nLagaffe Gaston 22 M'enfin\n\n\nQuelle opération est faite en un temps constant O(1)O(1) (indépendant de la longueur de la liste) sur les listes en Python?\n\n\nAjouter un élément au début\nAjouter un élément au milieu\nAjouter un élément à la fin\n\n\nQuelle opération est faite en un temps constant O(1)O(1) sur les listes en Python?\n\n\nSupprimer un élément au début\nSupprimer un élément au milieu\nSupprimer un élément à la fin\n\n\nL’accès à la valeur d’un élément d’une liste en python se fait en temps constant O(1)O(1) quelle que soit sa position dans la liste?\n\n\nVrai\nFaux\n\n\nQuelle opération est faite, en moyenne, en temps linéaire O(n)O(n) (proportionnel la longueur du dictionnaire) sur les dict en Python:\n\n\nAjouter une valeur\nModifier une valeur\nSupprimer une valeur\nRechercher une valeur\nRechercher une clé\n\n```",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 1: Interface et implémentation",
      "Quiz"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/0-revisions/index.html",
    "href": "tg/nsi/1-structures-de-donnees/0-revisions/index.html",
    "title": "Chapitre 0: Révisions",
    "section": "",
    "text": "Nous avons vu l’année dernière comment étaient codées les données au sein d’un ordinateur, et nous avons utilisé des types simples et composés de Python.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 0: Révisions"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/0-revisions/index.html#les-types-simples",
    "href": "tg/nsi/1-structures-de-donnees/0-revisions/index.html#les-types-simples",
    "title": "Chapitre 0: Révisions",
    "section": "1 Les types simples",
    "text": "1 Les types simples\nUn objet de type simple ne stocke qu’une donnée.\n\nentier(int): 1 12 -4\nnombre flottant(float): 1.1 12.0 -25E2`\n\nchaîne de caractères(str): \"Du texte\" 'Un autre texte'\nbooléen(bool): True False",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 0: Révisions"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/0-revisions/index.html#les-types-construits",
    "href": "tg/nsi/1-structures-de-donnees/0-revisions/index.html#les-types-construits",
    "title": "Chapitre 0: Révisions",
    "section": "2 Les types construits",
    "text": "2 Les types construits\nLes types construits permettent de stocker des collections de données.\n\ntableau(list): l = [1, 12, -4]\nOn accède aux éléments du tableau par index. l[2] → -4\ndictionnaire(dict): d = {\"nom\": \"Gaston\", \"age\": 25}\nOn accède aux éléments du dictionnaire par clef. d[\"age\"] → 25",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 0: Révisions"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/0-revisions/index.html#méthode-ditérations",
    "href": "tg/nsi/1-structures-de-donnees/0-revisions/index.html#méthode-ditérations",
    "title": "Chapitre 0: Révisions",
    "section": "3 Méthode d’itérations",
    "text": "3 Méthode d’itérations\n\n3.1 Itération sur une liste\nOn peut itérer sur les valeurs ou sur les index.\n\nItération sur les valeurs\n\nOn fait une itération sures valeurs du tableau en utilisant le mot-clé in.\nfor val in ma_liste:\n    print(val)\n\nItération sur les index\n\nC’est la méthode classique utilisée dans les langages impératifs. Ayant accès à l’index on a également accès la valeur.\nfor i in range(len(ma_liste)):\n    val = ma_liste[i]\n    print(\"indice:\", i, \"valeur:\", val)\n\n\n3.2 Itération sur les dictionnaires\nLes dictionnaires étant des associations de clés(key) et de valeurs(value), on peut itérer sur les clés, les valeurs, ou les deux.\n\nItération sur les clés: keys()\nfor key in D.keys():\n    print(key)\nOu plus simplement.\nfor key in D:\n    print(key)\nItération sur les valeurs: values()\nfor value in D.values():\n    print(value)\nItération sur les paires clé, valeurs: items()\nfor key, value in D.items():\n    print(key, '=&gt;', value)",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 0: Révisions"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/index.html",
    "href": "tg/nsi/1-structures-de-donnees/index.html",
    "title": "Partie 1: Structures de données",
    "section": "",
    "text": "Chapitre 0: Révisions\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 1: Interface et implémentation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 2: Programmation objet\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 3: Structures linéaires: piles, files\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 4: Arbres\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 5: Graphes*\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAucun article correspondant",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/2-programmation-objet/index.html",
    "href": "tg/nsi/1-structures-de-donnees/2-programmation-objet/index.html",
    "title": "Chapitre 2: Programmation objet",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nVocabulaire de la programmation objet : classes, attributs, méthodes, objets.\nÉcrire la définition d’une classe.\nAccéder aux attributs et méthodes d’une classe.\nOn n’aborde pas ici tous les aspects de la programmation objet comme le polymorphisme et l’héritage.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 2: Programmation objet"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/2-programmation-objet/index.html#attributs-et-méthodes",
    "href": "tg/nsi/1-structures-de-donnees/2-programmation-objet/index.html#attributs-et-méthodes",
    "title": "Chapitre 2: Programmation objet",
    "section": "1 Attributs et méthodes",
    "text": "1 Attributs et méthodes\nEn POO, les objets sont décrits dans des classes contenant:\n\ndes attributs qui sont les données associées à l’objet;\ndes méthodes qui sont les fonctions s’appliquant sur cet objet.\n\nEn Python, on accède aux attributs et aux méthodes grâce à la notation pointée, vous l’avez déjà utilisée car Python est un langage fortement orienté objet.\nPrenons l’exemple des objets de types date du module datetime.\nOn commence par créer une date de ce type, ce que l’on appelle une instance de l’objet.\n\nfrom datetime import date\n\nprise_bastille = date.fromisoformat(\"1789-07-14\")\nprint(\"type:\", type(prise_bastille))\nprint(\"objet: \", prise_bastille)\n&gt;&gt;sortie\n\ntype: &lt;class 'datetime.date'&gt;\nobjet:  1789-07-14\n\n\n\n1.1 Les attributs: données\nCet objet possède des **attributs*: les données relatives à cet objet.\nOn y accède grâce à la notation pointée: objet.attribut\n\nprise_bastille.day\n\n14\n\n\n\nprise_bastille.month\n\n7\n\n\n\nprise_bastille.year\n\n1789\n\n\n\n\n1.2 Les méthodes: fonctions\nCet objet possède des **méthodes*: les fonctions s’appliquant sur cet objet.\nOn y accède grâce à la notation pointée: objet.méthode(...)\n\n# Appel de la méthode sans argument\nprise_bastille.ctime()\n\n'Tue Jul 14 00:00:00 1789'\n\n\n\n# Appel de la méthode avec un argument de type str\nprise_bastille.strftime(\"%A %d %B %Y\")\n\n'Tuesday 14 July 1789'\n\n\n\n# Même appel mais en utilisant une version française\nimport locale\n\nlocale.setlocale(locale.LC_ALL, \"fr_FR.UTF-8\")\n\nprise_bastille.strftime(\"%A %d %B %Y\")\n\n'mardi 14 juillet 1789'",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 2: Programmation objet"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/2-programmation-objet/index.html#création-dune-classe-et-instanciation",
    "href": "tg/nsi/1-structures-de-donnees/2-programmation-objet/index.html#création-dune-classe-et-instanciation",
    "title": "Chapitre 2: Programmation objet",
    "section": "2 Création d’une classe et instanciation",
    "text": "2 Création d’une classe et instanciation\nEn Python, on créé une classe avec la mot clé class qu’on nomme par habitude avec un nom en UpperCamelCase.\n\nclass ClasseDeLycee:\n    nom = \"Terminale\"\n    numero = 1\n    # liste des élèves\n    eleves = []\n\nL’objet ClasseDeLycee est une sorte de «patron» à partir duquel on va pouvoir créer des objets à la demande en créant ce que l’on appelle des instances par appel de la classe.\n\n## On crée deux instances de l'objet ClasseDeLycee\nterm1 = ClasseDeLycee()\nterm2 = ClasseDeLycee()\n\nOn peut accéder aux attributs de nos objets à l’aide de la notation pointée: nom_instance.attribut.\n\n# nos deux instances contiennent les mêmes attributs nom et numero\nterm1.nom\n\n'Terminale'\n\n\n\nterm2.nom\n\n'Terminale'\n\n\n\nterm1.numero, term2.numero\n\n(1, 1)\n\n\nOn peut modifier les attributs d’un objet après son instanciation bien que l’on préfère utiliser un constructeur pour personnliser les objets à leur instanciation comme on le verra plus loin.\n\n# méthode déconseillée\n# on utilise plutôt des getters et setters pour ça (voir plus bas)\nterm2.numero = 2\n# les attributs ont bien été modifiés pour l'instance term2\nterm2.nom, term2.numero\n\n('Terminale', 2)\n\n\n\n# par contre les attributs de l'instance term1 sont inchangés\nterm1.nom, term1.numero\n\n('Terminale', 1)\n\n\n\n\n\n\n\n\n\nEn plus: Attributs de classe et d'instance\n\n\n\n\n\n\nDans cette partie nous avons utilisé des attributs de classe sans le self pour plus de simplicité dans cette introduction.\nPar la suite, on utilisera des attributs d’instance(self.attribut), il y a de légères différences qui sortent du cadre de ce cours.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 2: Programmation objet"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/2-programmation-objet/index.html#les-méthodes-et-la-variable-self",
    "href": "tg/nsi/1-structures-de-donnees/2-programmation-objet/index.html#les-méthodes-et-la-variable-self",
    "title": "Chapitre 2: Programmation objet",
    "section": "3 Les méthodes et la variable self",
    "text": "3 Les méthodes et la variable self\nLes méthodes sont des fonctions définies au sein de la classe qui s’appliquent aux objets créés grâce à cette classe.\nUne méthode prend toujours en premier paramètre l’objet lui-même par l’intermédiare du paramètre qu’on appelle par convention self.\nDe façon générale, le mot clé self désignera l’instance de l’objet au sein du code de la classe.\n\nclass ClasseDeLycee:\n    nom = \"Terminale\"\n    numero = 1\n    eleves = []\n\n    def ajoute_eleve(self, élève):\n        \"\"\"Cette méthode ajoute un élève dans la classe\"\"\"\n        self.eleves.append(élève)\n\nLorsqu’on appelle une méthode sur une instance de la classe, on utilisera encore la notation pointée: nom_instance.methode(...).\n\nterm1 = ClasseDeLycee()\nterm1.ajoute_eleve(\"Alan Turing\")\n\n\n# l'attribut eleves a bien été modifié\nterm1.eleves\n\n['Alan Turing']\n\n\n\n# mais pas pour l'instance term2\nterm2.eleves\n\n[]",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 2: Programmation objet"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/2-programmation-objet/index.html#méthodes-particulières",
    "href": "tg/nsi/1-structures-de-donnees/2-programmation-objet/index.html#méthodes-particulières",
    "title": "Chapitre 2: Programmation objet",
    "section": "4 Méthodes particulières",
    "text": "4 Méthodes particulières\n\n4.1 Initialisation avec le constructeur __init__()\nIl est souvent interressant de créer des objets différents à partir d’un même classe , il est donc possible d’ajouter des arguments qui seront pris en charge lors de l’instanciation de l’objet en utilisant la méthode prédéfinie: __init__().\nVoici comment nous pourrions permettre de personnnaliser notre classe dès sa création.\n\nclass ClasseDeLycee:\n    def __init__(self, nom, numero, eleves):\n        self.nom = nom\n        self.numero = numero\n        self.eleves = eleves\n\n\nprem7 = ClasseDeLycee(\"Première\", 7, [\"Ada Lovelace\"])\n\nprint(prem7.nom, prem7.numero, prem7.eleves)\n&gt;&gt;sortie\n\nPremière 7 ['Ada Lovelace']\n\n\nOn peut donner des valeurs par défaut aux paramètres dans la signature de la méthode __init__.\n\nclass ClasseDeLycee:\n    def __init__(self, nom=\"Terminale\", numero=3, eleves=[]):\n        self.nom = nom\n        self.numero = numero\n        self.eleves = eleves\n\n\nterm3 = ClasseDeLycee()\n\nprint(term3.nom, term3.numero, term3.eleves)\n&gt;&gt;sortie\n\nTerminale 3 []\n\n\n\n# on peut personnaliser les attributs souhaités de l'instance\n# en gardant les valeurs par défaut pour les autres\n\nterm4 = ClasseDeLycee(numero=4)\n\nprint(term4.nom, term4.numero, term4.eleves)\n&gt;&gt;sortie\n\nTerminale 4 []\n\n\n\n\n4.2 La méthode __str__()\nCette méthode est utilisée pour donner une représentation des objets sous forme lisible lors d’un appel de la fonction print.\nPour l’instant si on affiche notre instance, on a:\n\nprint(term4)\n&gt;&gt;sortie\n\n&lt;__main__.ClasseDeLycee object at 0x7f3c094d0410&gt;\n\n\n\nclass ClasseDeLycee:\n    def __init__(self, nom=\"Terminale\", numero=3, eleves=[]):\n        self.nom = nom\n        self.numero = numero\n        self.eleves = eleves\n\n    def __str__(self):\n        return f\"&lt;Classe de Lycée {self.nom}{self.numero}&gt;\"\n\n\nterm3 = ClasseDeLycee()\n\nprint(term3)\n&gt;&gt;sortie\n\n&lt;Classe de Lycée Terminale3&gt;\n\n\n\n\n\n\n\n\n\nEn plus\n\n\n\n\n\n\nOn peut également utiliser la méthode __repr__() qui est plus générale et qui sera également utilisée lors d’un appel de la fonction print si __str__ n’est pas définie.\n\n\n\n\n\n\n\n4.3 Les accesseurs(getters) et mutateurs (setters)\nIl est fortement déconseillé de récupérer (get) ou modifier (set) des attributs de l’objet directement par l’utilisation de la notation pointée vue précédemment.\nPour chaque attribut, il est conseillé de définir deux méthodes:\n\nget_nom_attribut: pour le récupérer.\nset_nom_attribut: pour le modifier.\n\nC’est long oui, mais c’est la pratique couramment recommandée.\nVoici ce que cela donnerait dans notre cas, on a trois attributs, il faut donc ajouter six méthodes.\n\nclass ClasseDeLycee:\n    def __init__(self, nom=\"Terminale\", numero=3, eleves=[]):\n        self.nom = nom\n        self.numero = numero\n        self.eleves = eleves\n\n    def get_nom(self):\n        return self.nom\n\n    def set_nom(self, nom):\n        self.nom = nom\n\n    def get_numero(self):\n        return self.numero\n\n    def set_numero(self, numero):\n        self.numero = numero\n\n    def get_eleves(self):\n        return self.eleves\n\n    def set_eleves(self, eleves):\n        self.eleves = eleves\n\n    def __str__(self):\n        return f\"&lt;Classe de Lycée {self.nom}{self.numero}&gt;\"\n\n\nc = ClasseDeLycee()\n\nprint(\"Au début\")\nprint(c)\n&gt;&gt;sortie\n\nAu début\n&lt;Classe de Lycée Terminale3&gt;\n\n\n\n# Modification des attributs avec les setters\nc.set_nom(\"Seconde\")\nc.set_numero(15)\nprint(c)\n&gt;&gt;sortie\n\n&lt;Classe de Lycée Seconde15&gt;\n\n\n\n# Récupération des attributs avec les getters\nc.get_nom(), c.get_eleves()\n\n('Seconde', [])",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 2: Programmation objet"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/2-programmation-objet/index.html#en-plus-héritage",
    "href": "tg/nsi/1-structures-de-donnees/2-programmation-objet/index.html#en-plus-héritage",
    "title": "Chapitre 2: Programmation objet",
    "section": "5 En plus: Héritage",
    "text": "5 En plus: Héritage\nUn des aspects intéressants (mais hors-programme) est la possibilité de créer des sous classes qui héritent des attributs et méthode de la classe parente.\nL’héritage q’il est bien réalisé permet d’éviter des répétitions de code (Principe DRY: Don’t Repeat Yourself), et permet d’aboutir à une grande structuration des données.\n\nclass Terminale(ClasseDeLycee):\n    def __init__(self, numero, eleves=[]):\n        # super appelle le constructeur du parent\n        super().__init__(\"terminale\", numero, eleves)\n\n    # On ne met à jour que les méthodes qui sont changées\n    # Toutes les autres méthodes sont héritées\n    def __str__(self):\n        return f\"&lt;Classe de Terminale{self.numero}&gt;\"\n\n\nterm7 = Terminale(7)\nprint(term7)\n&gt;&gt;sortie\n\n&lt;Classe de Terminale7&gt;\n\n\n\nterm7.get_eleves()\n\n[]\n\n\nToutes les méthodes du parent non modifiées sont héritées.\n\nterm7.set_eleves([\"Albert Einstein\", \"Paul MacCartney\"])\nterm7.get_eleves()\n\n['Albert Einstein', 'Paul MacCartney']\n\n\nIl reste cependant à définir les méthodes et attributs propres à cette classe: voeux_parcoursup, mention_bac…",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 2: Programmation objet"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/3-structures-lineaires-piles-files/exo/index.html",
    "href": "tg/nsi/1-structures-de-donnees/3-structures-lineaires-piles-files/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Créer une classe Pile qui implémente le type abstrait pile en stockant les données de la pile dans un attribut privé _data de type list.\n\nL’initialisation s’effectue sans argument et affecte une liste vide à l’attribut _data.\nLa méthode empiler(élément) ajoute l’élément à la fin de l’attribut _data.\nLa méthode dépiler() retire l’élément à la fin de l’attribut _data et le renvoie.\nLa méthode est_vide() renvoie True si la pile est vide et False sinon.\nLa méthode sommet() renvoie l’élément présent au sommet de la pile, et None si la pile est vide.\n\nVoici une série de tests à passer.\npile = Pile()\nassert pile.est_vide() is True\n\npile.empiler(1)\nassert pile.est_vide() is False\nassert pile.sommet() == 1\n\npile.empiler(2)\nassert pile.est_vide() is False\nassert pile.sommet() == 2\nassert pile.est_vide() is False\n\npile.empiler(3)\nassert pile.sommet() == 3\nassert pile.dépiler() == 3\n\nwhile not pile.est_vide():\n    pile.dépiler()\n\nassert pile.est_vide() is True\nassert pile.sommet() is None\nPour aller plus loin, modifier la classe Pile afin que sommet() ne soit plus une méthode, mais un attribut sommet. La série de tests précédents devra être modifié en supprimant les parenthèses des appels des méthodes pile.sommet() en pile.sommet.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 3: Structures linéaires: piles, files",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/3-structures-lineaires-piles-files/exo/index.html#implémentation-de-la-classe-pile",
    "href": "tg/nsi/1-structures-de-donnees/3-structures-lineaires-piles-files/exo/index.html#implémentation-de-la-classe-pile",
    "title": "Exercices",
    "section": "",
    "text": "Créer une classe Pile qui implémente le type abstrait pile en stockant les données de la pile dans un attribut privé _data de type list.\n\nL’initialisation s’effectue sans argument et affecte une liste vide à l’attribut _data.\nLa méthode empiler(élément) ajoute l’élément à la fin de l’attribut _data.\nLa méthode dépiler() retire l’élément à la fin de l’attribut _data et le renvoie.\nLa méthode est_vide() renvoie True si la pile est vide et False sinon.\nLa méthode sommet() renvoie l’élément présent au sommet de la pile, et None si la pile est vide.\n\nVoici une série de tests à passer.\npile = Pile()\nassert pile.est_vide() is True\n\npile.empiler(1)\nassert pile.est_vide() is False\nassert pile.sommet() == 1\n\npile.empiler(2)\nassert pile.est_vide() is False\nassert pile.sommet() == 2\nassert pile.est_vide() is False\n\npile.empiler(3)\nassert pile.sommet() == 3\nassert pile.dépiler() == 3\n\nwhile not pile.est_vide():\n    pile.dépiler()\n\nassert pile.est_vide() is True\nassert pile.sommet() is None\nPour aller plus loin, modifier la classe Pile afin que sommet() ne soit plus une méthode, mais un attribut sommet. La série de tests précédents devra être modifié en supprimant les parenthèses des appels des méthodes pile.sommet() en pile.sommet.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 3: Structures linéaires: piles, files",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/3-structures-lineaires-piles-files/exo/index.html#implémentation-de-la-classe-file",
    "href": "tg/nsi/1-structures-de-donnees/3-structures-lineaires-piles-files/exo/index.html#implémentation-de-la-classe-file",
    "title": "Exercices",
    "section": "2 Implémentation de la classe File",
    "text": "2 Implémentation de la classe File\nCréer une classe File qui implémente le type abstrait file en stockant les données de la file dans un attribut privé _data de type collections.deque présentée dans le cours et dont vous pouvez consulter la documentation grâce à la fonction help().\n\nL’initialisation s’effectue sans argument et affecte une liste chaînée double vide à l’attribut _data.\nLa méthode enfiler(élément) ajoute l’élément à la tête de l’attribut _data.\nLa méthode défiler() retire l’élément de la queue de l’attribut _data et le renvoie.\nLa méthode est_vide() renvoie True si la file est vide et False sinon.\nLa méthode tête() renvoie l’élément présent à la tête de la file, et None si la file est vide.\n\nVoici une série de tests à passer.\nfile = File()\nassert file.est_vide() is True\n\nfile.enfiler(1)\nassert file.est_vide() is False\nassert file.tête() == 1\n\nfile.enfiler(2)\nassert file.est_vide() is False\nassert file.tête() == 1\nassert file.est_vide() is False\n\nfile.enfiler(3)\nassert file.tête() == 1\nassert file.est_vide() is False\n\nassert file.défiler() == 1\nassert file.défiler() == 2\nassert file.défiler() == 3\n\nassert file.est_vide() is True\nassert file.tête() is None\nPour aller plus loin, modifier la classe File afin que tête() ne soit plus une méthode, mais un attribut tête. La série de tests précédents devra être modifié en supprimant les parenthèses des appels des méthodes file.tête() en file.tête.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 3: Structures linéaires: piles, files",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/3-structures-lineaires-piles-files/exo/index.html#exercice-type-bac",
    "href": "tg/nsi/1-structures-de-donnees/3-structures-lineaires-piles-files/exo/index.html#exercice-type-bac",
    "title": "Exercices",
    "section": "3 Exercice type BAC",
    "text": "3 Exercice type BAC\n\nCet exercice porte sur la notion de pile, de file et sur la programmation de base en Python.\n\n\nIl est extrait du BAC 2021 Amérique du Nord sujet 1 Exercice 5.\n\nLes interfaces des structures de données abstraites Pile et File sont proposées ci-dessous. On utilisera uniquement les fonctions ci-dessous :\n\nStructure de données abstraite: Pile\nUtilise: Élément, Booléen\nOpérations:\n\ncreer_pile_vide:∅ → Pile\ncreer_pile_vide() renvoie une pile vide\nest_vide:Pile → Booléen\nest_vide(pile) renvoie True si pile est vide, False sinon\nempiler: Pile,Élément → ∅\nempiler(pile,element) ajoute element à la pile pile\ndepiler: Pile → Élément\ndepiler(pile) renvoie l’élément au sommet de la pile en le retirant de la pile\n\n\nStructure de données abstraite: File\nUtilise: Élément, Booléen\nOpérations:\n\ncreer_file_vide: ∅ → File\ncreer_file_vide() renvoie une file vide\nest_vide:File → Booléen\nest_vide(file) renvoie True si file est vide, False sinon\nenfiler: File, Élément → ∅\nenfiler(file,element) ajoute element dans la file file\ndefiler: File → Élément\ndefiler(file) renvoie l’élément au sommet de la file file en le retirant de la file file.\n\n\n\nOn considère la file F suivante :\n             --------------------------------------   \nenfilement → \"rouge\" \"vert\" \"jaune\" \"rouge\" \"jaune\" → défilement.\n             --------------------------------------\nQuel sera le contenu de la pile P et de la file F après l’exécution du programme Python suivant?\nP = creer_pile_vide()\nwhile not(est_vide(F)):\n    empiler(P, defiler(F))\nCréer une fonction taille_file qui prend en paramètre une file F et qui renvoie le nombre d’éléments qu’elle contient. Après appel de cette fonction la file F doit avoir retrouvé son état d’origine.\ndef taille_file(F):\n    \"\"\"File -&gt; Int\"\"\"\nÉcrire une fonction former_pile qui prend en paramètre une file F et qui renvoie une pile P contenant les mêmes éléments que la file.\nLe premier élément sorti de la file devra se trouver au sommet de la pile; le deuxième élément sorti de la file devra se trouver juste en-dessous du sommet, etc.\nExemple: si\n    --------------------------------------\nF = \"rouge\" \"vert\" \"jaune\" \"rouge\" \"jaune\"\n    --------------------------------------\nalors l’appel former_pile(F) va renvoyer la pile P ci-dessous :\n     | \"jaune\" | -&gt; sommet\n     | \"rouge\" |\nP =  | \"jaune\" |\n     | \"vert\"  |\n     | \"rouge\" |\n     -----------\n\nÉcrire une fonction nb_elements qui prend en paramètres une file F et un élément elt et qui renvoie le nombre de fois où elt est présent dans la file F. Après appel de cette fonction la file F doit avoir retrouvé son état d’origine.\nÉcrire une fonction verifier_contenu qui prend en paramètres une file F et trois entiers: nb_rouge, nb_vert et nb_jaune. Cette fonction renvoie le booléen True si “rouge” apparaît au plus nb_rougefois dans la file F, “vert” apparaît au plus nb_vertfois dans la file F et “jaune” apparaît au plus nb_jaune fois dans la file F. Elle renvoie False sinon. On pourra utiliser les fonctions précédentes.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 3: Structures linéaires: piles, files",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/3-structures-lineaires-piles-files/quiz/index.html",
    "href": "tg/nsi/1-structures-de-donnees/3-structures-lineaires-piles-files/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "1. Une pile est qualifiée de:\n\n   - [x] _last in, first out_ ou _LIFO_ en anglais.\n   - [ ] _first in, first out_ ou _FIFO_ en anglais.\n\n2. Une file est qualifiée de:\n\n   - [ ] _last in, first out_ ou _LIFO_ en anglais.\n   - [x] _first in, first out_ ou _FIFO_ en anglais.\n\n3. L'opération `enfiler` d'une **file** ajoute l'élément:\n\n   - [ ] en tête de file.\n   - [ ] en milieu de file.\n   - [x] en queue de file.\n\n4. L'opération `défiler` d'une **file** supprime et renvoie l'élément:\n\n   - [x] en tête de file.\n   - [ ] en milieu de file.\n   - [ ] en queue de file.\n\n5. L'opération `empiler` d'une **pile** ajoute l'élément:\n\n   - [x] en sommet de pile,\n   - [ ] en milieu de pile.\n   - [ ] en bas de pile.\n\n6. L'opération `dépiler` d'une **pile** retire et renvoie l'élément:\n\n   - [x] en sommet de pile.\n   - [ ] en milieu de pile.\n   - [ ] en bas de pile.\n\n7. Dans quel ordre faut-il empiler les éléments pour obtenir la pile suivante?\n\n    ```\n    | E | &lt;- Sommet\n    | D |\n    | C |\n    | B |\n    | A | \n    ‾‾‾‾‾\n    PILE \n    ```\n\n    - [x] A, B, C, D, E\n    - [ ] E, D, C, B, A\n    - [ ] autre\n\n8.  Dans quel ordre faut-il enfiler les éléments pour obtenir la file suivante?\n\n    ```\n             _____________________        \n    Queue -&gt; | E | D | C | B | A | -&gt; Tête\n             ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾        \n                     FILE                 \n    ```\n\n    - [x] A, B, C, D, E\n    - [ ] E, D, C, B, A\n    - [ ] autre\n\n9.  Quelle file obtient-on si on dépile entièrement la pile suivante dans une file vide?\n\n    ```\n    | E | &lt;- Sommet\n    | D |\n    | C |\n    | B |\n    | A | \n    ‾‾‾‾‾\n    PILE \n    ```\n\n    - [ ] `Queue -&gt; | E | D | C | B | A | -&gt; Tête`\n    - [x] `Queue -&gt; | A | B | C | D | E | -&gt; Tête`\n    - [ ] autre",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 3: Structures linéaires: piles, files",
      "Quiz"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/5-graphes/index.html",
    "href": "tg/nsi/1-structures-de-donnees/5-graphes/index.html",
    "title": "Chapitre 5: Graphes*",
    "section": "",
    "text": "Ce chapitre ne pourra pas faire l’objet d’une évaluation lors de l’épreuve terminale écrite et pratique de l’enseignement de spécialité. BO MENE2121274N",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 5: Graphes*"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/5-graphes/index.html#les-graphes-une-structure-de-données-non-linéaire",
    "href": "tg/nsi/1-structures-de-donnees/5-graphes/index.html#les-graphes-une-structure-de-données-non-linéaire",
    "title": "Chapitre 5: Graphes*",
    "section": "1 Les graphes : une structure de données non linéaire",
    "text": "1 Les graphes : une structure de données non linéaire\nVous êtes déjà habitués à manipuler des listes, n-uplets ou encore les piles et les files, qui sont des exemples de structures de données linéaires, c’est-à-dire à une dimension, on peut les parcourir du début à la fin en suivant un seul chemin.\nDans le chapitre précédent, nous avons vu les arbres, un exemple structure de données non linéaire très utilisée pour représenter une hiérarchie entre des données comme des liens de descendance dans un arbre généalogique.\nEn fait, les arbres sont des graphes avec bien particuliers tels que tous les sommets sauf la racine ont un unique parent(on parle de graphe acyclique orienté).\nMaintenant que nous parlons de graphe, il n’existe plus aucune restriction, il n’y a plus de racine, plus de restriction sur les parents, les enfants, ou quoi que ce soit.\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nGraphe et arbres\n\n\n\n\ngraphe\n\n\n\nUn graphe est une structure de données composée d’objets: les sommets dans laquelle certaines paires d’objets sont reliées par des arêtes (ou arcs dans le cas de graphes orientés).\n\n\n\nLexique de la théorie des graphes\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nSommets et arêtes sur un graphe\n\n\n\n\nGraphe orienté\n\n\n\nOn distingue les graphes non orientés, où les arêtes relient deux sommets de manière symétrique et les graphes orientés, où les arêtes, alors appelés arcs, relient deux sommets de manière asymétrique.\nLexique de la théorie des graphes\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nGraphes orientés et non orientés\n\n\n\n\n\nGraphe pondéré\n\n\n\nUn graphe pondéré ou un réseau est un graphe où chaque arête porte un nombre (son poids).\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n Public domain via Wikimedia Commons\nCes poids peuvent représenter par exemple des coûts, des longueurs ou des capacités, en fonction du problème traité. Ces graphes sont fréquents dans divers contextes, comme le problème de plus court chemin ou le problème du voyageur de commerce.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 5: Graphes*"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/5-graphes/index.html#vocabulaire-des-graphes",
    "href": "tg/nsi/1-structures-de-donnees/5-graphes/index.html#vocabulaire-des-graphes",
    "title": "Chapitre 5: Graphes*",
    "section": "2 Vocabulaire des graphes",
    "text": "2 Vocabulaire des graphes\n\n\nSommets adjacents\n\n\n\nDeux sommets reliés par une arête sont dits adjacents.\n\n\n\nGraphe complet\n\n\n\nUn graphe est dit complet lorsque tous ses sommets sont adjacents.\n\n\n\nOrdre d’un graphe\n\n\n\nL’ordre d’un graphe est le nombre de sommets de ce graphe.\n\n\n\nDegré d’un sommet\n\n\n\nLe degré d’un sommet est le nombre d’arêtes dont ce sommet est une extrémité.\n\n\n\nLexique de la théorie des graphes",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 5: Graphes*"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/5-graphes/index.html#quelques-exemples-de-graphes",
    "href": "tg/nsi/1-structures-de-donnees/5-graphes/index.html#quelques-exemples-de-graphes",
    "title": "Chapitre 5: Graphes*",
    "section": "3 Quelques exemples de graphes",
    "text": "3 Quelques exemples de graphes\nEn fait les graphes sont omniprésents, car il est rare que l’information puisse être réduite à une structure linéaire comme les listes ou encore à un arbre dans lequel la descendance est parfaitement établie.\n\n3.1 Internet\n\n\n\t\t\t  \n  \n\t\t\t\topte.org. Each line is drawn between two nodes, representing two IP addresses. The length of the lines are indicative of the delay between those two nodes. This graph represents less than 30% of the Class C networks reachable by the data collection program in early 2005. Lines are color-coded according to their corresponding RFC 1918 allocation as follows:\nDark blue: net, ca, us\nGreen: com, org\nRed: mil, gov, edu\nYellow: jp, cn, tw, au, de\nMagenta: uk, it, pl, fr\nGold: br, kr, nl\nWhite: unknown\"\n\t\t\t\t\tloading=\"lazy\"\n\t\t\t\t\tdecoding=\"async\"&gt;\n\t\t\t\n©  CC BY 2.5 via Wikimedia Commons\nPrenons l’exemple d’internet, le réseau internet est un ensemble de machines sont identifiées par leur adresse IP. Elles sont reliées entre elles sans une machine mère qui centralise les échanges et dans lequel le chemin des paquets n’est pas unique entre deux machines grâce aux protocoles de routage.\nLorsque nous cliquons entre des sites Web et que nous naviguons entre les URL, nous naviguons vraiment à travers un graphe. Parfois, ces graphiques ont des sommets avec des bords non orientés - je peux aller et venir d’une page Web à une autre - et d’autres qui sont dirigés - je ne peux que passer de la page Web A à la page Web B, et jamais l’inverse.\nMais il y a un meilleur exemple qui illustre magnifiquement nos interactions quotidiennes avec les graphes: les réseaux sociaux.\n\n\n\n3.2 Réseaux sociaux\nPrenons l’exemple des réseaux sociaux tels sur Facebook ou son alternative libre Diaspora.\nDans ce type de réseau social:\n\nles sommets sont les utilisateurs\nles arêtes sont les liens d’amitié entre ces utilisateurs.\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nA gentle introduction to graph theory\nL’amitié se veut être un lien bidirectionnel, on ne peut être ami de quelqu’un qui n’est pas votre ami: C’est un graphe non-orienté.\nAu contraire dans les réseaux de microblogging comme Twiter ou son alternative libre Mastodon, les liens ne sont pas de la même nature.\nOn peut suivre une personne, mais il n’est pas obligatoire que cette personne vous suivre en retour.\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nA gentle introduction to graph theory\nLe suivi est un lien directionnel : C’est un graphe non-orienté.\n\n\n3.3 Graphes routiers\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nCarte du réseau ferroviare des TGV©  CC BY-SA 3.0 via Wikimedia Commons\nLes graphes routiers sont un bel exemple de graphes pondérés non-orientés. On peut utiliser le temps ou la distance pour la pondération.\nOn place souvent les sommets à leur position réelle sur une carte sur ce type de graphes.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 5: Graphes*"
    ]
  },
  {
    "objectID": "tg/nsi/1-structures-de-donnees/5-graphes/index.html#comment-implémenter-un-graphe",
    "href": "tg/nsi/1-structures-de-donnees/5-graphes/index.html#comment-implémenter-un-graphe",
    "title": "Chapitre 5: Graphes*",
    "section": "4 Comment implémenter un graphe?",
    "text": "4 Comment implémenter un graphe?\nIl existe deux façons d’implémenter un graphe:\n\nLa matrice d’adjacence,\nla liste de successeurs/prédécesseurs.\n\nNous allons voir comment réaliser ces deux implémentations, et comment passer de l’une à l’autre.\n\n4.1 La liste de successeurs/prédécesseurs\n\n\nListe d’adjacence\n\n\n\nLa liste d’adjacence d’un graphe non orienté, est la liste des voisins de chaque sommet.\n\n\n\nArticle Wikipédia sur la liste d’adjacence\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nListe d’adjacence d’un graphe orienté\n\n\n\n\n4.2 La matrice d’adjacence\n\n\nMatrice d’adjacence\n\n\n\nOn représente les liens entre les nn sommets du graphe par une matrice de dimension nn dont l’élément non diagonal aija_{ij} est le nombre d’arêtes (ou son poids pour un graphe pondéré) liant le sommet ii au sommet jj.\n\n\n\nL’élément diagonal aiia_{ii} est le nombre de boucles au sommet i.\nDans le cas d’un graphe non orienté, la matrice d’adjacence est symétrique.\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nMatrice d’adjacence d’un graphe non orienté\n\n\nPour un graphe orienté, elle est quelconque.\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nMatrice d’adjacence d’un graphe orienté\n\n\nArticle Wikipédia sur les matrices d’adjacence\n\n\n\n\n\n\n\nEn plus: Quelle implémentation choisir?\n\n\n\n\n\n\nCette représentation est particulièrement adaptée aux graphes creux (c’est-à-dire peu denses), contrairement à la matrice d’adjacence adaptée aux graphes denses.\n\n\n\nImplémentation\nAccès à une arête\nAccès à un voisin\nUtilisation préférée\n\n\n\n\nmatrice d’adjacence\nO(1)O(1)\nO(n)O(n)\nGraphe dense\n\n\nliste de successeurs\nO(n)O(n)\nO(1)O(1)\nGraphe creux\n\n\n\n\n\n\n\n\n\n\n4.3 Implémentations en Python\nLe créateur de Python Guido Von Rossum, proposa une implémentation de graphe en Python utilisant la liste d’adjacence(https://www.python.org/doc/essays/graphs/):\n\nFew programming languages provide direct support for graphs as a data type, and Python is no exception. However, graphs are easily built out of lists and dictionaries. For instance, here’s a simple graph (I can’t use drawings in these columns, so I write down the graph’s arcs):\n\nA -&gt; B\nA -&gt; C\nB -&gt; C\nB -&gt; D\nC -&gt; D\nD -&gt; C\nE -&gt; F\nF -&gt; C\ngraph = {'A': ['B', 'C'],\n         'B': ['C', 'D'],\n         'C': ['D'],\n         'D': ['C'],\n         'E': ['F'],\n         'F': ['C']}\nEn ce qui concerne les matrices, on les représente généralement sous forme de tableaux de tableaux, comme vu en première.\n(123456789)\n\\begin{pmatrix}\n   1 & 2 & 3\\\\\n   4 & 5 & 6\\\\\n   7 & 8 & 9 \n\\end{pmatrix}\n\nM = [[1, 2, 3],\n     [4, 5, 6],\n     [7, 8, 9]]\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\n\nDessiner une représentation conventionnelle du graphe proposé par Guido Von Rossum.\nÉcrire la matrice d’adjacence correspondante.\nProposer une implémentation de la matrice d’adjacence de ce graphe en Python en utilisant une liste de liste.\n\n\n\n\n\n\n\n\nA gentle introduction to graph theory\nArticle wikipedia sur les graphes\nLexique de la théorie des graphes sur Wikipédia",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 1: Structures de données",
      "Chapitre 5: Graphes*"
    ]
  },
  {
    "objectID": "tg/nsi/4-langages-et-programmation/1-modules-et-documentation/exo/index.html",
    "href": "tg/nsi/4-langages-et-programmation/1-modules-et-documentation/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Donner deux façons d’importer la fonction sqrt() du module math et de calculer ensuite la racine carrée de 2.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 4: Langages et programmation",
      "Chapitre 1: Modules et documentation",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/4-langages-et-programmation/1-modules-et-documentation/exo/index.html#utilisation-du-module-math",
    "href": "tg/nsi/4-langages-et-programmation/1-modules-et-documentation/exo/index.html#utilisation-du-module-math",
    "title": "Exercices",
    "section": "",
    "text": "Donner deux façons d’importer la fonction sqrt() du module math et de calculer ensuite la racine carrée de 2.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 4: Langages et programmation",
      "Chapitre 1: Modules et documentation",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/4-langages-et-programmation/1-modules-et-documentation/exo/index.html#création-dun-projet-sur-les-nombres-premiers",
    "href": "tg/nsi/4-langages-et-programmation/1-modules-et-documentation/exo/index.html#création-dun-projet-sur-les-nombres-premiers",
    "title": "Exercices",
    "section": "2 Création d’un projet sur les nombres premiers",
    "text": "2 Création d’un projet sur les nombres premiers\nCahier des charges:\nVotre projet doit contenir 4 modules:\n\npremier.py: module contenant quatre fonctions qui permettent de savoir si un nombre est premier telles que décrites ici.\neratosthene.py: module permettant la génération de nombres premiers par le crible d’Eratosthène. Ce module devra être importé dans le module premier.py pour implémenter le 4e algorithme proposé dans l’article Wikipédia.\ntest_premier.py: module qui importe les fonctions définies dans premier.py et qui vérifie que toutes les fonctions de test de primalité définies dans le module premier.py ont des résultats justes. On pourra utiliser cet article Wikipédia ainsi que ces références pour trouver des nombres premiers à tester.\nNe pas oublier de tester des nombres non premiers\nFacultatif, vous pouvez également chronométrer le temps d’exécution des tests grâce au module time de python et afficher les résultats en cas de succès.\nmain.py: le module principal destiné à l’utilisateur. Ce programme demande à l’utilisateur de choisir un nombre entier et un algorithme, et lui indique si ce nombre est premier ou pas.\nAttention: Le programme devra recommencer tant que l’utilisateur le souhaite sans être relancé à chaque fois.\n\nLe projet doit être documenté:\n\nToutes les fonctions ont une Docstring.\nTous les modules ont une Docstring.\n\nAjouter un fichier README qui explique la nature du projet et les détails pratiques comme:\n\ncomment lancer le programme principal,\ncomment lancer les tests,\nles limites de votre programme…_",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 4: Langages et programmation",
      "Chapitre 1: Modules et documentation",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/4-langages-et-programmation/1-modules-et-documentation/quiz/index.html",
    "href": "tg/nsi/4-langages-et-programmation/1-modules-et-documentation/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 4: Langages et programmation",
      "Chapitre 1: Modules et documentation",
      "Quiz"
    ]
  },
  {
    "objectID": "tg/nsi/4-langages-et-programmation/3-fonctions-recursives/index.html",
    "href": "tg/nsi/4-langages-et-programmation/3-fonctions-recursives/index.html",
    "title": "Chapitre 3: Fonctions récursives",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nRécursivité.\nÉcrire un programme récursif.\nAnalyser le fonctionnement d’un programme récursif.\nDes exemples relevant de domaines variés sont à privilégier.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 4: Langages et programmation",
      "Chapitre 3: Fonctions récursives"
    ]
  },
  {
    "objectID": "tg/nsi/4-langages-et-programmation/3-fonctions-recursives/index.html#définition-et-exemple",
    "href": "tg/nsi/4-langages-et-programmation/3-fonctions-recursives/index.html#définition-et-exemple",
    "title": "Chapitre 3: Fonctions récursives",
    "section": "1 Définition et exemple",
    "text": "1 Définition et exemple\n\n\nFonction récursive\n\n\n\nUne fonction récursive est une fonction qui s’appelle elle-même dans sa définition.\n\n\n\nCommençons par un exemple pour clarifier un peu les choses.\nVous voulez demander à un utilisateur une entrée par exemple son âge, et vous voulez vous assurer que l’utilisateur vous donne bien une valeur entière positive.\nOn peut implémenter cela avec une boucle while.\nage = None\nwhile not(age):\n    age = int(input(\"Quel âge avez-vous?\"))\n    if age &gt; 0:\n        print(\"Merci pour votre réponse)\n    # on affecte None à age pour relancer un tour de boucle\n    print(\"L'age doit être un entier positif\")\n    age = None\n        \nMais il est aussi tout à fait possible d’utiliser une fonction récursive comme ceci:\ndef quel_age():\n    age = int(input(\"Quel âge avez-vous?\"))\n    if age &gt; 0:\n        return age\n    # L'age n'est pas positif, il faut recommencer\n    print(\"L'age doit être un entier positif\")\n    # on fait l'appel récursif pour reposer la question\n    quel_age()\n\nage = quel_age() # appel de la fonction et assignation de la valeur retournée à la variable age\nComme vous le voyez cette fonction continuera de s’appeler tant que nécessaire. On a donc bien remplacé la boucle avec cette fonction.\n\n\n\n\n\n\n\nApplication: Gestion des exceptions\n\n\n\n\n\n\nCe code ne traite que le problème du signe, si on voulait être complet il faudrait gérer les problèmes de type(str, float…) avec les structures try except.\nVous pouvez l’implémenter en guise d’exercice.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 4: Langages et programmation",
      "Chapitre 3: Fonctions récursives"
    ]
  },
  {
    "objectID": "tg/nsi/4-langages-et-programmation/3-fonctions-recursives/index.html#comment-définir-une-fonction-récursive",
    "href": "tg/nsi/4-langages-et-programmation/3-fonctions-recursives/index.html#comment-définir-une-fonction-récursive",
    "title": "Chapitre 3: Fonctions récursives",
    "section": "2 Comment définir une fonction récursive?",
    "text": "2 Comment définir une fonction récursive?\nPour écrire une fonction récursive il faut:\n\nTraiter attentivement le cas récursif du passage des valeurs renvoyées par l’appel précédent à l’appel suivant.\nPrévoir le cas de base qui ne nécessite pas de rappel de la fonction afin d’arrêter la boucle.\n\n\nNous allons utiliser l’exemple classique de la fonction puissance qui retourne 2n2^n.\nUn traitement par une boucle for serait (programmation impérative).\ndef puissance2(n: int) -&gt; int:\n    puissance = 1\n    for i in range(n):\n        puissance = puissance * 2\n    return puissance\n&gt;&gt;&gt; puissance2(8)\n256\nCette fonction peut-être définie par une fonction récursive car:\n\nLe cas récursif est: 2n=2*2n−12^n = 2 * 2^{n-1}\nLe cas de base est: 20=12^0 = 1\n\nVoici donc la fonction récursive:\ndef puissance_recursive(exposant):\n    # cas de base\n    if exposant == 0:\n        return 1\n    # appel recursif\n    return 2 * puissance_recursive(exposant - 1 )\n\npuissance_3 = puissance_recursive(3)\n\n\n\n\n\n\n\n\nEn plus: Correction de l'algorithme récursif\n\n\n\n\n\n\nNous pouvons démontrer la correction (validité) de cet algorithme, pour cela nous allons prouver par récurrence que puissancerecursive(n)=2npuissance_recursive(n) = 2^n.\n\nInitialisation: pour exposant=0exposant = 0, puissance_recursive(0) vaut 1 qui est bien égal à 202^0.\nConservation: si puissancerecursive(n−1)=2n−1puissance_recursive(n-1) = 2^{n-1} alors puissancerecursive(n)=2×puissancerecursive(n−1)=2×2n−1=2npuissance_recursive(n) = 2\n\\times puissance_recursive(n-1) = 2\\times2^{n-1}=2^n.\nTerminaison: L’algorithme se termine, car à chaque tour de boucle nn diminue de 1 et on finit par arriver au return du cas terminal lorsque n=0n=0 à condition d’avoir donné au paramètre nn une valeur positive à l’appel de la fonction.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 4: Langages et programmation",
      "Chapitre 3: Fonctions récursives"
    ]
  },
  {
    "objectID": "tg/nsi/4-langages-et-programmation/3-fonctions-recursives/index.html#pile-dexécution",
    "href": "tg/nsi/4-langages-et-programmation/3-fonctions-recursives/index.html#pile-dexécution",
    "title": "Chapitre 3: Fonctions récursives",
    "section": "3 Pile d’exécution",
    "text": "3 Pile d’exécution\nBien que la gestion de la mémoire soit «cachée» au programmeur en Python, qu’il existe deux façons d’allouer de la mémoire à un programme lors de son exécution (on parle d’allocation dynamique).\n\nLe tas (heap en anglais) est un segment de mémoire que l’on peut faire grandir ou rétrécir à la demande.\nL’autre segment de mémoire utilisé est la pile d’exécution (call stack). La pile sert à enregistrer des informations au sujet des fonctions actives dans un programme informatique, c’est celle qui nous intéresse ici.\n\n\nÉtant donné que la pile d’exécution est une pile, l’appelant pousse l’adresse de retour sur la pile, et la fonction appelée, quand elle se termine, récupère l’adresse de retour au sommet de la pile d’exécution (et y transfère le contrôle). Si une fonction appelée appelle une autre fonction, elle poussera son adresse de retour sur la pile d’exécution. Les adresses de retour s’accumulent donc sur la pile d’exécution et sont récupérées une à une lors de la fin de l’exécution des fonctions. Si l’accumulation des adresses de retour consomme tout l’espace alloué à la pile d’exécution, un message d’erreur appelé un dépassement de pile se produit.\n\nArticle Wikipédia sur la pile d’exécution\nPour bien comprendre comment fonctionne la pile d’exécution, on peut exécuter la fonction puissance_recursive pas à pas sur pythontutor.\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nAnimation appel récursif sur python tutor\n\n\nSur cette animation la pile est «à l’envers»!",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 4: Langages et programmation",
      "Chapitre 3: Fonctions récursives"
    ]
  },
  {
    "objectID": "tg/nsi/4-langages-et-programmation/3-fonctions-recursives/index.html#efficacité-des-algorithmes-récursifs",
    "href": "tg/nsi/4-langages-et-programmation/3-fonctions-recursives/index.html#efficacité-des-algorithmes-récursifs",
    "title": "Chapitre 3: Fonctions récursives",
    "section": "4 Efficacité des algorithmes récursifs",
    "text": "4 Efficacité des algorithmes récursifs\nL’écriture d’algorithmes récursifs peut-être très élégante et concise, cependant elle peut avoir des conséquences très néfastes sur leur efficacité. La taille de la pile peut croitre au-dessus des limites de la mémoire, ou encore certains calculs identiques peuvent être réalisés plusieurs fois.\nNous allons voir comment l’utilisation d’un accumulateur peut permettre de passer des valeurs d’un appel à un autre lors de la récursion.\n\nVoici donc la fonction récursive puissance modifiée avec un deuxième paramètre acc ayant pour valeur par défaut 1, et qui accumulera le résultat des multiplications lors des appels récursifs.\ndef puissance_rec_acc(exposant, acc=1):\n    # cas de base\n    if exposant == 0:\n        return acc\n    # appel recursif\n    return puissance_rec_acc(exposant - 1, 2*acc )\npuissance_rec_acc(4)\nNous n’avons pas modifié la hauteur de la pile, mais on a modifié l’ordre des opérations effectuées. Les multiplications sont effectuées lors de l’empilement au lieu du dépilement précédemment.\nNous pouvons visualiser l’exécution de cet algorithme sur pythontutor.\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\n\nL’utilisation d’un accumulateur est parfois indispensable comme dans les exercices 5 et 6, voire indispensable comme dans le calcul des termes de Fibonacci de grand ordre(exercice 7).\n\n\nInformatique et sciences du numérique Spécialité ISN en terminale S - Avec des exercices corrigés et des idées de projets par Gilles Dowek\nInformatique pour tous en classes préparatoires aux grandes écoles de Benjamin Wack",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 4: Langages et programmation",
      "Chapitre 3: Fonctions récursives"
    ]
  },
  {
    "objectID": "tg/nsi/4-langages-et-programmation/2-mise-au-point-des-programmes/exo/index.html",
    "href": "tg/nsi/4-langages-et-programmation/2-mise-au-point-des-programmes/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Annoter le code suivant en indiquant le type d’erreur parmi: SyntaxError, IndexError, NameError, IndentationError et TypeError. Proposer dans chaque cas une correction.\nréponse = int(input(\"Est-ce qu'il pleut? \"))\n\nif réponse == oui: \n\n   print(\"parapluie\"[9])\n\nelif réponse == \"non\":\n\nprint(\"pas de parapluie\")\n\nelse réponse == \"autre\":\n\n    print(\"Veuillez répondre par \"oui\" ou \"non\")",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 4: Langages et programmation",
      "Chapitre 2: Mise au point des programmes",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/4-langages-et-programmation/2-mise-au-point-des-programmes/exo/index.html#gestion-des-erreurs",
    "href": "tg/nsi/4-langages-et-programmation/2-mise-au-point-des-programmes/exo/index.html#gestion-des-erreurs",
    "title": "Exercices",
    "section": "",
    "text": "Annoter le code suivant en indiquant le type d’erreur parmi: SyntaxError, IndexError, NameError, IndentationError et TypeError. Proposer dans chaque cas une correction.\nréponse = int(input(\"Est-ce qu'il pleut? \"))\n\nif réponse == oui: \n\n   print(\"parapluie\"[9])\n\nelif réponse == \"non\":\n\nprint(\"pas de parapluie\")\n\nelse réponse == \"autre\":\n\n    print(\"Veuillez répondre par \"oui\" ou \"non\")",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 4: Langages et programmation",
      "Chapitre 2: Mise au point des programmes",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/4-langages-et-programmation/2-mise-au-point-des-programmes/exo/index.html#modules-et-tests",
    "href": "tg/nsi/4-langages-et-programmation/2-mise-au-point-des-programmes/exo/index.html#modules-et-tests",
    "title": "Exercices",
    "section": "2 Modules et tests",
    "text": "2 Modules et tests\nOn veut écrire un module dans un fichier carre_liste.py contenant deux fonctions:\n\nprint_carre: qui prend un paramètre tab de type list et qui affiche dans l’ordre le carré de chacun des éléments de la liste d’entrée.\nmap_carre: qui prend un paramètre tab de type list et qui renvoie une nouvelle liste contenant dans l’ordre le carré de chacun des éléments de la liste d’entrée.\n\n\nÉcrire ce module en documentant à l’aide de doctstrings le module et les deux fonctions.\nÉcrire ensuite un module de tests dans le fichier test_carre_liste.py qui importe une des deux fonctions du fichier carre_liste.py, et qui la teste sur quelques entrées particulières.\nPourquoi ne peut-on facilement tester qu’une des deux fonctions ?",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 4: Langages et programmation",
      "Chapitre 2: Mise au point des programmes",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/4-langages-et-programmation/2-mise-au-point-des-programmes/quiz/index.html",
    "href": "tg/nsi/4-langages-et-programmation/2-mise-au-point-des-programmes/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 4: Langages et programmation",
      "Chapitre 2: Mise au point des programmes",
      "Quiz"
    ]
  },
  {
    "objectID": "tg/nsi/4-langages-et-programmation/4-paradigmes-de-programmation/index.html",
    "href": "tg/nsi/4-langages-et-programmation/4-paradigmes-de-programmation/index.html",
    "title": "Chapitre 4: Paradigmes de programmation*",
    "section": "",
    "text": "Ce chapitre ne pourra pas faire l’objet d’une évaluation lors de l’épreuve terminale écrite et pratique de l’enseignement de spécialité. BO MENE2121274N",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 4: Langages et programmation",
      "Chapitre 4: Paradigmes de programmation*"
    ]
  },
  {
    "objectID": "tg/nsi/4-langages-et-programmation/4-paradigmes-de-programmation/index.html#les-trois-grands-types-de-programmation",
    "href": "tg/nsi/4-langages-et-programmation/4-paradigmes-de-programmation/index.html#les-trois-grands-types-de-programmation",
    "title": "Chapitre 4: Paradigmes de programmation*",
    "section": "1 Les trois grands types de programmation",
    "text": "1 Les trois grands types de programmation\nIl existe trois grands types de programmation :\n\nLa programmation impérative: le paradigme originel est le plus courant.\nLa programmation orientée objet(POO) consistant en la définition et l’assemblage de briques logicielles appelées objets.\nLa programmation déclarative consistant à déclarer les données du problème, puis à demander au programme de le résoudre. La programmation fonctionnelle en est un exemple représentatif dans lequel le résultat souhaité est déclaré comme la valeur d’une série d’applications de fonctions.\n\nMême si certains langages forcent à utiliser un paradigme de programmation (ex: Smalltalk: POO, Haskell: fonctionnnelle), de nombreux langages modernes comme Python (ou Javascript) sont multiparadigmes et permettent la programmation impérative structurée, fonctionnelle et orientée objet; laissant ainsi le choix au programmeur du paradigme à utiliser en fonction du problème posé.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 4: Langages et programmation",
      "Chapitre 4: Paradigmes de programmation*"
    ]
  },
  {
    "objectID": "tg/nsi/4-langages-et-programmation/4-paradigmes-de-programmation/index.html#exemples-dapproches-en-python",
    "href": "tg/nsi/4-langages-et-programmation/4-paradigmes-de-programmation/index.html#exemples-dapproches-en-python",
    "title": "Chapitre 4: Paradigmes de programmation*",
    "section": "2 Exemples d’approches en Python",
    "text": "2 Exemples d’approches en Python\nPour illustrer les différences entre ces paradigmes, nous allons utiliser un exemple très simple issu de opensource.com.\nOn a une liste de caractères que nous souhaitons concaténer en une chaine de caractères.\nENTREE: entrée = ['p','y','t','h','o','n']\nSORTIE: sortie = 'python'\n\n2.1 Programmation impérative : le comment\nLa programmation impérative est un paradigme de programmation qui décrit les opérations en séquences d’instructions exécutées par l’ordinateur pour modifier l’état du programme.\nLa programmation impérative se concentre sur la description du fonctionnement d’un programme : le comment.\nLa plupart des langages de haut niveau comporte cinq types d’instructions principales :\n\nla séquence d’instructions\nl’assignation ou affectation\nl’instruction conditionnelle(if, else)\nla boucle(for, while)\nles branchements(GOTO p.ex)\n\nentrée = ['p','y','t','h','o','n']\n# on initialise une chaine vide pour la sortie\nsortie = \"\"\n# On concatène à l'aide d'une boucle\nfor c in entrée:\n     sortie = sortie + c\n \nprint(sortie)\npython\nCe type de programmation est le plus ancien et utilisé, il est facile à comprendre, souvent efficace car proche des instructions réalisés par les processeurs. Par contre, il est assez difficile à tester car l’état du programme ne cesse de changer et il est difficile de tester une petite partie du programme au milieu de son exécution par exemple car elle ne nécessite que toutes les instructions précédentes aient déjà été appliquées correctement.\n\n\n2.2 Programmation fonctionnelle : le quoi\nEn programmation fonctionnelle on décrit les résultats que l’on veut obtenir à partir des données plutôt que la séquence d’instructions qui permettent d’obtenir les résultats (c’est un paradigme déclaratif).\nL’approche fonctionnelle considère le calcul en tant qu’évaluation de fonctions mathématiques. Vous donnez vos données en entrée aux fonctions, qui vous renvoient les valeurs calculées en sortie.\nL’utilisation massive de fonctions a amené à la création d’une syntaxe raccourcie pour la définition de fonctions anonymes, les fonctions lambdas :\nlambda param1, ... , paramN: valeur_retournée\nAu lieu de:\ndef ma_fonction(param1, ... , paramN):\n    ...\n    return valeur_retournée\nEn programmation fonctionnelle, il n’y a pas d’état, l’opération d’affectation est interdite, ce qui permet de s’affranchir des effets secondaires (ou effets de bord).\nCeci rend les programmes parfaitement prédictibles, faciles à tester et à paralléliser, par contre il est souvent compliqué de se débarrasser complétement de l’état du programme.\nComme vu dans le chapitre précédent, en programmation fonctionnelle, on remplace souvent les boucles par des fonctions récursives. Une approche fonctionnelle par la récursion de notre problème pourrait être :\nentrée = ['p','y','t','h','o','n']\n\ndef list_to_string(ma_liste, ma_chaine=\"\"):\n    \"\"\"Fonction récursive pour concaténer les éléments d'une liste\"\"\"\n    if ma_liste:\n        # on enlève le premier élement de la liste\n        # qu'on ajoute à la chaine de caractères\n        ma_chaine += ma_liste.pop(0)\n        # application récursive\n        return list_to_string(ma_liste, ma_chaine)\n    else:\n        # cas de base\n        return ma_chaine\n    \n    \nlist_to_string(entrée)\n\n\n\n\n\n\n\nEn plus: filter, map, reduce\n\n\n\n\n\n\nParmi les fonctions les plus représentatives de la programmation fonctionnelle, on trouve: filter, map et reduce (voir ici pour plus de détails).\n# on importe le module functools qui comporte \n# les utilitaires de programmation fonctionnelle\nimport functools\nentrée = ['p','y','t','h','o','n']\n\n# on concatène avec la méthode reduce\nsortie = functools.reduce(lambda s, c: s + c, entrée)\nprint(sortie)\npython\nOn utilise ici reduce une fonction d’ordre supérieur très utilisée en programmation fonctionnelle. Cette fonction applique une fonction de deux arguments de manière cumulative aux éléments en séquence, de gauche à droite, pour réduire la séquence à une seule valeur. Par exemple:\nsample_list = [1,2,3,4,5]\nimport functools\nsomme = functools.reduce(lambda x, y: x + y, sample_list)\nsomme\n15\n((((1 + 2) +3) +4) +5)\n15\nPour plus de méthodes fonctionnelles, consulter la documentation du module functools qui est utilisé pour des fonctions de haut niveau : des fonctions qui agissent sur ou revoient d’autres fonctions.\nUne implémentation et des exemples d’utilisation des fonctions filter, map, reduce est proposée en exercice.\n\n\n\n\n\n\n\n2.3 Programmation objet: POO\nLa POO consiste en la définition et l’interaction de briques logicielles appelées objets; un objet représente un concept, une idée ou toute entité du monde physique, comme une voiture, une personne ou encore une page d’un livre.\nUn objet possède:\n\ndes données: ses attributs et\ndes fonctions: ses méthodes\n\nclass ListeLettres:\n    \"Classe permettant de lier une chaîne de caractères à une liste de caractères\"\n    def __init__(self, lettres=[]):\n        \"\"\"Intialisation de l'objet\n\n        Paramètres\n        ----------\n        lettres: list\n            liste des caractères vide par défaut\n        \"\"\"    \n        # initialisation des attributs de l'objet\n        self.lettres = lettres\n        # Conversion en chaine de caractères\n        self.string = ''.join(lettres)\n\n    # définition d'une méthode\n    def get_string(self):\n        return self.string\n \nentrée = ['p','y','t','h','o','n']\n\n# instanciation de l'objet avec les données de la liste\nobjet_py = ListeLettres(entrée)\n\n# récupération de l'attribut string de l'objet\nobjet_py.string # renvoie 'python'\n\n# récupération de l'attribut string grâce à la méthode get_string (préféré)\nobjet_py.get_string() # renvoie 'python'\nLes différents principes de la conception orientée objet aident à la réutilisation du code, au masquage des données, etc., mais c’est une bête complexe, et comprendre toute la logique des objets et de leurs interactions est délicat et souvent difficile à tester en raison de ces interdépendances.\nNous aborderons plus en détail la programmation orientée objet au prochain chapitre.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 4: Langages et programmation",
      "Chapitre 4: Paradigmes de programmation*"
    ]
  },
  {
    "objectID": "tg/nsi/4-langages-et-programmation/4-paradigmes-de-programmation/index.html#comment-choisir-le-paradigme-à-utiliser",
    "href": "tg/nsi/4-langages-et-programmation/4-paradigmes-de-programmation/index.html#comment-choisir-le-paradigme-à-utiliser",
    "title": "Chapitre 4: Paradigmes de programmation*",
    "section": "3 Comment choisir le paradigme à utiliser?",
    "text": "3 Comment choisir le paradigme à utiliser?\n\nPour simplifier, si votre problème implique une série de manipulations séquentielles simples, suivre le paradigme de programmation impérative de la vieille école serait le moins cher en termes de temps et d’efforts et vous donnerait potentiellement les meilleures performances.\n\n\nDans le cas de problèmes nécessitant des transformations mathématiques des valeurs, le filtrage des informations, le mappage( transformer une liste en une autre) et les réductions( transformer une liste en une valeur), la programmation fonctionnelle pourrait être adaptée.\n\n\nSi le problème est structuré comme un tas d’objets interdépendants avec certains attributs qui peuvent changer avec le temps, en fonction de certaines conditions, la programmation orientée objet sera certainement la plus naturelle.\n\n\nBien sûr, il n’y a pas de règle simple, car le choix du paradigme de programmation dépend également fortement du type de données à traiter, des connaissances des programmeurs et de diverses autres choses comme l’évolutivité.\n\nPerceiving Python programming paradigms\n\n\nArticle Wikipedia sur les paradigmes de programmation\nPerceiving Python programming paradigms",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 4: Langages et programmation",
      "Chapitre 4: Paradigmes de programmation*"
    ]
  },
  {
    "objectID": "tg/nsi/4-langages-et-programmation/index.html",
    "href": "tg/nsi/4-langages-et-programmation/index.html",
    "title": "Partie 4: Langages et programmation",
    "section": "",
    "text": "Chapitre 1: Modules et documentation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 2: Mise au point des programmes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 3: Fonctions récursives\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 4: Paradigmes de programmation*\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 5: Notion de programme*\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAucun article correspondant",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 4: Langages et programmation"
    ]
  },
  {
    "objectID": "tg/nsi/4-langages-et-programmation/5-notion-de-programme/index.html",
    "href": "tg/nsi/4-langages-et-programmation/5-notion-de-programme/index.html",
    "title": "Chapitre 5: Notion de programme*",
    "section": "",
    "text": "Ce chapitre ne pourra pas faire l’objet d’une évaluation lors de l’épreuve terminale écrite et pratique de l’enseignement de spécialité. BO MENE2121274N",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 4: Langages et programmation",
      "Chapitre 5: Notion de programme*"
    ]
  },
  {
    "objectID": "tg/nsi/4-langages-et-programmation/5-notion-de-programme/index.html#notion-de-programme-en-tant-que-donnée",
    "href": "tg/nsi/4-langages-et-programmation/5-notion-de-programme/index.html#notion-de-programme-en-tant-que-donnée",
    "title": "Chapitre 5: Notion de programme*",
    "section": "1 Notion de programme en tant que donnée",
    "text": "1 Notion de programme en tant que donnée\nCertains programmes utilisent comme données le code source d’autres programmes.\n\n\nun système d’exploitation(linux p.ex) est un programme qui éxecute d’autres programmes(traitement de textes p.ex).\nl’interpréteur Python, est un programme qui traduit le code source de votre programme Python en instructions exécutables par machine: du langage machine.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 4: Langages et programmation",
      "Chapitre 5: Notion de programme*"
    ]
  },
  {
    "objectID": "tg/nsi/4-langages-et-programmation/5-notion-de-programme/index.html#calculabilité",
    "href": "tg/nsi/4-langages-et-programmation/5-notion-de-programme/index.html#calculabilité",
    "title": "Chapitre 5: Notion de programme*",
    "section": "2 Calculabilité",
    "text": "2 Calculabilité\nLa notion de calculabilité date de 1936, il s’agit de savoir ce qui peut être calculé par un ordinateur, et donc permet de voir les limites des problèmes que peuvent résoudre les ordinateurs.\n\nOn dira qu’une fonction est calculable si elle peut être programmée dans l’un ou l’autre des langages de programmation usuels. Cette année, nous utiliserons le langage Python comme témoin : une fonction est calculable si on peut la programmer en Python.\n\n\n\n\n\n\n\n\nEn plus\n\n\n\n\n\n\nIl existe d’autres modèles de calcul, comme le λ-calcul, les fonctions récursives, les machines de Turing, que nous ne développerons pas ici, et qui ne font pas partie des attendus du programme.\nLa thèse de Church postule que tous ces modèles de calcul sont équivalents : une fonction calculable pour un modèle l’est pour un autre. Cela nous permet d’utiliser le modèle des fonctions programmables en Python sans perdre de généralité.\n\n\n\n\n\nCalculabilité et décidabilité sur eduscol\nOn peut calculer beaucoup de choses avec un ordinateur comme le nombre π\\pi, les nombres rationnels 2\\sqrt{2}, 3\\sqrt{3}…\nPar contre, il a été prouvé que certains problèmes n’étaient pas calculables comme par exemple :\n\nSavoir si un énoncé mathématique est un théorème ou pas_(s’il peut être démontré)_.\nCréer un programme qui prend un programme en entrée, et qui indiquera si le programme s’arrête ou pas : le problème de l’arrêt.\n\nIl s’agit de problèmes de décidabilité.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 4: Langages et programmation",
      "Chapitre 5: Notion de programme*"
    ]
  },
  {
    "objectID": "tg/nsi/4-langages-et-programmation/5-notion-de-programme/index.html#décidabilité",
    "href": "tg/nsi/4-langages-et-programmation/5-notion-de-programme/index.html#décidabilité",
    "title": "Chapitre 5: Notion de programme*",
    "section": "3 Décidabilité",
    "text": "3 Décidabilité\n\n\ndécidabilité\n\n\n\nUn problème de décision est dit décidable s’il existe un algorithme, une procédure mécanique qui se termine en un nombre fini d’étapes, qui le décide, c’est-à-dire qui réponde par oui ou par non à la question posée par le problème. S’il n’existe pas de tels algorithmes, le problème est dit indécidable. Par exemple, le problème de l’arrêt est indécidable.\nArticle Wikipédia sur la décidabilité\n\n\n\n\n3.1 Exemples de problèmes décidables\nTous les sous-ensembles finis des entiers sont décidables, par exemple:\n\nDécider si un entier naturel est pair ou non;\ndécider si un entier naturel est premier ou non.\n\n\n\n\n\n\n\n\nEn plus: Décidable ne signifie pas résolvable\n\n\n\n\n\n\nNotons qu’un ensemble peut être théoriquement décidable sans qu’en pratique la décision puisse être faite, parce que celle-ci nécessiterait trop de temps (plus que l’âge de l’univers) ou trop de ressources (plus que le nombre d’atomes de l’univers). L’objet de la théorie de la complexité des algorithmes est d’étudier les problèmes de décision en prenant en compte ressources et temps de calcul.\nArticle Wikipédia sur la décidabilité\n\n\n\n\n\n\n\n3.2 Exemple de problème indécidable : le problème de l’arrêt\nL’indécidabilité du problème de l’arrêt a été démontrée par Alan Turing en 1936.\nOn peut l’interpréter ainsi : il n’existe pas de programme permettant de tester n’importe quel programme informatique afin de conclure dans tous les cas s’il s’arrêtera en un temps fini ou bouclera à jamais.\nPreuve par l’absurde de non-décidabilité de l’arrêt\nSupposons qu’il existe une fonction calculable termine(programme, données) qui prend 2 arguments :\n\nun programme\ndes données d’entrée pour ce programme\n\net qui renverra True si le programme termine et False s’il entre dans une boucle infinie.\n\n\nen utilisant la fonction est_pair() définie dans la partie exercice\n\ntermine(est_pair, 128) ou termine(est_pair, 127) renverraient True.\n\nune fonction définie ainsi :\n\ndef est_positif(n):\n    if n &gt;= 0:\n        return True\n    else:\n        while n &lt; 0:\n            n = n - 1 # boucle infinie\n        return False\nentrainerait une boucle infinie pour les nombres négatifs, et on aurait :\ntermine(est_positif, 128) renvoie True alors que termine(est_positif, -2) renverrait False non pas car -2 n’est pas positif mais parce que l’appel positif(-2) ne se terminerait jamais.\n\nDéfinissons une fonction test_sur_soi.\ndef test_sur_soi(programme):\n    if termine(programme, programme):\n        while True: pass # boucle infinie\nOn obtient alors une contradiction si on appelle test_sur_soi sur elle-même :\ntest_sur_soi(test_sur_soi)\n\n# l'appel éxecutera l'algorithme suivant\nif termine(test_sur_soi, test_sur_soi):\n    while True: pass\nOn arrive au paradoxe suivant :\n$$\n{\\displaystyle {\\it {{test\\_sur\\_soi}({\\it {{test\\_sur\\_soi}){\\text{ termine}}\\iff {\\it {{test\\_sur\\_soi}({\\it {{test\\_sur\\_soi}){\\text{ boucle indéfiniment}}}}}}}}}}}\n$$",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 4: Langages et programmation",
      "Chapitre 5: Notion de programme*"
    ]
  },
  {
    "objectID": "tg/nsi/5-algorithmique/0-rappels/exo/index.html",
    "href": "tg/nsi/5-algorithmique/0-rappels/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Écrire les sorties des algorithmes suivants.\nfor i in range(4, 7):\n    print(i)\n\nfor i in range(3, 9, 2):\n    print(i)\n\nfor i in range(4):\n    for j in range(i):\n        print(i, j)\n\ni = 0\nwhile i &lt; 5:\n    i = i+1\n    print(i)\n\ni = 3\nwhile i &gt;= 0:\n    i = i - 1\n    j = i\n    while j &gt;= 0:\n        j = j - 1\n        print(i, j)\n\nfor i in range(3):\n    for j in range(i, -1, -1):\n        print(i, j)\n\n\ni = 3\nwhile i &gt; 0:\n    j = i - 1\n    while j &lt; 3:\n        j = j + 1\n        print(i, j)\n    i = i - 1\n\ni = 3\nwhile i &gt; 0:\n    for j in range(i):\n        print(i, j)\n    i = i - 1\n\nfor i in range(3, 1, -1):\n   j = i \n   while j &gt; 0:\n         print(i, j)\n         j = j - 1\n\nliste = [13, 5, 7, 9, 11]\nfor i in range(1, len(liste)):\n    print(liste[i], liste[i-1])\n\nliste = [13, 5, 7, 9, 11]\nfor i in range(len(liste)- 2, -1, -1):\n    print(liste[i], liste[i+1])\n\ndict = {\"a\": 0, \"b\": 1, \"c\": 2}\nfor item in dict.items():\n    print(item)",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 5: Algorithmique",
      "Chapitre 0: Rappels",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/5-algorithmique/0-rappels/exo/index.html#prévoir-les-sorties-de-boucles",
    "href": "tg/nsi/5-algorithmique/0-rappels/exo/index.html#prévoir-les-sorties-de-boucles",
    "title": "Exercices",
    "section": "",
    "text": "Écrire les sorties des algorithmes suivants.\nfor i in range(4, 7):\n    print(i)\n\nfor i in range(3, 9, 2):\n    print(i)\n\nfor i in range(4):\n    for j in range(i):\n        print(i, j)\n\ni = 0\nwhile i &lt; 5:\n    i = i+1\n    print(i)\n\ni = 3\nwhile i &gt;= 0:\n    i = i - 1\n    j = i\n    while j &gt;= 0:\n        j = j - 1\n        print(i, j)\n\nfor i in range(3):\n    for j in range(i, -1, -1):\n        print(i, j)\n\n\ni = 3\nwhile i &gt; 0:\n    j = i - 1\n    while j &lt; 3:\n        j = j + 1\n        print(i, j)\n    i = i - 1\n\ni = 3\nwhile i &gt; 0:\n    for j in range(i):\n        print(i, j)\n    i = i - 1\n\nfor i in range(3, 1, -1):\n   j = i \n   while j &gt; 0:\n         print(i, j)\n         j = j - 1\n\nliste = [13, 5, 7, 9, 11]\nfor i in range(1, len(liste)):\n    print(liste[i], liste[i-1])\n\nliste = [13, 5, 7, 9, 11]\nfor i in range(len(liste)- 2, -1, -1):\n    print(liste[i], liste[i+1])\n\ndict = {\"a\": 0, \"b\": 1, \"c\": 2}\nfor item in dict.items():\n    print(item)",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 5: Algorithmique",
      "Chapitre 0: Rappels",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/5-algorithmique/0-rappels/exo/index.html#dessiner-des-motifs-avec-des-boucles",
    "href": "tg/nsi/5-algorithmique/0-rappels/exo/index.html#dessiner-des-motifs-avec-des-boucles",
    "title": "Exercices",
    "section": "2 Dessiner des motifs avec des boucles",
    "text": "2 Dessiner des motifs avec des boucles\n\nÉcrivez un programme Python pour construire le motif suivant, en utilisant une boucle.\n*\n* *\n* * *\n* * * *\n* * * * *\n* * * *\n* * *\n* *\n*\nÉcrivez un programme Python qui accepte un mot de l’utilisateur et l’inverse.\nÉcrivez un programme Python qui prend deux chiffres m (nb de lignes) et n (nb de colonnes) en entrée et génère un tableau à deux dimensions.\nLa valeur de l’élément dans la i-ème ligne et la j-ème colonne du tableau doit être i*j.\nExemple : Lignes = 3, Colonnes = 4 Résultat attendu : [[0, 0, 0, 0], [0, 1, 2, 3], [0, 2, 4, 6]]\nÉcrivez un programme Python pour afficher le motif alphabétique « E ».\nSortie attendue:\n*****\n*\n*\n****\n*\n*\n*****\nÉcrivez un programme Python pour afficher le motif alphabétique « Z ».\nSortie attendue:\n*******\n     *\n    *\n   *\n  *\n *\n*******\nÉcrivez un programme Python pour construire le modèle suivant, en utilisant une boucle.\nSortie attendue:\n1\n22\n333\n4444\n55555\n666666\n7777777\n88888888\n999999999\nÉcrivez un programme Python pour construire le modèle suivant, en utilisant une boucle.\nSortie attendue:\n999999999\n88888888\n7777777\n666666\n55555\n4444\n333\n22\n1\n\nÉcrivez un programme Python pour construire le modèle suivant, en utilisant une boucle.\nSortie attendue:\n111111111\n 22222222\n  3333333\n   444444\n    55555\n     6666\n      777\n       88\n        9\n\n\nÉcrivez un programme Python pour construire le modèle suivant, en utilisant une boucle.\nSortie attendue:\n1                1\n22              22\n333            333\n4444          4444\n55555        55555\n666666      666666\n7777777    7777777\n88888888  88888888\n999999999999999999",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 5: Algorithmique",
      "Chapitre 0: Rappels",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/5-algorithmique/0-rappels/exo/index.html#vérifier-quune-liste-est-triée",
    "href": "tg/nsi/5-algorithmique/0-rappels/exo/index.html#vérifier-quune-liste-est-triée",
    "title": "Exercices",
    "section": "3 Vérifier qu’une liste est triée",
    "text": "3 Vérifier qu’une liste est triée\nÉcrire le code d’une fonction appelée is_sorted qui prend en paramètres une liste et qui renvoie True si la liste est triée et False sinon.\n\nÉcrire en python le code de la fonction en la prototypant.\nProposer quelques tests d’assertion en pensant aux cas limites : liste vide, liste triée, éléments égaux…\nÉvaluer la complexité de l’algorithme dans le pire des cas.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 5: Algorithmique",
      "Chapitre 0: Rappels",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/5-algorithmique/0-rappels/exo/index.html#étude-du-tri-par-insertion",
    "href": "tg/nsi/5-algorithmique/0-rappels/exo/index.html#étude-du-tri-par-insertion",
    "title": "Exercices",
    "section": "4 Étude du tri par insertion",
    "text": "4 Étude du tri par insertion\nOn donne ci-dessous le code Python du tri par insertion :\ndef tri_insertion(t):\n    n = len(t)\n    for i in range(1, n):\n        # ICI\n        x = t[i]\n        j = i\n        while j &gt; 0 and t[j-1] &gt; x:\n            t[j] = t[j-1]\n            j = j - 1\n        t[j] = x\n        # LA\n    return t\n\n4.1 Compréhension de l’algorithme\n\nÉcrire le prototype de cette fonction.\n\nOn va étudier l’appel de la fonction avec comme argument [11, 25, 12, 22, 64].\n\nÉcrire l’instruction permettant d’exécuter l’appel de la fonction avec la liste précédente.\nQue représente n? Quelle est sa valeur?\nQuelles seront les valeurs prises par i données par l’instruction for i in range(1, n)?\nDans un tableau, donner les états successifs du tableau aux points ICI et LA pour tous les tours de la boucle externe(for).\nExpliquer le rôle de la boucle interne(while).\n\n\n\n4.2 Étude de la complexité\n\nRappeler la définition de la complexité.\nMontrer que pour tout entier nn, la somme des entiers de 1 à nn vaut : S=1+2+3+⋯+(n−1)+n=∑i=1ni=n(n+1)2.\n{\\displaystyle S=1+2+3+\\cdots +(n-1)+n=\\sum _{i=1}^{n}i={\\frac {n(n+1)}{2}}.}\n (voir cette animation si nécessaire.)\nCalculer la complexité du tri par insertion proposé.\nEn déduire qu’il s’agit d’un algorithme de complexité quadratique: O(n2)O(n^2).\n\n\n\n4.3 Correction de l’algorithme\nEtablir la correction de l’algorithme. On rappelle que pour prouver la correction nous devons montrer les trois points suivants:\n\nInitialisation: L’invariant est vrai avant la première itération.\nConservation: si l’invariant est vrai avant une itération, il restera vrai après l’itération.\nTerminaison: la boucle se termine et nous donne le résultat attendu.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 5: Algorithmique",
      "Chapitre 0: Rappels",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/5-algorithmique/0-rappels/quiz/index.html",
    "href": "tg/nsi/5-algorithmique/0-rappels/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "## Complexités\n\n1. Quelle est la complexité asymptotique de l'algorithme suivant:\n\n   ```python\n   def est_positif(liste):\n       for e in L:\n            if e &lt; 0:\n                return False\n       return True\n    ```\n\n   - [ ] O(1)\n   - [ ] O(log N)\n   - [x] O(N)\n   - [ ] O(N^2)\n\n2. Quelle est la complexité asymptotique de l'algorithme suivant:\n\n   ```python\n   def ajoute_élément(liste, élément):\n       liste.append(élément)\n    ```\n\n   - [x] O(1)\n   - [ ] O(log N)\n   - [ ] O(N)\n   - [ ] O(N^2)\n\n3. Quelle est la complexité asymptotique de l'algorithme suivant:\n\n   ```python\n   def mystère(liste):\n        N = len(t)\n        for i in range(N-1):\n            i_min = i\n            for j in range(i+1, N):\n                if t[j] &lt; t[i_min]:\n                    i_min = j\n            if i_min != i:\n                t[i], t[i_min] = t[i_min], t[i]\n        return t\n    ```\n\n   - [ ] O(1)\n   - [ ] O(log N)\n   - [ ] O(N)\n   - [x] O(N^2)\n\n3. Quelle est la complexité asymptotique de l'algorithme suivant:\n\n   ```python\n   def mystère(liste, élément):\n       début = 0\n       fin = len(liste)    \n       while début &lt;= fin:\n           milieu = (début + fin) // 2 \n           if liste[milieu] == élément:\n               return True\n           elif liste[milieu] &lt; élément:\n               début = milieu + 1\n           else:\n               fin = milieu - 1\n       return False\n    ```\n\n   - [ ] O(1)\n   - [x] O(log N)\n   - [ ] O(N)\n   - [ ] O(N^2)",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 5: Algorithmique",
      "Chapitre 0: Rappels",
      "Quiz"
    ]
  },
  {
    "objectID": "tg/nsi/5-algorithmique/3-algorithmes-sur-les-graphes/index.html",
    "href": "tg/nsi/5-algorithmique/3-algorithmes-sur-les-graphes/index.html",
    "title": "Chapitre 3: Algorithmes sur les graphes*",
    "section": "",
    "text": "Ce chapitre ne pourra pas faire l’objet d’une évaluation lors de l’épreuve terminale écrite et pratique de l’enseignement de spécialité. BO MENE2121274N",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 5: Algorithmique",
      "Chapitre 3: Algorithmes sur les graphes*"
    ]
  },
  {
    "objectID": "tg/nsi/5-algorithmique/3-algorithmes-sur-les-graphes/index.html#présentation-du-module-networkx",
    "href": "tg/nsi/5-algorithmique/3-algorithmes-sur-les-graphes/index.html#présentation-du-module-networkx",
    "title": "Chapitre 3: Algorithmes sur les graphes*",
    "section": "1 Présentation du module networkx",
    "text": "1 Présentation du module networkx\nPour travailler sur ce chapitre, nous allons utiliser la librairie networkx qui permet de facilement créer, manipuler et représenter les graphes en Python.\nNous n’entrerons pas dans les détails de tout ce que l’on peut faire avec cette librairie, mais nous utiliserons la classe Graph que nous instancierons sous la variable G.\nLa librairie étant écrite en anglais, il faut connaitre les traductions suivantes:\n\nSommet/Noeud: node\nArête/lien: edge\nGraphe: graph\nVoisins: neighbors\n\n\nimport matplotlib.pyplot as plt  # pour les représentations graphiques\nimport networkx as nx\n\ndef create_graph():\n    G = nx.Graph()\n\n    # Ajout des noeuds nommés dans l'ordre alphabétique\n    for ville in [\n        \"Lyon\",\n        \"Marseille\",\n        \"Montpellier\",\n        \"Nancy\",\n        \"Nice\",\n        \"Paris\",\n        \"Rennes\",\n        \"Toulouse\",\n    ]:\n        G.add_node(ville)\n\n    # Ajout des arêtes dans l'ordre alphabétique\n    for voisin in [\"Marseille\", \"Nancy\", \"Nice\", \"Paris\"]:\n        G.add_edge(\"Lyon\", voisin)\n    # Ajout des arêtes dans l'ordre alphabétique\n    for voisin in [\n        \"Montpellier\",\n        \"Nice\",\n    ]:\n        G.add_edge(\"Marseille\", voisin)\n\n    G.add_edge(\"Montpellier\", \"Toulouse\")\n    G.add_edge(\"Nancy\", \"Paris\")\n    G.add_edge(\"Paris\", \"Rennes\")\n    G.add_edge(\"Paris\", \"Toulouse\")\n    G.add_edge(\"Rennes\", \"Toulouse\")\n\n    return G\n\n\n# création du graph\nG = create_graph()\n# Représentation graphique\nnx.draw(G, with_labels=True)  # Il s'agit du graphe et non d'une carte!\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\n\n\n\n\nOn peut obtenir la matrice d’adjacence représentant le graphe.\n\nnx.to_numpy_array(G)\n\narray([[0., 1., 0., 1., 1., 1., 0., 0.],\n       [1., 0., 1., 0., 1., 0., 0., 0.],\n       [0., 1., 0., 0., 0., 0., 0., 1.],\n       [1., 0., 0., 0., 0., 1., 0., 0.],\n       [1., 1., 0., 0., 0., 0., 0., 0.],\n       [1., 0., 0., 1., 0., 0., 1., 1.],\n       [0., 0., 0., 0., 0., 1., 0., 1.],\n       [0., 0., 1., 0., 0., 1., 1., 0.]])\n\n\nMais également sous la forme d’une liste d’adjacence comme nous l’avions vu dans le chapitre sur la structure de données graphe (ou bien d’autres formes voir doc).\n\n# tous nos noeuds sont classés dans l'ordre lexicographique\nnx.to_dict_of_lists(G)\n\n{'Lyon': ['Marseille', 'Nancy', 'Nice', 'Paris'],\n 'Marseille': ['Lyon', 'Montpellier', 'Nice'],\n 'Montpellier': ['Marseille', 'Toulouse'],\n 'Nancy': ['Lyon', 'Paris'],\n 'Nice': ['Lyon', 'Marseille'],\n 'Paris': ['Lyon', 'Nancy', 'Rennes', 'Toulouse'],\n 'Rennes': ['Paris', 'Toulouse'],\n 'Toulouse': ['Montpellier', 'Paris', 'Rennes']}",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 5: Algorithmique",
      "Chapitre 3: Algorithmes sur les graphes*"
    ]
  },
  {
    "objectID": "tg/nsi/5-algorithmique/3-algorithmes-sur-les-graphes/index.html#parcourir-un-graphe",
    "href": "tg/nsi/5-algorithmique/3-algorithmes-sur-les-graphes/index.html#parcourir-un-graphe",
    "title": "Chapitre 3: Algorithmes sur les graphes*",
    "section": "2 Parcourir un graphe",
    "text": "2 Parcourir un graphe\nTous comme pour les arbres, il est possible de réaliser deux types de parcours d’un arbre:\n\nle parcours en profondeur(Depth-First Search)\nle parcours en largeur(Breadth First Search)\n\nCependant, contrairement aux arbres\n\nil n’y a pas de racine, donc on doit choisir à partir de quel noeud on part: le noeud source.\nil peut y avoir un nombre quelconque d’arêtes, et il faut donc marquer les chemins déjà empruntés lors du parcours.\n\n\n2.1 Parcours en profondeur\n\nL’exploration d’un parcours en profondeur depuis un sommet S fonctionne comme suit. Il poursuit alors un chemin dans le graphe jusqu’à un cul-de-sac ou alors jusqu’à atteindre un sommet déjà visité. Il revient alors sur le dernier sommet où on pouvait suivre un autre chemin puis explore un autre chemin (voir vidéo ci-contre). L’exploration s’arrête quand tous les sommets depuis S ont été visités. Bref, l’exploration progresse à partir d’un sommet S en s’appelant récursivement pour chaque sommet voisin de S.\n\nArticle Wikipédia sur l’Algorithme de parcours en profondeur{.cite-source}\nNous allons utiliser l’algorithme proposé sur l’article Wikipedia anglais:\nparcours_en_profondeur(G graph, s sommet)\n    marquer v comme visté\n    POUR TOUS les sommets voisins v de s FAIRE\n        SI v n'est pas marqué comme visité ALORS\n            APPELER RECURSIVEMENT parcours_en_prfondeur(G, v)\n\n\n2.2 Implémentation en Python\nIl parait préférable d’utiliser une liste d’adjacence ici puisque l’on a besoin d’accéder aux voisins fréquemment.\n\nG = create_graph()\ndg = nx.to_dict_of_lists(G)\nprint(\"Liste d'adjacence\")\nprint(\"-----------------\")\nprint(dg)\n\n\ndef parcours_profondeur(g: dict, départ: str, visités=None)-&gt;list:\n    # pour le premier appel avec la liste vide\n    if visités is None:\n        visités = [départ]\n    else:\n        # marquer s comme visté\n        visités.append(départ)\n    \n    for voisin in g[départ]:\n        if voisin not in visités:\n            parcours_profondeur(g, voisin, visités)\n    return visités\n\n\nprint(\"\\nListe des noeuds visités par notre algorithme\")\nprint(\"---------------------------------------------\")\nprint(parcours_profondeur(dg, \"Nice\"))\n\nprint(\"\\nPour rappel: Forme du graphe\")\nprint(\"------------------------------\")\nnx.draw(G, with_labels=True, pos=nx.spring_layout(G))\n&gt;&gt;sortie\n\nListe d'adjacence\n-----------------\n{'Lyon': ['Marseille', 'Nancy', 'Nice', 'Paris'], 'Marseille': ['Lyon', 'Montpellier', 'Nice'], 'Montpellier': ['Marseille', 'Toulouse'], 'Nancy': ['Lyon', 'Paris'], 'Nice': ['Lyon', 'Marseille'], 'Paris': ['Lyon', 'Nancy', 'Rennes', 'Toulouse'], 'Rennes': ['Paris', 'Toulouse'], 'Toulouse': ['Montpellier', 'Paris', 'Rennes']}\n\nListe des noeuds visités par notre algorithme\n---------------------------------------------\n['Nice', 'Lyon', 'Marseille', 'Montpellier', 'Toulouse', 'Paris', 'Nancy', 'Rennes']\n\nPour rappel: Forme du graphe\n------------------------------\n\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\n\n\n\n\n\n\n2.3 Vérification avec networkx\nLa librairie networkx implémente cette traversée avec la méthode dfs_preorder_nodes, nous allons examiner sa sortie à partir du sommet Nice pour comparer les sorties.\n\nprint(\"Liste des chemins suivis\")\nprint(\"------------------------\")\nprint(list(nx.dfs_preorder_nodes(G, source=\"Nice\")))\n&gt;&gt;sortie\n\nListe des chemins suivis\n------------------------\n['Nice', 'Lyon', 'Marseille', 'Montpellier', 'Toulouse', 'Paris', 'Nancy', 'Rennes']\n\n\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\n\nReproduire le graphe est l’annoter avec des flèches numérotées pour indiquer l’ordre de viste.\nFaire apparaitre les demi-tours(backtrack en anglais).\nProposer un autre parcours en profondeur au départ de Nice.\n\n\n\n\n\n\n\n\n2.4 Parcours en largeur\n\nL’algorithme de parcours en largeur (ou BFS, pour Breadth First Search en anglais) permet le parcours d’un graphe ou d’un arbre de la manière suivante : on commence par explorer un nœud source, puis ses successeurs, puis les successeurs non explorés des successeurs, etc. L’algorithme de parcours en largeur permet de calculer les distances de tous les nœuds depuis un nœud source dans un graphe non pondéré (orienté ou non orienté).\n\nArticle Wikipédia sur l’Algorithme de parcours en largeur{.cite-source}\nNous allons implémenter cet algorithme à l’aide d’une file:\nParcoursLargeur(Graphe G, Sommet s):\n       f = CreerFile();\n       f.enfiler(s);\n       marquer(s);\n       tant que la file est non vide\n                s = f.defiler();\n                afficher(s);\n                pour tout voisin t de s dans G\n                         si t non marqué\n                                 f.enfiler(t);\n                                 marquer(t);\n\n\n2.5 Implémentation en Python\nNous allons implémenter la fonction parcours_en_largeur proposée précedemment.\nEncore une fois je vais utiliser une liste d’adjacence pour facilement accéder aux voisins. On utilise une liste locale visités pour stocker les noeuds visités.\n\n# On importe deque pour la file\nfrom collections import deque as file\n\n# On repart d'un graphe tout neuf\nG = create_graph()\ndg = nx.to_dict_of_lists(G)\nprint(\"Liste d'adjacence\")\nprint(\"-----------------\")\nprint(dg)\n\n# parcours_largeur(Graphe G, Sommet s):\ndef parcours_largeur(G, s):\n    # f = CreerFile();\n    f = file()\n    # f.enfiler(s);\n    f.appendleft(s)\n    # marquer(s);\n    visités = [s]\n    # TANT QUE la file est non vide\n    while f:\n        # s = f.defiler();\n        s = f.pop()\n        # afficher(s);\n        # print(s)\n        # POUR TOUT voisin t de s dans G\n        for t in G[s]:\n            # SI t non marqué\n            if t not in visités:\n                # f.enfiler(t);\n                f.appendleft(t)\n                # marquer(t);\n                # marquer le sommet s\n                visités.append(t)\n                # node[\"visited\"] =  True\n    return visités\n\n\nprint(\"Liste des noeuds visités par notre algorithme\")\nprint(\"---------------------------------------------\")\nprint(parcours_largeur(dg, \"Nice\"))\n\n\nprint(\"\\nPour rappel: Forme du graphe\")\nprint(\"------------------------------\")\nnx.draw(G, with_labels=True, pos=nx.spring_layout(G))\n&gt;&gt;sortie\n\nListe d'adjacence\n-----------------\n{'Lyon': ['Marseille', 'Nancy', 'Nice', 'Paris'], 'Marseille': ['Lyon', 'Montpellier', 'Nice'], 'Montpellier': ['Marseille', 'Toulouse'], 'Nancy': ['Lyon', 'Paris'], 'Nice': ['Lyon', 'Marseille'], 'Paris': ['Lyon', 'Nancy', 'Rennes', 'Toulouse'], 'Rennes': ['Paris', 'Toulouse'], 'Toulouse': ['Montpellier', 'Paris', 'Rennes']}\nListe des noeuds visités par notre algorithme\n---------------------------------------------\n['Nice', 'Lyon', 'Marseille', 'Nancy', 'Paris', 'Montpellier', 'Rennes', 'Toulouse']\n\nPour rappel: Forme du graphe\n------------------------------\n\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\n\n\n\n\n\n\n2.6 Vérification avec networkx\nLa librairie networkx implémente cette traversée avec la méthode bfs_edges, nous allons examiner sa sortie à partir du sommet Nice pour comparer les sorties.\n\nprint(\"Liste des chemins suivis\")\nprint(\"------------------------\")\nprint(list(nx.bfs_edges(G, source=\"Nice\")))\n\nprint(\"\\nReprésentation sous forme d'arbre\")\nprint(\"---------------------------------\")\ntree = nx.bfs_tree(G, source=\"Nice\")\nnx.draw(tree, with_labels=True, pos=nx.spring_layout(G))\n&gt;&gt;sortie\n\nListe des chemins suivis\n------------------------\n[('Nice', 'Lyon'), ('Nice', 'Marseille'), ('Lyon', 'Nancy'), ('Lyon', 'Paris'), ('Marseille', 'Montpellier'), ('Paris', 'Rennes'), ('Paris', 'Toulouse')]\n\nReprésentation sous forme d'arbre\n---------------------------------\n\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\n\n\n\n\nL’ordre de parcours des chemins dépend de l’ordre dans lequel les voisins sont visités par la méthode neighbors. Cependant on observe bien que l’algorithme explore toujours tous les voisins d’un sommet avant d’avancer d’une profondeur supplémentaire.\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\n\nReproduire le graphe est l’annoter avec des flèches numérotées pour indiquer l’ordre de viste.\nProposer un autre parcours en largeur au départ de Nice.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 5: Algorithmique",
      "Chapitre 3: Algorithmes sur les graphes*"
    ]
  },
  {
    "objectID": "tg/nsi/5-algorithmique/3-algorithmes-sur-les-graphes/index.html#repérer-la-présence-dun-cycle",
    "href": "tg/nsi/5-algorithmique/3-algorithmes-sur-les-graphes/index.html#repérer-la-présence-dun-cycle",
    "title": "Chapitre 3: Algorithmes sur les graphes*",
    "section": "3 Repérer la présence d’un cycle",
    "text": "3 Repérer la présence d’un cycle\n\n\ncycle}\n\n\n\nUn cycle est une suite d’arêtes consécutives (chaine simple) dont les deux sommets extrémités sont identiques.\n\n\n\n\nDans notre graphique Nice - Marseille - Lyon forme un cycle\n\n\n\n\n\n\n\n\nEn plus\n\n\n\n\n\n\nLa détection de cycle peut-être interressante par exemple en programmation concurrente dans les systèmes d’exploitation pour détecter un interblocage(deadlock) qui se produit lorsque des processus concurrents s’attendent mutuellement.\nLes processus bloqués dans cet état le sont définitivement, il s’agit donc d’une situation catastrophique.\n\n\n\n\n\n\n3.1 Principe\nPour détecter un cycle, nous allons simplement parcourir le graphe en profondeur et vérifier qu’aucune arête pointe vers un sommet déjà visité(présence d’un backedge).\nFONCTION recherche_cycle(G graph, s sommet)\n    marquer v comme visté\n    POUR TOUS les sommets voisins v de s FAIRE\n        SI v n'est pas marqué comme visité ALORS\n            APPELER RECURSIVEMENT recherche_cycle(G, v)\n        SINON\n            # On a découvert un cycle\n            renvoyer VRAI\n    # Aucun cycle découvert après parcours complet\n    renvoyer FAUX\n\n\n3.2 Implémentation\nVoici le code proposé.\n\n# On repart d'un graphe tout neuf\nG = create_graph()\n# Transformation en liste d'adjacence\ndg = nx.to_dict_of_lists(G)\n\n\ndef recherche_cycle(G, s, vus=None):\n    # ATTENTION: Liste vide par défaut\n    # voir: https://lyceum.fr/blog/2021-04-02-comment-passer-une-liste-vide-par-defaut-a-une-fonction-en-python/\n    if vus is None:\n        vus = []\n    # on récupère la liste des voisins\n    voisins = G[s]\n    # marquer le sommet s\n    vus.append(s)\n    # POUR TOUT sommet t voisin du sommet s\n    for t in voisins:\n        if t in vus:\n            return True\n        # SI t n'est pas marqué ALORS\n        else:\n            recherche_cycle(G, t, vus)\n    return False\n\n\nprint(\"Présence d'un cycle\")\nprint(\"-------------------\")\nprint(recherche_cycle(dg, \"Nice\"))\n\n# Test de la fonction à partir de tous les noeuds de départ\nfor node in G.nodes:\n    # networkx est capable de trouver des cycles\n    assert nx.find_cycle(G, source=node)\n    # on teste notre fonction maintenant\n    assert node, recherche_cycle(dg, node)\n\nprint(\"\\nPour rappel: Forme du graphe\")\nprint(\"----------------------------\")\nnx.draw(G, with_labels=True, pos=nx.spring_layout(G))\n&gt;&gt;sortie\n\nPrésence d'un cycle\n-------------------\nTrue\n\nPour rappel: Forme du graphe\n----------------------------\n\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\n\n\n\n\n\n# Nous supprimons quelques arêtes pour\n# retirer les cycles et tester la fonction\ndef create_acyclic_graph():\n    G = create_graph()\n    G.remove_edge(\"Nice\", \"Lyon\")\n    G.remove_edge(\"Nancy\", \"Lyon\")\n    G.remove_edge(\"Paris\", \"Rennes\")\n    G.remove_edge(\"Toulouse\", \"Montpellier\")\n    return G\n\n\nG = create_acyclic_graph()\n# Transformation en liste d'adjacence\ndg = nx.to_dict_of_lists(G)\n\nprint(\"Présence d'un cycle\")\nprint(\"-------------------\")\n\nprint(recherche_cycle(dg, \"Paris\"))\n\n# Test de la fonction à partir de tous les noeuds de départ\nfor node in G.nodes:\n    try:\n        nx.find_cycle(G, source=node)\n        assert False\n    except nx.NetworkXNoCycle:\n        pass\n    G = create_acyclic_graph()\n    assert not recherche_cycle(dg, node)\n\nprint(\"\\nPour rappel: Forme du graphe\")\nprint(\"----------------------------\")\nnx.draw(G, with_labels=True, pos=nx.spring_layout(G))\n&gt;&gt;sortie\n\nPrésence d'un cycle\n-------------------\nFalse\n\nPour rappel: Forme du graphe\n----------------------------\n\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\n\n\n\n\n\n\n\n\n\n\n\nEn plus: Recherche d'un cycle dans un graphe orienté\n\n\n\n\n\n\nLa recherche d’un cycle dans un graphe orienté et plus délicate, on utilise classiquement un système de trois couleurs NOIR GRIS BLANC lors du parcours du graphe.\n\nBLANC: le sommet n’est pas encore traité. Au départ, tous les sommets sont BLANC.\nGRIS: le sommet est en cours de traitement (le parcours en profondeur pour ce sommet a commencé, mais pas terminé, ce qui signifie que tous les descendants (dans l’arborescence du parcours) de ce sommet ne sont pas encore traités.\nNOIR: le sommet et tous ses descendants sont traités. Si une arête est rencontrée entre le sommet actuel et un sommet GRIS, alors cette arête est l’arête arrière et il y a donc un cycle.\n\nArticle geek for geeks en anglais",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 5: Algorithmique",
      "Chapitre 3: Algorithmes sur les graphes*"
    ]
  },
  {
    "objectID": "tg/nsi/5-algorithmique/3-algorithmes-sur-les-graphes/index.html#chercher-un-chemin-dans-un-graphe",
    "href": "tg/nsi/5-algorithmique/3-algorithmes-sur-les-graphes/index.html#chercher-un-chemin-dans-un-graphe",
    "title": "Chapitre 3: Algorithmes sur les graphes*",
    "section": "4 Chercher un chemin dans un graphe",
    "text": "4 Chercher un chemin dans un graphe\nLa recherche de chemin(pathfinding), et un domaine important de recherche dans le développement de l’intelligence artificielle et de la robotique.\n\n4.1 Plus court chemin dans un graphe non pondéré\nLe plus court chemin à travers un graphe non pondéré est utilisé dans le protocole réseau RIP.\nIl se base simplement sur un parcours en largeur pour s’assurer que le nombre d’arêtes traversées est minimum.\nSi le sommet est rencontré, on renverra le chemin suivi.\nPour cela on ajoute à notre algorithme un dictionnaire qui stocke la liste des prédecesseurs lors du parcours.\n\n# On repart d'un graphe tout neuf\nG = create_graph()\n# On crée la liste d'adjacence\ndg = nx.to_dict_of_lists(G)\n\n# FONCTION plus court chemin(Graphe G, Sommet s, Destination d):\ndef plus_court_chemin(G, s, d):\n    # dictionnaire des prédecesseurs\n    prédecesseurs = {s: None}\n    # f = CreerFile();\n    f = file()\n    # f.enfiler(s);\n    f.appendleft(s)\n    # marquer(s);\n    visités = [s]\n    # TANT QUE la file est non vide\n    while f:\n        # On récupère le noeud\n        s = f.pop()\n        # POUR TOUT voisin t de s dans G\n        for t in G[s]:\n            if t == d:\n                # Destination trouvée, on remonte le chemin\n                ville = s\n                chemin = [d]\n                while ville:\n                    chemin.append(ville)\n                    ville = prédecesseurs[ville]\n                # On remet dans l'ordre\n                chemin.reverse()\n                return chemin\n            # SI t non marqué\n            elif t not in visités:\n                # f.enfiler(t);\n                f.appendleft(t)\n                # marquer(t);\n                visités.append(t)\n                # màJ du dictionnaire de prédecesseurs\n                prédecesseurs[t] = s\n    # Destination non trouvée\n    return []\n\n\nprint(\"On teste sur tous les trajets possibles\")\nprint(\"---------------------------------------\")\nvilles = G.nodes\nfrom itertools import combinations\n\nfor source, dest in combinations(villes, 2):\n    chemin = plus_court_chemin(dg, source, dest)\n    print(f\"{source} -&gt; {dest}: {chemin}\")\n\nprint(\"\\nSi la destination n'est pas trouvée\")\nprint(\"-----------------------------------\")\nsource, dest = \"Nice\", \"Tokyo\"\nchemin = plus_court_chemin(dg, source, dest)\nprint(f\"{source} -&gt; {dest}: {chemin}\")\n\n\nprint(\"\\nPour vérification: Forme du graphe\")\nprint(\"------------------------------------\")\nnx.draw(G, with_labels=True, pos=nx.spring_layout(G))\n&gt;&gt;sortie\n\nOn teste sur tous les trajets possibles\n---------------------------------------\nLyon -&gt; Marseille: ['Lyon', 'Marseille']\nLyon -&gt; Montpellier: ['Lyon', 'Marseille', 'Montpellier']\nLyon -&gt; Nancy: ['Lyon', 'Nancy']\nLyon -&gt; Nice: ['Lyon', 'Nice']\nLyon -&gt; Paris: ['Lyon', 'Paris']\nLyon -&gt; Rennes: ['Lyon', 'Paris', 'Rennes']\nLyon -&gt; Toulouse: ['Lyon', 'Paris', 'Toulouse']\nMarseille -&gt; Montpellier: ['Marseille', 'Montpellier']\nMarseille -&gt; Nancy: ['Marseille', 'Lyon', 'Nancy']\nMarseille -&gt; Nice: ['Marseille', 'Nice']\nMarseille -&gt; Paris: ['Marseille', 'Lyon', 'Paris']\nMarseille -&gt; Rennes: ['Marseille', 'Lyon', 'Paris', 'Rennes']\nMarseille -&gt; Toulouse: ['Marseille', 'Montpellier', 'Toulouse']\nMontpellier -&gt; Nancy: ['Montpellier', 'Marseille', 'Lyon', 'Nancy']\nMontpellier -&gt; Nice: ['Montpellier', 'Marseille', 'Nice']\nMontpellier -&gt; Paris: ['Montpellier', 'Toulouse', 'Paris']\nMontpellier -&gt; Rennes: ['Montpellier', 'Toulouse', 'Rennes']\nMontpellier -&gt; Toulouse: ['Montpellier', 'Toulouse']\nNancy -&gt; Nice: ['Nancy', 'Lyon', 'Nice']\nNancy -&gt; Paris: ['Nancy', 'Paris']\nNancy -&gt; Rennes: ['Nancy', 'Paris', 'Rennes']\nNancy -&gt; Toulouse: ['Nancy', 'Paris', 'Toulouse']\nNice -&gt; Paris: ['Nice', 'Lyon', 'Paris']\nNice -&gt; Rennes: ['Nice', 'Lyon', 'Paris', 'Rennes']\nNice -&gt; Toulouse: ['Nice', 'Lyon', 'Paris', 'Toulouse']\nParis -&gt; Rennes: ['Paris', 'Rennes']\nParis -&gt; Toulouse: ['Paris', 'Toulouse']\nRennes -&gt; Toulouse: ['Rennes', 'Toulouse']\n\nSi la destination n'est pas trouvée\n-----------------------------------\nNice -&gt; Tokyo: []\n\nPour vérification: Forme du graphe\n------------------------------------\n\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\n\n\n\n\n\n\n4.2 Plus court chemin dans un graphe pondéré\nSouvent, on s’intéressera plus précisément à la recherche du plus court chemin sur des graphes pondérés, c’est-à-dire sur lesquelles on ajoute un poids à l’arête, dans notre exemple, on pourrait ajouter les temps ou distance des routes entre chaque ville.\nOn peut également citer le protocole réseau OSPF qui vise à optimiser les vitesses de transmission à travers les réseaux.\nIl existe deux principaux algorithmes de plus court chemin, cette vidéo, vous présente l’algorithme de Dijkstra.\n\n\n\n\n\n\n\nEn plus\n\n\n\n\n\n\nVidéo servie sans cookie via yewtu.be\n\n\n\n\n\n\nUn article très détaillé et illustré est disponible à cette adresse: https://perso.liris.cnrs.fr/vincent.nivoliers/lifap6/Supports/Cours/graph_traversal.html\n\n\n\nArticle Wikipédia sur l’Algorithme de parcours en profondeur\nArticle Wikipédia sur l’Algorithme de parcours en largeur",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 5: Algorithmique",
      "Chapitre 3: Algorithmes sur les graphes*"
    ]
  },
  {
    "objectID": "tg/nsi/5-algorithmique/4-programmation-dynamique/exo/index.html",
    "href": "tg/nsi/5-algorithmique/4-programmation-dynamique/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Aucun exercice pour l’instant.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 5: Algorithmique",
      "Chapitre 4: Programmation dynamique*",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/5-algorithmique/4-programmation-dynamique/quiz/index.html",
    "href": "tg/nsi/5-algorithmique/4-programmation-dynamique/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 5: Algorithmique",
      "Chapitre 4: Programmation dynamique*",
      "Quiz"
    ]
  },
  {
    "objectID": "tg/nsi/5-algorithmique/1-algorithmes-sur-les-arbres-binaires/index.html",
    "href": "tg/nsi/5-algorithmique/1-algorithmes-sur-les-arbres-binaires/index.html",
    "title": "Chapitre 1: Algorithmes sur les arbres binaires",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nAlgorithmes sur les arbres binaires et sur les arbres binaires de recherche.\nCalculer la taille et la hauteur d’un arbre.\nParcourir un arbre de différentes façons (ordres infixe, préfixe ou suffixe ; ordre en largeur d’abord).\nRechercher une clé dans un arbre de recherche, insérer une clé.\nUne structure de données récursive adaptée est utilisée.\nL’exemple des arbres permet d’illustrer la programmation par classe.\nLa recherche dans un arbre de recherche équilibré est de coût logarithmique.\nDans ce chapitre nous allons voir quelques algorithmes classiques sur les arbres:",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 5: Algorithmique",
      "Chapitre 1: Algorithmes sur les arbres binaires"
    ]
  },
  {
    "objectID": "tg/nsi/5-algorithmique/1-algorithmes-sur-les-arbres-binaires/index.html#description-de-la-structure-de-données",
    "href": "tg/nsi/5-algorithmique/1-algorithmes-sur-les-arbres-binaires/index.html#description-de-la-structure-de-données",
    "title": "Chapitre 1: Algorithmes sur les arbres binaires",
    "section": "1 Description de la structure de données",
    "text": "1 Description de la structure de données\nPour représenter les arbres, nous allons décrire l’arbre à partir d’une classe Node récursive avec les attributs suivants:\n\nvalue: valeur ou clé du nœud de type numérique,\nleft: sous-arbre gauche de type Node,\nright: sous-arbre droit de type Node,\n\nCette structure de données est récursive car les attributes left et right de l’objet Node sont eux-mêmes de type Node.\n\n\n\n\n\n\n\nEn plus\n\n\n\n\n\n\nLa syntaxe utilisée est basée sur le package python binarytree ce qui à l’inconvénient d’être en anglais, mais qui nous permettra de programmer et tester facilement nos algorithmes en Python.\n\n\n\n\n\n\nfrom binarytree import Node, tree\n# On peut facilement créer un arbre aléatoire\nmon_arbre = tree(height=3)\n\n# L'affichage de l'arbre est aisé\nprint(\"Arbre aléatoire\")\nmon_arbre\n&gt;&gt;sortie\n\nArbre aléatoire\n\n&gt;&gt;sortie\n\nAttributeError: 'Digraph' object has no attribute '_repr_svg_'\n\n\nNode(11)\n\n\n\n# ou créer l'arbre de toutes pièces\narbre = Node(3)\narbre.left = Node(2)\narbre.left.left = Node(1)\narbre.left.right = Node(4)\narbre.left.right.right = Node(5)\narbre.right = Node(6)\nprint(\"A la main\")\narbre\n&gt;&gt;sortie\n\nA la main\n\n&gt;&gt;sortie\n\nAttributeError: 'Digraph' object has no attribute '_repr_svg_'\n\n\nNode(3)",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 5: Algorithmique",
      "Chapitre 1: Algorithmes sur les arbres binaires"
    ]
  },
  {
    "objectID": "tg/nsi/5-algorithmique/1-algorithmes-sur-les-arbres-binaires/index.html#calculer-la-taille-de-larbre",
    "href": "tg/nsi/5-algorithmique/1-algorithmes-sur-les-arbres-binaires/index.html#calculer-la-taille-de-larbre",
    "title": "Chapitre 1: Algorithmes sur les arbres binaires",
    "section": "2 Calculer la taille de l’arbre",
    "text": "2 Calculer la taille de l’arbre\nPour rappel, voici la définition vue dans le chapitre P1C4 sur les arbres binaires.\n\n\nTaille d’un arbre\n\n\n\nLa taille d’un arbre est son nombre de nœuds.\n\n\n\nNous allons utiliser une fonction recursive.\nA chaque appel, on renvoie 1 + taille(gauche(A)) + taille(droite(A)).\nDans le cas de base, en cas d’absence de noeud, on renvoie 0.\nVoici le pseudo-code correspondant à cette fonction:\ntaille(Arbre A) :\n    Si A vide\n        retourner 0\n    retourner 1 + taille(gauche(A)) + taille(droite(A))\nEt voici l’implémentation de cette fonction en Python en utilisant la classe binarytree.Node pour représenter les arbres binaires.\n\ndef taille(arbre):\n    \"\"\"Fonction récursive renvoyant la taille d'un arbre\n    \n    Arguments\n    ---------\n    arbre: Arbre Binaire\n        Le noeud racine de l'arbre\n    \n    Returns\n    -------\n    int\n        La taille de l'arbre\n    \"\"\"\n    # Cas de base \n    if not(arbre):\n        return 0\n    else:\n        # print(arbre)\n        return 1 + taille(arbre.left) + taille(arbre.right)\n  \n\nprint(\"taille:\", taille(mon_arbre))\nmon_arbre\n&gt;&gt;sortie\n\ntaille: 9\n\n&gt;&gt;sortie\n\nAttributeError: 'Digraph' object has no attribute '_repr_svg_'\n\n\nNode(11)",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 5: Algorithmique",
      "Chapitre 1: Algorithmes sur les arbres binaires"
    ]
  },
  {
    "objectID": "tg/nsi/5-algorithmique/1-algorithmes-sur-les-arbres-binaires/index.html#calculer-la-hauteur-de-larbre",
    "href": "tg/nsi/5-algorithmique/1-algorithmes-sur-les-arbres-binaires/index.html#calculer-la-hauteur-de-larbre",
    "title": "Chapitre 1: Algorithmes sur les arbres binaires",
    "section": "3 Calculer la hauteur de l’arbre",
    "text": "3 Calculer la hauteur de l’arbre\nPour rappel, voici la définition vue dans le chapitre P1C4 sur les arbres binaires.\n\n\nHauteur d’un arbre\n\n\n\nLa hauteur d’un arbre est la plus grande profondeur d’une feuille de l’arbre.\n\n\n\nA chaque appel, on va renvoyer le maximum des hauteurs des sous-arbres: 1 + hauteur(node.left), hauteur(node.right)).\nMais comme toute fonction recursive, il faut un cas de base qui ne nécessite pas le rappel de la fonction(sans quoi on aurait une boucle infinie). Ce cas est l’absence de noeud, cela signifie que le noeud parent était une feuille, et renvoie -1 pour diminuer la hauteur accumulée de 1.\nVoici le pseudo-code correspondant à cette fonction:\nhauteur(Arbre A) :\n    Si A vide\n        retourner - 1\n    retourner 1 + max(hauteur(gauche(A)), hauteur(droite(A)))\nEt voici l’implémentation de cette fonction en Python en utilisant la classe binarytree.Node pour représenter les arbres binaires.\n\ndef hauteur(arbre):\n    \"\"\"Fonction récursive renvoyant la hauteur d'un arbre\n    \n    Arguments\n    ---------\n    arbre: Arbre binaire\n        Le noeud racine de l'arbre\n    \n    Returns\n    -------\n    int\n        La hauteur de l'arbre\n    \"\"\"\n    # Cas de base \n    if not(arbre):\n        return -1\n    else:\n        # print(arbre)\n        return 1 + max(hauteur(arbre.left), hauteur(arbre.right))\n        \nprint(\"hauteur:\", hauteur(mon_arbre))\nmon_arbre\n&gt;&gt;sortie\n\nhauteur: 3\n\n&gt;&gt;sortie\n\nAttributeError: 'Digraph' object has no attribute '_repr_svg_'\n\n\nNode(11)\n\n\nN’hésitez pas à décommenter le print pour observer les arbres sur lesquels sont appelés cette fonction.\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nSchématiser la pile d’appels de la fonction récursive utilisée pour obtenir ce résultat.",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 5: Algorithmique",
      "Chapitre 1: Algorithmes sur les arbres binaires"
    ]
  },
  {
    "objectID": "tg/nsi/5-algorithmique/1-algorithmes-sur-les-arbres-binaires/index.html#parcours-de-larbre",
    "href": "tg/nsi/5-algorithmique/1-algorithmes-sur-les-arbres-binaires/index.html#parcours-de-larbre",
    "title": "Chapitre 1: Algorithmes sur les arbres binaires",
    "section": "4 Parcours de l’arbre",
    "text": "4 Parcours de l’arbre\nNous allons voir quatre méthodes de parcours des arbres, en fonction de l’ordre dans lequel on parcourt les noeuds:\n\nparcours préfixe\nparcours postfixe\nparcours infixe\nparcours en largeur\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nComparaisons des parcours d’arbres\n\n\n\n4.1 Parcours préfixe\nDans cet ordre, chaque nœud est visité puis chacun de ses fils.\nVoici le pseudo-code extrait de l’article Wikipedia sur les arbres.\nparcours_préfixe(Arbre A) :\n    visiter (A)\n    Si nonVide (gauche(A))\n          parcours_préfixe(gauche(A))\n    Si nonVide (droite(A))\n          parcours_préfixe(droite(A))\n\n\n4.2 Parcours infixe\nOn visite chaque nœud entre les nœuds de son sous-arbre de gauche et les nœuds de son sous-arbre de droite. C’est une manière assez commune de parcourir un arbre binaire de recherche, car il donne les valeurs dans l’ordre croissant.\nVoici le pseudo-code extrait de l’article Wikipedia sur les arbres.\nparcours_infixe(Arbre A) :\n    Si nonVide(gauche(A))\n       parcours_infixe(gauche(A))\n    visiter(A)\n    Si nonVide(droite(A))\n       parcours_infixe(droite(A))\n\n\n4.3 Parcours postfixe\nOn affiche chaque nœud après avoir affiché chacun de ses fils.\nVoici le pseudo-code extrait de l’article Wikipedia sur les arbres.\nparcours_postfixe(Arbre A) :\n    Si nonVide(gauche(A))\n       parcours_postfixe(gauche(A))\n    Si nonVide(droite(A))\n       parcours_postfixe(droite(A))\n    visiter(A)\n\n\n4.4 Parcours en largeur\nOn parcours les noeuds de gauche à droite étage par étage, comme si on «lisait» l’arbre.\nVoici le pseudo-code issu de l’article Wikipedia sur les arbres.\nCe code n’est pas recusrif et a la particularité d’utiliser une structure de file avec les méthodes enfiler et défiler.\nparcours_largeur(Arbre A) \n   f = FileVide\n   enfiler(Racine(A), f)\n   Tant que (f != FileVide) \n       nœud = defiler(f)\n       Visiter(nœud)                        // On fait une opération\n       Si (gauche(nœud) != null) Alors\n           enfiler(gauche(nœud), f)\n       Si (droite(nœud) != null) Alors\n           enfiler(droite(nœud), f)\nVoici un exemple d’implémentation en Python utilisant une liste en guise de file avec les méthodes:\n\nlist.insert(0, el), pour enfiler l’élément à l’index 0.\nlist.pop(), pour supprimer et renvoyer le dernier élément de la file(le défiler).\n\n\ndef parcours_largeur(arbre):\n    f = []\n    f.insert(0, arbre)\n    while f:\n        noeud = f.pop()\n        print(noeud.value)\n        if noeud.left:\n            f.insert(0, noeud.left)\n        if noeud.right:\n            f.insert(0, noeud.right)\n\nprint(\"Parcours en largeur\")\nparcours_largeur(mon_arbre)\nmon_arbre\n&gt;&gt;sortie\n\nParcours en largeur\n11\n5\n10\n14\n13\n8\n3\n0\n12\n\n&gt;&gt;sortie\n\nAttributeError: 'Digraph' object has no attribute '_repr_svg_'\n\n\nNode(11)",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 5: Algorithmique",
      "Chapitre 1: Algorithmes sur les arbres binaires"
    ]
  },
  {
    "objectID": "tg/nsi/5-algorithmique/1-algorithmes-sur-les-arbres-binaires/index.html#arbre-binaire-de-recherche",
    "href": "tg/nsi/5-algorithmique/1-algorithmes-sur-les-arbres-binaires/index.html#arbre-binaire-de-recherche",
    "title": "Chapitre 1: Algorithmes sur les arbres binaires",
    "section": "5 Arbre binaire de recherche",
    "text": "5 Arbre binaire de recherche\nComme nous l’avons vu dans le chapitre sur les arbres de la partie structure de données,\n\nun arbre binaire de recherche permet des opérations rapides pour rechercher une clé, insérer ou supprimer une clé.\n\nPour rappel:\n\n\nArbre binaire de recherche\n\n\n\nIl s’agit d’un arbre binaire dans lequel toutes les valeurs dans le sous-arbre gauche d’un nœud sont inférieures à la valeur à la racine de l’arbre et toutes les valeurs dans le sous-arbre droit d’un nœud sont supérieures ou égales à la valeur à la racine de l’arbre.\n\n\n\nNous allons voir les algorithmes permettant la recherche et l’insertion d’une clé.\nEncore une fois nous utiliserons le package binarytree qui permet de facilementcréer des arbres binaires grâce à la fonction bst(binary search tree).\n\nfrom binarytree import bst\nabr = bst(height=3)\nabr\n&gt;&gt;sortie\n\nAttributeError: 'Digraph' object has no attribute '_repr_svg_'\n\n\nNode(7)\n\n\n\n5.1 Recherche d’une clé\nPuisque ce type d’arbre est trié, nous pouvons utiliser une méthode de recherche dichotomique telle que nous l’avions vu en première.\nOn peut ainsi éliminer la moitié de l’arbre à chaque itération et la complexité est log(n)log(n) si l’arbre est équilibré.\nVoici le pseudo code de cet algorithme.\nfonction recherche(a: abr, clé: élément)\n\n        Si a vide\n            retourner Faux\n\n        Sinon\n            e = étiquette de a\n            Si e == clé \n                retourner Vrai\n            Sinon si e &lt; clé\n                retourner recherche(gauche(a), clé)\n            Sinon\n                retourner recherche(droite(a), clé)\n\nImplémenter cet algorithme en Python en utilisant le module binarytree.\n\n\n\n5.2 Insertion d’une clé\n\nL’insertion d’un nœud commence par une recherche : on cherche la clé du nœud à insérer ; lorsqu’on arrive à une feuille, on ajoute le nœud comme fils de la feuille en comparant sa clé à celle de la feuille : si elle est inférieure, le nouveau nœud sera à gauche ; sinon il sera à droite.\n\nfonction insertion(a: ABR, clé: élément)\n        Si a vide\n            retourner ABR(clé, vide, vide)\n            \n        Sinon\n            e = étiquette de a\n            Si e &lt; clé\n                retourner ABR(e, insertion(gauche(a), clé), droite(a))\n            Sinon\n                retourner ABR(e, gauche(a), insertion(droite(a), clé))\nABR sur Wikipedia\nOn peut traduire cet algorithme en Python de cette façon:\n\ndef insertion(abr, clé):\n    \"\"\"Insertion de la clé dans l'arbre abr\n    \n    Arguments\n    ---------\n    abr: binarytree.Node\n        l'arbre dans lequel doit être inséré la clé\n    clé: Number\n        La cle à insérer\n    \n    Returns\n    -------\n    binarytree.Node\n        l'arbre modifié\n    \"\"\"\n    if not(abr):\n        return Node(clé)\n    e = abr.value\n    if clé &lt; e:\n        return Node(value=e,\n                    left=insertion(abr.left, clé),\n                    right=abr.right)\n    else:\n        return Node(value=e,\n                    left=abr.left,\n                    right=insertion(abr.right, clé))\n\nprint(\"Arbre initial\")\nabr = bst()\nabr\n&gt;&gt;sortie\n\nArbre initial\n\n&gt;&gt;sortie\n\nAttributeError: 'Digraph' object has no attribute '_repr_svg_'\n\n\nNode(2)\n\n\n\n# Insertion de l'élément 7\nabr2 = insertion(abr, 7)\nabr2\n&gt;&gt;sortie\n\nAttributeError: 'Digraph' object has no attribute '_repr_svg_'\n\n\nNode(2)\n\n\n\n\nArticle Wikipedia sur les arbres\nArticle Wikipedia sur les arbres binaires de recherche",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 5: Algorithmique",
      "Chapitre 1: Algorithmes sur les arbres binaires"
    ]
  },
  {
    "objectID": "tg/nsi/5-algorithmique/index.html",
    "href": "tg/nsi/5-algorithmique/index.html",
    "title": "Partie 5: Algorithmique",
    "section": "",
    "text": "Chapitre 0: Rappels\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 1: Algorithmes sur les arbres binaires\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 2: Diviser pour régner\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 3: Algorithmes sur les graphes*\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 4: Programmation dynamique*\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 5: Recherche textuelle*\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAucun article correspondant",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 5: Algorithmique"
    ]
  },
  {
    "objectID": "tg/nsi/5-algorithmique/2-diviser-pour-regner/index.html",
    "href": "tg/nsi/5-algorithmique/2-diviser-pour-regner/index.html",
    "title": "Chapitre 2: Diviser pour régner",
    "section": "",
    "text": "Programme",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 5: Algorithmique",
      "Chapitre 2: Diviser pour régner"
    ]
  },
  {
    "objectID": "tg/nsi/5-algorithmique/2-diviser-pour-regner/index.html#complexité-des-algorithmes-de-tri",
    "href": "tg/nsi/5-algorithmique/2-diviser-pour-regner/index.html#complexité-des-algorithmes-de-tri",
    "title": "Chapitre 2: Diviser pour régner",
    "section": "1 Complexité des algorithmes de tri",
    "text": "1 Complexité des algorithmes de tri\nEn première, nous avons vu deux algorithmes peu performants:\n\nle tri par sélection qui a une complexité quadratique dans le pire des cas, le meilleur des cas et en moyenne.\nle tri par insertion qui a une complexité linéaire dans le meilleur des cas, et quadratique dans le pire des cas et en moyenne.\n\nCes algorithmes ne sont pas utilisés en pratique, car peu efficaces. En effet, il a été prouvé que dans le pire des cas et en moyenne, on pouvait au mieux obtenir une complexité O(nlog(n)O(n \\log(n).\nCela fait une grande différence car log(n)⋘n\\log(n) \\lll n, en effet:\n\nlog(n)=10\\log(n) = 10 pour n=210=1024n = 2^{10} = 1024\nlog(n)=100\\log(n) = 100 pour n=2100=1267650600228229401496703205376n = 2^{100} = 1267650600228229401496703205376\n\nOn avait déjà rencontré ce type d’améliorations entre la recherche en table et la recherche dichotomique qui utilisait le principe «Diviser pour régner».",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 5: Algorithmique",
      "Chapitre 2: Diviser pour régner"
    ]
  },
  {
    "objectID": "tg/nsi/5-algorithmique/2-diviser-pour-regner/index.html#le-principe-de-diviser-pour-régner",
    "href": "tg/nsi/5-algorithmique/2-diviser-pour-regner/index.html#le-principe-de-diviser-pour-régner",
    "title": "Chapitre 2: Diviser pour régner",
    "section": "2 Le principe de diviser pour régner",
    "text": "2 Le principe de diviser pour régner\nLe principe de diviser pour régner consiste à ramener la résolution d’un problème sur N données à la résolution d’un problème sur la moitié des données et poursuivre ce découpage jusqu’à ce que le problème devienne évident(par exemple trier un tableau d’une donnée). Une fois que les solutions des sous problèmes ont été trouvées, on les combine pour obtenir la solution du problème complet.\n\n\nDiviser : découper un problème initial en sous-problèmes ;\nRégner : résoudre les sous-problèmes (récursivement ou directement s’ils sont assez petits) ;\nCombiner : calculer une solution au problème initial à partir des solutions des sous-problèmes.\n\n\nArticle Wikipedia Diviser pour régner\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nAu lieu de trier la liste entière, nous allons couper la liste en plus petites listes qui seront faciles à trier. On combinera ensuite les petites listes triées obtenues en une seule.©  CC BY-SA 4.0 via Wikimedia Commons",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 5: Algorithmique",
      "Chapitre 2: Diviser pour régner"
    ]
  },
  {
    "objectID": "tg/nsi/5-algorithmique/2-diviser-pour-regner/index.html#le-tri-fusion",
    "href": "tg/nsi/5-algorithmique/2-diviser-pour-regner/index.html#le-tri-fusion",
    "title": "Chapitre 2: Diviser pour régner",
    "section": "3 Le tri fusion",
    "text": "3 Le tri fusion\nLe tri fusion s’appuie sur le fait que fusionner deux tableaux triés en un tableau trié se fait en un temps linéaire O(n)O(n).\n\nPour fusionner ces deux tableaux triés:\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nFusion de deux tableaux à 3 et 4 éléments\n\n\nIl suffit d’une itération sur les deux listes en même temps donc O(n)O(n) ici 5 itérations pour une liste de 7 éléments:\n\nOn considère 3 et 9, on place 3, et on avance sur la 1ère liste.\nOn considère 27 et 9, on place 9, et on avance sur la 2e liste.\nOn considère 27 et 10, on place 10, …\nOn considère 27 et 82, on place 27, …\nOn considère 38 et 82, on place 38, …\nOn considère 43 et 82, on place 43, et on voit qu’on est arrivé au bout de la première liste On place maintenant tous les éléments restants de la deuxième liste.\n\n\nD’autre part, le découpage récursif d’un tableau jusqu’à arriver au cas terminal : tableau trié d’un seul élément est en log(n)\\log(n). Ce qui fait bien une complexité en O(nlog(n))O(n\\log(n)), on ne peut pas faire mieux.\nOn va donc séparer notre algorithme en deux fonctions, une qui réalise la fusion et l’autre qui réalise la récursion du tri(le découpage). Ces deux opérations sont symbolisées sur l’illustration ci-dessous:\n\nrouge: division\nvert: fusion.\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nUne fois la liste découpée, le problème du tri est simple car un tableau de un élément est forcément trié! Il ne reste alors plus qu'à fusionner. Public domain via Wikimedia Commons\n\n3.1 Algorithme de fusion\nVoici l’algorithme de fusion de deux tableaux triés en un seul.\nTout d’abord en pseudo-code:\nfonction fusion(tbl1: Tableau, tbl2: Tableau)\n    // tbl1 et tbl2 sont deux tableaux triés\n    \n    // Initialisation\n    i1 &lt;- 0   // indice du 1er tableau\n    i2 &lt;- 0   // indice du 2e tableau\n    tbl &lt;- []   // liste vide destinée à accueillir les éléments triés\n\n    // Boucle\n    TANT QUE l'on a pas atteint la fin d'un des tableaux\n        SI tbl1[i1] &lt;= tbl2[i2] ALORS\n            Insérer tbl1[i1] à la fin de tbl\n            incrémenter i1\n        SINON\n            Insérer tbl2[i2] à la fin de tbl\n            incrémenter i2\n        FIN SI\n    FIN TANT QUE\n    \n    // Finalisation\n    // Insérer les éléments restants du tableau non vide à la fin de tbl\n    SI i1 &lt; longueur de tbl1 ALORS\n        Insérer tous les éléments restants de tbl1 à la fin de tbl\n    SINON SI i2 &lt; longueur de tbl2 ALORS\n        Insérer tous les éléments restants de tbl2 à la fin de tbl\n    \n    RENVOYER tbl\nEt voici une implémentation en python:\ndef fusion (tbl1: list, tbl2: list) -&gt; list:\n    # Initialisation\n    N1, N2 = len(tbl1), len(tbl2)\n    i1 = 0\n    i2 = 0\n    tbl = []\n\n    # Boucle sur les deux tableaux\n    while (i1 &lt; N1) and (i2 &lt; N2):\n        x1, x2 = tbl1[i1], tbl2[i2]\n        # si x1 &lt; x2  on ajoute l'élément x1 à tbl\n        if x1 &lt;= x2:\n            tbl.append(x1)\n            i1 = i1 + 1\n        # sinon on ajoute l'élément x2\n        else:\n            tbl.append(x2)\n            i2 = i2 + 1\n\n    # Finalisation: On ajoute les éléments restants du tableau non vide restant\n    # Si tbl1 n'a pas été entièrement vidé, on ajoute ses éléments restants\n    if i1 &lt; N1:\n        for i in range(i1, N1):\n            tbl.append(tbl1[i])\n    # Sinon on ajoute les éléments de tbl2 restants\n    elif i2 &lt; N2:\n        for i in range(i2, N2):\n            tbl.append(tbl2[i])\n        \n    return tbl\nUn petit test dans la console ipython permet de vérifier sur un cas simple la fusion:\n&gt;&gt;&gt; fusion([3,6,8], [2,5,7,12])\n[2, 3, 5, 6, 7, 8, 12]\n\n\n3.2 Algorithme de tri fusion\nVoici l’algorithme récursif de tri fusion qui utilise la fonction fusion définie précédemment.\nTout d’abord en pseudo-code, on retrouve des techniques de découpage du tableau en deux avec des divisions entières // vues dans la recherche dichotomique.\nfonction tri_fusion(tbl: Tableau)\n    N &lt;- Longueur de tbl\n\n    // Cas terminal: une liste de un élément est forcément triée\n    SI N == 1 ALORS\n        RENVOYER tbl\n    FIN SI\n\n    // Recursion sur les deux demi-tableaux sinon\n    tbl1 &lt;- liste des N//2 premiers éléments de tbl\n    tbl2 &lt;- liste des N//2 derniers éléments de tbl\n\n    // Renvoi des la fusion des deux tableaux\n    RENVOYER fusion(tri_fusion(tbl1), tri_fusion(tbl2))\n\nEt voici une implémentation en python qui utilise les listes en compréhension:\ndef tri_fusion (tbl: list) -&gt; list:\n    N = len(tbl)\n    # cas de base: un tableau de zéro ou un élément est forcément trié!\n    if N &lt; 2:\n        return tbl\n    \n    # on coupe le tableau en deux\n    tbl1 = [tbl[i] for i in range(N//2)]\n    tbl2 = [tbl[i] for i in range(N//2, N)]\n    \n    # appels récursifs\n    return fusion(tri_fusion(tbl1), tri_fusion(tbl2))\nOn fait un petit test sur une liste quelconque.\n&gt;&gt;&gt; tri_fusion([0, 25, 36, 41, 1, 465, 2, 3, 987])\n[0, 1, 2, 3, 25, 36, 41, 465, 987]\n\n\n3.3 Conclusion\nNous avons vu dans ce chapitre un algorithme particulièrement élégant et efficace pour trier des éléments. Bien sûr, dans la pratique des contraintes de mémoire peuvent intervenir, et là au contraire cet algorithme se révélera peu performant, car l’utilisation de la récursivité et du tableau intermédiaire le rend très gourmand en mémoire.\nLa méthode «diviser pour régner» est une méthode très efficace pour résoudre des problèmes complexes en les découpant en sous problèmes indépendants. Par contre, on verra dans le prochain chapitre qu’elle devient inefficace si les sous-problèmes se chevauchent, et il conviendra alors d’utiliser une nouvelle technique appelée « Programmation dynamique » qui sera étudiée dans le chapitre P5C4.\n\n\nArticle Wikipedia Diviser pour régner\nInformatique MP-PC-PT-PSI",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 5: Algorithmique",
      "Chapitre 2: Diviser pour régner"
    ]
  },
  {
    "objectID": "tg/nsi/5-algorithmique/5-recherche-textuelle/exo/index.html",
    "href": "tg/nsi/5-algorithmique/5-recherche-textuelle/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "## Comparaison des efficacités des recherches\n\nComparer le nombre de compararison effectuées dans les dexu algorithmes de recherche du cours dans le cas ou on recherche 'abd' dans 'abracadabra'.\nEn utilisant le module timeit et en en utilisant un long texte grâce aux fonctions de lecture de Python, comparer le temps d’exécution des deux algorithmes de recherche présentés dans le cours.\nExpliquer succintement quelles sont els trois amélioration apportées par l’algorithme de Boyer-Moore par rapport à l’algorithme de force brute.q",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 5: Algorithmique",
      "Chapitre 5: Recherche textuelle*",
      "Exercices"
    ]
  },
  {
    "objectID": "tg/nsi/5-algorithmique/5-recherche-textuelle/quiz/index.html",
    "href": "tg/nsi/5-algorithmique/5-recherche-textuelle/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "T<sup>ale</sup> NSI",
      "Partie 5: Algorithmique",
      "Chapitre 5: Recherche textuelle*",
      "Quiz"
    ]
  },
  {
    "objectID": "tg/index.html",
    "href": "tg/index.html",
    "title": "Terminale",
    "section": "",
    "text": "Enseignement scientifique\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAucun article correspondant"
  },
  {
    "objectID": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/5-formulaire-dune-page-web/index.html",
    "href": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/5-formulaire-dune-page-web/index.html",
    "title": "Chapitre 5: Formulaire d’une page web",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nFormulaire d’une page Web\nAnalyser le fonctionnement d’un formulaire simple.\nDistinguer les transmissions de paramètres par les requêtes POST ou GET.\nDiscuter les deux types de requêtes selon le type des valeurs à transmettre et/ou leur confidentialité.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 5: Interactions entre l’homme et la machine sur le Web",
      "Chapitre 5: Formulaire d’une page web"
    ]
  },
  {
    "objectID": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/5-formulaire-dune-page-web/index.html#création-du-formulaire-avec-la-balise-form",
    "href": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/5-formulaire-dune-page-web/index.html#création-du-formulaire-avec-la-balise-form",
    "title": "Chapitre 5: Formulaire d’une page web",
    "section": "1 Création du formulaire avec la balise <form>",
    "text": "1 Création du formulaire avec la balise &lt;form&gt;\nLes formulaires sont un moyen de récupérer des données à partir du client pour les passer à l’application serveur.\nDans le fichier html, on utilise la balise &lt;form&gt; en y ajoutant l’attribut method qui permet d’indiquer quel est le type de requête HTTP.\n&lt;form method=\"get\"&gt;\n\n    &lt;label for=\"nom\"&gt;Entrez votre nom: &lt;/label&gt;\n    &lt;input type=\"text\" name=\"nom\" required&gt;\n  \n    &lt;label for=\"email\"&gt;Entrez votre email: &lt;/label&gt;\n    &lt;input type=\"email\" name=\"email\" required&gt;\n  \n    &lt;input type=\"submit\" value=\"Enregistrer\"&gt;\n  \n&lt;/form&gt;\n\n1.1 Méthode HTTP GET\nAvec cette méthode, les paramètres du formulaire sont placés dans l’url lors de la soumission.\n\nSoumission des données par la méthode GET:\nhttp://chemin/fichier.html?nom=James&email=james%40cameron.com\n\nnom: James\nemail: james@cameron.com\n\n\n\n\n\n\n\n\n\nEn plus: Percent-encoding\n\n\n\n\n\n\nDans les URL, les caractères spéciaux tels @ sont échappés avec un code par exemple: %40 pour @, %20 pour l’espace.\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nTableau d’exemples issu de wikipedia\n\n\nVoir l’article Wikipedia pour plus de détails.\n\n\n\n\n\n\n\n\n\n\n\n\nApplication: Création d'un formulaire avec la méthode GET\n\n\n\n\n\n\nCréer une page index.html dans laquelle vous placerez un formulaire, avec la méthode GET.\n&lt;!doctype html&gt;\n&lt;html lang=\"fr\"&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf-8\" /&gt;\n    &lt;title&gt;Un document minuscule&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;h1&gt;Les formulaires en html&lt;/h1&gt;\n    &lt;!-- Le formulaire ci-dessous --&gt;\n    &lt;form method=\"GET\"&gt;\n    &lt;input type=\"text\" name=\"nom\" placeholder=\"Entrer votre nom\"&gt;\n    &lt;button type=\"submit\"&gt;Envoyer les données&lt;/button&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\nEnregistrer ce fichier puis l’ouvrir dans le navigateur.\n\nEntrer une valeur dans le formulaire et appuyer sur le bouton pour le soumettre et observer la barre d’adresse du navigateur.\nAjouter d’autres types d’entrées avec la balise &lt;input&gt;.\n\n&lt;input type=\"text\" ...: Par défaut: entrée de texte.\n&lt;input type=\"button\" ...: Un bouton(on préfèrera cependant la balise &lt;button&gt; cependant).\n&lt;input type=\"checkbox\" ...: Case à cocher.\n&lt;input type=\"radio\" ...: un bouton radio qui permet de sélectionner une seule valeur parmi un groupe de différentes valeurs.\n\nAssurez-vous que toutes les balises input ont bien un attribut name pour pouvoir être traités.\nObserver dans la barre d’adresse comment sont placés les paramètres lors de la soumission du formulaire avec le bouton submit.\n\n\n\n\n\n\n\n\n1.2 Méthode HTTP POST\nAvec cette méthode les données sont transmises dans le corps de la requête http, sans les encoder dans l’url cette fois-ci.\nLe serveur doit accepter les requêtes POST.\nPour observer les paramètres d’une requête POST, il faut ouvrir la console de développement du navigateur, dans l’onglet réseaux.\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nconsole réseau POST firefox\n\n\nLes paramètres étant «cachés» dans la requête HTML, on les utilisera notamment pour la soumission de formulaires avec des données confidentielles:\n\nmot de passe\nemail\ndonnées personnelles en général\n\n\n\n\n\n\n\n\nApplication: Création d'un formulaire avec la méthode POST\n\n\n\n\n\n\nSur la page web précédente, ajouter un autre formulaire, qui utilisera cette fois-ci la méthode POST.\nPour que le formulaire fonctionne il faut lancer un serveur local, si vous êtes sur Visual Studio Code, je vous conseille d’installer l’extension Live Server\nVérifier les différences de fonctionnement entre ces deux formulaires en utilisant la console réseau du navigateur.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 5: Interactions entre l’homme et la machine sur le Web",
      "Chapitre 5: Formulaire d’une page web"
    ]
  },
  {
    "objectID": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/5-formulaire-dune-page-web/index.html#validation-des-données-du-formulaire",
    "href": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/5-formulaire-dune-page-web/index.html#validation-des-données-du-formulaire",
    "title": "Chapitre 5: Formulaire d’une page web",
    "section": "2 Validation des données du formulaire",
    "text": "2 Validation des données du formulaire\nA priori, les données sont destinées traitées au niveau du serveur comme nous le verrons dans le prochain chapitre.\nIl n’est cependant pas rare de valider les données côté client en javascript avant envoi des données pour ne pas surcharger le serveur.\n\nVérification que le nom n’est pas vide.\n&lt;!doctype html&gt;\n&lt;html lang=\"fr\"&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf-8\" /&gt;\n    &lt;title&gt;Un document minuscule&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;h1&gt;Les formulaires en html&lt;/h1&gt;\n    &lt;!-- Le formulaire ci-dessous --&gt;\n    &lt;form method=\"GET\" &gt;\n      &lt;input type=\"text\" name=\"nom\" placeholder=\"Entrer votre nom\"&gt;\n      &lt;input type=\"tel\" name=\"telephone\" placeholder=\"0123456789\"&gt;\n      &lt;button type=\"submit\" onclick=\"validateForm()\"&gt;Envoyer les données&lt;/button&gt;\n    &lt;/form&gt;\n    &lt;script&gt;\n      function validateForm() {\n        const nom = document.querySelector(\"input[name='nom']\").value\n        if (nom === ''){\n          alert(\"Nom ne doit pas être vide\")\n        } else {\"Envoi des données\"}\n      }\n    &lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nVérifier en javascript qu’on a un numéro de téléphone qui commence par 0 et comporte 10 chiffres.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 5: Interactions entre l’homme et la machine sur le Web",
      "Chapitre 5: Formulaire d’une page web"
    ]
  },
  {
    "objectID": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/3-mise-en-forme-avec-css/exo/index.html",
    "href": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/3-mise-en-forme-avec-css/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Aucun exercice pour l’instant.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 5: Interactions entre l’homme et la machine sur le Web",
      "Chapitre 3: Mise en forme avec CSS",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/3-mise-en-forme-avec-css/quiz/index.html",
    "href": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/3-mise-en-forme-avec-css/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 5: Interactions entre l’homme et la machine sur le Web",
      "Chapitre 3: Mise en forme avec CSS",
      "Quiz"
    ]
  },
  {
    "objectID": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/6-interaction-client-serveur/index.html",
    "href": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/6-interaction-client-serveur/index.html",
    "title": "Chapitre 6: Interaction client–serveur",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nInteraction client- serveur.\nRequêtes HTTP, réponses du serveur\nDistinguer ce qui est exécuté sur le client ou sur le serveur et dans quel ordre.\nDistinguer ce qui est mémorisé dans le client et retransmis au serveur.\nReconnaître quand et pourquoi la transmission est chiffrée.\nIl s’agit de faire le lien avec ce qui a été vu en classe de seconde et d’expliquer comment on peut passer des paramètres à un site grâce au protocole HTTP.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 5: Interactions entre l’homme et la machine sur le Web",
      "Chapitre 6: Interaction client–serveur"
    ]
  },
  {
    "objectID": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/6-interaction-client-serveur/index.html#http",
    "href": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/6-interaction-client-serveur/index.html#http",
    "title": "Chapitre 6: Interaction client–serveur",
    "section": "1 HTTP",
    "text": "1 HTTP\nLes protocoles HTTP, ou HTTPS pour sa version sécurisée afin de crypter les informations échangées, définissent des en-têtes lors des requêtes du client et des réponses du serveur.\nTous les navigateurs permettent de les afficher en utilisant le moniteur réseau des outils de développement du navigateur(Touche F12).\nVoici une requête et une réponse de la page d’accueil du site situé à l’adresse: https://lyceum.fr\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nconsole réseau firefox\n\n\n\n1.1 Requête du client\nAnalysons la requête:\n\nMéthode: GET\n\nIci on veut obtenir la page web, il existe aussi d’autres méthodes POST, PUT, DELETE…\n\nURL: https://lyceum.fr/\n\nL’adresse URL de la page ici, c’est la page d’accueil.\n\nEn-têtes:\n\nDes informations sur le client.\nHost: lyceum.fr\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:67.0) Gecko/20100101 Firefox/67.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nAccept-Language: fr,fr-FR;q=0.8,en-US;q=0.5,en;q=0.3\nAccept-Encoding: gzip, deflate, br\n\n\n1.2 Réponse du serveur\n\nEn-têtes:\n\nDes informations sur la réponse envoyée par le serveur, d’abord la version du protocole: HTTP/1.1. Puis le code de réponse, ici 200 signifie que la requête a pu être correctement traitée, sinon des codes normalisés existent 404: page non trouvée, 403 accès non autorisé, 302 redirection…\nL’ensemble des codes et leur signification est disponible sur MDN.\nHTTP/1.1 200 OK\nserver: nginx/1.16.0\ndate: Fri, 14 Jun 2019 07:07:32 GMT\ncontent-type: text/html\ncontent-length: 5369\nlast-modified: Fri, 14 Jun 2019 07:07:03 GMT\netag: \"5d034797-14f9\"\naccept-ranges: bytes\nX-Firefox-Spdy: h2\n\nRéponse:\n\nIl s’agit tout simplement de la page html renvoyée que je résume ici, c’est en fait la page html complète.\n&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charSet=\"utf-8\"/&gt;\n...\n&lt;body&gt;\n...\n&lt;/body&gt;",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 5: Interactions entre l’homme et la machine sur le Web",
      "Chapitre 6: Interaction client–serveur"
    ]
  },
  {
    "objectID": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/6-interaction-client-serveur/index.html#lapplication-côté-serveur",
    "href": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/6-interaction-client-serveur/index.html#lapplication-côté-serveur",
    "title": "Chapitre 6: Interaction client–serveur",
    "section": "2 L’application côté serveur",
    "text": "2 L’application côté serveur\nLe serveur peut fournir ce que l’on appelle un site dynamique, c’est-à-dire qu’il adapte la page renvoyée aux utilisateurs et aux paramètres de la requête.\nPour cela il faut que le serveur soit muni d’un langage de programmation comme php, python, ou autre pour générer la page grâce à un programme.\n\nPrenons l’exemple du site Wikipedia qui fonctionne sous php.\nLorsque vous faites une recherche à partir de n’importe quelle page de l’encyclopédie; tapez par exemple: Tim Berners-Lee, en haut à droite de Wikipedia.\nOuvrez votre moniteur réseau, avant de valider la recherche avec entrée ou un click sur les propositions d’articles, vous allez voir les requêtes suivantes qui vont s’effectuer.\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nconsole réseau lors d’une recherche wikipedia\n\n\nVous voyez que pour effectuer cette recherche, votre navigateur va renvoyer une requête mais pas vers une simple page html mais vers un script php de Wikipedia en lui ajoutant des paramètres comme s’il s’agissait d’une fonction.\nhttps://fr.wikipedia.org/w/index.php?search=Tim+Berners-Lee&title=Sp%C3%A9cial%3ARecherche\nLe script php situé sur le serveur fr.wikipedia.org au chemin /w/index.php est exécuté avec les paramètres fournis après le signe ? et séparés par des &, ici:\nsearch=Tim+Berners-Lee\ntitle=Spécial:Recherche\nAprès l’exécution du script php, le serveur renvoie un code de redirection 302 qui va ensuite nous rediriger vers la page recherchée: https://fr.wikipedia.org/wiki/Tim_Berners-Lee.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 5: Interactions entre l’homme et la machine sur le Web",
      "Chapitre 6: Interaction client–serveur"
    ]
  },
  {
    "objectID": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/2-ecriture-dune-page-html/exo/index.html",
    "href": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/2-ecriture-dune-page-html/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Aucun exercice pour l’instant.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 5: Interactions entre l’homme et la machine sur le Web",
      "Chapitre 2: Ecriture d’une page HTML",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/2-ecriture-dune-page-html/quiz/index.html",
    "href": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/2-ecriture-dune-page-html/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 5: Interactions entre l’homme et la machine sur le Web",
      "Chapitre 2: Ecriture d’une page HTML",
      "Quiz"
    ]
  },
  {
    "objectID": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/4-gestion-des-evenements-en-javascript/index.html",
    "href": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/4-gestion-des-evenements-en-javascript/index.html",
    "title": "Chapitre 4: Gestion des événements en javascript",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nModalités de l’interaction entre l’homme et la machine\nÉvénements\nIdentifier les différents composants graphiques permettant d’interagir avec une application Web\nIdentifier les événements que les fonctions associées aux différents composants graphiques sont capables de traiter\nIl s’agit d’examiner le code HTML d’une page comprenant des composants graphiques et de distinguer ce qui relève de la description des composants graphiques en HTML de leur comportement (réaction aux événements) programmé par exemple en JavaScript.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 5: Interactions entre l’homme et la machine sur le Web",
      "Chapitre 4: Gestion des événements en javascript"
    ]
  },
  {
    "objectID": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/4-gestion-des-evenements-en-javascript/index.html#intégration-de-code-javascript-dans-une-page-html",
    "href": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/4-gestion-des-evenements-en-javascript/index.html#intégration-de-code-javascript-dans-une-page-html",
    "title": "Chapitre 4: Gestion des événements en javascript",
    "section": "1 Intégration de code javascript dans une page html",
    "text": "1 Intégration de code javascript dans une page html\nLe code javascript peut être intégré à un document html grâce à la balise &lt;script&gt;.\nLes fichiers javascript utilisent l’extension .js que l’on importe en précisant son URI grâce à l’attribut src.\n&lt;script src=\"script.js\"&gt;&lt;/script&gt;\nRemarque: Bien qu’il soit recommandé de placer la balise &lt;script&gt; dans le &lt;head&gt; du document, il est très fréquent de voir le javascript placé juste avant la balise fermante &lt;body&gt;. Ceci permet d’être sûr que l’ensemble de la page web ait été parsée(analysée) par le navigateur avant de la modifier avec le code javascript.\n\n\n\n\n\n\n\nEn plus: Intégrer le `javascript` directement dans la page `html`\n\n\n\n\n\n\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"fr\"&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf-8\" /&gt;\n    &lt;title&gt;Un peu de javascript&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;h1&gt;Titre principal de mon document&lt;/h1&gt;\n    &lt;p&gt;\n      Regarde maman, je suis en train d'ajouter du code `javascript` à ma page.\n    &lt;/p&gt;\n     &lt;script type=\"text/javascript\" charset=\"utf-8\"&gt;\n      // Je suis un commentaire javascript!\n      // Alert crée une fenêtre d'affichage sur l'écran pour l'utilisateur\n      alert('Hello world !') // L'affichage alert est un peu vieillot\n\n      // console.log() écrit dans la console du navigateur pour le développeur\n      console.log('Script Hello world exécuté.')\n    &lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 5: Interactions entre l’homme et la machine sur le Web",
      "Chapitre 4: Gestion des événements en javascript"
    ]
  },
  {
    "objectID": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/4-gestion-des-evenements-en-javascript/index.html#débogage-du-javascript",
    "href": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/4-gestion-des-evenements-en-javascript/index.html#débogage-du-javascript",
    "title": "Chapitre 4: Gestion des événements en javascript",
    "section": "2 Débogage du javascript",
    "text": "2 Débogage du javascript\nPour déboguer du code javascript, on utilise le plus souvent la console du navigateur( Ctrl + Maj + I). Puis on y affiche des valeurs de variables depuis le programme javascript avec la fonction console.log().\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nCopie d’écran de la console du navigateur web firefox",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 5: Interactions entre l’homme et la machine sur le Web",
      "Chapitre 4: Gestion des événements en javascript"
    ]
  },
  {
    "objectID": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/4-gestion-des-evenements-en-javascript/index.html#syntaxe-du-javascript",
    "href": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/4-gestion-des-evenements-en-javascript/index.html#syntaxe-du-javascript",
    "title": "Chapitre 4: Gestion des événements en javascript",
    "section": "3 Syntaxe du javascript",
    "text": "3 Syntaxe du javascript\nVoici quelques bases de sa syntaxe, vous pouvez trouver un comparatif avec Python dans la page Comparaison des langages\n\nLes variables doivent être déclarées grâce au mot clé var(ou const et let dans les versions récentes).\nTout comme en python, les chaînes de caractères sont entourées de guillemets simples ou doubles.\nLes instructions simples sont terminées par un point-virgule: ;(il n’est cependant pas toujours indispensable contrairement au css).\nLes blocs d’instructions sont entourés d’accolades.\nLes commentaires sont notés précédés de deux barres obliques: //.\nLes variables et fonctions sont écrites en camelCase(L’espace est remplacé par une majuscule).\nL’indentation des blocs d’instruction n’est pas obligatoire comme en Python, mais souhaitable.\n\nLa référence la plus complète et à jour est le site Mozilla Developper Network MDN.\nLe chapitre Comparaison de langages permet de faire le lien entre la syntaxe Python et la syntaxe javascript. Voir notamment la syntaxe concernant les fonctions qui sont omniprésentes en javascript.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 5: Interactions entre l’homme et la machine sur le Web",
      "Chapitre 4: Gestion des événements en javascript"
    ]
  },
  {
    "objectID": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/4-gestion-des-evenements-en-javascript/index.html#interaction-au-sein-dune-page-web-les-événements",
    "href": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/4-gestion-des-evenements-en-javascript/index.html#interaction-au-sein-dune-page-web-les-événements",
    "title": "Chapitre 4: Gestion des événements en javascript",
    "section": "4 Interaction au sein d’une page web: les événements",
    "text": "4 Interaction au sein d’une page web: les événements\nPour que la page réagisse aux actions de l’utilisateur, on ajoute des EventHandler(gestionnaires d’événements) aux balises html qui doivent exécuter du code javascript en réponse aux événements.\nPar exemple, pour exécuter la fonction javascript initFunction lorsque la balise &lt;body&gt; a fini de se charger.\nDans le fichier html:\n&lt;body onload=\"initFunction();\"&gt;\nDans le fichier js:\nfunction initFunction(){\n  let now = new Date();\n  console.log(\"Page ouverte à \" + now.getHours() + \"h\" + now.getMinutes() );\n}\nVoici quelques exemples d’événements courants.\n\n\n\nEventHandler\nType d’événement géré\n\n\n\n\nonclick\nclic de la souris sur l’élément\n\n\nondblclick\ndouble-clic de la souris sur l’élément\n\n\nonkeypress\nappuie sur une touche du clavier\n\n\nonkeyup\ntouche de clavier relâchée\n\n\nonselect\nélément sélectionné\n\n\n\nLa liste complète des GlobalEventHandlers sur MDN",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 5: Interactions entre l’homme et la machine sur le Web",
      "Chapitre 4: Gestion des événements en javascript"
    ]
  },
  {
    "objectID": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/4-gestion-des-evenements-en-javascript/index.html#html-js-comment-récupérer-une-entrée-utilisateur",
    "href": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/4-gestion-des-evenements-en-javascript/index.html#html-js-comment-récupérer-une-entrée-utilisateur",
    "title": "Chapitre 4: Gestion des événements en javascript",
    "section": "5 HTML → JS: Comment récupérer une entrée utilisateur ?",
    "text": "5 HTML → JS: Comment récupérer une entrée utilisateur ?\nLa balise html &lt;input&gt; permet de récupérer les entrées utilisateur, il en existe de divers types:\n\n&lt;input type=\"text\" ...: Par défaut: entrée de texte.\n&lt;input type=\"button\" ...: Un bouton(on préfèrera cependant la balise &lt;button&gt;).\n&lt;input type=\"checkbox\" ...: Case à cocher.\n&lt;input type=\"radio\" ...: un bouton radio qui permet de sélectionner une seule valeur parmi un groupe de différentes valeurs.\n\nVoici un exemple complet qui affiche la valeur tapée par l’utilisateur lorsqu’on clique sur un bouton.\n\n\n[Événements en javascript](embedded-codesandbox://evenements-javascript)\n\n\nSi on regarde cet exemple, on voit que pour récupérer une entrée:\n\nDans le html, on ajoute un id à la balise input que l’on souhaite récupérer:\n&lt;input id=\"mon-input\" placeholder=\"Taper votre texte ici\" /&gt;\nDans le js, on accède à la valeur entrée dans l’élément que l’on affecte à une variable.\n// On récupère le texte dans la balise input\nvar texte = document.querySelector(`#mon-input`).value\n// On l'affiche dans la console\nconsole.log(texte)\n\n\n\n\n\n\n\n\nEn plus\n\n\n\n\n\n\nIl est également possible de récupérer une entrée utilisateur avec la fonction prompt()\nvar rep = prompt(\"Voulez-vous accéder à cette page ?\")\nCependant, cela n’est plus très utilisé de nos jours.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 5: Interactions entre l’homme et la machine sur le Web",
      "Chapitre 4: Gestion des événements en javascript"
    ]
  },
  {
    "objectID": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/4-gestion-des-evenements-en-javascript/index.html#js-html-comment-afficher-du-texte-dynamiquement-sur-la-page",
    "href": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/4-gestion-des-evenements-en-javascript/index.html#js-html-comment-afficher-du-texte-dynamiquement-sur-la-page",
    "title": "Chapitre 4: Gestion des événements en javascript",
    "section": "6 JS → HTML: Comment afficher du texte dynamiquement sur la page?",
    "text": "6 JS → HTML: Comment afficher du texte dynamiquement sur la page?\n\n6.1 Exécution différée\nAvant de modifier la page, il convient d’attendre que la page html soit chargée avant d’exécuter le code javascript. De nombreux développeurs placent le code javascript à la fin du corps du document avant la balise fermante &lt;/body&gt;.\nCependant, il est aussi possible et recommandé de lancer le code javascript qu’après le chargement de la fenêtre en plaçant le code dans une fonction qui s’exécute après le chargement de la page:\nwindow.onload = function() {\n  // code javascript à exécuter\n  // après le chargement de la page\n  console.log('La page est chargée, je peux maintenant la modifier')\n}\n\n\n6.2 Accéder à un élément html\nPour accéder à un élément html à partir du javascript, on utilise la fonction document.querySelector().\nC’est une méthode qui permet de sélectionner les éléments comme en css.\n\nVous avez un document html qui contient les éléments suivants:\n&lt;h1 class=\"grand-titre\"&gt;Titre principal de mon document&lt;/h1&gt;\n&lt;p id=\"premier-paragraphe\"&gt;\n  Regarde maman, je suis en train d'ajouter du code `javascript` à ma page.\n&lt;/p&gt;\n&lt;h2 id=\"sous-titre\"&gt;Sous-titre de mon document&lt;/h2&gt;\nOn peut alors en javascript modifier leurs contenus grâce à la propriété innerHTML,\ndocument.querySelector('#premier-paragraphe').innerHTML = \"J'aimais pas l'ancien texte, je l'ai changé.\"\nAttention: ne pas oublier de placer ce code dans la fonction window.onload = function() { } ou de placer votre balise &lt;script&gt; à la fin du &lt;body&gt;.\n\n\n\n6.3 Modifier les styles\nVous pouvez en fait modifier toutes les propriétés des éléments à partir de javascript. Voici par exemple comment modifier les styles grâce à la propriété style.\ndocument.querySelector('h1.grand-titre').style.color = '#FFAA85'\ndocument.querySelector('#grand-titre').style.color = '#AA00AA'",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 5: Interactions entre l’homme et la machine sur le Web",
      "Chapitre 4: Gestion des événements en javascript"
    ]
  },
  {
    "objectID": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/4-gestion-des-evenements-en-javascript/index.html#un-exemple-complet",
    "href": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/4-gestion-des-evenements-en-javascript/index.html#un-exemple-complet",
    "title": "Chapitre 4: Gestion des événements en javascript",
    "section": "7 Un exemple complet",
    "text": "7 Un exemple complet\nVoici un exemple complet qui commence par récupérer une entrée utilisateur(HTML → JS), puis qui modifie la page en fonction de sa réponse(JS → HTML).\n\n\n[Exemple complet de gestion des événements en javascript](embedded-codesandbox://evenements-javascript-complet)",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 5: Interactions entre l’homme et la machine sur le Web",
      "Chapitre 4: Gestion des événements en javascript"
    ]
  },
  {
    "objectID": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/4-gestion-des-evenements-en-javascript/index.html#pour-aller-plus-loin",
    "href": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/4-gestion-des-evenements-en-javascript/index.html#pour-aller-plus-loin",
    "title": "Chapitre 4: Gestion des événements en javascript",
    "section": "8 Pour aller plus loin",
    "text": "8 Pour aller plus loin\nLe javascript étant un langage très à la mode, les tutoriels, cours et vidéos ne manquent pas. N’hésitez pas à consulter:\n\nle cours d’OpenClassroom Apprenez à coder avec JavaScript\ncodeacademy\n\nOu encore les sites de référence comme:\n\nMDN\nw3schools",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 5: Interactions entre l’homme et la machine sur le Web",
      "Chapitre 4: Gestion des événements en javascript"
    ]
  },
  {
    "objectID": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/1-generalites-sur-le-web/exo/index.html",
    "href": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/1-generalites-sur-le-web/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Aucun exercice pour l’instant.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 5: Interactions entre l’homme et la machine sur le Web",
      "Chapitre 1: Généralités sur le web",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/1-generalites-sur-le-web/quiz/index.html",
    "href": "1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/1-generalites-sur-le-web/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 5: Interactions entre l’homme et la machine sur le Web",
      "Chapitre 1: Généralités sur le web",
      "Quiz"
    ]
  },
  {
    "objectID": "1g/nsi/programme.html",
    "href": "1g/nsi/programme.html",
    "title": "Programme de NSI",
    "section": "",
    "text": "Ce document est une retranscription non officielle du programme de Numérique et sciences du numérique de première générale applicable à la rentrée 2019. La version officielle est consultable sur eduscol."
  },
  {
    "objectID": "1g/nsi/programme.html#préambule",
    "href": "1g/nsi/programme.html#préambule",
    "title": "Programme de NSI",
    "section": "1 Préambule",
    "text": "1 Préambule\nL’enseignement de spécialité de numérique et sciences informatiques du cycle terminal de la voie générale vise l’appropriation des fondements de l’informatique pour préparer les élèves à une poursuite d’études dans l’enseignement supérieur, en les formant à la pratique d’une démarche scientifique et en développant leur appétence pour des activités de recherche.\nL’objectif de cet enseignement, non professionnalisant, est l’appropriation des concepts et des méthodes qui fondent l’informatique, dans ses dimensions scientifiques et techniques. Cet enseignement s’appuie sur l’universalité de quatre concepts fondamentaux et la variété de leurs interactions:\n\nLes données, qui représentent sous une forme numérique unifiée des informations très diverses : textes, images, sons, mesures physiques, sommes d’argent, etc.\nLes algorithmes, qui spécifient de façon abstraite et précise des traitements à effectuer sur les données à partir d’opérations élémentaires.\nLes langages, qui permettent de traduire les algorithmes abstraits en programmes textuels ou graphiques de façon à ce qu’ils soient exécutables par les machines.\nLes machines, et leurs systèmes d’exploitation, qui permettent d’exécuter des programmes en enchaînant un grand nombre d’instructions simples, assurant la persistance des données par leur stockage, et de gérer les communications. On y inclut les objets connectés et les réseaux.\n\nÀ ces concepts s’ajoute un élément transversal : les interfaces qui permettent la communication avec les humains, la collecte des données et la commande des systèmes.\nCet enseignement prolonge les enseignements d’informatique dispensés à l’école primaire, au collège en mathématiques et en technologie et, en seconde, l’enseignement commun de sciences numériques et technologie . Il s’appuie aussi sur l’algorithmique pratiquée en mathématiques en seconde. Il permet de développer des compétences :\n\nanalyser et modéliser un problème en termes de flux et de traitement d’informations ;\ndécomposer un problème en sous-problèmes, reconnaître des situations déjà analysées et réutiliser des solutions ;\nconcevoir des solutions algorithmiques ;\ntraduire un algorithme dans un langage de programmation, en spécifier les interfaces et les interactions, comprendre et réutiliser des codes sources existants, développer des processus de mise au point et de validation de programmes ;\nmobiliser les concepts et les technologies utiles pour assurer les fonctions d’acquisition, de mémorisation, de traitement et de diffusion des informations ;\ndévelopper des capacités d’abstraction et de généralisation.\n\nCet enseignement a vocation à multiplier les occasions de mise en activité des élèves, sous des formes variées qui permettent de développer des compétences transversales :\n\nfaire preuve d’autonomie, d’initiative et de créativité ;\nprésenter un problème ou sa solution, développer une argumentation dans le cadre d’un débat ;\ncoopérer au sein d’une équipe dans le cadre d’un projet ;\nrechercher de l’information, partager des ressources ;\nfaire un usage responsable et critique de l’informatique.\n\nLa progression peut suivre un rythme annuel construit autour de périodes spécifiques favorisant une alternance entre divers types d’activités.\nCet enseignement contribue à l’acquisition des compétences numériques qui font l’objet d’une certification en fin de cycle terminal.\nComme tous les enseignements, cette spécialité contribue au développement des compétences orales à travers notamment la pratique de l’argumentation. Celle-ci conduit à préciser sa pensée et à expliciter son raisonnement de manière à convaincre. Elle permet à chacun de faire évoluer sa pensée, jusqu’à la remettre en cause si nécessaire, pour accéder progressivement à la vérité par la preuve. Si ces considérations sont valables pour tous les élèves, elles prennent un relief particulier pour ceux qui choisiront de poursuivre cet enseignement de spéciali té en terminale et qui ont à préparer l’épreuve orale terminale du baccalauréat. Il convient que les travaux proposés aux élèves y contribuent dès la classe de première."
  },
  {
    "objectID": "1g/nsi/programme.html#démarche-de-projet",
    "href": "1g/nsi/programme.html#démarche-de-projet",
    "title": "Programme de NSI",
    "section": "2 Démarche de projet",
    "text": "2 Démarche de projet\nUn enseignement d’informatique ne saurait se réduire à une présentation de concepts ou de méthodes sans permettre aux élèves de se les approprier en développant des projets applicatifs.\nUne part de l’horaire de l’enseignement d’au moins un quart du total en classe de première doit être réservée à la conception et à l’élaboration de projets conduits par des groupes de deux à quatre élèves.\nLes projets réalisés par les élèves, sous la conduite du professeur, constituent un apprentissage fondamental tant pour la compréhension de l’informatique que pour l’acquisition de compétences. En classe de première comme en classe terminale, ils peuvent porter sur des problématiques issues d’autres disciplines et ont essentiellement pour but d’imaginer des solutions répondant à l’expression d’un besoin ; dans la mesure du possible, il convient de laisser le choix du thème du projet aux élèves eux-mêmes. Il peut s’agir d’un approfondissement théorique des concepts étudiés en commun, d’une application à d’autres disciplines telle qu’une simulation d’expérience, d’un travail sur des données socioéconomiques, du développement d’un logiciel de lexicographie, d’un projet autour d’un objet connecté ou d’un robot, de la conception d’une bibliothèque implémentant une structure de données complexe, d’un problème de traitement d’image ou de son, d’une application mobile, par exemple de réalité virtuelle ou augmentée, du développement d’un site Web associé à l’utilisation d’une base de données, de la réalisation d’un interprète d’un mini-langage, d ’un programme de jeu de stratégie, etc.\nLa gestion d’un projet inclut des points d’étape pour faire un bilan avec le professeur, valider des éléments, contrôler l’avancement du projet ou adapter ses objectifs, voire le redéfinir partiellement, afin de maintenir la motivation des élèves.\nLes professeurs veillent à ce que les projets restent d’une ambition raisonnable afin de leur permettre d’aboutir."
  },
  {
    "objectID": "1g/nsi/programme.html#modalités-de-mise-en-œuvre",
    "href": "1g/nsi/programme.html#modalités-de-mise-en-œuvre",
    "title": "Programme de NSI",
    "section": "3 Modalités de mise en œuvre",
    "text": "3 Modalités de mise en œuvre\nLes activités pratiques et la réalisation de projets supposent, pour chaque élève, l’accès à un équipement relié à internet.\nUn langage de programmation est nécessaire pour l’écriture des programmes : un langage simple d’usage, interprété, concis, libre et gratuit, multiplateforme, largement répandu, riche de bibliothèques adaptées et bénéficiant d’une vaste communauté d’auteurs dans le monde éducatif est à privilégier. Au moment de la conception de ce programme, le langage choisi est Python version 3 (ou supérieure). L’expertise dans tel ou tel langage de programmation n’est cependant pas un objectif de formation."
  },
  {
    "objectID": "1g/nsi/programme.html#éléments-de-programme",
    "href": "1g/nsi/programme.html#éléments-de-programme",
    "title": "Programme de NSI",
    "section": "4 Éléments de programme",
    "text": "4 Éléments de programme\nLe programme est organisé autour de huit rubriques. Il ne constitue cependant pas un plan de cours. Il appartient aux professeurs de choisir leur progression, sans faire de chaque partie un tout insécable et indépendant des autres. Au contraire, les mêmes notions peuvent être développées et éclairées dans différentes rubriques, en mettant en lumière leurs interactions.\n\n4.1 Histoire de l’informatique\nCette rubrique transversale se décline dans chacune des sept autres.\nComme toute connaissance scientifique et technique, les concepts de l’informatique ont une histoire et ont été forgés par des personnes. Les algorithmes sont présents dès l’Antiquité, les machines à calculer apparaissent progressivement au XVII e siècle, les sciences de l’information sont fondées au XIX e siècle, mais c’est en 1936 qu’apparaît le concept de machine universelle, capable d’exécuter tous les algorithmes, et que les notions de machine, algorithme, langage et information sont pensées comme un tout cohérent. Les premiers ordinateurs ont été construits en 1948 et leur puissance a ensuite évolué exponentiellement. Parallèlement, les ordinateurs se sont diversifiés dans leur taille, leur forme et leur emploi : téléphones, tablettes, montres connectées, ordinateurs personnels, serveurs, fermes de calcul, méga-ordinateurs. Le réseau internet, développé depuis 1969, relie aujourd’hui ordinateurs et objets connectés.\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nÉvénements clés de l’histoire de l’informatique\nSituer dans le temps les principaux événements de l’histoire de l’informatique et leurs protagonistes.\nCes repères historiques seront construits au fur et à mesure de la présentation des concepts et techniques.\n\n\n\n\n\n4.2 Représentation des données : types et valeurs de base\nToute machine informatique manipule une représentation des données dont l’unité minimale est le bit 0/1, ce qui permet d’unifier logique et calcul. Les données de base sont représentées selon un codage dépendant de leur nature : entiers, flottants, caractères et chaînes de caractères. Le codage conditionne la taille des différentes valeurs en mémoire.\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nÉcriture d’un entier positif dans une base b ⩾ 2\nPasser de la représentation d’une base dans une autre.\nLes bases 2, 10 et 16 sont privilégiées.\n\n\nReprésentation binaire d’un entier relatif\nÉvaluer le nombre de bits nécessaires à l’écriture en base 2 d’un entier, de la somme ou du produit de deux nombres entiers. Utiliser le complément à 2.\nIl s’agit de décrire les tailles courantes des entiers (8, 16, 32 ou 64 bits). Il est possible d’évoquer la représentation des entiers de taille arbitraire de Python.\n\n\nReprésentation approximative des nombres réels : notion de nombre flottant\nReprésentation approximative des nombres réels : notion de nombre flottant\n0.2 + 0.1 n’est pas égal à 0.3. Il faut éviter de tester l’égalité de deux flottants. Aucune connaissance précise de la norme IEEE-754 n’est exigible.\n\n\nValeurs booléennes : 0, 1.\nOpérateurs booléens : and, or, not.\nExpressions booléennes\nDresser la table d’une d’une expression booléenne.\nLe ou exclusif (xor) est évoqué.\nQuelques applications directes comme l’addition binaire sont présentées.\nL’attention des élèves est attirée sur le caractère séquentiel de certains opérateurs booléens.\n\n\nReprésentation d’un texte en machine.\nExemples des encodages ASCII, ISO-8859-1, Unicode\nIdentifier l’intérêt des différents systèmes d’encodage.\nConvertir un fichier texte dans différents formats d’encodage.\nAucune connaissance précise des normes d’encodage n’est exigible\n\n\n\n\n\n4.3 Représentation des données : types construits\nÀ partir des types de base se constituent des types construits, qui sont introduits au fur et à mesure qu’ils sont nécessaires. Il s’agit de présenter tour à tour les p-uplets ( tuples), les enregistrements qui collectent des valeurs de types différents dans des champs nommés et les tableaux qui permettent un accès calculé direct aux éléments. En pratique, on utilise les appellations de Python, qui peuvent être différentes de celles d’autres langages de programmation.\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\np-uplets. p-uplets nommés\nÉcrire une fonction renvoyant un p-uplet de valeurs.\n\n\n\nTableau indexé, tableau donné en compréhension\nLire et modifier les éléments d’un tableau grâce à leurs index.\nConstuire un tableau par compréhension.\nUtiliser des tableaux de tableaux pour représenter des matrices, notation a[i][j]\nItérer sur les éléments d’un tableau.\nSeuls les tableaux dont les éléments sont du même type sont présentés.\nAucune connaissance des tranches (slices) n’est exigible.\nL’aspect dynamique des tableaux de Python n’est pas évoqué.\nPython identifie listes et tableaux.\nIl n’est pas fait référence aux tableaux de la bibliothèque NumPy.\n\n\nDictionnaires par clés et valeurs\nConstruire une entrée de dictionnaire\nItérer sur les éléments d’un dictionnaire.\nIl est possible de présenter les données EXIF d’une image sous la forme d’un enregistrement.\nEn Python, les p-uplets nommés sont implémentés par des dictionnaires.\nUtiliser les méthodes keys(), values() et items()\n\n\n\n\n\n4.4 Traitement de données en tables\nLes données organisées en table correspondent à une liste de p-uplets nommés qui partagent les mêmes descripteurs. La mobilisation de ce type de structure de données permet de préparer les élèves à aborder la notion de base de données qui ne sera présentée qu’en classe terminale. Il s’agit d’utiliser un tableau doublement indexé ou un tableau de p-uplets, dans un langage de programmation ordinaire et non dans un système de gestion de bases de données.\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nIndexation de tables\nImporter une table depuis un fichier texte tabulé ou un fichier CSV.\nEst utilisé un tableau doublement indexé ou un tableau de p-uplets qui partagent les mêmes descripteurs.\n\n\nRecherche dans une table\nRechercher les lignes d’une table vérifiant des critères exprimés en logique propositionnelle.\nLa recherche de doublons, les tests de cohérence d’une table sont présentés.\n\n\nTri d’une table\nTrier une table suivant une colonne.\nUne fonction de tri intégrée au système ou à une bibliothèque peut être utilisée.\n\n\nFusion de tables\nConstruire une nouvelle table en combinant les données de deux tables.\nLa notion de domaine de valeurs est mise en évidence.\n\n\n\n\n\n4.5 Interactions entre l’homme et la machine sur le Web\nLors de la navigation sur le Web, les internautes interagissent avec leur machine par le biais des pages Web.\nL’Interface Homme-Machine (IHM) repose sur la gestion d’événements associés à des éléments graphiques munis de méthodes algorithmiques.\nLa compréhension du dialogue client-serveur déjà abordé en classe de seconde est consolidée, sur des exemples simples, en identifiant les requêtes du client, les calculs puis les réponses du serveur traitées par le client.\nIl ne s’agit pas de décrire exhaustivement les différents éléments disponibles, ni de développer une expertise dans les langages qui permettent de mettre en œuvre le dialogue tels que PHP ou JavaScript.\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nModalités de l’interaction entre l’homme et la machine\nÉvénements\nIdentifier les différents composants graphiques permettant d’interagir avec une application Web\nIdentifier les événements que les fonctions associées aux différents composants graphiques sont capables de traiter\nIl s’agit d’examiner le code HTML d’une page comprenant des composants graphiques et de distinguer ce qui relève de la description des composants graphiques en HTML de leur comportement (réaction aux événements) programmé par exemple en JavaScript.\n\n\nInteraction avec l’utilisateur dans une page Web\nAnalyser et modifier les méthodes exécutées lors d’un clic sur un bouton d’une page Web.\n\n\n\nInteraction client- serveur.\nRequêtes HTTP, réponses du serveur\nDistinguer ce qui est exécuté sur le client ou sur le serveur et dans quel ordre.\nDistinguer ce qui est mémorisé dans le client et retransmis au serveur.\nReconnaître quand et pourquoi la transmission est chiffrée.\nIl s’agit de faire le lien avec ce qui a été vu en classe de seconde et d’expliquer comment on peut passer des paramètres à un site grâce au protocole HTTP.\n\n\nFormulaire d’une page Web\nAnalyser le fonctionnement d’un formulaire simple.\nDistinguer les transmissions de paramètres par les requêtes POST ou GET.\nDiscuter les deux types de requêtes selon le type des valeurs à transmettre et/ou leur confidentialité.\n\n\n\n\n\n4.6 Architectures matérielles et systèmes d’exploitation\nExprimer un algorithme dans un langage de programmation a pour but de le rendre exécutable par une machine dans un contexte donné. La découverte de l’architecture des machines et de leur système d’exploitation constitue une étape importante.\nLes circuits électroniques sont au cœur de toutes les machines informatiques. Les réseaux permettent de transmettre l’information entre machines. Les systèmes d’exploitation gèrent et optimisent l’ensemble des fonctions de la machine, de l’exécution des programmes aux entrées-sorties et à la gestion d’énergie.\nOn étudie aussi le rôle des capteurs et actionneurs dans les entrées-sorties clavier, interfaces graphiques et tactiles, dispositifs de mesure physique, commandes de machines, etc.\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nModèle d’architecture séquentielle (von Neumann)\nDistinguer les rôles et les caractéristiques des différents constituants d’une machine.\nDérouler l’exécution d’une séquence d’instructions simples du type langage machine.\nLa présentation se limite aux concepts généraux.\nOn distingue les architectures monoprocesseur et les architectures multiprocesseur.\nDes activités débranchées sont proposées.\nLes circuits combinatoires réalisent des fonctions booléennes.\n\n\nTransmission de données dans un réseau\nProtocoles de communication\nArchitecture d’un réseau\nMettre en évidence l’intérêt du découpage des données en paquets et de leur encapsulation.\nDérouler le fonctionnement d’un protocole simple de récupération de perte de paquets(bit alterné).\nSimuler ou mettre en œuvre un réseau.\nLe protocole peut être expliqué et simulé en mode débranché.\nLe lien est fait avec ce qui a été vu en classe de seconde sur le protocole TCP/IP.\nLe rôle des différents constituants du réseau local de l’établissement est présenté.\n\n\nSystèmes d’exploitation\nIdentifier les fonctions d’un système d’exploitation.\nUtiliser les commandes de base en ligne de commande.\nGérer les droits et permissions d’accès aux fichiers.\nLes différences entre systèmes d’exploitation libres et propriétaires sont évoquées.\nLes élèves utilisent un système d’exploitation libre.\nIl ne s’agit pas d’une étude théorique des systèmes d’exploitation.\n\n\nPériphériques d’entrée et de sortie\nInterface Homme- Machine (IHM)\nIdentifier le rôle des capteurs et actionneurs.\nRéaliser par programmation une IHM répondant à un cahier des charges donné.\nLes activités peuvent être développées sur des objets connectés, des systèmes embarqués ou robots.\n\n\n\n\n\n4.7 Langages et programmation\nLes langages de programmation Turing-complets sont caractérisés par un corpus de « constructions élémentaires ». Sans introduire cette terminologie, il s’agit de montrer qu’il existe de nombreux langages de programmation, différents par leur style (impératif, fonctionnel, objet, logique, événementiel, etc.), ainsi que des langages formalisés de description ou de requêtes qui ne sont pas des langages de programmation.\nL’importance de la spécification, de la documentation et des tests est à présenter, ainsi que l’intérêt de la modularisation qui permet la réutilisation de programmes et la mise à disposition de bibliothèques. Pour les programmes simples écrits par les élèves, on peut se contenter d’une spécification rapide mais précise.\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nConstructions élémentaires\nMettre en évidence un corpus de constructions élémentaires. boucles non bornées, appels de fonction.\nSéquences, affectation, conditionnelles, boucles bornées,\n\n\nDiversité et unité des langages de programmation\nRepérer, dans un nouveau langage de programmation, les traits communs et les traits particuliers à ce langage.\nLes manières dont un même programme simple s’écrit dans différents langages sont comparées.\n\n\nSpécification\nPrototyper une fonction.\nDécrire les préconditions sur les arguments.\nDécrire des postconditions sur les résultats.\nDes assertions peuvent être utilisées pour garantir des préconditions ou des postconditions.\n\n\nMise au point de programmes\nUtiliser des jeux de tests.\nL’importance de la qualité et du nombre des tests est mise en évidence.\nLe succès d’un jeu de tests ne garantit pas la correction d’un programme.\n\n\nUtilisation de bibliothèques\nUtiliser la documentation d’une bibliothèque.\nAucune connaissance exhaustive d’une bibliothèque particulière n’est exigible.\n\n\n\n\n\n4.8 Algorithmique\nLe concept de méthode algorithmique est introduit ; de nouveaux exemples seront vus en terminale. Quelques algorithmes classiques sont étudiés. L’étude de leurs coûts respectifs prend tout son sens dans le cas de données nombreuses, qui peuvent être préférentiellement des données ouvertes.\nIl est nécessaire de montrer l’intérêt de prouver la correction d’un algorithme pour lequel on dispose d’une spécification précise, notamment en mobilisant la notion d’invariant sur des exemples simples. L a nécessité de prouver la terminaison d’un programme est mise en évidence dès qu’on utilise une boucle non bornée (ou, en terminale, des fonctions récursives) grâce à la mobilisation de la notion de variant sur des exemples simples.\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nParcours séquentiel d’un tableau\nÉcrire un algorithme de recherche d’une occurence sur des valeurs de type quelconque\nÉcrire un algorithme de recherche d’un extremum, de calcul d’une moyenne.\nOn montre que le coût est linéaire\n\n\nTris par insertion, par sélection\nÉcrire un algorithme de tri.\nDécrire un invariant de boucle qui prouve la correction des tris par insertion, par sélection.\nLa terminaison de ces algorithmes est à justifier.\nOn montre que leur coût est quadratique dans le pire cas.\n\n\nAlgorithme des k plus proches voisins\nÉcrire un algorithme qui prédit la classe d’un élément en fonction de la classe majoritaire de ses k plus proches voisins.\nIl s’agit d’un exemple d’algorithme d’apprentissage.\n\n\nRecherche dichotomique dans un tableau trié\nMontrer la terminaison de la recherche dichotomique à l’aide d’un variant de boucle.\nDes assertions peuvent être utilisées.\nLa preuve de la correction peut être présentée par le professeur.\n\n\nAlgorithmes gloutons\nRésoudre un problème grâce à un algorithme glouton.\nExemples : problèmes du sac à dos ou du rendu de monnaie.\nLes algorithmes gloutons constituent une méthode algorithmique parmi d’autres qui seront vues en terminale."
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/3-representation-des-nombres-a-virgule/index.html",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/3-representation-des-nombres-a-virgule/index.html",
    "title": "Chapitre 3: Représentation des nombres à virgule",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nReprésentation approximative des nombres réels: notion de nombre flottant\nReprésentation approximative des nombres réels: notion de nombre flottant\n0.2 + 0.1 n’est pas égal à 0.3. Il faut éviter de tester l’égalité de deux flottants. Aucune connaissance précise de la norme IEEE-754 n’est exigible.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 3: Représentation des nombres à virgule"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/3-representation-des-nombres-a-virgule/index.html#virgule-fixe-et-virgule-flottante",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/3-representation-des-nombres-a-virgule/index.html#virgule-fixe-et-virgule-flottante",
    "title": "Chapitre 3: Représentation des nombres à virgule",
    "section": "1 Virgule fixe et virgule flottante",
    "text": "1 Virgule fixe et virgule flottante\nIl existe deux façons de coder les nombres à virgule:\n\nLe codage en virgule fixe qui consiste à garder un nombre fixe de chiffes après la virgule.\n\n\nPar exemple sur un octet, on peut utiliser 4 bits pour la partie entière et 4 bits pour la partie décimale.\nAinsi, 0101 1011 a pour valeur:\n22+20+2−1+2−2+2−3=4+1+0.5+0.25+0.125=5,825\n2^2 + 2^0 + 2^{-1} + 2^{-2} + 2^{-3} = 4 + 1 + 0.5 + 0.25 + 0.125 = 5,825\n\n\n\nDans le codage en virgule flottante, on garde un nombre fixe de chiffres significatifs et on réserve l’autre partie du codage à l’exposant. C’est une méthode semblable à la notation scientifique utilisée en physique, mais avec des puissances de 2.\n\n±m×2n avec m∈[1;2[\n\\pm m \\times  2^{n} \\text{ avec } m \\in [1; 2[\n\nC’est cette deuxième méthode qui est utilisée dans les ordinateurs et smartphones et que nous allons étudier cette année.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 3: Représentation des nombres à virgule"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/3-representation-des-nombres-a-virgule/index.html#principe-du-codage-en-virgule-flottante",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/3-representation-des-nombres-a-virgule/index.html#principe-du-codage-en-virgule-flottante",
    "title": "Chapitre 3: Représentation des nombres à virgule",
    "section": "2 Principe du codage en virgule flottante",
    "text": "2 Principe du codage en virgule flottante\nOn représente un nombre à virgule flottante sous la forme:\nsm⋅2n\ns\\ m \\cdot 2^n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nPour encoder un nombre flottant on\nutilise 1 bit de signe f bits pour la mantisse et e bits pour l'exposant.©  CC BY-SA 3.0 via Wikimedia Commons\nSupposons un nombre flottant codé sur un octet utilisant 1 bit de signe, 3 bits pour l’exposant et 4 bits pour la mantisse: 1 100 1011\n\nss est le signe représenté par le bit de poids fort:\n\ns=0s=0: signe ++\ns=1s=1: signe −-\n\ns=1s=1 Notre codage représente donc un nombre négatif.\nnn est l’exposant représenté par un entier relatif décalé et non en complément à deux(ceci afin de faciliter la comparaison des exposants).\nCe décalage est de 2e−1−12^{e-1} - 1 (e représente le nombre de bits utilisé pour coder l’exposant)\nL’exposant a pour valeur 100 codé sur 3 bits, il doit être décalé de 22−1=32^{2} - 1 = 3. Ainsi, puisque 1002=410100_2 = 4_{10}, l’exposant 100 correspond à un exposant de 4-3=1.\nmm est la mantisse qui est un nombre binaire à virgule compris entre 1 inclus et 2 exclus. Le seul chiffre avant la virgule étant toujours 1, il n’est pas représenté(on le dit implicite), et le codage binaire de la mantisse représente donc uniquement les chiffres après la virgule qui sont despuissances négatives de 2: de gauche à droite, un demi, un quart, un huitème, un seizième…\n\nDans notre exemple, la mantisse est: 1011, elle représentera le nombre:\nm=1+12+123+124=1+0,5+0,125+0,0625=1,6875\nm = 1 + \\frac{1}{2} +  \\frac{1}{2^3}+ \\frac{1}{2^4} =  1+0,5+0,125+0,0625 = 1,6875\n\nLe code 1 101 1011 sur un octet utilisant 1 bit de signe, 3 bits pour l’exposant et 4 bits pour la mantisse représente donc:\n−1,6875⋅21=−3,375\n- 1,6875 \\cdot 2^{1}= -3,375\n\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nCalculer la valeur représentée par le codage suivant sur 16 bits\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nLes 16 bits sont répartis en 7 bits de mantisse, 8 bits d'exposant et 1 bit de signe.©  CC BY-SA 4.0 via Wikimedia Commons",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 3: Représentation des nombres à virgule"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/3-representation-des-nombres-a-virgule/index.html#la-norme-ieee-754",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/3-representation-des-nombres-a-virgule/index.html#la-norme-ieee-754",
    "title": "Chapitre 3: Représentation des nombres à virgule",
    "section": "3 La norme IEEE 754",
    "text": "3 La norme IEEE 754\n\nL’IEEE 754 est une norme pour la représentation des nombres à virgule flottante en binaire. Elle est la norme la plus employée actuellement pour le calcul des nombres à virgule flottante dans le domaine informatique. Source Wikipédia\n\nCette norme définit notamment 2 formats pour représenter des nombres à virgule flottante:\n\n\n\n\n\n\nsimple précision (32 bits : 1 bit de signe, 8 bits d’exposant (-126 à 127), 23 bits de mantisse),\n\n\ndouble précision (64 bits : 1 bit de signe, 11 bits d’exposant (-1022 à 1023), 52 bits de mantisse).\n\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nNorme IEEE 754 de codage simple précision sur 32 bits.©  CC BY-SA 3.0 via Wikimedia Commons\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nNorme IEEE 754 de codage simple précision sur 64 bits.©  CC BY-SA 3.0 via Wikimedia Commons\n\n\n\n\n\n\n\n\n\n\nApplication: Réaliser la conversion en base 2 de la valeur approchée de pi: 3.141592653589793\n\n\n\n\n\n\n\nen simple précision: ici\nen double précision: ici\n\nComparer la précision obtenue dans les deux cas.\n\n\n\n\n\n\n\n\n\n\n\n\nEn plus\n\n\n\n\n\n\nLa norme donne une signification particulière au plus petit et au plus grand exposant pour définir certaines valeurs spéciales.\n\nle zéro positif: +0 = 0 00000000000 0000000000000000000000000000000000000000000000000000,\nle zéro négatif: -0 = 1 00000000000 0000000000000000000000000000000000000000000000000000,\nl’infini positif: +∞ = 0 11111111111 0000000000000000000000000000000000000000000000000000,\nl’infini négatif: +∞ = 1 11111111111 0000000000000000000000000000000000000000000000000000,\nNot a Number …\n\nArticle Wikipédia en anglais",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 3: Représentation des nombres à virgule"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/3-representation-des-nombres-a-virgule/index.html#tests-dégalité-sur-les-flottants",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/3-representation-des-nombres-a-virgule/index.html#tests-dégalité-sur-les-flottants",
    "title": "Chapitre 3: Représentation des nombres à virgule",
    "section": "4 Tests d’égalité sur les flottants",
    "text": "4 Tests d’égalité sur les flottants\nSi on effectue le calcul 0.2+0.10.2 +0.1 en Python, on obtient:\n&gt;&gt;&gt; 0.2 + 0.1\n0.30000000000000004\nEt contre toute attente, certains tests que l’on aurait cru positifs renvoient des valeurs négatives(ce que l’on appelle un faux négatif):\n&gt;&gt;&gt; 0.2 + 0.1 == 0.3\nFalse\nAinsi un calcul avec des nombres à virgule ne peut-être qu’approximatif. Cependant, plus on augmente la taille du registre du processeur et plus nous pourrons représenter de valeurs, et plus nos calculs gagneront en précision.\nComme nous sommes limités sur la précision des flottants, on transforme les tests d’égalités en tests d’inégalités à une précision donnée.\nAinsi:\n&gt;&gt;&gt; 0.2 + 0.1 == 0.3\nFalse\nPar contre, en utilisant une précision du millionième:\n&gt;&gt;&gt; import math # pour utiliser la fonction valeur absolue  fabs()\n&gt;&gt;&gt; precision = 1E-6\n&gt;&gt;&gt; math.fabs((0.2 + 0.1) - 0.3)  &lt; precision\nTrue\nD’ailleurs la bibliothèque math de Python inclut à cet effet la fonction math.isclose().\n&gt;&gt;&gt; from math import isclose\n&gt;&gt;&gt; isclose(0.2 + 0.1, 0.3)\nTrue",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 3: Représentation des nombres à virgule"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/1-representation-des-entiers-naturels/exo/index.html",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/1-representation-des-entiers-naturels/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "https://h5p.lyceum.fr/3402212386/",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 1: Représentation des entiers naturels",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/1-representation-des-entiers-naturels/exo/index.html#représentation-binaire-des-entiers-naturels",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/1-representation-des-entiers-naturels/exo/index.html#représentation-binaire-des-entiers-naturels",
    "title": "Exercices",
    "section": "",
    "text": "https://h5p.lyceum.fr/3402212386/",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 1: Représentation des entiers naturels",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/1-representation-des-entiers-naturels/exo/index.html#entiers-naturels-en-base-deux",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/1-representation-des-entiers-naturels/exo/index.html#entiers-naturels-en-base-deux",
    "title": "Exercices",
    "section": "2 Entiers naturels en base deux",
    "text": "2 Entiers naturels en base deux\n\nTrouver la représentation en base deux du nombre 1000.\nDonner les représentations en base deux des nombres 1, 3, 7, 15, 31 et 63. Expliquer le résultat.\nCes nombres sont égaux à une puissance de 2 moins 1, 2n−12^n - 1 ce sont les plus grands nombres pouvant être encodés sur nn bits.\nTrouver la représentation en base dix du nombre 1001011021001~0110_2.\nC’est en 111100100002111~1001~0000_2 qu’a été démontré le théorème fondamental de l’informatique. Exprimer ce nombre en base dix.\nPour multiplier par dix un entier naturel exprimé en base dix, il suffit d’ajouter un 0 à sa droite, par exemple, 12×10=12012 \\times 10 = 120. Quelle est l’opération équivalente pour les entiers naturels exprimés en base deux ? Exprimer en base deux les nombres 3, 6 et 12 pour illustrer cette remarque.\nLorsqu’n ajoute un zéro en base deux, le nombre est multiplié par deux.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 1: Représentation des entiers naturels",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/1-representation-des-entiers-naturels/exo/index.html#octet-et-information",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/1-representation-des-entiers-naturels/exo/index.html#octet-et-information",
    "title": "Exercices",
    "section": "3 Octet et information",
    "text": "3 Octet et information\n\nCombien de bits d’informations contient un octet ? Combien un octet peut-il représenter de valeurs différentes ?\nOn imagine un ordinateur dont la mémoire est constituée de quatre circuits mémoire un bit. Quel est le nombre d’états possibles de la mémoire de cet ordinateur ? Même question pour un ordinateur dont la mémoire est constituée de dix circuits mémoires un bit. Et pour un ordinateur dont la mémoire est constituée de 34 milliards de tels circuits.\nOn veut représenter chacune des sept couleurs de l’arc-en-ciel par un mot, les sept mots devant être distincts et de même longueur. Quelle est la longueur minimale de ces mots ?",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 1: Représentation des entiers naturels",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/1-representation-des-entiers-naturels/exo/index.html#entiers-naturels-en-base-16",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/1-representation-des-entiers-naturels/exo/index.html#entiers-naturels-en-base-16",
    "title": "Exercices",
    "section": "4 Entiers naturels en base 16",
    "text": "4 Entiers naturels en base 16\n\nTrouver la représentation en base 16 du nombre binaire: 1111000110012111100011001_2.\nTrouver la représentation en base dix du nombre 4e2c164e2c_{16}.\nTrouver la représentation en base seize du nombre 96510965_{10}.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 1: Représentation des entiers naturels",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/1-representation-des-entiers-naturels/exo/index.html#effectuer-des-opérations",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/1-representation-des-entiers-naturels/exo/index.html#effectuer-des-opérations",
    "title": "Exercices",
    "section": "5 Effectuer des opérations",
    "text": "5 Effectuer des opérations\n\nPoser les opérations binaires suivantes et vérifier votre résultat en base 10:\n   11010\n+ 110011\n--------\n 110011\n- 11010\n--------\nPoser les opérations hexadécimales suivantes et vérifier votre résultat en base 10:\n   FF0\n+   1E\n------\n FF0\n- 1E\n----",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 1: Représentation des entiers naturels",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/1-representation-des-entiers-naturels/exo/index.html#représenter-des-couleurs-en-hexadécimal",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/1-representation-des-entiers-naturels/exo/index.html#représenter-des-couleurs-en-hexadécimal",
    "title": "Exercices",
    "section": "6 Représenter des couleurs en hexadécimal",
    "text": "6 Représenter des couleurs en hexadécimal\nEn HTML et en CSS, les couleurs peuvent être codées sous la forme d’un sextuplet hexadécimal représentant ainsi la couleur sur 3 octets. Par exemple: 12AB5F.\nChaque octet est écrit avec deux chiffres hexadécimaux, et représente un niveau parmi 256 de chacune des trois couleurs primaires de la synthèse additive Rouge, Vert et Bleu dans l’ordre.\nPar exemple, le code #FF0000 représente un niveau maximal à 255 sur le rouge, et des niveaux nuls pour le vert et le bleu.\nUne animation est disponible à l’adresse suivante: https://apps.lyceum.fr/css-colors/\n\nChaque composante de couleur étant codé sur un octet, donner en décimal et en hexadécimal les valeurs minimale, maximale et médiane.\nCompléter le tableau suivant:\n\n\n\ncouleur\nCode hexadécimal\nR(décimal)\nV(décimal\nB(décimal)\nCodage 3bits(quest. 4)\n\n\n\n\n\n#000000\n\n\n\n\n\n\n\n\n0\n0\n255\n001\n\n\nVert\n\n\n\n\n\n\n\n\n#00FFFF\n\n\n\n\n\n\n\n\n255\n0\n0\n100\n\n\nMagenta\n\n\n\n\n\n\n\n\n#FFFF00\n\n\n\n\n\n\nBlanc\n\n\n\n\n\n\n\n\nLa complémentaire d’une couleur est obtenue en allumant les lampes éteintes et en éteignant les lampes allumées. Déterminer les couleurs complémentaires des couleurs précédentes.\nEn utilisant comme précédemment uniquement les éclairages nuls et maximum, combien de couleurs sont codées? En déduire comment aurait-on pu coder ces données sur 3 bits et compléter le tableau de la question 2?\nQuel est le nombre de couleurs qui peut être codé si on considère toutes les combinaisons d’éclairage rendues possibles par le codage hexadécimal utilisé par le HTML et CSS.\nGrâce à l’animation expliquer comment:\n\nCréer des nuances de gris.\nComment obscurcir une couleur par exemple le rouge.\nComment éclaircir une couleur par exemple le rouge.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 1: Représentation des entiers naturels",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/1-representation-des-entiers-naturels/quiz/index.html",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/1-representation-des-entiers-naturels/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 1: Représentation des entiers naturels",
      "Quiz"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/2-representation-des-entiers-relatifs/index.html",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/2-representation-des-entiers-relatifs/index.html",
    "title": "Chapitre 2: Représentation des entiers relatifs",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nReprésentation binaire d’un entier relatif\nÉvaluer le nombre de bits nécessaires à l’écriture en base 2 d’un entier, de la somme ou du produit de deux nombres entiers. Utiliser le complément à 2.\nIl s’agit de décrire les tailles courantes des entiers (8, 16, 32 ou 64 bits). Il est possible d’évoquer la représentation des entiers de taille arbitraire de Python.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 2: Représentation des entiers relatifs"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/2-representation-des-entiers-relatifs/index.html#méthode-naïve-utilisation-dun-bit-de-signe",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/2-representation-des-entiers-relatifs/index.html#méthode-naïve-utilisation-dun-bit-de-signe",
    "title": "Chapitre 2: Représentation des entiers relatifs",
    "section": "1 Méthode naïve: utilisation d’un bit de signe",
    "text": "1 Méthode naïve: utilisation d’un bit de signe\nLa façon la plus simple de procéder serait de réserver le bit de poids fort pour le signe(0 pour positif et 1 pour négatif), et de garder le rester pour la représentation de la valeur absolue du nombre.\nAvec un codage utilisant des mots de n bits, on pourrait représenter des nombres entre −2n−1+1-2^{n-1}+1 et 2n−1−12^{n-1}-1.\nPar exemple, avec un codage sur 3 bits, des nombres entre -3 et 3:\n\n\n\nReprésentation binaire\nValeur décimale\n\n\n\n\n000\n+0\n\n\n001\n+1\n\n\n010\n+2\n\n\n011\n+3\n\n\n100\n-0\n\n\n101\n-1\n\n\n110\n-2\n\n\n111\n-3\n\n\n\n\nMalheureusement cette représentation possède deux inconvénients. Le premier (mineur) est que le nombre zéro (0) possède deux représentations. L’autre inconvénient (majeur) est que cette représentation impose de modifier l’algorithme d’addition ; si un des nombres est négatif, l’addition binaire usuelle donne un résultat incorrect. Voir l’article de Wikipédia pour plus de détails\n\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nVérifier que 3 - 2 ne donne pas le bon résultat avec cet encodage en binaire.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 2: Représentation des entiers relatifs"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/2-representation-des-entiers-relatifs/index.html#notation-en-complément-à-deux",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/2-representation-des-entiers-relatifs/index.html#notation-en-complément-à-deux",
    "title": "Chapitre 2: Représentation des entiers relatifs",
    "section": "2 Notation en complément à deux",
    "text": "2 Notation en complément à deux\nCette méthode permet de remédier aux problèmes évoqués ci-dessus.\nOn utilise un encodage de longueur fixe nn:\n\nLa première moitié représente les entiers positifs ou nul codés normalement avec un 0 sur le bit de poids fort;\nLa deuxième moitié représente les entiers strictement négatifs. Pour cela on leur ajoute 2n2^n et on retrouve un 1 sur le bit de poids fort.\n\n\n\n\n\n\n\nNote\n\n\n\nDans cet encodage, le bit de poids fort contient encore l’information du signe:\n\n0 pour les entiers positifs ou nul.\n1 pour les entiers strictement négatifs.\n\n\n\n\nEn complément à 2 sur nn bits, on peut représenter des nombres entre −2n−1-2^{n-1} et 2n−1−12^{n-1}-1.\n\n\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\n\n\n\n\n\n2.1 Méthode d’encodage\nL’entier négatif xx est codé comme s’il s’agissait de l’entier x+2nx + 2^{n} ou n est la taille du mot.\nIl est possible d’appliquer un algorithme simple pour réaliser cette addition en binaire (cette méthode sera désignée comme 2ᵉ méthode par la suite).\n\nOn inverse les bits de l’écriture binaire de sa valeur absolue.\nOn ajoute 1 au résultat (les dépassements sont ignorés).\n\nArticle Wikipédia sur le complément à deux\n\nUtilisons cet encodage sur 3 bits.\n−110=?2\n-1_{10} = ?_{2}\n\n\n2.1.0.1 1ère méthode\n−1=&gt;−1+23=710=1112\n-1 =&gt; -1 + 2^3 = 7_{10} = 111_2\n\n\n\n2.1.0.2 2e méthode\n\nLa valeur −1-1 a pour valeur absolue 11 codé 001 sur 3 bits.\nOn inverse les bits: 110\nOn ajoute 1: 111\n\nLes deux méthodes donnent le même résultat:\n−110=1112\n-1_{10} = 111_{2}\n\n\n\n2.1.1 Tableau de valeurs\nAvec un codage sur 3 bits, on peut coder des nombres entre −23−1=−4-2^{3-1}=-4 et −23−1−1=3-2^{3-1}-1=3.\n\n\n\nReprésentation binaire\nValeur décimale\n\n\n\n\n000\n+0\n\n\n001\n+1\n\n\n010\n+2\n\n\n011\n+3\n\n\n100\n-4\n\n\n101\n-3\n\n\n110\n-2\n\n\n111\n-1\n\n\n\n\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\n\n\n\n\n\n\n\n\n2.2 Méthode de décodage\nPour connaitre le nombre que représente un entier négatif, on effectue la démarche inverse:\n\nOn lui retranche 1 puis,\non inverse tous ces bits,\nOn convertit en base 10, et on ajoute le signe -.\n\nCe qui revient à lui soustraire 2n2^n.\n\nToujours en travaillant sur 3 bits:\n1102=?10\n110_2 = ?_{10}\n\n\n2.2.1 1ère méthode\n1102=610=&gt;6−23=−210\n110_2 = 6_{10} =&gt; 6 - 2^3 = -2_{10}\n\n\n\n2.2.2 2e méthode\n\nOn retranche 1: 110 - 1 = 101\nOn inverse les bits: 010\nOn convertit en base 10: 0102=210010_2 = 2_{10} donc c’est −2-2.\n\nLes deux méthodes donnent le même résultat:\n1102=−210\n110_2 = -2_{10}",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 2: Représentation des entiers relatifs"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/2-representation-des-entiers-relatifs/index.html#opérations",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/2-representation-des-entiers-relatifs/index.html#opérations",
    "title": "Chapitre 2: Représentation des entiers relatifs",
    "section": "3 Opérations",
    "text": "3 Opérations\n\n\n\n\n\n\nAstuce\n\n\n\nIl faut bien garder à l’esprit que l’encodage en complément à deux ne peut être fait que sur des mots binaires de taille fixe et que les dépassements de capacité ne sont pas pris en compte.\n\n\n\n3.1 Soustraction\nRéalisons le calcul 3−2=3+(−2)3-2 = 3+ (-2) sur trois bits.\n   011\n  +110\n  ----\n(1)001\nOn trouve bien 0012=1{001}_2=1 car le 4e bit n’est pas prise en compte.\n\n\n3.2 Multiplication\nRéalisons le calcul 2*(−2)2*(-2) sur trois bits.\n     010\n    x110\n    ----\n     000\n    010\n   010\n   -----\n (01)100\nOn trouve bien sur trois bits 1002=−4{100}_2=-4.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 2: Représentation des entiers relatifs"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/4-representation-des-textes/exo/index.html",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/4-representation-des-textes/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Peut-on encoder en ASCII le texte « Ne désire que ce que tu as. »?\nTrouver le texte représenté en ASCII binaire par la suite de bits 01000011 00100111 01100101 01110011 01110100 00100000 01100110 01100001 01100011 01101001 01101100 01100101\n\n&gt;&gt;sortie\n\n01000011|C 00100111|' 01100101|e 01110011|s 01110100|t 00100000|  01100110|f 01100001|a 01100011|c 01101001|i 01101100|l 01100101|e \n\nC'est facile\n\n\nTraduire une phrase en ASCII binaire, puis la passer à son voisin pour qu’il la décode. Si vous n’avez pas de voisin utilisez: « Parler ne fait pas cuire le riz. »\n\n&gt;&gt;sortie\n\nP|01010000 a|01100001 r|01110010 l|01101100 e|01100101 r|01110010  |00100000 n|01101110 e|01100101  |00100000 f|01100110 a|01100001 i|01101001 t|01110100  |00100000 p|01110000 a|01100001 s|01110011  |00100000 c|01100011 u|01110101 i|01101001 r|01110010 e|01100101  |00100000 l|01101100 e|01100101  |00100000 r|01110010 i|01101001 z|01111010 .|00101110 \n\n01010000 01100001 01110010 01101100 01100101 01110010 00100000 01101110 01100101 00100000 01100110 01100001 01101001 01110100 00100000 01110000 01100001 01110011 00100000 01100011 01110101 01101001 01110010 01100101 00100000 01101100 01100101 00100000 01110010 01101001 01111010 00101110 \n\n\nTraduire une phrase en ASCII hexadécimal, puis la passer à son voisin qui la décode. Si vous n’avez pas de voisin utilisez: « Lever la voix ne donne pas raison. ».\n\n&gt;&gt;sortie\n\nL|4C e|65 v|76 e|65 r|72  |20 l|6C a|61  |20 v|76 o|6F i|69 x|78  |20 n|6E e|65  |20 d|64 o|6F n|6E n|6E e|65  |20 p|70 a|61 s|73  |20 r|72 a|61 i|69 s|73 o|6F n|6E .|2E \n\n4C 65 76 65 72 20 6C 61 20 76 6F 69 78 20 6E 65 20 64 6F 6E 6E 65 20 70 61 73 20 72 61 69 73 6F 6E 2E \n\n\nRecommencer en utilisant une phrase avec des accents que vous coderez en hexadécimal avec l’encodage latin-1(ISO 8859-1). Si vous n’avez pas de voisin utilisez: « Les excès tuent plus sûrement que les épées. »\n\n&gt;&gt;sortie\n\nL|4c e|65 s|73  |20 e|65 x|78 c|63 è|e8 s|73  |20 t|74 u|75 e|65 n|6e t|74  |20 p|70 l|6c u|75 s|73  |20 s|73 û|fb r|72 e|65 m|6d e|65 n|6e t|74  |20 q|71 u|75 e|65  |20 l|6c e|65 s|73  |20 é|e9 p|70 é|e9 e|65 s|73 .|2e \n\n4c 65 73 20 65 78 63 e8 73 20 74 75 65 6e 74 20 70 6c 75 73 20 73 fb 72 65 6d 65 6e 74 20 71 75 65 20 6c 65 73 20 e9 70 e9 65 73 2e \n\n\nRédiger un paragraphe expliquant l’intérêt du codage UTF-8, ses avantages et ses inconvénients par rapport l’ASCII ou au codage ISO-8859-1.\n\nInformatique et sciences du numérique Spécialité ISN en terminale S - Avec des exercices corrigés et des idées de projets par Gilles Dowek",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 4: Représentation des textes",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/4-representation-des-textes/exo/index.html#codages-ascii-latin-1-et-utf-8",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/4-representation-des-textes/exo/index.html#codages-ascii-latin-1-et-utf-8",
    "title": "Exercices",
    "section": "",
    "text": "Peut-on encoder en ASCII le texte « Ne désire que ce que tu as. »?\nTrouver le texte représenté en ASCII binaire par la suite de bits 01000011 00100111 01100101 01110011 01110100 00100000 01100110 01100001 01100011 01101001 01101100 01100101\n\n&gt;&gt;sortie\n\n01000011|C 00100111|' 01100101|e 01110011|s 01110100|t 00100000|  01100110|f 01100001|a 01100011|c 01101001|i 01101100|l 01100101|e \n\nC'est facile\n\n\nTraduire une phrase en ASCII binaire, puis la passer à son voisin pour qu’il la décode. Si vous n’avez pas de voisin utilisez: « Parler ne fait pas cuire le riz. »\n\n&gt;&gt;sortie\n\nP|01010000 a|01100001 r|01110010 l|01101100 e|01100101 r|01110010  |00100000 n|01101110 e|01100101  |00100000 f|01100110 a|01100001 i|01101001 t|01110100  |00100000 p|01110000 a|01100001 s|01110011  |00100000 c|01100011 u|01110101 i|01101001 r|01110010 e|01100101  |00100000 l|01101100 e|01100101  |00100000 r|01110010 i|01101001 z|01111010 .|00101110 \n\n01010000 01100001 01110010 01101100 01100101 01110010 00100000 01101110 01100101 00100000 01100110 01100001 01101001 01110100 00100000 01110000 01100001 01110011 00100000 01100011 01110101 01101001 01110010 01100101 00100000 01101100 01100101 00100000 01110010 01101001 01111010 00101110 \n\n\nTraduire une phrase en ASCII hexadécimal, puis la passer à son voisin qui la décode. Si vous n’avez pas de voisin utilisez: « Lever la voix ne donne pas raison. ».\n\n&gt;&gt;sortie\n\nL|4C e|65 v|76 e|65 r|72  |20 l|6C a|61  |20 v|76 o|6F i|69 x|78  |20 n|6E e|65  |20 d|64 o|6F n|6E n|6E e|65  |20 p|70 a|61 s|73  |20 r|72 a|61 i|69 s|73 o|6F n|6E .|2E \n\n4C 65 76 65 72 20 6C 61 20 76 6F 69 78 20 6E 65 20 64 6F 6E 6E 65 20 70 61 73 20 72 61 69 73 6F 6E 2E \n\n\nRecommencer en utilisant une phrase avec des accents que vous coderez en hexadécimal avec l’encodage latin-1(ISO 8859-1). Si vous n’avez pas de voisin utilisez: « Les excès tuent plus sûrement que les épées. »\n\n&gt;&gt;sortie\n\nL|4c e|65 s|73  |20 e|65 x|78 c|63 è|e8 s|73  |20 t|74 u|75 e|65 n|6e t|74  |20 p|70 l|6c u|75 s|73  |20 s|73 û|fb r|72 e|65 m|6d e|65 n|6e t|74  |20 q|71 u|75 e|65  |20 l|6c e|65 s|73  |20 é|e9 p|70 é|e9 e|65 s|73 .|2e \n\n4c 65 73 20 65 78 63 e8 73 20 74 75 65 6e 74 20 70 6c 75 73 20 73 fb 72 65 6d 65 6e 74 20 71 75 65 20 6c 65 73 20 e9 70 e9 65 73 2e \n\n\nRédiger un paragraphe expliquant l’intérêt du codage UTF-8, ses avantages et ses inconvénients par rapport l’ASCII ou au codage ISO-8859-1.\n\nInformatique et sciences du numérique Spécialité ISN en terminale S - Avec des exercices corrigés et des idées de projets par Gilles Dowek",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 4: Représentation des textes",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/4-representation-des-textes/exo/index.html#encodage-et-décodage-en-python",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/4-representation-des-textes/exo/index.html#encodage-et-décodage-en-python",
    "title": "Exercices",
    "section": "2 Encodage et décodage en Python",
    "text": "2 Encodage et décodage en Python\n\n2.1 Encodage\nTenter d’encoder la première phrase du texte avec python.\nphrase = \"Grace Murray Hopper, née le 9 décembre 1906 à New York et morte le 1er janvier\"\nphrase.encode(\"utf-8\")\n\nRecommencer avec les encodages ISO-8859-1 et ISO-8859-11. Noter vos observations.\nMontrer que le caractère € peut être encodé en UTF-8, ISO-8859-15, mais pas ISO-8859-1.\n\n\n\n2.2 Décodage\nTenter de décoder quelques caractères de leur forme binaire (hexadécimale) vers leur représentation réelle.\nb'\\xc3\\xa9'.decode('utf-8')\n\nRechercher d’autres codes hexadécimaux de caractères UTF-8 à décoder sur l’article Wikipédia.\nRechercher des codes de caractères hexadécimaux iso-8859-1 à décoder.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 4: Représentation des textes",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/4-representation-des-textes/exo/index.html#lecture-et-écriture-de-fichiers-en-python",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/4-representation-des-textes/exo/index.html#lecture-et-écriture-de-fichiers-en-python",
    "title": "Exercices",
    "section": "3 Lecture et écriture de fichiers en Python",
    "text": "3 Lecture et écriture de fichiers en Python\n\n3.1 Lecture de fichier\nPour lire un fichier texte depuis Python, la syntaxe est la suivante:\nwith open('file-utf-8.md') as f:\n    read_data = f.read()\n    print(read_data)\nDans ce cas, on lit le fichier sous forme de texte encodé (par défaut utf-8)\nMais si on a besoin, on peut aussi lire le texte sous forme de bits, en ajoutant un deuxième argument à la fonction open (ici \"rb\" pour read bytes):\nwith open('file-utf-8.md', 'rb') as f:\n    read_data = f.read()\n    print(read_data)\n\n\n3.2 Écriture de fichiers\nDans ce cas le deuxième argument est \"w\" pour write ou \"wb\" pour write bytes.\nwith open('file-from-python-utf-8.md', 'w') as f:\n    f.write(\"À l'origine, ce fichier texte a été écrit depuis python\")\n\n# Vérification\nwith open('file-from-python-utf-8.md') as f:\n    read_data = f.read()\n    print(read_data)\n\nEn utilisant les fonctions vues, écrire un fichier texte depuis Python que vous encoderez d’abord en utf-8, puis en iso-8859-15.\nComparer les codes binaires des deux fichiers.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 4: Représentation des textes",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/4-representation-des-textes/quiz/index.html",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/4-representation-des-textes/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 4: Représentation des textes",
      "Quiz"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/5-les-booleens/index.html",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/5-les-booleens/index.html",
    "title": "Chapitre 5: Les booléens",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nValeurs booléennes : 0, 1.\nOpérateurs booléens : and, or, not.\nExpressions booléennes\nDresser la table d’une d’une expression booléenne.\nLe ou exclusif (xor) est évoqué.\nQuelques applications directes comme l’addition binaire sont présentées.\nL’attention des élèves est attirée sur le caractère séquentiel de certains opérateurs booléens.\nDans ce cours, nous allons nous intéresser à un type simple, les booléens qui ne possèdent que deux valeurs et qui sont donc codés que sur un seul bit:\nCes types sont extrêmement utilisés en informatique notamment pour l’exécution conditionnelle de code en fonction des conditions. La fameuse instruction if ... else.\nComme il n’existe que deux valeurs booléennes, les opérations ne sont pas les mêmes qu’avec les nombres.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 5: Les booléens"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/5-les-booleens/index.html#introduction-à-lalgèbre-de-boole",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/5-les-booleens/index.html#introduction-à-lalgèbre-de-boole",
    "title": "Chapitre 5: Les booléens",
    "section": "1 Introduction à l’algèbre de Boole",
    "text": "1 Introduction à l’algèbre de Boole\nDans le monde noir et blanc des idéaux, il y a une vérité absolue. C’est-à-dire que tout est vrai ou faux. Dans ce contexte philosophique, considérons les exemples suivants:\n\n“Un plus un égal deux.” Vrai ou faux?\n\nC’est (sans doute) vrai!\n\n“1 + 1 = 2” ET “2 + 2 = 4” Vrai ou faux? \n\nC’est aussi vrai.\nMais qu’en est-il:\n\n“1 + 1 = 3” OU “Sydney est en Australie” Vrai ou faux?\n\nC’est vrai! Bien que 1 + 1 = 3 ne soit pas vrai, le OU dans l’instruction a indiqué que, si l’une ou l’autre partie de l’instruction est vraie, l’instruction entière l’est également.\nConsidérons maintenant un exemple plus déconcertant\n\n“2 + 2 = 4” OU “1 + 1 = 3” ET “1 - 3 = -1” Vrai ou faux?\n\nLa vérité ou la fausseté des déclarations dépend de l’ordre dans lequel vous évaluez la déclaration. Si vous évaluez d’abord “2 + 2 = 4 OU 1 + 1 = 3”, la déclaration est fausse et sinon vraie. Comme en algèbre ordinaire, il est nécessaire de définir certaines règles pour régir l’ordre d’évaluation, afin d’éviter toute ambiguïté.\nAvant de décider dans quel ordre évaluer les énoncés, nous faisons ce que la plupart des mathématiciens aiment faire, remplacer les phrases par des symboles ces symboles représentent ce que l’on appelle des variables propositionnelles:\n\nSoit PP la vérité ou la fausseté de l’énoncé 2 + 2 = 4.\nSoit QQ la vérité ou la fausseté de l’énoncé 1 + 1 = 3.\nSoit RR la vérité ou la fausseté de l’énoncé 1 - 3 = -1.\n\nEnsuite, l’exemple ci-dessus peut être récrit de manière plus compacte:\nPouQetR\nP\\ \\textrm{ou}\\ Q\\ \\textrm{et}\\ R\n\nPour aller encore plus loin, les mathématiciens remplacent également les opérations par des signes OU par ∨\\vee et ET par ∧\\wedge, l’énoncé devient:\nP∨Q∧R\nP \\vee Q \\wedge R\n\nIl faut également établir l’ordre de priorité. Nous évaluons ET en premier, puis OU avec le P.\nLa déclaration P∨Q∧RP \\vee Q \\wedge R est vraie on peut écrire:\nP∨Q∧R=VRAI\n P \\vee Q \\wedge R = \\textrm{VRAI}",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 5: Les booléens"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/5-les-booleens/index.html#opérations-fondamentales-et-notations",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/5-les-booleens/index.html#opérations-fondamentales-et-notations",
    "title": "Chapitre 5: Les booléens",
    "section": "2 Opérations fondamentales et notations",
    "text": "2 Opérations fondamentales et notations\nDans ce cours on notera les valeurs VRAI=1\\textrm{VRAI} = 1 et FAUX=0\\textrm{FAUX} = 0.\nL’algèbre booléenne est construite à partir de 3 opérations fondamentales, les notations dépendent du domaine d’étude (logique, électronique, algèbre…), on utilisera une notation proche de langages de programmation usuels tels que le C ou le javascript.\n\n\n\nOpération\nÉcriture utilisée\nÉcritures rencontrées\n\n\n\n\nET\n&\n×\\times ou ⋅\\cdot ou ∧\\wedge\n\n\nOU\n|\n++ ou ∨\\vee\n\n\nNON\n!\nP’, ~P, ¬P\\neg P, P¯\\overline{P}\n\n\n\n\nLe ET logique (&) est prioritaire sur le OU (|).\n\nOn notera dans ce cours les variables booléennes avec des lettres majuscules: P\\displaystyle\nP, Q\\displaystyle Q, R\\displaystyle R… On parle de variable propositionnelle.\nDans les langages informatiques, les syntaxes peuvent être encore différentes!\n\n\n\nOpération\npython\njavascript\n\n\n\n\nValeurs booléennes\n\n\n\n\nVRAI = 1\nTrue\ntrue\n\n\nFAUX = 0\nFalse\nfalse\n\n\nOpérateurs booléens\n\n\n\n\nNON (!)\nnot a\n!a\n\n\nET (&)\na and b\na && b\n\n\nOU (|)\na or b\na || b",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 5: Les booléens"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/5-les-booleens/index.html#tables-de-vérités",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/5-les-booleens/index.html#tables-de-vérités",
    "title": "Chapitre 5: Les booléens",
    "section": "3 Tables de vérités",
    "text": "3 Tables de vérités\n\n\nTables de vérité\n\n\n\nUne table de vérité donne tous les résultats possibles d’une opération booléenne en fonction de la ou les entrées.\n\n\n\nNous allons dans un premier temps nous intéresser aux tables de vérité des trois fonctions logiques fondamentales:\n\n3.1 Fonction NON LOGIQUE: !\nLa fonction logique NON n’a qu’un argument.\nElle renvoie l’inverse de son argument FAUX si l’argument est VRAI, et vice-versa.\n\n\n\nP\n!P\n\n\n\n\n0\n0\n1\n0\n\n\n\n\n\n3.2 Fonction ET LOGIQUE: &\nLa fonction ET LOGIQUE a deux arguments, elle renvoie VRAI si les deux arguments ont pour valeur VRAI.\n\n\n\nP\nQ\nP & Q\n\n\n\n\n0\n0\n1\n1\n0\n1\n0\n1\n0\n0\n0\n1\n\n\n\nOn voit bien grâce à cette table pourquoi on utilise parfois le signe x pour désigner la fonction ET LOGIQUE.\n\n0×0=00 \\times 0 = 0\n0×1=00 \\times 1 = 0\n1×0=01 \\times 0 = 0\n1×1=11 \\times 1 = 1\n\n\n\n3.3 Fonction OU LOGIQUE: |\nLa fonction OU LOGIQUE a deux arguments, elle renvoie VRAI si au moins un des deux arguments a pour valeur VRAI.\n\n\n\nP\nQ\nP | Q\n\n\n\n\n0\n0\n1\n1\n0\n1\n0\n1\n0\n1\n1\n1\n\n\n\nOn voit grâce à cette table que le signe + utilisé pour désigner la fonction OU LOGIQUE fonctionne à peu près comme le + de notre algèbre traditionnelle.\n\n0+0=00 + 0 = 0\n0+1=10 + 1 = 1\n1+0=11 + 0 = 1\n1+1=11 + 1 = 1\n\n\n\n\n\n\n\n\nEn plus: XOR, NAND et NOR\n\n\n\n\n\n\nBien que toutes les opérations booléennes puissent être écrites avec les trois opérations fondamentales ET, OU et NON, on utilise fréquemment d’autres opérations:\n\nXOR: OU EXCLUSIF cette opération renvoie vrai uniquement si P ou Q sont vraies, mais pas les deux P&!Q|!P&QP \\& !Q | !P \\& Q.\nNAND: NON ET cette opération renvoie faux uniquement si P et Q sont vraies !(P&Q)!(P \\& Q).\nNOR: NON OU cette opération renvoie vrai uniquement si P et Q sont fausses !(P|Q)!(P | Q).\n\nVous pouvez construire les tables de vérité de ces fonctions en application.\n\n\n\n\n\n\n\n3.4 Tables de vérité composées\nLes trois tables de vérité présentées ci-dessus sont les plus élémentaires et servent de jeux de construction pour les plus complexes.\nSupposons que nous voulions construire une table de vérité pour P & Q | R (c-à-d P ET Q OU R).\nRemarquez que cette table implique trois variables (P, Q et R), nous nous attendons donc à ce qu’elle soit plus grande que les précédentes.\nPour construire une table de vérité, nous écrivons d’abord toutes les combinaisons possibles des trois variables:\nP   Q   R\n---------\n0   0   0\n0   0   1\n0   1   0\n0   1   1\n1   0   0\n1   0   1\n1   1   0\n1   1   1\nNous complétons ensuite le tableau à la main en calculant la valeur que chaque combinaison produira en utilisant l’expression P&Q | R.\nP   Q   R  | P & Q | R\n-----------|----------\n0   0   0  |     0\n0   0   1  |     1\n0   1   0  |     0\n0   1   1  |     1\n1   0   0  |     0\n1   0   1  |     1\n1   1   0  |     1\n1   1   1  |     1\nLa procédure que nous suivons pour produire des tables de vérité est maintenant claire. Voici quelques exemples supplémentaires de tables de vérité.\n\n\n\n\n\n\n\nApplication: Construire des tables de vérité\n\n\n\n\n\n\nConstruire les tables de vérité suivantes:\n\nP | Q | R\n!(P | Q & R)\n(P | Q & !R) & S\n\nCORRECTION\n\nTable de vérité de P | Q | R\n\n\n\nP\nQ\nR\nP | Q | R\n\n\n0\n0\n0\n0\n\n\n0\n0\n1\n1\n\n\n0\n1\n0\n1\n\n\n0\n1\n1\n1\n\n\n1\n0\n0\n1\n\n\n1\n0\n1\n1\n\n\n1\n1\n0\n1\n\n\n1\n1\n1\n1\n\n\n\nTable de vérité de !(P | Q & R)\n\n\n\nP\nQ\nR\nQ&R\nP | QR\n!(P | Q & R)\n\n\n0\n0\n0\n\n\n1\n\n\n0\n0\n1\n\n\n1\n\n\n0\n1\n0\n\n\n1\n\n\n0\n1\n1\n1\n1\n0\n\n\n1\n0\n0\n\n1\n0\n\n\n1\n0\n1\n\n1\n0\n\n\n1\n1\n0\n\n1\n0\n\n\n1\n1\n1\n1\n1\n0\n\n\n\nTable de vérité de (P | Q & !R) & S\n\n\n\nP\nQ\nR\nS\nQ & !R\nP | Q & !R\n(P | Q & !R) & S\n\n\n0\n0\n0\n0\n\n\n\n\n\n0\n0\n0\n1\n\n\n\n\n\n0\n0\n1\n0\n\n\n\n\n\n0\n0\n1\n1\n\n\n\n\n\n0\n1\n0\n0\n1\n1\n\n\n\n0\n1\n0\n1\n1\n1\n1\n\n\n0\n1\n1\n0\n\n\n\n\n\n0\n1\n1\n1\n\n\n\n\n\n1\n0\n0\n0\n\n1\n\n\n\n1\n0\n0\n1\n\n1\n1\n\n\n1\n0\n1\n0\n\n1\n\n\n\n1\n0\n1\n1\n\n1\n1\n\n\n1\n1\n0\n0\n1\n1\n\n\n\n1\n1\n0\n1\n1\n1\n1\n\n\n1\n1\n1\n0\n\n1\n\n\n\n1\n1\n1\n1\n\n1\n1\n\n\n\n\n\n\n\n\n\nVous pouvez consulter la page d’exercices pour vous entraîner.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 5: Les booléens"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/5-les-booleens/index.html#équivalence-dexpressions-booléennes",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/5-les-booleens/index.html#équivalence-dexpressions-booléennes",
    "title": "Chapitre 5: Les booléens",
    "section": "4 Équivalence d’expressions booléennes",
    "text": "4 Équivalence d’expressions booléennes\nEn algèbre ordinaire, deux expressions peuvent être équivalentes, par exemple:\nx×z+y×z=(x+y)×z\nx \\times z + y \\times z = (x + y) \\times z\n\nLa même chose peut être dite de l’algèbre booléenne. Construisons des tables de vérité pour:\nP&R|Q&RP \\& R | Q \\& R et (P|Q)&R(P | Q) \\& R\nP   Q   R  | P & R | Q & R\n--------------------------\n0   0   0  |       0 \n0   0   1  |       0 \n0   1   0  |       0 \n0   1   1  |       1 \n1   0   0  |       0 \n1   0   1  |       1 \n1   1   0  |       0 \n1   1   1  |       1 \nP   Q   R  | (P | Q) & R\n------------------------\n0   0   0  |     0 \n0   0   1  |     0 \n0   1   0  |     0 \n0   1   1  |     1 \n1   0   0  |     0 \n1   0   1  |     1 \n1   1   0  |     0 \n1   1   1  |     1 \nEn comparant les deux tableaux, vous aurez remarqué que les résultats(c’est-à-dire la dernière colonne) des deux tableaux sont identiques!\n\n\nÉquivalence d’expressions booléennes\n\n\n\nNous disons que deux expressions booléennes sont équivalentes si la sortie de leurs tables de vérité est la même. L’équivalence d’expressions booléennes est notée avec le signe =.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 5: Les booléens"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/5-les-booleens/index.html#les-lois-de-lalgèbre-de-boole",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/5-les-booleens/index.html#les-lois-de-lalgèbre-de-boole",
    "title": "Chapitre 5: Les booléens",
    "section": "5 Les lois de l’algèbre de BOOLE",
    "text": "5 Les lois de l’algèbre de BOOLE\nIl n’est pas demandé d’apprendre ces lois, mais vous devez savoir les démontrer.\n\n\n\nNom de la loi\nÉcriture mathématique\n\n\n\n\nÉléments neutres\nP|0=PP|0=P\nP&1=PP\\&1=P\n\n\nÉléments absorbants\nP&0=0P\\&0=0\nP|1=1P| 1=1\n\n\nComplémentarité\nP|!P=1P| !P=1\nP&!P=0P\\& !P=0\n\n\nIdempotence\nP|P=PP| P=P\nP&P=PP \\&P = P\n\n\nCommutativité\nP&Q=Q&PP \\& Q = Q \\& P\nP|Q=Q|PP | Q = Q | P\n\n\nAssociativité\nP&(Q&R)=(P&Q)&R=P&Q&RP \\& (Q \\& R)= (P \\& Q) \\&R =P \\&Q \\& R\nP|(Q|R)=(P|Q)|R=P|Q|RP | ( Q | R ) = (P | Q) | R = P | Q | R\n\n\nDistributivité\nP&(Q|R)=P&Q|P&RP \\& ( Q | R ) = P \\& Q | P \\& R\nP|(Q&R)=(P|Q)&(P|R)P | ( Q \\& R ) =(P | Q)\\&(P | R)\n\n\nLois de De Morgan\n!(P|Q)=!P&!Q!(P | Q)= !P \\& !Q\n!(P&Q)=!P|!Q!(P\\& Q)= !P | !Q\n\n\n\nCes lois peuvent facilement être démontrées à l’aide de tables de vérité.\n\n\nhttps://en.m.wikibooks.org/wiki/High_School_Mathematics_Extensions/Logic\nhttp://info.blaisepascal.fr/nsi-les-booleens\nhttps://www.maxicours.com/se/cours/simplification-de-l-expression-logique-a-l-aide-des-regles-de-l-algebre-booleenne/\nhttp://www.courstechinfo.be/MathInfo/FctLogiques1.html\nhttps://www.plymouth.ac.uk/uploads/production/document/path/3/3760/PlymouthUniversity_MathsETStats_Boolean_algebra_ET_logic_gates.pdf",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base",
      "Chapitre 5: Les booléens"
    ]
  },
  {
    "objectID": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/index.html",
    "href": "1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/index.html",
    "title": "Partie 2: Représentation des données : types et valeurs de base",
    "section": "",
    "text": "Chapitre 1: Représentation des entiers naturels\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 2: Représentation des entiers relatifs\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 3: Représentation des nombres à virgule\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 4: Représentation des textes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 5: Les booléens\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAucun article correspondant",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 2: Représentation des données : types et valeurs de base"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/4-conditions/index.html",
    "href": "1g/nsi/7-langages-et-programmation/4-conditions/index.html",
    "title": "Chapitre 4: Conditions",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nConstructions élémentaires\nMettre en évidence un corpus de constructions élémentaires. boucles non bornées, appels de fonction.\nSéquences, affectation, conditionnelles, boucles bornées,",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 4: Conditions"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/4-conditions/index.html#les-blocs-en-python",
    "href": "1g/nsi/7-langages-et-programmation/4-conditions/index.html#les-blocs-en-python",
    "title": "Chapitre 4: Conditions",
    "section": "1 Les blocs en python",
    "text": "1 Les blocs en python\nNous avons vu précédemment que les programmes étaient une suite d’instructions. Il est cependant possible d’utiliser des blocs d’instructions qui ne seront pas exécutés dès leur apparition dans le programme à l’opposé des instructions écrites dans le flot principal(à gauche de la ligne).\nEn python, les blocs sont délimités grâce à des espaces et introduits grâce à deux points :.\nentrée dans un bloc:\n    ligne 1 du bloc\n    ligne 2 du bloc\n    ...\n\nretour dans l’exécution normale du programme ligne à ligne.\nAujourd’hui, nous allons utiliser des structures de contrôle qui permettent d’exécuter: des blocs, en fonction de conditions. On parle de structure conditionnelle.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 4: Conditions"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/4-conditions/index.html#opérateurs-de-comparaison",
    "href": "1g/nsi/7-langages-et-programmation/4-conditions/index.html#opérateurs-de-comparaison",
    "title": "Chapitre 4: Conditions",
    "section": "2 Opérateurs de comparaison",
    "text": "2 Opérateurs de comparaison\nPour tester une condition, on utilise un opérateur de comparaison qui donne un résultat booléen: True ou False.\nSoit x et y des variables de type int ou float, les opérateurs de comparaison sont:\n\nx &lt; y: x est-il inférieur à y ?\nx &lt;= y: x est-il inférieur ou égal à y ?\nx &gt; y: x est-il supérieur à y ?\nx &gt;= y: x est-il supérieur ou égal à y ?\nx == y: x est-il égal à y ?\nx != y: x est-il différent de y ?\n\n\n\n\n\n\n\nAvertissement\n\n\n\nComme vous l’avez remarqué pour tester une égalité on utilise le double signe égal ==. Tout simplement, car le signe égal seul = est déjà utilisé pour l’affectation de variables.\n\n\n\n\nprint(3 &lt; 5)\n&gt;&gt;sortie\n\nTrue\n\n\n\nprint(3 &lt;= 5)\n&gt;&gt;sortie\n\nTrue\n\n\nDans l’environnement Jupyter, le print sur la dernière ligne est optionnel, et le résultat de la dernière expression entrée est évalué et affiché.\n\n3 &gt; 5\n\nFalse\n\n\n\n3 &gt;= 5\n\nFalse\n\n\n\n3 == 5\n\nFalse\n\n\n\n3 != 5\n\nTrue\n\n\nOn peut constater que ces instructions retournent systématiquement un objet de type booléen.\n\ntype(3 &gt; 5)\n\nbool\n\n\nOu une erreur si on cherche à comparer l’incomparable:\n\n3 &lt; \"5\"\n&gt;&gt;sortie\n\nTypeError: '&lt;' not supported between instances of 'int' and 'str'\n\n\n\n\nLes opérateurs de comparaison ont une priorité inférieure aux opérateurs arithmétiques.\n\n\n3 + 4 &lt; 2 * 12 renvoie True car les opérations + et * sont exécutées avant la comparaison &lt;.\nLes parenthèses sont donc inutiles ((3 + 4) &lt; (2 * 12)).",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 4: Conditions"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/4-conditions/index.html#programme-à-structure-conditionnelle",
    "href": "1g/nsi/7-langages-et-programmation/4-conditions/index.html#programme-à-structure-conditionnelle",
    "title": "Chapitre 4: Conditions",
    "section": "3 Programme à structure conditionnelle",
    "text": "3 Programme à structure conditionnelle\nDans ce type de programme, le code sera toujours interprété ligne par ligne, cependant certains blocs de code ne seront exécutés que si une condition donnée est vraie.\n\n3.1 L’instruction if\nLe bloc d’instruction contenu n’est exécuté que si la condition est vérifiée.\nSyntaxe\nif condition:\n    instruction 1\n    instruction 2\n    ...\n\na = 3\nif a &gt; 0:\n    a = -a\nprint(a)\n&gt;&gt;sortie\n\n-3\n\n\nDans le programme précédent l’instruction if a &gt; 0: est toujours exécutée par l’interpréteur, car elle est dans le flux normal du programme(en début de ligne).\nPar contre, l’instruction a = -a n’est exécutée que si la condition a &gt; 0 a renvoyé True, il s’agit d’un bloc relatif à l’instruction if a &gt; 0: qui le précède. Elle est indentée avec quatre espaces. Si j’affecte la valeur négative -5 à a, ce bloc ne sera pas exécuté, et le changement de signe n’aura pas lieu.\n\na = -5\nif a &gt; 0:\n    a = -a\nprint(a)\n&gt;&gt;sortie\n\n-5\n\n\n\n\n3.2 L’instruction else\nIndique le bloc d’instruction à exécuter si la condition n’est pas vérifiée.\nSyntaxe\nif condition:\n    bloc d'instructions exécuté si la condition est vraie\nelse:\n    bloc d'instructions exécuté si la condition est fausse\n\na = -3\nif a &gt; 0:\n    a = -a\nelse:\n    a = a*100\n\nprint(a)\n&gt;&gt;sortie\n\n-300\n\n\nComme initialement la variable a n’était pas positive, c’est le bloc d’instructions else qui a été exécuté.\n\n\n3.3 L’instruction elif\nCette instruction permet de réaliser des tests imbriqués, c’est un raccourci pour les instructions else et if.\nSyntaxe\nif condition 1:\n    bloc d'instructions exécuté si la condition 1 est vraie\nelif condition 2:\n    bloc d'instructions exécuté si la condition 1 est fausse et la condition 2 vraie\nelse:\n    bloc d'instructions exécuté si les conditions 1 et 2 sont fausses\n\na = 3\nif a == 7:\n    print(\"C'est un chiffre porte bonheur\")\nelif a == 3:\n    print(\"Quelques modifications sont nécessaires\")\n    a += 4\n\nprint(a)\n&gt;&gt;sortie\n\nQuelques modifications sont nécessaires\n7",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 4: Conditions"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/4-conditions/index.html#opérateurs-booléens",
    "href": "1g/nsi/7-langages-et-programmation/4-conditions/index.html#opérateurs-booléens",
    "title": "Chapitre 4: Conditions",
    "section": "4 Opérateurs booléens",
    "text": "4 Opérateurs booléens\nOn peut combiner des conditions avec les opérateurs booléens.\nLes opérateurs booléens français sont ET, OU, NON et leur correspondant en Python sont and, or et not.\n\nand renvoie True si les deux arguments ont pour valeur True.\nor renvoie True si au moins un des deux arguments a pour valeur True.\nnot renvoie l’inverse de son argument False si l’argument est True, et vice-versa.\n\n\n\n1 &lt; 2 and 3 &lt; 4 renvoie True\n1 &lt; 2 and 3 &gt; 4 renvoie False\n1 &lt; 2 or 3 &lt; 4 renvoie True\n1 &lt; 2 or 3 &gt; 4 renvoie True\nnot 1 &lt; 2 renvoie False\n\n\n\nLes opérateurs de comparaison sont prioritaires sur les opérateurs booléens. Quand on écrit 1 &lt; 2 and 3 &lt; 4 les opérations sont évaluées avant l’opération and; les parenthèses sont superflues: (1 &lt; 2) and (3 &lt; 4).\n\nVous êtes maintenant armés pour aborder des programmes beaucoup plus riches dans lesquels vous allez pouvoir prendre des décisions en fonction des données qui lui arrivent.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 4: Conditions"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/3-entrees-et-sorties/exo/index.html",
    "href": "1g/nsi/7-langages-et-programmation/3-entrees-et-sorties/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Écrivez un programme qui fait saisir un prix hors taxes à l’utilisateur, puis qui affiche le prix TTC correspondant en se basant sur un taux de TVA à 20%.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 3: Entrées et sorties",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/3-entrees-et-sorties/exo/index.html#calcul-de-prix-ttc",
    "href": "1g/nsi/7-langages-et-programmation/3-entrees-et-sorties/exo/index.html#calcul-de-prix-ttc",
    "title": "Exercices",
    "section": "",
    "text": "Écrivez un programme qui fait saisir un prix hors taxes à l’utilisateur, puis qui affiche le prix TTC correspondant en se basant sur un taux de TVA à 20%.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 3: Entrées et sorties",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/3-entrees-et-sorties/exo/index.html#calcul-dune-vitesse",
    "href": "1g/nsi/7-langages-et-programmation/3-entrees-et-sorties/exo/index.html#calcul-dune-vitesse",
    "title": "Exercices",
    "section": "2 Calcul d’une vitesse",
    "text": "2 Calcul d’une vitesse\nÉcrivez un programme qui fait saisir une distance en mètre et un temps en seconde, puis qui affiche la valeur de la vitesse en m/s et en km/h.\nv=dtv=\\frac{d}{t}",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 3: Entrées et sorties",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/3-entrees-et-sorties/exo/index.html#permutation-de-deux-variables",
    "href": "1g/nsi/7-langages-et-programmation/3-entrees-et-sorties/exo/index.html#permutation-de-deux-variables",
    "title": "Exercices",
    "section": "3 Permutation de deux variables",
    "text": "3 Permutation de deux variables\nÉcrivez un programme qui permute deux variables :\nnombre1 = 5\nnombre2 = 3\n\n# Tapez votre code ici (sans rien modifier au deux lignes au dessus et en dessous.)\n\nprint(nombre1); # Doit afficher 3\nprint(nombre2); # Doit afficher 5",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 3: Entrées et sorties",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/3-entrees-et-sorties/quiz/index.html",
    "href": "1g/nsi/7-langages-et-programmation/3-entrees-et-sorties/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 3: Entrées et sorties",
      "Quiz"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/8-mise-au-point-dun-programme/index.html",
    "href": "1g/nsi/7-langages-et-programmation/8-mise-au-point-dun-programme/index.html",
    "title": "Chapitre 8: Mise au point d’un programme",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nMise au point de programmes\nUtiliser des jeux de tests.\nL’importance de la qualité et du nombre des tests est mise en évidence.\nLe succès d’un jeu de tests ne garantit pas la correction d’un programme.\n\n\nUtilisation de bibliothèques\nUtiliser la documentation d’une bibliothèque.\nAucune connaissance exhaustive d’une bibliothèque particulière n’est exigible.\nNous avons déjà vu que parmi des ingrédients des programmes, il y en a un qui est particuliérément utile pour rendre les programmes plus lisibles et structurés et donc plus faciles à maintenir, c’est l’utilisation de fonctions.\nNous avons également vu comment prototyper des fonctions afin de pouvoir rendre le code plus explicite et que l’on puisse revenir dessus afin de l’améliorer ou le corriger plus tard lors du développement du programme.\nNous étions alors dans la phase descendante de la conception du programme qui nous a permis d’arriver à implémenter notre programme. Ce modèle d’organisation de la conception d’un programme est connu sous le nom de cycle en V, et il est un standard utuilisé depuis les années 1980.\nNous allons voir dans ce chapitre une autre étape du cycle de développement d’applications: La mise au point du programme grâce à l’utilisation de tests.\nPrenons l’exemple du calcul des racines du trinôme proposé par un élève. Nous allons peu à peu améliorer ce programme pour le rendre plus stable, plus facile à utiliser, à maintenir et à améliorer pour le futur.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 8: Mise au point d’un programme"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/8-mise-au-point-dun-programme/index.html#utilisation-dune-approche-fonctionnelle-def",
    "href": "1g/nsi/7-langages-et-programmation/8-mise-au-point-dun-programme/index.html#utilisation-dune-approche-fonctionnelle-def",
    "title": "Chapitre 8: Mise au point d’un programme",
    "section": "1 Utilisation d’une approche fonctionnelle: def",
    "text": "1 Utilisation d’une approche fonctionnelle: def\nPlutôt que de placer les instructions les unes à la suite des autres sans réelle organisation, nous allons utiliser une approche fonctionnelle pour rendre ce programme plus pratique à utiliser et à tester.\nLa programmation fonctionnelle est un paradigme de programmation très apprécié notamment dans le monde universitaire, et de plus en plus utilisé par l’industrie afin d’avoir des programmes dont le comportement est plus facile à prédire que dans un programmation orientée objet par exemple.\nOn va placer le code dans une fonction qui prend trois arguments, les coefficients du trinôme et qui affiche les racines à l’écran(il s’agit pour l’instant d’une procédure).\n\ndef racines_du_trinome(a, b, c):\n    import math\n    # Calcul du discriminant\n    delta = b * b - 4 * a * c\n    # Affichage des solutions\n    if delta &lt; 0: \n        print(\"Pas de solution\")\n    elif delta == 0:\n        print(\"Une solution : \",end=\"\")\n        print(- b / (2 * a))\n    else:\n        print(\"Deux solutions : \",end=\"\")\n        print((- b - math.sqrt(delta)) / (2 * a),end=\"\")\n        print(\" et \",end=\"\")\n        print((- b + math.sqrt(delta)) / (2 * a))\nracines_du_trinome(a=1, b=0, c=-1)\n&gt;&gt;sortie\n\nDeux solutions : -1.0 et 1.0",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 8: Mise au point d’un programme"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/8-mise-au-point-dun-programme/index.html#renvoi-de-valeurs-return",
    "href": "1g/nsi/7-langages-et-programmation/8-mise-au-point-dun-programme/index.html#renvoi-de-valeurs-return",
    "title": "Chapitre 8: Mise au point d’un programme",
    "section": "2 Renvoi de valeurs: return",
    "text": "2 Renvoi de valeurs: return\nNous allons maintenant remplacer les print par des return pour récupérer les racines en sortie de la fonction.\nEn effet tout ce qui se passe à l’intérieur d’une fonction reste à l’intérieur de la fonction, mais par contre les print() sont des fonctions globales qui agissent à l’extérieur de la fonction( On parle d’effets de bords).\nEn utilisant des return, on pourra récupérer le résultat de l’algorithme de notre fonction que lorsqu’on l’appelera, et qu’on assignera éventuellemnt ces valeurs de retour à des variables(globales ou non).\n\ndef racines_du_trinome(a, b, c):\n    import math\n    # Calcul du discriminant\n    delta = b * b - 4 * a * c\n    # Affichage des solutions\n    if delta &lt; 0: \n        return ()\n    elif delta == 0:\n        return (- b / (2 * a))\n    else:\n        r1 = (- b - math.sqrt(delta)) / (2 * a)\n        r2 = (- b + math.sqrt(delta)) / (2 * a)\n        return (r1, r2)\nracines_du_trinome(a=1, b=0, c=-1)\n\n(-1.0, 1.0)",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 8: Mise au point d’un programme"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/8-mise-au-point-dun-programme/index.html#prototypage-de-la-fonction",
    "href": "1g/nsi/7-langages-et-programmation/8-mise-au-point-dun-programme/index.html#prototypage-de-la-fonction",
    "title": "Chapitre 8: Mise au point d’un programme",
    "section": "3 Prototypage de la fonction",
    "text": "3 Prototypage de la fonction\nPour rendre notre code compréhensible et facile à maintenir, on va écrire le prototype de la fonction comme on l’a vu dans le chapitre sur fonctions.\nOn appelle cela une docstring qui permet de comprendre comment “fonctionne” la fonction.\nOn la place sur une chaine de caractères multi-line avec trois guillemets. Elle se présente généralement en trois parties:\n\nUne explication\nParamètres\nSortie(Returns en anglais)\n\nMême si Python est un lagage non typé, on précise les type des paramètres et sorties de la fonction.\nLa docstring peut alors être renvoyée en cas de besoin avec la fonction Python help(nom_de_la_fonction)\n\ndef racines_du_trinome(a, b, c):\n    \"\"\"Renvoie les éventuelles racines d'un trinôme\n    \n    ax**2 + bx + c\n    \n    Parameters\n    ----------\n    a : float\n    b : float\n    c : float\n    \n    Returns\n    -------\n    tuple\n        tuple contenant les 0, 1 ou 2 racines du trinôme suivant le cas\n    \"\"\"\n    import math\n    # Calcul du discriminant\n    delta = b * b - 4 * a * c\n    # Affichage des solutions\n    if delta &lt; 0: \n        return ()\n    elif delta == 0:\n        return (- b / (2 * a))\n    else:\n        r1 = (- b - math.sqrt(delta)) / (2 * a)\n        r2 = (- b + math.sqrt(delta)) / (2 * a)\n        return (r1, r2)\nhelp(racines_du_trinome)\n&gt;&gt;sortie\n\nHelp on function racines_du_trinome in module __main__:\n\nracines_du_trinome(a, b, c)\n    Renvoie les éventuelles racines d'un trinôme\n    \n    ax**2 + bx + c\n    \n    Parameters\n    ----------\n    a : float\n    b : float\n    c : float\n    \n    Returns\n    -------\n    tuple\n        tuple contenant les 0, 1 ou 2 racines du trinôme suivant le cas",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 8: Mise au point d’un programme"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/8-mise-au-point-dun-programme/index.html#les-tests-assert",
    "href": "1g/nsi/7-langages-et-programmation/8-mise-au-point-dun-programme/index.html#les-tests-assert",
    "title": "Chapitre 8: Mise au point d’un programme",
    "section": "4 Les tests: assert",
    "text": "4 Les tests: assert\nL’informatique consiste la plupart du temps à une chasse aux bugs, il convient donc d’essayer de les repérer le plus tôt possible à l’aide de tests.\nOn va donc pour effectuer des tests sur les valeurs renvoyées par la fonction. Pour cela on utilise des assertions assert qui bloquent l’éxecution du programme lorsqu’une expression renvoie False.\nOn va placer ces tests dans une fonction appelée run_tests() pour pouvoir en placer plusieurs au fur et à mesure qu’on y pense ou que l’on constate des bugs.\n\ndef run_tests():\n    # deux racines réelles\n    assert racines_du_trinome(1,0,-1) == (-1.0, 1.0)\n    # une racine double\n    assert racines_du_trinome(1, 0, 0) == (0.0)\n    # pas de racine\n    assert racines_du_trinome(1, 0, 1) == ()\n    \n    # si une assertion s'avère fausse la fonction va renvoyer une AssertionError\n    print(\"Tous les tests ont été passé avec succés\")\nrun_tests()\n&gt;&gt;sortie\n\nTous les tests ont été passé avec succés",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 8: Mise au point d’un programme"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/8-mise-au-point-dun-programme/index.html#les-bibliothèques-import",
    "href": "1g/nsi/7-langages-et-programmation/8-mise-au-point-dun-programme/index.html#les-bibliothèques-import",
    "title": "Chapitre 8: Mise au point d’un programme",
    "section": "5 Les bibliothèques: import",
    "text": "5 Les bibliothèques: import\nLes bibliothéques ou modules permettent de rassembler et d’organiser les diverses fonctionnalités d’un programme afin de pouvoir les importer ultérieurement.\nElles constituent un outil important dans la mise au point de programme complexe en permettant de séparer le code en diveres parties, chacune de ces parties ayant un rôle bien spécifique et plus facile à tester.\nDe nombreuses bibliothéques sont fournies avec Python, comme par exemple les modules math ou random. On les appelle les bibilothèques standards. On en a également utilisé d’autres non fournies avec Python, mais facilement installables comme pandas pour le traitement de données, ou matplotlib pour le tracé de graphiques.\n\nimport math\n\n# racine carré de 4\nmath.sqrt(4)\n\n2.0\n\n\n\nimport random\n\n# nombre aléatoire entre 0 et 1\nrandom.random()\n\n0.38460822085845137\n\n\nOn peut accéder à la documentation directement à partir de python avec la fonction help, mais on préférera tout de même la documentation en ligne lorsqu’on a accès à internet.\n\nDoc Python: https://docs.python.org/3/\nDoc javascript: https://developer.mozilla.org/fr/docs/Web/JavaScript\n\n\nhelp(math)\n&gt;&gt;sortie\n\nHelp on module math:\n\nNAME\n    math\n\nMODULE REFERENCE\n    https://docs.python.org/3.11/library/math.html\n    \n    The following documentation is automatically generated from the Python\n    source files.  It may be incomplete, incorrect or include features that\n    are considered implementation detail and may vary between Python\n    implementations.  When in doubt, consult the module reference at the\n    location listed above.\n\nDESCRIPTION\n    This module provides access to the mathematical functions\n    defined by the C standard.\n\nFUNCTIONS\n    acos(x, /)\n        Return the arc cosine (measured in radians) of x.\n        \n        The result is between 0 and pi.\n    \n    acosh(x, /)\n        Return the inverse hyperbolic cosine of x.\n    \n    asin(x, /)\n        Return the arc sine (measured in radians) of x.\n        \n        The result is between -pi/2 and pi/2.\n    \n    asinh(x, /)\n        Return the inverse hyperbolic sine of x.\n    \n    atan(x, /)\n        Return the arc tangent (measured in radians) of x.\n        \n        The result is between -pi/2 and pi/2.\n    \n    atan2(y, x, /)\n        Return the arc tangent (measured in radians) of y/x.\n        \n        Unlike atan(y/x), the signs of both x and y are considered.\n    \n    atanh(x, /)\n        Return the inverse hyperbolic tangent of x.\n    \n    cbrt(x, /)\n        Return the cube root of x.\n    \n    ceil(x, /)\n        Return the ceiling of x as an Integral.\n        \n        This is the smallest integer &gt;= x.\n    \n    comb(n, k, /)\n        Number of ways to choose k items from n items without repetition and without order.\n        \n        Evaluates to n! / (k! * (n - k)!) when k &lt;= n and evaluates\n        to zero when k &gt; n.\n        \n        Also called the binomial coefficient because it is equivalent\n        to the coefficient of k-th term in polynomial expansion of the\n        expression (1 + x)**n.\n        \n        Raises TypeError if either of the arguments are not integers.\n        Raises ValueError if either of the arguments are negative.\n    \n    copysign(x, y, /)\n        Return a float with the magnitude (absolute value) of x but the sign of y.\n        \n        On platforms that support signed zeros, copysign(1.0, -0.0)\n        returns -1.0.\n    \n    cos(x, /)\n        Return the cosine of x (measured in radians).\n    \n    cosh(x, /)\n        Return the hyperbolic cosine of x.\n    \n    degrees(x, /)\n        Convert angle x from radians to degrees.\n    \n    dist(p, q, /)\n        Return the Euclidean distance between two points p and q.\n        \n        The points should be specified as sequences (or iterables) of\n        coordinates.  Both inputs must have the same dimension.\n        \n        Roughly equivalent to:\n            sqrt(sum((px - qx) ** 2.0 for px, qx in zip(p, q)))\n    \n    erf(x, /)\n        Error function at x.\n    \n    erfc(x, /)\n        Complementary error function at x.\n    \n    exp(x, /)\n        Return e raised to the power of x.\n    \n    exp2(x, /)\n        Return 2 raised to the power of x.\n    \n    expm1(x, /)\n        Return exp(x)-1.\n        \n        This function avoids the loss of precision involved in the direct evaluation of exp(x)-1 for small x.\n    \n    fabs(x, /)\n        Return the absolute value of the float x.\n    \n    factorial(n, /)\n        Find n!.\n        \n        Raise a ValueError if x is negative or non-integral.\n    \n    floor(x, /)\n        Return the floor of x as an Integral.\n        \n        This is the largest integer &lt;= x.\n    \n    fmod(x, y, /)\n        Return fmod(x, y), according to platform C.\n        \n        x % y may differ.\n    \n    frexp(x, /)\n        Return the mantissa and exponent of x, as pair (m, e).\n        \n        m is a float and e is an int, such that x = m * 2.**e.\n        If x is 0, m and e are both 0.  Else 0.5 &lt;= abs(m) &lt; 1.0.\n    \n    fsum(seq, /)\n        Return an accurate floating point sum of values in the iterable seq.\n        \n        Assumes IEEE-754 floating point arithmetic.\n    \n    gamma(x, /)\n        Gamma function at x.\n    \n    gcd(*integers)\n        Greatest Common Divisor.\n    \n    hypot(...)\n        hypot(*coordinates) -&gt; value\n        \n        Multidimensional Euclidean distance from the origin to a point.\n        \n        Roughly equivalent to:\n            sqrt(sum(x**2 for x in coordinates))\n        \n        For a two dimensional point (x, y), gives the hypotenuse\n        using the Pythagorean theorem:  sqrt(x*x + y*y).\n        \n        For example, the hypotenuse of a 3/4/5 right triangle is:\n        \n            &gt;&gt;&gt; hypot(3.0, 4.0)\n            5.0\n    \n    isclose(a, b, *, rel_tol=1e-09, abs_tol=0.0)\n        Determine whether two floating point numbers are close in value.\n        \n          rel_tol\n            maximum difference for being considered \"close\", relative to the\n            magnitude of the input values\n          abs_tol\n            maximum difference for being considered \"close\", regardless of the\n            magnitude of the input values\n        \n        Return True if a is close in value to b, and False otherwise.\n        \n        For the values to be considered close, the difference between them\n        must be smaller than at least one of the tolerances.\n        \n        -inf, inf and NaN behave similarly to the IEEE 754 Standard.  That\n        is, NaN is not close to anything, even itself.  inf and -inf are\n        only close to themselves.\n    \n    isfinite(x, /)\n        Return True if x is neither an infinity nor a NaN, and False otherwise.\n    \n    isinf(x, /)\n        Return True if x is a positive or negative infinity, and False otherwise.\n    \n    isnan(x, /)\n        Return True if x is a NaN (not a number), and False otherwise.\n    \n    isqrt(n, /)\n        Return the integer part of the square root of the input.\n    \n    lcm(*integers)\n        Least Common Multiple.\n    \n    ldexp(x, i, /)\n        Return x * (2**i).\n        \n        This is essentially the inverse of frexp().\n    \n    lgamma(x, /)\n        Natural logarithm of absolute value of Gamma function at x.\n    \n    log(...)\n        log(x, [base=math.e])\n        Return the logarithm of x to the given base.\n        \n        If the base not specified, returns the natural logarithm (base e) of x.\n    \n    log10(x, /)\n        Return the base 10 logarithm of x.\n    \n    log1p(x, /)\n        Return the natural logarithm of 1+x (base e).\n        \n        The result is computed in a way which is accurate for x near zero.\n    \n    log2(x, /)\n        Return the base 2 logarithm of x.\n    \n    modf(x, /)\n        Return the fractional and integer parts of x.\n        \n        Both results carry the sign of x and are floats.\n    \n    nextafter(x, y, /)\n        Return the next floating-point value after x towards y.\n    \n    perm(n, k=None, /)\n        Number of ways to choose k items from n items without repetition and with order.\n        \n        Evaluates to n! / (n - k)! when k &lt;= n and evaluates\n        to zero when k &gt; n.\n        \n        If k is not specified or is None, then k defaults to n\n        and the function returns n!.\n        \n        Raises TypeError if either of the arguments are not integers.\n        Raises ValueError if either of the arguments are negative.\n    \n    pow(x, y, /)\n        Return x**y (x to the power of y).\n    \n    prod(iterable, /, *, start=1)\n        Calculate the product of all the elements in the input iterable.\n        \n        The default start value for the product is 1.\n        \n        When the iterable is empty, return the start value.  This function is\n        intended specifically for use with numeric values and may reject\n        non-numeric types.\n    \n    radians(x, /)\n        Convert angle x from degrees to radians.\n    \n    remainder(x, y, /)\n        Difference between x and the closest integer multiple of y.\n        \n        Return x - n*y where n*y is the closest integer multiple of y.\n        In the case where x is exactly halfway between two multiples of\n        y, the nearest even value of n is used. The result is always exact.\n    \n    sin(x, /)\n        Return the sine of x (measured in radians).\n    \n    sinh(x, /)\n        Return the hyperbolic sine of x.\n    \n    sqrt(x, /)\n        Return the square root of x.\n    \n    tan(x, /)\n        Return the tangent of x (measured in radians).\n    \n    tanh(x, /)\n        Return the hyperbolic tangent of x.\n    \n    trunc(x, /)\n        Truncates the Real x to the nearest Integral toward 0.\n        \n        Uses the __trunc__ magic method.\n    \n    ulp(x, /)\n        Return the value of the least significant bit of the float x.\n\nDATA\n    e = 2.718281828459045\n    inf = inf\n    nan = nan\n    pi = 3.141592653589793\n    tau = 6.283185307179586\n\nFILE\n    /usr/lib/python3.11/lib-dynload/math.cpython-311-x86_64-linux-gnu.so",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 8: Mise au point d’un programme"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/8-mise-au-point-dun-programme/index.html#bibliothèques-tierces",
    "href": "1g/nsi/7-langages-et-programmation/8-mise-au-point-dun-programme/index.html#bibliothèques-tierces",
    "title": "Chapitre 8: Mise au point d’un programme",
    "section": "6 Bibliothèques tierces",
    "text": "6 Bibliothèques tierces\nLe succés d’un langage viendra souvent des bibliothèques tiers qui seront développées autour de lui, on télécharge aujourd’hui les bibliotgèques open-source directement sur internet.\n\nmodules Python: https://pypi.org/\nmodules javascript: https://www.npmjs.com/\n\nEn effet nous sommes souvent ammenés à réaliser le même type de tâches pour concevoir notre programme, et il n’est pas nécessaire de repartir de zéro à chaque fois.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 8: Mise au point d’un programme"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/2-types/exo/index.html",
    "href": "1g/nsi/7-langages-et-programmation/2-types/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "h5p: 2891408052\nSi l’exercice ne s’affiche pas correctement se rendre à l’adresse: https://h5p.lyceum.fr/2891408052/",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 2: Types",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/2-types/exo/index.html#types-simples-en-python",
    "href": "1g/nsi/7-langages-et-programmation/2-types/exo/index.html#types-simples-en-python",
    "title": "Exercices",
    "section": "",
    "text": "h5p: 2891408052\nSi l’exercice ne s’affiche pas correctement se rendre à l’adresse: https://h5p.lyceum.fr/2891408052/",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 2: Types",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/2-types/exo/index.html#types-et-opérations-en-python",
    "href": "1g/nsi/7-langages-et-programmation/2-types/exo/index.html#types-et-opérations-en-python",
    "title": "Exercices",
    "section": "2 Types et opérations en Python",
    "text": "2 Types et opérations en Python\nIndiquer la valeur et le type retourné.\n6 + 12 -3\n\"2\" + \"3\"\n2 * 3.0\n5 * True\nbool(0)\n10 / 3\n10.0 / 3.0\n10.0 // 3.0\n(2 + 3) * 4\n2 + 3 * 4\n\"2\" + \"3\" * 4\n2**3 + 1\n2.0 ** 2.0\n26 % 2\n25 % 2\n12.0 % 3\n12345 % 5",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 2: Types",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/2-types/quiz/index.html",
    "href": "1g/nsi/7-langages-et-programmation/2-types/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 2: Types",
      "Quiz"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/6-fonctions/index.html",
    "href": "1g/nsi/7-langages-et-programmation/6-fonctions/index.html",
    "title": "Chapitre 6: Fonctions",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nSpécification\nPrototyper une fonction.\nDécrire les préconditions sur les arguments.\nDécrire des postconditions sur les résultats.\nDes assertions peuvent être utilisées pour garantir des préconditions ou des postconditions.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 6: Fonctions"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/6-fonctions/index.html#définition-dune-fonction",
    "href": "1g/nsi/7-langages-et-programmation/6-fonctions/index.html#définition-dune-fonction",
    "title": "Chapitre 6: Fonctions",
    "section": "1 Définition d’une fonction",
    "text": "1 Définition d’une fonction\nUne fonction possède un nom pour pouvoir être appelée et il est possible de lui communiquer des arguments.\nEn python la syntaxe de définition d’une fonction est la suivante:\nSyntaxe (ATTENTION À L’INDENTATION)\ndef nom_de_ma_fonction(paramètres séparés par des virgules):\n    instruction 1\n    instruction 2\n    ...\n    return objet_renvoyé_par_ma_fonction\nPour appeler la fonction, il suffit de taper son nom avec les arguments entre parenthèse.\nnom_de_ma_fonction(arg1, arg2,...)\n\n\n\n\n\n\n\nEn plus: Conventions de noms en Python\n\n\n\n\n\n\nEn python, la convention PEP8 donne l’habitude de nommer les fonctions et variables avec des lettres minuscules et des tirets bas _ pour remplacer les espaces.\n\n\n\n\n\n\nfonction energie_cinetique()\nNous prendrons comme exemple le calcul de l’énergie cinétique d’un véhicule afin d’illustrer quelques notions utiles sur l’utilisation des fonctions en python.\nL’énergie cinétique d’un objet de masse m se déplaçant à la vitesse v est:\nEc=12mv2\nEc = \\frac{1}{2} m  v^{2}\n\nNous allons créer une fonction energie_cinetique qui calcule sa valeur à partir des paramètres masse et vitesse.\n\n# On définit la fonction\ndef energie_cinetique(m, v):\n    return 0.5*m*v**2\n\n# On appelle la fonction pour un objet de 2kg ayant une vitesse de 3m/s\nenergie_cinetique(2, 3) \n\n9.0\n\n\n\n\n\n\n\n\n\n\nEn plus: Les procédures\n\n\n\n\n\n\nIl est possible de définir des fonctions qui ne renvoient pas de valeur, on les nomme alors parfois procédure.\nCe type de fonction n’utilise pas l’instruction return. On peut s’en servir par exemple pour faire des affichages.\n\ndef affiche_ec(m, v):\n    ec = 0.5*m*v**2\n    print(\"L'énergie cinétique est:\", ec, \"J\")\n\nL’affichage s’effectue lors de l’appel de la procédure:\n\naffiche_ec(1,10)\n&gt;&gt;sortie\n\nL'énergie cinétique est: 50.0 J",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 6: Fonctions"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/6-fonctions/index.html#prototyper-une-fonction",
    "href": "1g/nsi/7-langages-et-programmation/6-fonctions/index.html#prototyper-une-fonction",
    "title": "Chapitre 6: Fonctions",
    "section": "2 Prototyper une fonction",
    "text": "2 Prototyper une fonction\nPour expliquer le fonctionnement d’une fonction, on lui ajoute un prototype juste sous la ligne de définition. En Python les prototypes sont appelés docstrings. On peut y accéder dans le code source ou simplement en utilisant la fonction help().\nLe prototype doit décrire le rôle de la fonction, le type des paramètres et le type de la valeur de retour.\n\ndef somme(a, b):\n    \"\"\"La somme de deux nombres.\n\n    Renvoie la somme des deux nombres donnés en arguments\n\n    Paramètres\n    ----------\n    a : int\n        première valeur à ajouter\n    b : int\n        deuxième valeur à ajouter\n\n    Renvoie\n    -------\n    int\n        La somme des deux arguments de la fonction\n    \"\"\"\n    return a + b\n\nMaintenant, en tapant help(somme), vous aurez toutes les informations utilise pour utiliser la fonction.\n\nhelp(somme)\n&gt;&gt;sortie\n\nHelp on function somme in module __main__:\n\nsomme(a, b)\n    La somme de deux nombres.\n    \n    Renvoie la somme des deux nombres donnés en arguments\n    \n    Paramètres\n    ----------\n    a : int\n        première valeur à ajouter\n    b : int\n        deuxième valeur à ajouter\n    \n    Renvoie\n    -------\n    int\n        La somme des deux arguments de la fonction",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 6: Fonctions"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/6-fonctions/index.html#réaliser-des-tests-dassertion",
    "href": "1g/nsi/7-langages-et-programmation/6-fonctions/index.html#réaliser-des-tests-dassertion",
    "title": "Chapitre 6: Fonctions",
    "section": "3 Réaliser des tests d’assertion",
    "text": "3 Réaliser des tests d’assertion\nPour être sûr que notre fonction donne les bons résultats, on utilise des tests d’assertion (affirmation en anglais) qui renvoient une AssertionError en cas d’erreur.\n\n\nassertion\n\n\n\n(Programmation) Expression évaluée à vrai. Wiktionnaire\n\n\n\nOn pourrait tester notre fonction somme sur des cas simples:\n\nassert somme(1, 2) == 3\nassert somme(0, 0) == 0\nassert somme(10, -2) == 8\nprint(\"Tests passés avec succés:)\")\n&gt;&gt;sortie\n\nTests passés avec succés:)\n\n\nEn cas d’erreur (souvent en raison d’interventions humaines sur le code!), le programme est bloqué ce qui évite de le laisser tourner en faisant des erreurs qui pourraient être très dommageables dans certaines situations(banque, commerce, circulation…).\nPar exemple, cette suite de tests avec des flottants ne réussi pas.\n\nassert somme(0.0, 0.0) == 0.0\nassert somme(10.0, -2.0) == 8.0\nassert somme(0.1, 0.2) == 0.3\nprint(\"Tests passés avec succés:)\")\n&gt;&gt;sortie\n\nAssertionError: \n\n\nSi vous ne voyez pas pourquoi, revoyez le chapitre sur l’encodage des nombres à virgule.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 6: Fonctions"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/6-fonctions/index.html#en-plus",
    "href": "1g/nsi/7-langages-et-programmation/6-fonctions/index.html#en-plus",
    "title": "Chapitre 6: Fonctions",
    "section": "4 En plus",
    "text": "4 En plus\n\n4.1 Le return est définitif!\n\n\n\n\n\n\nMise en garde\n\n\n\nUne fonction ne peut exécuter qu’un return, tout return est définitif.\n\n\n\n\nTout ce qui suit le return n’est pas exécuté, on parle de code mort(dead code en anglais).\n\ndef exemple():\n    return \"Bonjour\"\n    print(\"Ce code ne sera pas exécuté(dead code)\")\n\n# appel\nexemple()\n\n'Bonjour'\n\n\nIl peut y avoir plus return, mais un seul sera exécuté.\n\ndef bonjour(genre):\n    if genre == \"M\":\n        return \"Bonjour monsieur\"\n    elif genre == \"F\":\n        return \"Bonjour madame\"\n\n# appel\nbonjour(\"F\")\n\n'Bonjour madame'\n\n\nIl n’est pas nécessaire de placer un return dans un else car si on arrive après les conditions, sans retourner, ces conditions sont forcément non vérifiées.\n\ndef bonjour(genre):\n    if genre == \"M\":\n        return \"Bonjour monsieur\"\n    elif genre == \"F\":\n        return \"Bonjour madame\"\n    return \"Bonjour\"\n\n# comme G n'est pas dans les conditions c'est le return final qui est exécuté\nbonjour(\"G\")\n\n'Bonjour'\n\n\n\n\n\n\n4.2 Nommer les arguments de la fonction lors de l’appel\nOn peut préciser le nom des arguments dans l’appel de la fonction pour être plus explicite, on parle alors de keyword arguments:“arguments nommés”.\n# On définit la fonction\ndef energie_cinetique(m, v):\n    return 0.5*m*v**2\n# On appelle la fonction pour un objet de 2kg ayant une vitesse de 3m/s\nenergie_cinetique(m=2, v=3)\nSortie:\nL'énergie cinétique est: 50.0 J\nL’avantage est qu’en plus d’être plus explicite, on peut alors appeler les arguments dans un ordre quelconque ce qui n’est pas le cas lorsque l’on ne nomme pas les arguments(ce type d’arguments est appelé positionnal argument: “argument positionnel”)\nenergie_cinetique(v=3, m=2)\nSortie:\nL'énergie cinétique est: 50.0 J\n\n\n4.3 Portée des variables\nLes variables définies dans les fonctions, ses paramètres ou autres, sont appelés des variables locales, par opposition aux variables globales, qui sont définies dans flot d’exécution du programme.\n\n# Je défini une variable globale x\nx = 3\n# Je défini une fonction avec comme paramètre x\ndef double(x):\n  # Il s'agit d'une nouvelle variable locale x non liée à la variable globale x\n  return 2 * x\n\n# J'appelle la fonction double avec x = 2\ndouble(2)\n\n4\n\n\nLa variable globale x reste inchangée :\n\nprint(x)\n&gt;&gt;sortie\n\n3",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 6: Fonctions"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/1-les-ingredients-dun-algorithme/exo/index.html",
    "href": "1g/nsi/7-langages-et-programmation/1-les-ingredients-dun-algorithme/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Aucun exercice pour l’instant.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 1: Les ingrédients d’un algorithme",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/1-les-ingredients-dun-algorithme/quiz/index.html",
    "href": "1g/nsi/7-langages-et-programmation/1-les-ingredients-dun-algorithme/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 1: Les ingrédients d’un algorithme",
      "Quiz"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/5-boucles/index.html",
    "href": "1g/nsi/7-langages-et-programmation/5-boucles/index.html",
    "title": "Chapitre 5: Boucles",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nConstructions élémentaires\nMettre en évidence un corpus de constructions élémentaires. boucles non bornées, appels de fonction.\nSéquences, affectation, conditionnelles, boucles bornées,\nIl existe deux façons de coder des boucles:\nLes deux types de boucles sont interchangeables, on préfère cependant utiliser:",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 5: Boucles"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/5-boucles/index.html#la-boucle-bornée-for",
    "href": "1g/nsi/7-langages-et-programmation/5-boucles/index.html#la-boucle-bornée-for",
    "title": "Chapitre 5: Boucles",
    "section": "1 La boucle bornée for",
    "text": "1 La boucle bornée for\nLa boucle for est utilisée lorsque l’on connaît à l’avance les valeurs pour lesquelles on veut répéter le bloc d’instructions. On l’appelle une boucle bornée.\n\n1.1 Utilisation de la fonction range()\n\nLa fonction range() peut accepter de 1 à 3 paramètres pour contrôler la façon dont se font les itérations.\n\nIl est très fréquent de réaliser des itérations sur des nombres en comptant les tours de boucles.\nLa fonction range(n) permet de créer une boucle de n tours.\n\nfor i in range(7):\n    print(i)\n&gt;&gt;sortie\n\n0\n1\n2\n3\n4\n5\n6\n\n\nOn peut éventuellement choisir la valeur du compteur au départ.\nfor i in range(début, fin):\n    ...\nAttention: Dans tous les cas le nombre final n’est pas inclus dans les itérations.\n\nfor i in range(1, 7):\n    print(i)\n&gt;&gt;sortie\n\n1\n2\n3\n4\n5\n6\n\n\nOn peut également choisir le pas de l’incrémentation grâce à la syntaxe:\nfor i in range(début, fin, pas):\n    instruction 1\n    instruction 2\n...\n\nfor i in range(1, 12, 2):\n    print(i)\n&gt;&gt;sortie\n\n1\n3\n5\n7\n9\n11\n\n\n\nfor i in range(365, 300, -5):\n    print(i)\n&gt;&gt;sortie\n\n365\n360\n355\n350\n345\n340\n335\n330\n325\n320\n315\n310\n305",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 5: Boucles"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/5-boucles/index.html#la-boucle-non-bornée-while",
    "href": "1g/nsi/7-langages-et-programmation/5-boucles/index.html#la-boucle-non-bornée-while",
    "title": "Chapitre 5: Boucles",
    "section": "2 La boucle non bornée: while",
    "text": "2 La boucle non bornée: while\nLa boucle while est plus puissante que la boucle for, elle permet de créer des répétitions, même si l’on ne connait pas à l’avance le nombre de répétitions.\nContrairement à la boucle for, le nombre d’itérations n’est pas fixé à l’avance, mais il est testé dynamiquement au début de chaque boucle: On parle de boucle non bornée.\nÀ chaque tour, on teste une condition, si cette condition est vérifiée, on exécute le bloc d’instructions de la boucle, sinon, l’exécution de la boucle est arrêtée et le programme se poursuit «normalement».\nL’écriture d’une boucle non bornée nécessite trois étapes:\n\nInitialisation de la variable de contrôle.\nCondition d’arrêt.\nMise à jour de la variable de contrôle.\n\n\n2.1 Réécriture d’une boucle for\nNous allons traduire une boucle for par un while (même si cela n’est pas conseillé).\n\nfor i in range(1, 7, 2):\n    print(i)\n&gt;&gt;sortie\n\n1\n3\n5\n\n\nDans une boucle for toutes les affectations de la variable i sont gérées par la fonction range(). Avec le while c’est à nous de nous en occuper.\n\ni = 1                   # initialisation\nwhile i &lt; 7:            # condition d'arrêt\n    print(i)\n    i = i + 2           # Mise à jour de la variable de contrôle\n&gt;&gt;sortie\n\n1\n3\n5\n\n\n\n\n2.2 Contrôle par variable booléenne\nNous créons ici une variable booléenne repeat pour bien comprendre si la boucle while doit se poursuivre ou non.\nrepeat = True;\nwhile repeat:\n    resultat = int(input(\"Combien font 2 + 5?  \"))\n    if resultat == 7:\n        print(\"Bravo vous avez trouvé.\")\n        repeat = False\nIl serait cependant plus élégant de faire passer la condition du if dans le while.\nresultat = None\nwhile resultat != 7:\n    resultat = int(input(\"Combien font 2 + 5?  \"))\nprint(\"Bravo vous avez trouvé.\")\n\n\n2.3 Remarques\n\nLa variable compteur est souvent notée i;\nfaire attention à ne pas programmer une boucle infinie qui bloquerait votre programme en lui faisant répéter l’instruction une infinité de fois et saturerait ainsi votre processeur et votre mémoire.\ni = 0\nwhile i &gt;= 0:\n    print(i)\n    i = i + 1\n    # i sera toujours positif, la condition d'arrêt ne sera jamais vraie",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 5: Boucles"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/5-boucles/index.html#boucles-imbriquées",
    "href": "1g/nsi/7-langages-et-programmation/5-boucles/index.html#boucles-imbriquées",
    "title": "Chapitre 5: Boucles",
    "section": "3 Boucles imbriquées",
    "text": "3 Boucles imbriquées\nIl est possible d’exécuter une boucle à l’intérieur d’une autre boucle, elles sont alors dites imbriquées.\n\n# boucle externe\nfor i in range(3):\n    # boucle interne\n    for j in range(2):\n        print(i, j)\n&gt;&gt;sortie\n\n0 0\n0 1\n1 0\n1 1\n2 0\n2 1\n\n\nCe type de boucles peut par exemple être utilisé pour parcourir des tableaux de données en ligne et en colonne, on les utilisera également dans les algorithmes de tris que nous verrons en fin d’année.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 5: Boucles"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/index.html",
    "href": "1g/nsi/7-langages-et-programmation/index.html",
    "title": "Partie 7: Langages et programmation",
    "section": "",
    "text": "Chapitre 1: Les ingrédients d’un algorithme\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 2: Types\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 3: Entrées et sorties\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 4: Conditions\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 5: Boucles\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 6: Fonctions\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 7: Comparaisons de langages\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 8: Mise au point d’un programme\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAucun article correspondant",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/7-comparaisons-de-langages/index.html",
    "href": "1g/nsi/7-langages-et-programmation/7-comparaisons-de-langages/index.html",
    "title": "Chapitre 7: Comparaisons de langages",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nDiversité et unité des langages de programmation\nRepérer, dans un nouveau langage de programmation, les traits communs et les traits particuliers à ce langage.\nLes manières dont un même programme simple s’écrit dans différents langages sont comparées.\nComme nous l’avons vu précédemment un programme permet d’écrire un algorithme afin qu’il soit exécuté par un ordinateur.\nIl existe de très nombreux langages de programmation aujourd’hui, chacun ayant ses forces et ses faiblesses et sera donc adapté à un domaine plutôt qu’à un autre.\nCette année nous utiliserons deux langages: Python et javascript:\nNous allons voir sur l’exemple de ces deux langages qu’il est possible d’écrire les mêmes algorithmes avec des syntaxes assez proches.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 7: Comparaisons de langages"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/7-comparaisons-de-langages/index.html#commentaires",
    "href": "1g/nsi/7-langages-et-programmation/7-comparaisons-de-langages/index.html#commentaires",
    "title": "Chapitre 7: Comparaisons de langages",
    "section": "1 Commentaires",
    "text": "1 Commentaires\nLes commentaires sont indispensables pour expliquer votre code à ceux qui le lisent(souvent vous-même quelques jours, semaines ou mois après). En javascript on utilise le double slash pour le commentaire de ligne //.\n\n\n\npython\njavascript\n\n\n\n\n# ceci est un commentaire\n// ceci est un commentaire",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 7: Comparaisons de langages"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/7-comparaisons-de-langages/index.html#affectation-de-variable",
    "href": "1g/nsi/7-langages-et-programmation/7-comparaisons-de-langages/index.html#affectation-de-variable",
    "title": "Chapitre 7: Comparaisons de langages",
    "section": "2 Affectation de variable",
    "text": "2 Affectation de variable\nDans les deux langages on utilise le simple signe égal =, on utilise cependant le mot clé var en js.\n\n\n\npython\njavascript\n\n\n\n\na = 3\nvar a = 3\n\n\n\n\n\n\n\n\n\n\nEn plus: let et const\n\n\n\n\n\n\nLes nouvelles versions de javascript ont ajouté les mots-clés const et let pour déclarer des variables respectivement immutables ou mutables.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 7: Comparaisons de langages"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/7-comparaisons-de-langages/index.html#entrées-et-sorties",
    "href": "1g/nsi/7-langages-et-programmation/7-comparaisons-de-langages/index.html#entrées-et-sorties",
    "title": "Chapitre 7: Comparaisons de langages",
    "section": "3 Entrées et sorties",
    "text": "3 Entrées et sorties\nLes entrées permettent de récupérer des données de l’utilisateur pour adapter son fonctionnement aux exigences de ce dernier.\nLes sorties permettent d’afficher les résultats à l’utilisateur.\n\n\n\npython\njavascript\n\n\n\n\n# entrée\nage = input(\"Quel age avez-vous?)\n# sortie\nprint(\"Votre âge est \" + age + \" ans\")\n// entrée\nvar age = prompt(\"Quel age avez-vous?\")\n// sortie\nconsole.log(\"Votre âge est \" + age + \" ans\")",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 7: Comparaisons de langages"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/7-comparaisons-de-langages/index.html#instructions-conditionnelles",
    "href": "1g/nsi/7-langages-et-programmation/7-comparaisons-de-langages/index.html#instructions-conditionnelles",
    "title": "Chapitre 7: Comparaisons de langages",
    "section": "4 Instructions conditionnelles",
    "text": "4 Instructions conditionnelles\nDans les deux langages on utilise les mots-clef if et else cependant le elif n’existe pas en js. On utilise else if.\nD’autre part, le javascript n’utilise pas l’indentation pour définir les blocs de code, il les place entre accolades {}\n\n\n\npython\njavascript\n\n\n\n\nif age &gt; 18:\n    print(\"Vous êtes majeur\")\nelif age &gt;16:\n    print(\"Bientôt majeur\")\nelse:\n    print(\"Soyez patient\")\nif (age &gt; 18) {\n  console.log(`Vous êtes majeur`)\n} else if (age &gt; 16) {\nconsole.log(`Bientôt majeur`)\n} else {\n  console.log(`Soyez patient`)\n}",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 7: Comparaisons de langages"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/7-comparaisons-de-langages/index.html#boucles",
    "href": "1g/nsi/7-langages-et-programmation/7-comparaisons-de-langages/index.html#boucles",
    "title": "Chapitre 7: Comparaisons de langages",
    "section": "5 Boucles",
    "text": "5 Boucles\nLes deux langages définissent les boucles for et while.\n\n5.1 Boucle for\n\n\n\npython\njavascript\n\n\n\n\nfor i in range(10):\n    print(i)\nfor (var i = 0; i &lt; 10; i++) {\n    console.log(i)\n}\n\n\n\n\n\n5.2 Boucle while\n\n\n\npython\njavascript\n\n\n\n\ni = 0 # initialisation\nwhile i &lt; 10: # condition d'arrêt\n    print(i)\n    # incrémentation de l'indice\n    i = i + 1\nelse:\n    print(\"Soyez patient\")\nvar i = 0 // initialisation\nwhile (i &lt; 10) { // condition d'arrêt\n    console.log(i)\n    // incrémentation de l'indice\n    i = i + 1\n}\n    console.log(`Soyez patient`)\n}",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 7: Comparaisons de langages"
    ]
  },
  {
    "objectID": "1g/nsi/7-langages-et-programmation/7-comparaisons-de-langages/index.html#fonctions",
    "href": "1g/nsi/7-langages-et-programmation/7-comparaisons-de-langages/index.html#fonctions",
    "title": "Chapitre 7: Comparaisons de langages",
    "section": "6 Fonctions",
    "text": "6 Fonctions\n\n6.1 Définition de la fonction\nEn python le mot clef utilisé est def et function en javascript, dans les deux cas le retour de fonction se fait par le mot-clé return.\n\n\n\npython\njavascript\n\n\n\n\ndef carré(nb):\n    return nb**2\nfunction carré (nb) {\n    return nb**2\n}\n\n\n\n\n\n6.2 Appel de la fonction\nMême syntaxe, on écrit le nom de la fonction avec le ou les arguments de la fonction entre parenthèse.\n\n\n\npython\njavascript\n\n\n\n\ncarré(2)\ncarré(2)\n\n\n\n\n\n\n\n\n\n\nEn plus: Fonction sans paramètres\n\n\n\n\n\n\nUne fonction peut ne pas avoir de paramètres, mais son appel nécessite la présence des parenthèses.\ncompte()",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 7: Langages et programmation",
      "Chapitre 7: Comparaisons de langages"
    ]
  },
  {
    "objectID": "1g/nsi/8-algorithmique/5-algorithme-des-k-plus-proches-voisins/exo/index.html",
    "href": "1g/nsi/8-algorithmique/5-algorithme-des-k-plus-proches-voisins/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Vous allez travailler sur un tableau de données des joueurs de rugby du top-14 de la saison 2019-2020 issues de la page de la ligue nationale de rugby:\nhttps://www.lnr.fr/rugby-top-14/joueurs-rugby-top-14\nVotre travail consiste à attribuer un poste sur le terrain à un joueur à partir de son poids et de sa taille en utilisant l’algorithme des k plus proches voisins:\n\nDemi mêlée,\nArrière,\n1ère ligne,\n…\n\n\n\nOn commence par lire les données du fichier joueurs-top14.csv sous la forme d’un tableau de tableau.\n\nimport csv\n\n## Lecture du fichier csv\n## et stockage dans une liste de liste\n## taille, le poids et le poste si non vide\njoueurs = []\nwith open('./joueurs-top14.csv', encoding=\"utf-8\") as csvfile:\n    reader = csv.DictReader(csvfile)\n    # Itération sur les lignes\n    for ligne in reader:\n        taille = ligne[\"taille(cm)\"]\n        poids = ligne[\"poids(kg)\"]\n        poste = ligne[\"poste\"]\n        if taille and poids and poste:\n            joueurs.append([int(taille), int(poids), poste])\n\nprint(\"Nbre de joueurs:\", len(joueurs))\nprint(\"Premier joueur:\", joueurs[0])\nprint(\"Quatrième joueur:\", joueurs[3])\n&gt;&gt;sortie\n\nNbre de joueurs: 239\nPremier joueur: [176, 85, 'Demi mêlée']\nQuatrième joueur: [180, 95, 'Centre']\n\n\n\n\n\nCompléter le code suivant pour créer une liste des postes existants.\npostes = []\nfor joueur in joueurs:\n    poste = ...\n    if poste not in postes:\n        ...\n        \n## tests\nassert len(postes) == 10\nprint(\"Si on choisissait au hasard on aurait une chance sur 10\")\nprint(\"Soit 90% d'erreurs\")\nassert postes == ['Demi mêlée',\n 'Arrière',\n '1ère ligne',\n 'Centre',\n 'Ailier',\n '3e ligne',\n 'Trois quart aile',\n 'Trois quart centre',\n \"Demi d'ouverture\",\n '2e ligne']\n\npostes = []\nfor joueur in joueurs:\n    # le poste est à l'indice 2\n    poste = joueur[2]\n    if poste not in postes:\n        postes.append(poste)\n\n## tests\nassert len(postes) == 10\nprint(\"Si on choisissait au hasard on aurait une chance sur 10\")\nprint(\"Soit 90% d'erreur\")\nassert postes == ['Demi mêlée',\n 'Arrière',\n '1ère ligne',\n 'Centre',\n 'Ailier',\n '3e ligne',\n 'Trois quart aile',\n 'Trois quart centre',\n \"Demi d'ouverture\",\n '2e ligne']\n&gt;&gt;sortie\n\nSi on choisissait au hasard on aurait une chance sur 10\nSoit 90% d'erreur\n\n\n\n\n\n\nimport matplotlib.pyplot as plt\ndef tracé_graph(joueurs):\n    for poste in postes:\n        # poids des joueurs à ce poste\n        poids = [joueur[1] for joueur in joueurs if joueur[2]== poste]\n        # taille des joueurs à ce poste\n        tailles = [joueur[0] for joueur in joueurs if joueur[2]==poste]\n        plt.scatter(poids, tailles, label=poste, alpha=0.7)\n    # Annotations du graphique\n    plt.xlabel(\"poids(kg)\")\n    plt.ylabel(\"taille(cm)\")\n    plt.legend()\n       \ntracé_graph(joueurs)\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\n\n\n\n\n\n\n\nOn divise les données en deux parties:\n\nentrainement: les 190 premiers joueurs\ntest: les 49 derniers\n\n\ntrain = [joueurs[i] for i in range(190)]\ntest = [joueurs[i] for i in range(190, len(joueurs))]\nlen(train), len(test)\n\n(190, 49)\n\n\n\n\n\nOn mesure la distance Euclidienne entre deux joueurs sur le graphique grâce au théorème de Pythagore dans la fonction def distance(j1, j2).\n\ndef distance(j1, j2):\n    \"calcule la distance euclidienne entre deux joueurs\"\n    x1, y1, p1 = j1\n    x2, y2, p2 = j2\n    return ((x2-x1)**2+(y2-y1)**2)**0.5\n\n## appel entre les deux premiers joueurs des jeux de données\ndistance(train[0], test[0])\n\n30.01666203960727\n\n\n\n\n\nOn commnce par écrire une fonction qui recherche dans les données d’entrainement(train) le joueur le plus proche du joueur de test d’indice i.\ndef plus_proche(i: int):\n    \"Renvoie le poste du plus proche voisin dans train du joueur de test d'indice i\"\n    joueur_test = test[i]\n    # on initialise l'indice et la distance minimum sur \n    # la première donnée d'entraînement\n    j_mini = 0\n    d_mini = distance(joueur_test, train[0])\n    # on recherche le joueur avec la distance minimum\n    # dans les données d'entrainement\n    for j in range(len(train)):\n        d = distance(joueur_test, train[j])\n        ...\n        \n    return ...\n\n\nprint(\"Prévision juste pour le 1e joueur\", test[0], plus_proche(0))\nassert plus_proche(0) == test[0][2]\nprint(\"Prévision juste pour le 2e joueur\", test[1], plus_proche(1))\nassert plus_proche(1) == test[1][2]\nprint(\"Prévision juste pour le 3e joueur\", test[2], plus_proche(2))\nassert plus_proche(2) == test[2][2]\nprint(\"Prévision fausse pour le 4e joueur\", test[3], plus_proche(3))\nassert plus_proche(3) != test[3][2]\nassert plus_proche(3) == 'Ailier' \n\ndef plus_proche(i: int):\n    \"Renvoie le poste du plus proche voisin dans train du joueur de test d'indice i\"\n    joueur_test = test[i]\n    # on initialise la distance minimum sur \n    # des données d'entraînement\n    j_mini = 0\n    d_mini = distance(joueur_test, train[0])\n    for j in range(len(train)):\n        # on calcule la distance du joueur_test\n        # avec le joueur d'indice j\n        d = distance(joueur_test, train[j])\n        if d &lt; d_mini:\n            # c'est le nouveau minimum\n            j_mini = j\n            d_mini = d\n    # je renvoie le poste(indice 2) du \n    # joueur étant à l'indice i_mini\n    return train[j_mini][2]\n\n\nprint(\"Prévision juste pour le 1e joueur\", test[0], plus_proche(0))\nassert plus_proche(0) == test[0][2]\nprint(\"Prévision juste pour le 2e joueur\", test[1], plus_proche(1))\nassert plus_proche(1) == test[1][2]\nprint(\"Prévision juste pour le 3e joueur\", test[2], plus_proche(2))\nassert plus_proche(2) == test[2][2]\nprint(\"Prévision fausse pour le 4e joueur\", test[3], plus_proche(3))\nassert plus_proche(3) != test[3][2]\nassert plus_proche(3) == 'Ailier' \n&gt;&gt;sortie\n\nPrévision juste pour le 1e joueur [177, 115, '1ère ligne'] 1ère ligne\nPrévision juste pour le 2e joueur [182, 110, '1ère ligne'] 1ère ligne\nPrévision juste pour le 3e joueur [203, 120, '2e ligne'] 2e ligne\nPrévision fausse pour le 4e joueur [181, 100, 'Arrière'] Ailier\n\n\n\n\n\nPuisque l’algorithme commet des erreurs regardons combien il en fait et quel pourcentage cela représente.\nerreur = 0\n## compte le nb de fausses prédictions\nfor i in range(len(test)):\n    poste_predit = plus_proche(i)\n    poste_reel = test[i][2]\n    if ...:\n        ...\n\nassert erreur == 22\nprint(round(100*erreur/len(test), 1), \"% d'erreur\")  \n\nerreur = 0\nfor i in range(len(test)):\n    poste_predit = plus_proche(i)\n    poste_reel = test[i][2]\n    if poste_predit != poste_reel:\n        erreur = erreur + 1\n\nassert erreur == 22\nprint(round(100*erreur/len(test), 1), \"% d'erreur\")     \n&gt;&gt;sortie\n\n44.9 % d'erreur\n\n\n\n\n\nPlutôt que de regarder le plus proche voisin, nous allons regarder les k plus proches voisins du joueur de test dans les données d’entrainement.\nPour cela nous allons créer une liste des postes des plus proches voisins, puis grâce à la fonction suivante, nous en déduirons le poste le plus probable d’après ces voisins.\n\ndef occurence_max(tab):\n    \"Renvoie la valeur qui a le plus d'occurences dans un tableau\"\n    dico = {k: 0 for k in tab}\n    for k in tab:\n        dico[k] += 1\n    \n    maxi, k_max = 0 , 0\n    for k, v in dico.items():\n        if v &gt; maxi:\n            maxi, k_max = v , k\n    return k_max\n\nassert occurence_max([\"Ailier\", \"Ailier\", \"Pilier\"]) == \"Ailier\"\nassert occurence_max([\"Ailier\", \"Pilier\", \"Ailier\"]) == \"Ailier\"\nassert occurence_max([\"Pilier\", \"Ailier\",  \"Pilier\",]) == \"Pilier\"\n\nIl ne reste plus qu’à créer cette liste de poste des plus proches voisins dans la fonction suivante.\ndef k_plus_proche(i: int, k:int):\n    \"Renvoie le poste d'après les k plus proches voisins du joueur de test d'indice i dans train\"\n    # joueur dont on cherche le poste\n    joueur_test = test[i]\n    # liste destinée à accueillir les postes des k plus proches voisins\n    postes_voisins = []\n    for j in range(len(train)):\n        ...\n    \n    return occurence_max(poste_voisins)\n\n## En fonction de k la prévision n'est pas la même\nassert k_plus_proche(3, 1) == 'Ailier'\nassert k_plus_proche(3, 5) == '1ère ligne'\n\ndef k_plus_proche(i: int, k:int):\n    \"Renvoie le poste d'après les k plus proches voisins du joueur de test d'indice i dans train\"\n    joueur_test = test[i]\n    # on crée un tabelau avec toutes les distances et les indices\n    distances = []\n    for j in range(len(train)):\n        joueur = train[j]\n        distances.append((distance(joueur, joueur_test), j))\n    # on tri la liste par distance\n    distances.sort()\n    # on ne garde que les k premiers\n    poste_voisins = [train[distances[j][1]][2] for j in range(k)]\n    \n    return occurence_max(poste_voisins)\n\n## En fonction de k la prévision n'est pas la même\nassert k_plus_proche(3, 1) == 'Ailier'\nassert k_plus_proche(3, 5) == '1ère ligne'\n\n\n\n\nNous allons tracer le taux d’erreur en fonction du nombre k de voisins choisis pour trouver la meilleure valeur de k possible.\n\nxs = []\nys = []\nfor k in range(1, len(train)):\n    erreur = 0\n    for i in range(len(test)):\n        joueur_test = test[i]\n        if joueur_test[2] != k_plus_proche(i,k):\n            erreur +=1\n    xs.append(k)\n    ys.append(round(100*erreur/len(test), 1))\n    \nplt.plot(xs, ys)\nplt.xlabel('k')\nplt.ylabel(\"% d'erreur\")\nplt.title(f\"Le meilleur résultat ({min(ys)}% d'erreur) est obtenu avec {xs[ys.index(min(ys))]} voisins\")\nplt.show()\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\n\n\n\n\n\n\n\nComme les tailles des joueurs sont à peu près deux fois plus grandes que les poids, on accorde une plus grande importance à leur taille. On pourrait:\n\nNormaliser les tailles et poids.\nUtiliser l’IMC.\nRechercher d’autres informations qui nous informeraient sur leurs qualités physiques telles que leur temps au 100 m …",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 8: Algorithmique",
      "Chapitre 5: Algorithme des k plus proches voisins",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/8-algorithmique/5-algorithme-des-k-plus-proches-voisins/exo/index.html#classification-des-joueurs-du-top-14",
    "href": "1g/nsi/8-algorithmique/5-algorithme-des-k-plus-proches-voisins/exo/index.html#classification-des-joueurs-du-top-14",
    "title": "Exercices",
    "section": "",
    "text": "Vous allez travailler sur un tableau de données des joueurs de rugby du top-14 de la saison 2019-2020 issues de la page de la ligue nationale de rugby:\nhttps://www.lnr.fr/rugby-top-14/joueurs-rugby-top-14\nVotre travail consiste à attribuer un poste sur le terrain à un joueur à partir de son poids et de sa taille en utilisant l’algorithme des k plus proches voisins:\n\nDemi mêlée,\nArrière,\n1ère ligne,\n…\n\n\n\nOn commence par lire les données du fichier joueurs-top14.csv sous la forme d’un tableau de tableau.\n\nimport csv\n\n## Lecture du fichier csv\n## et stockage dans une liste de liste\n## taille, le poids et le poste si non vide\njoueurs = []\nwith open('./joueurs-top14.csv', encoding=\"utf-8\") as csvfile:\n    reader = csv.DictReader(csvfile)\n    # Itération sur les lignes\n    for ligne in reader:\n        taille = ligne[\"taille(cm)\"]\n        poids = ligne[\"poids(kg)\"]\n        poste = ligne[\"poste\"]\n        if taille and poids and poste:\n            joueurs.append([int(taille), int(poids), poste])\n\nprint(\"Nbre de joueurs:\", len(joueurs))\nprint(\"Premier joueur:\", joueurs[0])\nprint(\"Quatrième joueur:\", joueurs[3])\n&gt;&gt;sortie\n\nNbre de joueurs: 239\nPremier joueur: [176, 85, 'Demi mêlée']\nQuatrième joueur: [180, 95, 'Centre']\n\n\n\n\n\nCompléter le code suivant pour créer une liste des postes existants.\npostes = []\nfor joueur in joueurs:\n    poste = ...\n    if poste not in postes:\n        ...\n        \n## tests\nassert len(postes) == 10\nprint(\"Si on choisissait au hasard on aurait une chance sur 10\")\nprint(\"Soit 90% d'erreurs\")\nassert postes == ['Demi mêlée',\n 'Arrière',\n '1ère ligne',\n 'Centre',\n 'Ailier',\n '3e ligne',\n 'Trois quart aile',\n 'Trois quart centre',\n \"Demi d'ouverture\",\n '2e ligne']\n\npostes = []\nfor joueur in joueurs:\n    # le poste est à l'indice 2\n    poste = joueur[2]\n    if poste not in postes:\n        postes.append(poste)\n\n## tests\nassert len(postes) == 10\nprint(\"Si on choisissait au hasard on aurait une chance sur 10\")\nprint(\"Soit 90% d'erreur\")\nassert postes == ['Demi mêlée',\n 'Arrière',\n '1ère ligne',\n 'Centre',\n 'Ailier',\n '3e ligne',\n 'Trois quart aile',\n 'Trois quart centre',\n \"Demi d'ouverture\",\n '2e ligne']\n&gt;&gt;sortie\n\nSi on choisissait au hasard on aurait une chance sur 10\nSoit 90% d'erreur\n\n\n\n\n\n\nimport matplotlib.pyplot as plt\ndef tracé_graph(joueurs):\n    for poste in postes:\n        # poids des joueurs à ce poste\n        poids = [joueur[1] for joueur in joueurs if joueur[2]== poste]\n        # taille des joueurs à ce poste\n        tailles = [joueur[0] for joueur in joueurs if joueur[2]==poste]\n        plt.scatter(poids, tailles, label=poste, alpha=0.7)\n    # Annotations du graphique\n    plt.xlabel(\"poids(kg)\")\n    plt.ylabel(\"taille(cm)\")\n    plt.legend()\n       \ntracé_graph(joueurs)\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\n\n\n\n\n\n\n\nOn divise les données en deux parties:\n\nentrainement: les 190 premiers joueurs\ntest: les 49 derniers\n\n\ntrain = [joueurs[i] for i in range(190)]\ntest = [joueurs[i] for i in range(190, len(joueurs))]\nlen(train), len(test)\n\n(190, 49)\n\n\n\n\n\nOn mesure la distance Euclidienne entre deux joueurs sur le graphique grâce au théorème de Pythagore dans la fonction def distance(j1, j2).\n\ndef distance(j1, j2):\n    \"calcule la distance euclidienne entre deux joueurs\"\n    x1, y1, p1 = j1\n    x2, y2, p2 = j2\n    return ((x2-x1)**2+(y2-y1)**2)**0.5\n\n## appel entre les deux premiers joueurs des jeux de données\ndistance(train[0], test[0])\n\n30.01666203960727\n\n\n\n\n\nOn commnce par écrire une fonction qui recherche dans les données d’entrainement(train) le joueur le plus proche du joueur de test d’indice i.\ndef plus_proche(i: int):\n    \"Renvoie le poste du plus proche voisin dans train du joueur de test d'indice i\"\n    joueur_test = test[i]\n    # on initialise l'indice et la distance minimum sur \n    # la première donnée d'entraînement\n    j_mini = 0\n    d_mini = distance(joueur_test, train[0])\n    # on recherche le joueur avec la distance minimum\n    # dans les données d'entrainement\n    for j in range(len(train)):\n        d = distance(joueur_test, train[j])\n        ...\n        \n    return ...\n\n\nprint(\"Prévision juste pour le 1e joueur\", test[0], plus_proche(0))\nassert plus_proche(0) == test[0][2]\nprint(\"Prévision juste pour le 2e joueur\", test[1], plus_proche(1))\nassert plus_proche(1) == test[1][2]\nprint(\"Prévision juste pour le 3e joueur\", test[2], plus_proche(2))\nassert plus_proche(2) == test[2][2]\nprint(\"Prévision fausse pour le 4e joueur\", test[3], plus_proche(3))\nassert plus_proche(3) != test[3][2]\nassert plus_proche(3) == 'Ailier' \n\ndef plus_proche(i: int):\n    \"Renvoie le poste du plus proche voisin dans train du joueur de test d'indice i\"\n    joueur_test = test[i]\n    # on initialise la distance minimum sur \n    # des données d'entraînement\n    j_mini = 0\n    d_mini = distance(joueur_test, train[0])\n    for j in range(len(train)):\n        # on calcule la distance du joueur_test\n        # avec le joueur d'indice j\n        d = distance(joueur_test, train[j])\n        if d &lt; d_mini:\n            # c'est le nouveau minimum\n            j_mini = j\n            d_mini = d\n    # je renvoie le poste(indice 2) du \n    # joueur étant à l'indice i_mini\n    return train[j_mini][2]\n\n\nprint(\"Prévision juste pour le 1e joueur\", test[0], plus_proche(0))\nassert plus_proche(0) == test[0][2]\nprint(\"Prévision juste pour le 2e joueur\", test[1], plus_proche(1))\nassert plus_proche(1) == test[1][2]\nprint(\"Prévision juste pour le 3e joueur\", test[2], plus_proche(2))\nassert plus_proche(2) == test[2][2]\nprint(\"Prévision fausse pour le 4e joueur\", test[3], plus_proche(3))\nassert plus_proche(3) != test[3][2]\nassert plus_proche(3) == 'Ailier' \n&gt;&gt;sortie\n\nPrévision juste pour le 1e joueur [177, 115, '1ère ligne'] 1ère ligne\nPrévision juste pour le 2e joueur [182, 110, '1ère ligne'] 1ère ligne\nPrévision juste pour le 3e joueur [203, 120, '2e ligne'] 2e ligne\nPrévision fausse pour le 4e joueur [181, 100, 'Arrière'] Ailier\n\n\n\n\n\nPuisque l’algorithme commet des erreurs regardons combien il en fait et quel pourcentage cela représente.\nerreur = 0\n## compte le nb de fausses prédictions\nfor i in range(len(test)):\n    poste_predit = plus_proche(i)\n    poste_reel = test[i][2]\n    if ...:\n        ...\n\nassert erreur == 22\nprint(round(100*erreur/len(test), 1), \"% d'erreur\")  \n\nerreur = 0\nfor i in range(len(test)):\n    poste_predit = plus_proche(i)\n    poste_reel = test[i][2]\n    if poste_predit != poste_reel:\n        erreur = erreur + 1\n\nassert erreur == 22\nprint(round(100*erreur/len(test), 1), \"% d'erreur\")     \n&gt;&gt;sortie\n\n44.9 % d'erreur\n\n\n\n\n\nPlutôt que de regarder le plus proche voisin, nous allons regarder les k plus proches voisins du joueur de test dans les données d’entrainement.\nPour cela nous allons créer une liste des postes des plus proches voisins, puis grâce à la fonction suivante, nous en déduirons le poste le plus probable d’après ces voisins.\n\ndef occurence_max(tab):\n    \"Renvoie la valeur qui a le plus d'occurences dans un tableau\"\n    dico = {k: 0 for k in tab}\n    for k in tab:\n        dico[k] += 1\n    \n    maxi, k_max = 0 , 0\n    for k, v in dico.items():\n        if v &gt; maxi:\n            maxi, k_max = v , k\n    return k_max\n\nassert occurence_max([\"Ailier\", \"Ailier\", \"Pilier\"]) == \"Ailier\"\nassert occurence_max([\"Ailier\", \"Pilier\", \"Ailier\"]) == \"Ailier\"\nassert occurence_max([\"Pilier\", \"Ailier\",  \"Pilier\",]) == \"Pilier\"\n\nIl ne reste plus qu’à créer cette liste de poste des plus proches voisins dans la fonction suivante.\ndef k_plus_proche(i: int, k:int):\n    \"Renvoie le poste d'après les k plus proches voisins du joueur de test d'indice i dans train\"\n    # joueur dont on cherche le poste\n    joueur_test = test[i]\n    # liste destinée à accueillir les postes des k plus proches voisins\n    postes_voisins = []\n    for j in range(len(train)):\n        ...\n    \n    return occurence_max(poste_voisins)\n\n## En fonction de k la prévision n'est pas la même\nassert k_plus_proche(3, 1) == 'Ailier'\nassert k_plus_proche(3, 5) == '1ère ligne'\n\ndef k_plus_proche(i: int, k:int):\n    \"Renvoie le poste d'après les k plus proches voisins du joueur de test d'indice i dans train\"\n    joueur_test = test[i]\n    # on crée un tabelau avec toutes les distances et les indices\n    distances = []\n    for j in range(len(train)):\n        joueur = train[j]\n        distances.append((distance(joueur, joueur_test), j))\n    # on tri la liste par distance\n    distances.sort()\n    # on ne garde que les k premiers\n    poste_voisins = [train[distances[j][1]][2] for j in range(k)]\n    \n    return occurence_max(poste_voisins)\n\n## En fonction de k la prévision n'est pas la même\nassert k_plus_proche(3, 1) == 'Ailier'\nassert k_plus_proche(3, 5) == '1ère ligne'\n\n\n\n\nNous allons tracer le taux d’erreur en fonction du nombre k de voisins choisis pour trouver la meilleure valeur de k possible.\n\nxs = []\nys = []\nfor k in range(1, len(train)):\n    erreur = 0\n    for i in range(len(test)):\n        joueur_test = test[i]\n        if joueur_test[2] != k_plus_proche(i,k):\n            erreur +=1\n    xs.append(k)\n    ys.append(round(100*erreur/len(test), 1))\n    \nplt.plot(xs, ys)\nplt.xlabel('k')\nplt.ylabel(\"% d'erreur\")\nplt.title(f\"Le meilleur résultat ({min(ys)}% d'erreur) est obtenu avec {xs[ys.index(min(ys))]} voisins\")\nplt.show()\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\n\n\n\n\n\n\n\nComme les tailles des joueurs sont à peu près deux fois plus grandes que les poids, on accorde une plus grande importance à leur taille. On pourrait:\n\nNormaliser les tailles et poids.\nUtiliser l’IMC.\nRechercher d’autres informations qui nous informeraient sur leurs qualités physiques telles que leur temps au 100 m …",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 8: Algorithmique",
      "Chapitre 5: Algorithme des k plus proches voisins",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/8-algorithmique/5-algorithme-des-k-plus-proches-voisins/quiz/index.html",
    "href": "1g/nsi/8-algorithmique/5-algorithme-des-k-plus-proches-voisins/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 8: Algorithmique",
      "Chapitre 5: Algorithme des k plus proches voisins",
      "Quiz"
    ]
  },
  {
    "objectID": "1g/nsi/8-algorithmique/4-algorithmes-gloutons/index.html",
    "href": "1g/nsi/8-algorithmique/4-algorithmes-gloutons/index.html",
    "title": "Chapitre 4: Algorithmes gloutons",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nAlgorithmes gloutons\nRésoudre un problème grâce à un algorithme glouton.\nExemples : problèmes du sac à dos ou du rendu de monnaie.\nLes algorithmes gloutons constituent une méthode algorithmique parmi d’autres qui seront vues en terminale.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 8: Algorithmique",
      "Chapitre 4: Algorithmes gloutons"
    ]
  },
  {
    "objectID": "1g/nsi/8-algorithmique/4-algorithmes-gloutons/index.html#le-problème-du-sac-à-dos",
    "href": "1g/nsi/8-algorithmique/4-algorithmes-gloutons/index.html#le-problème-du-sac-à-dos",
    "title": "Chapitre 4: Algorithmes gloutons",
    "section": "1 Le problème du sac à dos",
    "text": "1 Le problème du sac à dos\nIl s’agit d’un problème classique d’introduction aux algorithmes gloutons.\n\nEn algorithmique, le problème du sac à dos, noté également KP (en anglais, Knapsack problem) est un problème d’optimisation combinatoire. Il modélise une situation analogue au remplissage d’un sac à dos, ne pouvant supporter plus d’un certain poids, avec tout ou partie d’un ensemble donné d’objets ayant chacun un poids et une valeur. Les objets mis dans le sac à dos doivent maximiser la valeur totale, sans dépasser le poids maximum.\n\nArticle Wikipedia\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nIllustration du problème du sac à dos©  CC BY-SA 2.5 via Wikimedia Commons",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 8: Algorithmique",
      "Chapitre 4: Algorithmes gloutons"
    ]
  },
  {
    "objectID": "1g/nsi/8-algorithmique/4-algorithmes-gloutons/index.html#exploration-systématiqueforce-brute",
    "href": "1g/nsi/8-algorithmique/4-algorithmes-gloutons/index.html#exploration-systématiqueforce-brute",
    "title": "Chapitre 4: Algorithmes gloutons",
    "section": "2 Exploration systématique(force brute)",
    "text": "2 Exploration systématique(force brute)\nL’exploration de toutes les possibilités consiste à construire un arbre d’exploration binaire.\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\ninterstices CC-BY-SA-NC\nÀ chaque fois qu’un objet est ajouté à la liste des objets possibles, la taille de l’arbre est multipliée par 2.\nIl s’agit d’une complexité exponentielle ce qui rend cette méthode de résolution inutilisable dans la pratique(Pensez au nombre de routes entre votre maison et le lycée!).",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 8: Algorithmique",
      "Chapitre 4: Algorithmes gloutons"
    ]
  },
  {
    "objectID": "1g/nsi/8-algorithmique/4-algorithmes-gloutons/index.html#méthode-approximative-lalgorithme-glouton",
    "href": "1g/nsi/8-algorithmique/4-algorithmes-gloutons/index.html#méthode-approximative-lalgorithme-glouton",
    "title": "Chapitre 4: Algorithmes gloutons",
    "section": "3 Méthode approximative: l’algorithme glouton",
    "text": "3 Méthode approximative: l’algorithme glouton\nL’algorithme le plus simple est un algorithme glouton. L’idée est d’ajouter en priorité les objets les plus efficaces, jusqu’à saturation du sac :\ntrier les objets par ordre décroissant d'efficacité\nw_conso := 0\n\nplacer les objets dans le sac par ordre décroissant d'efficacité\npour i de 1 à n\n  si w[i] + w_conso ≤ W alors\n    x[i] := 1\n    w_conso := w_conso + w[i]\n  sinon\n    x[i] := 0\n  fin si\nfin pour\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nLes deux étapes de cet algorithme: A trier les objets par ordre décroissant d'efficacité puis B placer les objets dans le sac dans cet ordre si possible©  CC BY-SA 2.5 via Wikimedia Commons\nOn obtient ici une solution de 11$ pour 11 kg alors que la solution optimale est de 12$ et 14 kg.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 8: Algorithmique",
      "Chapitre 4: Algorithmes gloutons"
    ]
  },
  {
    "objectID": "1g/nsi/8-algorithmique/4-algorithmes-gloutons/index.html#le-problème-du-rendu-de-monnaie",
    "href": "1g/nsi/8-algorithmique/4-algorithmes-gloutons/index.html#le-problème-du-rendu-de-monnaie",
    "title": "Chapitre 4: Algorithmes gloutons",
    "section": "4 Le problème du rendu de monnaie",
    "text": "4 Le problème du rendu de monnaie\nExaminons un autre problème d’optimisation : le problème du rendu de monnaie\nNous sommes des commerçants, nous avons à notre disposition un nombre illimité de pièces de:\n\n1 centime\n2 centimes\n5 centimes\n10 centimes\n20 centimes\n50 centimes\n1 €\n2 €\n\nNous devons rendre la monnaie à un client à l’aide de ces pièces. La contrainte est d’utiliser le moins de pièces possible.\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\n\nTrouvez une méthode gloutonne permettant d’effectuer un rendu de monnaie (en utilisant le moins possible de pièces).\nVous devez rendre la somme de 2,63 €, appliquez la méthode que vous venez de mettre au point.\nCombien de pièces avez-vous utilisées ?\n\n\n\n\n\n\n\n\nArticle Wikipedia\nSite interstices\ncours de NSI sur pixees.fr",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 8: Algorithmique",
      "Chapitre 4: Algorithmes gloutons"
    ]
  },
  {
    "objectID": "1g/nsi/8-algorithmique/3-algorithmes-de-tri/exo/index.html",
    "href": "1g/nsi/8-algorithmique/3-algorithmes-de-tri/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Rappeler sans code le principe du tri par sélection.\nEffectuer à la main un tri par sélection des listes suivantes en précisant l’état de la liste à chaque tour de boucle externe:\n\n[28, 2, 34, 12, 16]\n[1, 3, 7, 9, 16]\n[51, 12, 6, 5, 3]\n\nCombien de tours de boucles a-t-il fallu au total (boucle interne et externe) dans chaque cas?",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 8: Algorithmique",
      "Chapitre 3: Algorithmes de tri",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/8-algorithmique/3-algorithmes-de-tri/exo/index.html#tri-par-sélection",
    "href": "1g/nsi/8-algorithmique/3-algorithmes-de-tri/exo/index.html#tri-par-sélection",
    "title": "Exercices",
    "section": "",
    "text": "Rappeler sans code le principe du tri par sélection.\nEffectuer à la main un tri par sélection des listes suivantes en précisant l’état de la liste à chaque tour de boucle externe:\n\n[28, 2, 34, 12, 16]\n[1, 3, 7, 9, 16]\n[51, 12, 6, 5, 3]\n\nCombien de tours de boucles a-t-il fallu au total (boucle interne et externe) dans chaque cas?",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 8: Algorithmique",
      "Chapitre 3: Algorithmes de tri",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/8-algorithmique/3-algorithmes-de-tri/exo/index.html#tri-par-insertion",
    "href": "1g/nsi/8-algorithmique/3-algorithmes-de-tri/exo/index.html#tri-par-insertion",
    "title": "Exercices",
    "section": "2 Tri par insertion",
    "text": "2 Tri par insertion\n\nRappeler sans code le principe du tri par insertion.\nEffectuer à la main un tri par insertion des listes suivantes en précisant l’état de la liste à chaque tour de boucle:\n\n[28, 2, 34, 12, 16]\n[1, 3, 7, 9, 16]\n[51, 12, 6, 5, 3]\n\nCombien de tours de boucles a-t-il fallu au total(boucle interne et externe) dans les deuxième et troisième cas?",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 8: Algorithmique",
      "Chapitre 3: Algorithmes de tri",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/8-algorithmique/3-algorithmes-de-tri/exo/index.html#épreuve-pratique-sujet-n28-session-2021",
    "href": "1g/nsi/8-algorithmique/3-algorithmes-de-tri/exo/index.html#épreuve-pratique-sujet-n28-session-2021",
    "title": "Exercices",
    "section": "3 Épreuve pratique: sujet n°28 session 2021",
    "text": "3 Épreuve pratique: sujet n°28 session 2021\nOn considère l’algorithme de tri de tableau suivant : à chaque étape, on parcourt depuis le début du tableau tous les éléments non rangés et on place en dernière position le plus grand élément.\nExemple avec le tableau : t = [41, 55, 21, 18, 12, 6, 25]\n\nÉtape 1 : on parcourt tous les éléments du tableau, on permute le plus grand élément avec le dernier.\n\nLe tableau devient t = [41, 25, 21, 18, 12, 6, 55]\n\nÉtape 2 : on parcourt tous les éléments sauf le dernier, on permute le plus grand élément trouvé avec l’avant-dernier.\n\nLe tableau devient : t = [6, 25, 21, 18, 12, 41, 55]\nEt ainsi de suite. Le code de la fonction tri_iteratif qui implémente cet algorithme est donné ci- dessous.\ndef tri_iteratif(tab):\n    for k in range(..., 0 ,-1):\n        imax = ...\n        for i in range(0, ...):\n            if tab[i] &gt; ... :\n                imax = i\n        if tab[imax] &gt; ... :\n            ..., tab[imax] = tab[imax], ...\n    return tab\nCompléter le code qui doit donner :\n&gt;&gt;&gt; tri_iteratif([41, 55, 21, 18, 12, 6, 25])\n[6, 12, 18, 21, 25, 41, 55]\nOn rappelle que l’instruction a, b = b, a échange les contenus de a et b.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 8: Algorithmique",
      "Chapitre 3: Algorithmes de tri",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/8-algorithmique/3-algorithmes-de-tri/exo/index.html#réécriture-de-la-fonction-de-tri-par-sélection",
    "href": "1g/nsi/8-algorithmique/3-algorithmes-de-tri/exo/index.html#réécriture-de-la-fonction-de-tri-par-sélection",
    "title": "Exercices",
    "section": "4 Réécriture de la fonction de tri par sélection",
    "text": "4 Réécriture de la fonction de tri par sélection\n\nÉcrire une fonction indice_min(tab, i) qui renvoie l’indice du minimum du tableau compris entre l’indice i et la fin du tableau tab.\nPar exemple l’appel indice_min([3,15,45,12,7,9], 2) renvoie 4.\nUtiliser cette fonction indice_min pour réécrire la fonction tri_par_selection(tab) qui trie le tableau tab selon l’algorithme de tri par sélection.\ndef tri_par_selection(tab):\n   for i in range(len(tab)):\n      # appel de la fonction indice_min\n      ...\n      # permutation des valeurs pour placer \n      # le ième plus petit élément à l'indice i\n      ...\nVérifier que la modification de tab s’effectue en place et donc que le tableau tab initial est écrasé par l’application de la fonction.\ntab = [12, 5, 3, 7]\ntri_par_selection(tab)\nassert tab == [3, 5, 7, 12]\nModifier le code pour renvoyer un nouveau tableau trié sans modifier le tableau initial tab.\ntab = [12, 5, 3, 7]\ntrié = tri_par_selection(tab)\nassert tab == [12, 5, 3, 7]\nassert trié == [3, 5, 7, 12]",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 8: Algorithmique",
      "Chapitre 3: Algorithmes de tri",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/8-algorithmique/3-algorithmes-de-tri/exo/index.html#épreuve-pratique-sujet-n11-session-2023",
    "href": "1g/nsi/8-algorithmique/3-algorithmes-de-tri/exo/index.html#épreuve-pratique-sujet-n11-session-2023",
    "title": "Exercices",
    "section": "5 Épreuve pratique: sujet n°11 session 2023",
    "text": "5 Épreuve pratique: sujet n°11 session 2023\nLa fonction tri_insertion suivante prend en argument une liste tab et trie cette liste en utilisant la méthode du tri par insertion. Compléter cette fonction pour qu’elle réponde à la spécification demandée.\nOn rappelle le principe du tri par insertion : on considère les éléments à trier un par un, le premier élément constituant, à lui tout seul, une liste triée de longueur 1. On range ensuite le second élément pour constituer une liste triée de longueur 2, puis on range le troisième élément pour avoir une liste triée de longueur 3 et ainsi de suite… A chaque étape, le premier élément de la sous-liste non triée est placé dans la sous-liste des éléments déjà triés de sorte que cette sous-liste demeure triée.\nLe principe du tri par insertion est donc d’insérer à la n-ième itération, le n-ième élément à la bonne place.\ndef tri_insertion(tab):\n    n = len(tab)\n    for i in range(1, n):\n        valeur_insertion = tab[...]\n        # la variable j sert à déterminer où placer la valeur à ranger\n        j = ...\n        # tant qu'on a pas trouvé la place de l'élément à insérer\n        # on décale les valeurs du tableau vers la droite\n        while j &gt; ... and valeur_insertion &lt; tab[...]:\n            tab[j] = tab[j-1]\n            j = ...\n        tab[j] = ...\nExemples :\n&gt;&gt;&gt; liste = [9, 5, 8, 4, 0, 2, 7, 1, 10, 3, 6]\n&gt;&gt;&gt; tri_insertion(liste)\n&gt;&gt;&gt; liste\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 8: Algorithmique",
      "Chapitre 3: Algorithmes de tri",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/8-algorithmique/3-algorithmes-de-tri/exo/index.html#un-autre-algorithme-de-tri-le-tri-à-bulles",
    "href": "1g/nsi/8-algorithmique/3-algorithmes-de-tri/exo/index.html#un-autre-algorithme-de-tri-le-tri-à-bulles",
    "title": "Exercices",
    "section": "6 Un autre algorithme de tri: le tri à bulles",
    "text": "6 Un autre algorithme de tri: le tri à bulles\n\nSujet 43 de l’épreuve pratique 2023.\n\nLa fonction tri_bulles prend en paramètre une liste T d’entiers non triés et renvoie la liste triée par ordre croissant.\nLe tri à bulles est un tri en place qui commence par placer le plus grand élément en dernière position en parcourant la liste de gauche à droite et en échangeant au passage les éléments voisins mal ordonnés (si la valeur de l’élément d’indice i a une valeur strictement supérieure à celle de l’indice i + 1, ils sont échangés). Le tri place ensuite en avant-dernière position le plus grand élément de la liste privée de son dernier élément en procédant encore à des échanges d’éléments voisins. Ce principe est répété jusqu’à placer le minimum en première position.\nExemple : pour trier la liste [7, 9, 4, 3] :\n\npremière étape : 7 et 9 ne sont pas échangés, puis 9 et 4 sont échangés, puis 9 et 3 sont échangés, la liste est alors [7, 4, 3, 9]\ndeuxième étape : 7 et 4 sont échangés, puis 7 et 3 sont échangés, la liste est alors [4, 3, 7, 9]\ntroisième étape : 4 et 3 sont échangés, la liste est alors [3, 4, 7, 9]\n\nCompléter le code Python ci-dessous qui implémente la fonction tri_bulles.\ndef tri_bulles(T):\n    '''\n    Renvoie le tableau T trié par ordre croissant\n    '''\n    n = len(T)\n    for i in range(...,...,-1):\n        for j in range(i):\n            if T[j] &gt; T[...]:\n                ... = T[j]\n                T[j] = T[...]\n                T[j+1] = temp\n    return T\n\nExemples :\n&gt;&gt;&gt; tri_bulles([])\n[]\n&gt;&gt;&gt; tri_bulles([7])\n[7]\n&gt;&gt;&gt; tri_bulles([9, 3, 7, 2, 3, 1, 6])\n[1, 2, 3, 3, 6, 7, 9]\n&gt;&gt;&gt; tri_bulles([9, 7, 4, 3])\n[3, 4, 7, 9]",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 8: Algorithmique",
      "Chapitre 3: Algorithmes de tri",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/8-algorithmique/3-algorithmes-de-tri/quiz/index.html",
    "href": "1g/nsi/8-algorithmique/3-algorithmes-de-tri/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "1. Quelle est la complexité du tri par sélection? \n\n   - [ ] inconnue \n   - [ ] linéaire \n   - [x] quadratique \n   - [ ] exponentielle \n\n1. Quel est l’ordre de grandeur du coût du tri par insertion (dans le pire des cas)?\n\n   - [ ] l'ordre de grandeur du coût dépend de l'ordinateur utilisé \n   - [ ] linéaire en la taille du tableau à trier \n   - [x] quadratique en la taille du tableau à trier \n   - [ ] indépendant de la taille du tableau à trier \n\n2. Soit $T$ le temps nécessaire pour trier, à l'aide de l'algorithme du tri par insertion, une liste de 1000 nombres \n   entiers. Quel est l'ordre de grandeur du temps nécessaire, avec le même algorithme, pour trier une liste de \n   10 000 entiers, c'est-à-dire une liste dix fois plus grande? \n\n   - [ ] à peu près le même temps $T$\n   - [ ] environ $10 \\times T$ \n   - [x] environ $100 \\times T$ \n   - [ ] environ $T^2$ \n\n3. Quel est le coût d'un algorithme de tri par insertion (dans le meilleur des cas)? \n\n   - [ ] constant \n   - [ ] logarithmique \n   - [x] linéaire \n   - [ ] quadratique \n\n1. On considère la fonction suivante : \n\n   ```python\n   def f(x,L): \n       i = 0 \n       j = len(L)\n       while i &lt; j: \n          k = (i+j)//2 \n          if x &lt;= L[k]: \n             j = k \n          else: \n             i = k + 1 \n       return i \nCette fonction implémente :\n\nle tri par insertion\nle tri par sélection\nla recherche dichotomique\nla recherche du plus proche voisin\n\n\nUn algorithme de tri d’une liste d’entiers est implémenté de la façon suivante :\ndef trier(L) : \n   for i in range(len(L)): \n      indice_min = i \n      for j in range(i+1, len(L)): \n         if L[j] &lt; L[indice_min] : \n            indice_min = j \n      L[i], L[indice_min] = L[indice_min], L[i] \n   return L \nQuelle est l’affirmation exacte?\n\ncet algorithme est celui du tri par sélection et il a un coût linéaire en la taille de la liste à trier\ncet algorithme est celui du tri par insertion et il a un coût linéaire en la taille de la liste à trier\ncet algorithme est celui du tri par sélection et il a un coût quadratique en la taille de la liste à trier\ncet algorithme est celui du tri par insertion et il a un coût quadratique en la taille de la liste à trier\n\nUn algorithme de tri d’une liste d’entiers est implémenté de la façon suivante :\ndef trier(L) : \n   for i in range(len(L)): \n      indice_min = i \n      for j in range(i+1, len(L)): \n         if L[j] &lt; L[indice_min] : \n            indice_min = j \n      L[i], L[indice_min] = L[indice_min], L[i] \n      # assertion vraie à cet endroit \n   return L\nParmi les assertions suivantes laquelle reste vraie à chaque itération de la boucle, à l’endroit indiqué ci-dessus?\n\nla sous-liste L[0:i+1] contient les i plus grandes valeurs de L triées par ordre décroissant\nla sous-liste L[0:i+1] contient les i plus grandes valeurs de L triées par ordre croissant\nla sous-liste L[0:i+1] contient les i plus petites valeurs de L triées par ordre décroissant\nla sous-liste L[0:i+1] contient les i plus petites valeurs de L triées par ordre croissant\n\nCombien d’échanges effectue la fonction Python suivante pour trier un tableau de 10 éléments au pire des cas?\ndef tri (tab):\n    for i in range (len(tab)-1): \n        for j in range (len(tab)-2, i-1, -1):\n            if tab[j] &gt; tab[j+1]: \n                tab[j] , tab[j+1] = tab[j+1] , tab[j]\n\n10\n44\n54\n100\n\n\n```",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 8: Algorithmique",
      "Chapitre 3: Algorithmes de tri",
      "Quiz"
    ]
  },
  {
    "objectID": "1g/nsi/8-algorithmique/1-parcours-sequentiel-dun-tableau/index.html",
    "href": "1g/nsi/8-algorithmique/1-parcours-sequentiel-dun-tableau/index.html",
    "title": "Chapitre 1: Parcours séquentiel d’un tableau",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nParcours séquentiel d’un tableau\nÉcrire un algorithme de recherche d’un extremum, de calcul d’une moyenne.\nOn montre que le coût est linéaire",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 8: Algorithmique",
      "Chapitre 1: Parcours séquentiel d’un tableau"
    ]
  },
  {
    "objectID": "1g/nsi/8-algorithmique/1-parcours-sequentiel-dun-tableau/index.html#méthodes-de-parcours-séquentiel-dun-tableau",
    "href": "1g/nsi/8-algorithmique/1-parcours-sequentiel-dun-tableau/index.html#méthodes-de-parcours-séquentiel-dun-tableau",
    "title": "Chapitre 1: Parcours séquentiel d’un tableau",
    "section": "1 Méthodes de parcours séquentiel d’un tableau",
    "text": "1 Méthodes de parcours séquentiel d’un tableau\nComme vu dans le chapitre P3C2, on peut itérer sur les valeurs ou sur les index.\n\n1.1 Itération sur les valeurs\nOn fait une itération sur les valeurs du tableau en utilisant le mot-clé in.\n\ntab = [12, -3, 15, -9, 17, 7]\nfor val in tab:\n    print(val)\n&gt;&gt;sortie\n\n12\n-3\n15\n-9\n17\n7\n\n\n\n\n1.2 Itération sur les index\nC’est la méthode classique utilisée dans les langages impératifs.\n\nfor i in range(len(tab)):\n    val = tab[i]\n    print(\"indice:\", i, \"valeur:\", val)\n&gt;&gt;sortie\n\nindice: 0 valeur: 12\nindice: 1 valeur: -3\nindice: 2 valeur: 15\nindice: 3 valeur: -9\nindice: 4 valeur: 17\nindice: 5 valeur: 7",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 8: Algorithmique",
      "Chapitre 1: Parcours séquentiel d’un tableau"
    ]
  },
  {
    "objectID": "1g/nsi/8-algorithmique/1-parcours-sequentiel-dun-tableau/index.html#recherche-dun-extrémum",
    "href": "1g/nsi/8-algorithmique/1-parcours-sequentiel-dun-tableau/index.html#recherche-dun-extrémum",
    "title": "Chapitre 1: Parcours séquentiel d’un tableau",
    "section": "2 Recherche d’un extrémum",
    "text": "2 Recherche d’un extrémum\nOn initialise la valeur au premier élément du tableau puis on parcourt le tableau pour vérifier s’il existe un élément soit plus petit soit plus grand.\n\n2.1 Recherche du maximum\n\ndef maximum(liste):\n    # ne pas utiliser max pour le nom de variable\n    # car la fonction max existe en Python(on l'écraserait!)\n    maxi = liste[0]\n    for e in liste:\n        if e &gt; maxi:\n            maxi = e\n    return maxi\n\n# appel de la fonction sur tab\nmaximum(tab)\n\n17\n\n\n\n\n2.2 Recherche du minimum\n\ndef minimum(liste):\n    mini = liste[0]\n    for e in liste:\n        if e &lt; mini:\n            mini = e\n    return mini\n\n# appel de la fonction avec la liste tab en argument\nminimum(tab)\n\n-9",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 8: Algorithmique",
      "Chapitre 1: Parcours séquentiel d’un tableau"
    ]
  },
  {
    "objectID": "1g/nsi/8-algorithmique/1-parcours-sequentiel-dun-tableau/index.html#calculer-la-moyenne-dun-tableau",
    "href": "1g/nsi/8-algorithmique/1-parcours-sequentiel-dun-tableau/index.html#calculer-la-moyenne-dun-tableau",
    "title": "Chapitre 1: Parcours séquentiel d’un tableau",
    "section": "3 Calculer la moyenne d’un tableau",
    "text": "3 Calculer la moyenne d’un tableau\nOn initialise une valeur accumulatrice à 0, puis on additionne tous les éléments du tableau. Enfin on divise la somme des éléments par le nombre d’éléments du tableau.\n\ndef moyenne(liste):\n    somme = 0\n    for e in liste:\n        somme = somme + e\n    # On divise la somme de tpus les éléments par leur nombre\n    moyenne = somme / len(liste)\n    return moyenne\n\n# appel de la fonction\nmoyenne(tab)\n\n6.5",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 8: Algorithmique",
      "Chapitre 1: Parcours séquentiel d’un tableau"
    ]
  },
  {
    "objectID": "1g/nsi/8-algorithmique/1-parcours-sequentiel-dun-tableau/index.html#coût-de-lalgorithme-notion-de-complexité",
    "href": "1g/nsi/8-algorithmique/1-parcours-sequentiel-dun-tableau/index.html#coût-de-lalgorithme-notion-de-complexité",
    "title": "Chapitre 1: Parcours séquentiel d’un tableau",
    "section": "4 Coût de l’algorithme: notion de complexité",
    "text": "4 Coût de l’algorithme: notion de complexité\nPour mesurer l’efficacité temporelle d’un algorithme, on introduit la notion de complexité.\n\n\nComplexité\n\n\n\nLa complexité d’un algorithme est le nombre d’opérations élémentaires(opération arithmétique, comparaison, affectation…) effectuées pour obtenir un résultat.\n\n\n\n\nLa complexité d’un algorithme dépend souvent de la taille des données d’entrée notée NN. Dans notre cas la taille du tableau dans lequel on recherche l’élément.\n\nPour comparer facilement les algorithmes on se place dans le pire des cas, dans les algorithmes présentés il faut toujours parcourir entièrement la liste pour trouver le maximum, le minimum ou la moyenne: il y a donc NN itérations.\nOn dit que le coût de l’algorithme est linéaire ou encore que c’est un algorithme de complexité O(N)O(N).",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 8: Algorithmique",
      "Chapitre 1: Parcours séquentiel d’un tableau"
    ]
  },
  {
    "objectID": "1g/nsi/8-algorithmique/index.html",
    "href": "1g/nsi/8-algorithmique/index.html",
    "title": "Partie 8: Algorithmique",
    "section": "",
    "text": "Chapitre 1: Parcours séquentiel d’un tableau\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 2: Algorithmes de recherche\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 3: Algorithmes de tri\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 4: Algorithmes gloutons\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 5: Algorithme des k plus proches voisins\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAucun article correspondant",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 8: Algorithmique"
    ]
  },
  {
    "objectID": "1g/nsi/8-algorithmique/2-algorithmes-de-recherche/index.html",
    "href": "1g/nsi/8-algorithmique/2-algorithmes-de-recherche/index.html",
    "title": "Chapitre 2: Algorithmes de recherche",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nParcours séquentiel d’un tableau\nÉcrire un algorithme de recherche d’une occurence sur des valeurs de type quelconque\nOn montre que le coût est linéaire\n\n\nRecherche dichotomique dans un tableau trié\nMontrer la terminaison de la recherche dichotomique à l’aide d’un variant de boucle.\nDes assertions peuvent être utilisées.\nLa preuve de la correction peut être présentée par le professeur.\nCommençons par créer une liste d’éléments pour cela nous allons écrire une fonction pour créer facilement des listes de mots.\nfrom itertools import product\nfrom string import ascii_uppercase as alphabet\n\ndef lister_mots(l=3):\n    \"\"\"Renvoie une liste ordonnés de mots ayant l lettres\"\"\"\n    return [''.join(lettres) for lettres in product(alphabet, repeat=l)]\n\nmots5 =  lister_mots(5)\n# le nombre de noms générés est exponentiel par rapport à sa longueur\nassert len(mots5) == 26**5\nprint(len(mots5), \"mots\")\nprint(\"Voici les sept premiers\")\nprint(mots5[:7])\nprint(\"Et les sept derniers\")\nprint(mots5[-7:])\n&gt;&gt;sortie\n\n11881376 mots\nVoici les sept premiers\n['AAAAA', 'AAAAB', 'AAAAC', 'AAAAD', 'AAAAE', 'AAAAF', 'AAAAG']\nEt les sept derniers\n['ZZZZT', 'ZZZZU', 'ZZZZV', 'ZZZZW', 'ZZZZX', 'ZZZZY', 'ZZZZZ']",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 8: Algorithmique",
      "Chapitre 2: Algorithmes de recherche"
    ]
  },
  {
    "objectID": "1g/nsi/8-algorithmique/2-algorithmes-de-recherche/index.html#algorithme-de-recherche-dans-un-tableau-non-trié",
    "href": "1g/nsi/8-algorithmique/2-algorithmes-de-recherche/index.html#algorithme-de-recherche-dans-un-tableau-non-trié",
    "title": "Chapitre 2: Algorithmes de recherche",
    "section": "1 Algorithme de recherche dans un tableau non trié",
    "text": "1 Algorithme de recherche dans un tableau non trié\nNous allons voir comment chercher une valeur dans un tableau par une méthode de parcours du tableau: la recherche en table.\nCet algorithme naïf est couteux, mais on ne peut pas faire mieux si les données ne sont pas triées.\nOn parcourt l’ensemble du tableau et on s’arrête lorsqu’on trouve l’élément.\nDans une fonction le return est définitif, on peut donc facilement arrêter la boucle dès que la valeur est trouvée. Si on est arrivé au bout de la boucle on est donc certains que l’élément cherché n’est pas présent.\n\ndef recherche(élément, liste):\n    \"\"\"Fonction de recherche de l'élément dans la liste\n\n    Arguments\n    ---------\n    élement: str\n        l'élément cherché\n    l: liste\n        la liste dans laquelle on cherche\n    Retourne\n    --------\n    bool\n        True si l'élément est trouvé et False sinon\n    \"\"\"\n    for e in liste:\n        if e == élément:\n            return True\n    return False\n\nAppelons la fonction sur un mot présent dans le tableau.\n\nrecherche(\"EULER\", mots5)\n&gt;&gt;sortie\n\nEULER trouvé en 2186982 tours de boucle.\n\n\nTrue\n\n\nRegardons maintenant, si le mot n’est pas trouvé.\n\nrecherche(\"€UL€R\", mots5)\n&gt;&gt;sortie\n\n€UL€R non trouvé en 11881376 tours de boucle.\n\n\nFalse",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 8: Algorithmique",
      "Chapitre 2: Algorithmes de recherche"
    ]
  },
  {
    "objectID": "1g/nsi/8-algorithmique/2-algorithmes-de-recherche/index.html#la-recherche-dichotomique",
    "href": "1g/nsi/8-algorithmique/2-algorithmes-de-recherche/index.html#la-recherche-dichotomique",
    "title": "Chapitre 2: Algorithmes de recherche",
    "section": "2 La recherche dichotomique",
    "text": "2 La recherche dichotomique\nNous allons maintenant étudier l’algorithme de recherche par dichotomie. On peut comparer ça à une recherche dans un dictionnaire (qui a eu la bonne idée d’être trié!)\n\n2.1 Principe\n\nLa recherche dichotomique ou recherche par dichotomie, est un algorithme de recherche pour trouver la position d’un élément dans un tableau trié. Le principe est le suivant : comparer l’élément avec la valeur de la case au milieu du tableau ; si les valeurs sont égales, la tâche est accomplie, sinon on recommence dans la moitié du tableau pertinente. Source Wikipedia\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n©  CC BY-SA 4.0 via Wikimedia Commons\n\n\n2.2 Définition de la fonction de recherche\n\ndef recherche_dichotomique(élément, liste):\n    N = len(liste)\n    \n    # on initialise les indices début \n    # et fin aux extrémités de la liste\n    début = 0\n    fin = N - 1\n    \n    while début &lt;= fin and fin &lt; N:\n        # On se place au milieu de la liste\n        milieu = (début + fin) // 2 # il, s'agit d'une division entière\n        # trois cas possibles\n        \n        if liste[milieu] &lt; élément:       \n            début = milieu + 1\n        elif liste[milieu] &gt; élément: \n            fin = milieu - 1\n        else:\n            return True\n    return False\n\n\n\n2.3 Appels de la fonction\nRecherchons le mot EULER de la liste.\n\nrecherche_dichotomique('EULER', mots5)\n&gt;&gt;sortie\n\nEULER trouvé en 23 tours de boucle.\n\n\nTrue\n\n\nIncroyable on a trouvé en 23 fois au lieu de 2186982 avec la recherche en table.\n\nrecherche_dichotomique('€UL€R', mots5)\n&gt;&gt;sortie\n\n€UL€R non trouvé en 24 tours de boucle.\n\n\nFalse\n\n\n24 tours au lieu de 11881376 dans le pire cas: le mot est absent.\nL’algorithme de recherche dichotomique est incroyablement plus efficace que l’algorithme de recherche en table.\nIl s’agit d’un logarithme ayant une complexité en log2(n)log_2 (n), c’est-à-dire le nombre de fois qu’il faut couper la liste en deux pour qu’elle ne contienne qu’un élément.\nPar exemple:\n\nsi n= 88: log2(8)=3log_2(8) = 3\nsi n= 256256: log2(256)=8log_2(256) = 8\nsi n= 10241024: log2(1024)=10log_2 (1024) = 10\nsi n= 1188137611881376: log2(11881376)=23,5log_2 (11881376) = 23,5\n\nAu lieu de 11881376 d’opérations, on en effectue 24 au maximum!",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 8: Algorithmique",
      "Chapitre 2: Algorithmes de recherche"
    ]
  },
  {
    "objectID": "1g/nsi/8-algorithmique/2-algorithmes-de-recherche/index.html#complexité-temporelle",
    "href": "1g/nsi/8-algorithmique/2-algorithmes-de-recherche/index.html#complexité-temporelle",
    "title": "Chapitre 2: Algorithmes de recherche",
    "section": "3 Complexité temporelle",
    "text": "3 Complexité temporelle\nComme on l’a vu, si on utilise un tableau trié, la recherche dichotomique est beaucoup plus efficace que la recherche en table. Cela se traduit par un temps d’exécution infime en raison de sa complexité logarithmique.\n%%timeit -n1 -r1\nrecherche('€UL€R', mots5)\n%%timeit -n1 -r1\nrecherche_dichotomique('€UL€R', mots5)\n\n\n\nRecherche en table: Complexité linéaire\nO(N)\nO(N)\n\nBenchmark\n\n&gt;&gt;sortie\n\n€UL€R non trouvé en 11881376 tours de boucle.\n332 ms ± 0 ns per loop (mean ± std. dev. of 1 run, 1 loop each)\n\n\n\n\nRecherche dichotomique: Complexité logarithmique\nO(log(N))\nO(\\log(N))\n\nBenchmark\n\n&gt;&gt;sortie\n\n€UL€R non trouvé en 24 tours de boucle.\n229 µs ± 0 ns per loop (mean ± std. dev. of 1 run, 1 loop each)",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 8: Algorithmique",
      "Chapitre 2: Algorithmes de recherche"
    ]
  },
  {
    "objectID": "1g/nsi/4-traitement-de-donnees-en-tables/2-utilisation-de-la-librairie-pandas/exo/index.html",
    "href": "1g/nsi/4-traitement-de-donnees-en-tables/2-utilisation-de-la-librairie-pandas/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Dans ces exercices vous allez explorer les données étudiées dans le cours sur le stationnement des deux roues à Nice.\n\nDonner le nom, le type et une description de chacune des colonnes du tableau.\nRechercher dans toute la table les lignes qui possèdent au moins un stationnement pour vélo.\nCompter le nombre de stationnements qui possèdent au moins un stationnement pour vélo.\nAfficher et comparer le nombre total d’arcs de stationnements pour vélo(NB_ARC_VL) et pour moto(NB_ARC_MT).\nRechercher le stationnement le plus long de la ville, pour savoir dans quel quartier vivre si vous avez un deux roues.\nPour tester la cohérence de la table, rechercher si certains stationnements ont été comptés deux fois. Pour cela on utilisera les données de longitude et latitude données dans la colonne geometry. S’il n’y a pas de doublons c’est que la ville de Nice a fourni des données de qualité.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 4: Traitement de données en tables",
      "Chapitre 2: Utilisation de la librairie pandas",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/4-traitement-de-donnees-en-tables/2-utilisation-de-la-librairie-pandas/quiz/index.html",
    "href": "1g/nsi/4-traitement-de-donnees-en-tables/2-utilisation-de-la-librairie-pandas/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 4: Traitement de données en tables",
      "Chapitre 2: Utilisation de la librairie pandas",
      "Quiz"
    ]
  },
  {
    "objectID": "1g/nsi/4-traitement-de-donnees-en-tables/1-tables-de-donnees/index.html",
    "href": "1g/nsi/4-traitement-de-donnees-en-tables/1-tables-de-donnees/index.html",
    "title": "Chapitre 1: Tables de données",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nIndexation de tables\nImporter une table depuis un fichier texte tabulé ou un fichier CSV.\nEst utilisé un tableau doublement indexé ou un tableau de p-uplets qui partagent les mêmes descripteurs.\n\n\nRecherche dans une table\nRechercher les lignes d’une table vérifiant des critères exprimés en logique propositionnelle.\nLa recherche de doublons, les tests de cohérence d’une table sont présentés.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 4: Traitement de données en tables",
      "Chapitre 1: Tables de données"
    ]
  },
  {
    "objectID": "1g/nsi/4-traitement-de-donnees-en-tables/1-tables-de-donnees/index.html#le-format-csv",
    "href": "1g/nsi/4-traitement-de-donnees-en-tables/1-tables-de-donnees/index.html#le-format-csv",
    "title": "Chapitre 1: Tables de données",
    "section": "1 Le format csv",
    "text": "1 Le format csv\nVous avez l’habitude d’utiliser un tableur pour traiter des tables de données.\nCependant, le problème de compatibilité des fichiers entre les divers logiciels de tableur fait que l’informaticien préfère souvent des formats textuels simples comme le csv ou encore le xml ou le json(voir le cours de snt.\n\n\ncsv\n\n\n\nLe format csv pour comma separated values est un format de fichier textuel dans lequel les colonnes données sont séparées par des virgules.\n\n\n\nLes descripteurs de colonnes sont placés sur la première ligne et les autres lignes correspondent aux entrées du tableau.\nTous les logiciels de tableur et langages de programmation peuvent facilement lire ou écrire ces fichiers.\n\nVoici l’exemple d’un fichier de notes généré par le logiciel Pronote.\nMentions,1/2j abs,Rang,Moyenne Générale,MATHEMATIQUES,PHYSIQUE-CHIMIE,NSI\nFélicitations,3,1,17.4,15.3,15.5,18,18.5\nEncouragements,5,13,10.1,8,10,15,12.4\n\n\n\n\n\n\n\n\nEn plus\n\n\n\n\n\n\nOn utilise parfois la tabulation (ou le point-virgule) comme séparateur pour une lecture plus aisée par l’homme, et ne pas être gêné par le fait que nous autres français utilisons la virgule comme séparateur décimal!\nMentions        1/2j abs    Rang    Moyenne Générale    MATHEMATIQUES   PHYSIQUE-CHIMIE NSI\nFélicitations   3           1       17.4    15.3        15.5            18              18.5\nEncouragements  5           13      10.1    8           10              15              12.4",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 4: Traitement de données en tables",
      "Chapitre 1: Tables de données"
    ]
  },
  {
    "objectID": "1g/nsi/4-traitement-de-donnees-en-tables/1-tables-de-donnees/index.html#lecture-dun-fichier-csv-en-python",
    "href": "1g/nsi/4-traitement-de-donnees-en-tables/1-tables-de-donnees/index.html#lecture-dun-fichier-csv-en-python",
    "title": "Chapitre 1: Tables de données",
    "section": "2 Lecture d’un fichier csv en Python",
    "text": "2 Lecture d’un fichier csv en Python\nPython propose un module csv spécialisé avec notamment une classe DictReader qui permet de lire les lignes du fichier csv sous la forme de dictionnaires.\n\nimport csv\n\n# Lecture du fichier\nwith open('./data/notes.csv') as csvfile:\n    reader = csv.DictReader(csvfile)\n    # Itération sur les lignes\n    for ligne in reader:\n        print(ligne)\n&gt;&gt;sortie\n\n{'Nom': 'OBUQW', 'Mentions': 'Félicitations', '1/2j abs': '3', 'Rang': '1', 'Moyenne Générale': '17.4', 'MATHEMATIQUES': '18', 'PHYSIQUE-CHIMIE': '18.5', 'NSI': '17.7'}\n{'Nom': 'XYYVQ', 'Mentions': 'Félicitations', '1/2j abs': '5', 'Rang': '1', 'Moyenne Générale': '18.1', 'MATHEMATIQUES': '19.2', 'PHYSIQUE-CHIMIE': '18', 'NSI': '19'}\n{'Nom': 'SJOLY', 'Mentions': 'Félicitations', '1/2j abs': '', 'Rang': '1', 'Moyenne Générale': '18.2', 'MATHEMATIQUES': '19.2', 'PHYSIQUE-CHIMIE': '17', 'NSI': '19.1'}\n{'Nom': 'CAOZY', 'Mentions': 'Félicitations', '1/2j abs': '1', 'Rang': '2', 'Moyenne Générale': '17', 'MATHEMATIQUES': '18.5', 'PHYSIQUE-CHIMIE': '17.5', 'NSI': '17.9'}\n{'Nom': 'NULRT', 'Mentions': 'Félicitations', '1/2j abs': '2', 'Rang': '2', 'Moyenne Générale': '17.6', 'MATHEMATIQUES': '17.8', 'PHYSIQUE-CHIMIE': '18.5', 'NSI': '17.5'}\n{'Nom': 'SATNL', 'Mentions': 'Félicitations', '1/2j abs': '4', 'Rang': '2', 'Moyenne Générale': '17', 'MATHEMATIQUES': '17.5', 'PHYSIQUE-CHIMIE': '17.5', 'NSI': '18.6'}\n{'Nom': 'BXARC', 'Mentions': 'Félicitations', '1/2j abs': '15', 'Rang': '2', 'Moyenne Générale': '18.1', 'MATHEMATIQUES': '19.4', 'PHYSIQUE-CHIMIE': '19', 'NSI': '16.6'}\n{'Nom': 'UFXVM', 'Mentions': 'Félicitations', '1/2j abs': '1', 'Rang': '3', 'Moyenne Générale': '17.6', 'MATHEMATIQUES': '18.6', 'PHYSIQUE-CHIMIE': '17.5', 'NSI': '16.5'}\n{'Nom': 'ASLZS', 'Mentions': 'Félicitations', '1/2j abs': '6', 'Rang': '3', 'Moyenne Générale': '17.8', 'MATHEMATIQUES': '19.4', 'PHYSIQUE-CHIMIE': '19', 'NSI': '17.8'}\n{'Nom': 'PIGCD', 'Mentions': 'Félicitations', '1/2j abs': '9', 'Rang': '3', 'Moyenne Générale': '17.8', 'MATHEMATIQUES': '18.9', 'PHYSIQUE-CHIMIE': '20', 'NSI': '17.6'}\n{'Nom': 'NBQVQ', 'Mentions': 'Félicitations', '1/2j abs': '1', 'Rang': '4', 'Moyenne Générale': '16.5', 'MATHEMATIQUES': '17.6', 'PHYSIQUE-CHIMIE': '16.5', 'NSI': '17.2'}\n{'Nom': 'IXHGB', 'Mentions': 'Félicitations', '1/2j abs': '4', 'Rang': '17.4', 'Moyenne Générale': '17.3', 'MATHEMATIQUES': '17', 'PHYSIQUE-CHIMIE': '17.9', 'NSI': '16'}\n{'Nom': 'HKYCU', 'Mentions': 'Félicitations', '1/2j abs': '2', 'Rang': '5', 'Moyenne Générale': '16.4', 'MATHEMATIQUES': '18.1', 'PHYSIQUE-CHIMIE': '17', 'NSI': '17.9'}\n{'Nom': 'XRZOA', 'Mentions': 'Félicitations', '1/2j abs': '9', 'Rang': '5', 'Moyenne Générale': '16.6', 'MATHEMATIQUES': '18.3', 'PHYSIQUE-CHIMIE': '17.5', 'NSI': '14.7'}\n{'Nom': 'SEXRW', 'Mentions': 'Félicitations', '1/2j abs': '16', 'Rang': '5', 'Moyenne Générale': '17.1', 'MATHEMATIQUES': '17.8', 'PHYSIQUE-CHIMIE': '16', 'NSI': '18.8'}\n{'Nom': 'FROXY', 'Mentions': 'Félicitations', '1/2j abs': '6', 'Rang': '6', 'Moyenne Générale': '16.3', 'MATHEMATIQUES': '19.3', 'PHYSIQUE-CHIMIE': '17', 'NSI': '15'}\n{'Nom': 'MPBWD', 'Mentions': 'Félicitations', '1/2j abs': '7', 'Rang': '6', 'Moyenne Générale': '16.5', 'MATHEMATIQUES': '17', 'PHYSIQUE-CHIMIE': '17', 'NSI': '16.7'}\n{'Nom': 'PAZCW', 'Mentions': 'Félicitations', '1/2j abs': '6', 'Rang': '16.4', 'Moyenne Générale': '13.3', 'MATHEMATIQUES': '17', 'PHYSIQUE-CHIMIE': '16.8', 'NSI': '13.5'}\n{'Nom': 'XOWON', 'Mentions': 'Félicitations', '1/2j abs': '3', 'Rang': '7', 'Moyenne Générale': '15.4', 'MATHEMATIQUES': '15.2', 'PHYSIQUE-CHIMIE': '16', 'NSI': '16.4'}\n{'Nom': 'XSXJX', 'Mentions': 'Félicitations', '1/2j abs': '8', 'Rang': '7', 'Moyenne Générale': '15.4', 'MATHEMATIQUES': '16.2', 'PHYSIQUE-CHIMIE': '12.5', 'NSI': '16.6'}\n{'Nom': 'RRWVF', 'Mentions': 'Félicitations', '1/2j abs': '12', 'Rang': '7', 'Moyenne Générale': '15.5', 'MATHEMATIQUES': '14.4', 'PHYSIQUE-CHIMIE': '15', 'NSI': '16.4'}\n{'Nom': 'VFQIV', 'Mentions': 'Félicitations', '1/2j abs': '11', 'Rang': '8', 'Moyenne Générale': '14.5', 'MATHEMATIQUES': '14.4', 'PHYSIQUE-CHIMIE': '13', 'NSI': '10.3'}\n{'Nom': 'WGLOT', 'Mentions': 'Compliments', '1/2j abs': '8', 'Rang': '14', 'Moyenne Générale': '12', 'MATHEMATIQUES': '16', 'PHYSIQUE-CHIMIE': '11.8', 'NSI': '13.5'}\n{'Nom': 'YPSAM', 'Mentions': 'Félicitations', '1/2j abs': '8', 'Rang': '14.6', 'Moyenne Générale': '13.3', 'MATHEMATIQUES': '14.5', 'PHYSIQUE-CHIMIE': '14.5', 'NSI': '19'}\n{'Nom': 'AYFHQ', 'Mentions': 'Compliments', '1/2j abs': '2', 'Rang': '9', 'Moyenne Générale': '13.9', 'MATHEMATIQUES': '13.5', 'PHYSIQUE-CHIMIE': '13.5', 'NSI': '14.2'}\n{'Nom': 'QCTQB', 'Mentions': 'Félicitations', '1/2j abs': '6', 'Rang': '9', 'Moyenne Générale': '14.4', 'MATHEMATIQUES': '14.1', 'PHYSIQUE-CHIMIE': '11', 'NSI': '11.1'}\n{'Nom': 'MXVIJ', 'Mentions': 'Compliments', '1/2j abs': '8', 'Rang': '9', 'Moyenne Générale': '13.7', 'MATHEMATIQUES': '13', 'PHYSIQUE-CHIMIE': '12', 'NSI': '11.2'}\n{'Nom': 'UQAYM', 'Mentions': 'Compliments', '1/2j abs': '2', 'Rang': '10', 'Moyenne Générale': '13.9', 'MATHEMATIQUES': '14', 'PHYSIQUE-CHIMIE': '11', 'NSI': '14.8'}\n{'Nom': 'TFIAB', 'Mentions': 'Félicitations', '1/2j abs': '4', 'Rang': '10', 'Moyenne Générale': '13.6', 'MATHEMATIQUES': '14.2', 'PHYSIQUE-CHIMIE': '13', 'NSI': '13.3'}\n{'Nom': 'NHLZR', 'Mentions': 'Compliments', '1/2j abs': '14', 'Rang': '10', 'Moyenne Générale': '13.9', 'MATHEMATIQUES': '13.7', 'PHYSIQUE-CHIMIE': '11.5', 'NSI': '15.4'}\n{'Nom': 'XPVXR', 'Mentions': 'Compliments', '1/2j abs': '10', 'Rang': '13.9', 'Moyenne Générale': '11', 'MATHEMATIQUES': '14', 'PHYSIQUE-CHIMIE': '14.2', 'NSI': '19.5'}\n{'Nom': 'OLQBO', 'Mentions': 'Félicitations', '1/2j abs': '14', 'Rang': '11', 'Moyenne Générale': '13.5', 'MATHEMATIQUES': '12.8', 'PHYSIQUE-CHIMIE': '13', 'NSI': '11.2'}\n{'Nom': 'CUTBU', 'Mentions': 'Compliments', '1/2j abs': '11', 'Rang': '13.6', 'Moyenne Générale': '12.3', 'MATHEMATIQUES': '11.5', 'PHYSIQUE-CHIMIE': '13.6', 'NSI': '14.5'}\n{'Nom': 'SQVNH', 'Mentions': 'Pas de mention', '1/2j abs': '2', 'Rang': '12', 'Moyenne Générale': '13.8', 'MATHEMATIQUES': '15', 'PHYSIQUE-CHIMIE': '16', 'NSI': '12.4'}\n{'Nom': 'TVMRA', 'Mentions': 'Pas de mention', '1/2j abs': '65', 'Rang': '12', 'Moyenne Générale': '13.5', 'MATHEMATIQUES': '8', 'PHYSIQUE-CHIMIE': '', 'NSI': '18'}\n{'Nom': 'KTBYW', 'Mentions': 'Compliments', '1/2j abs': '12', 'Rang': '13.5', 'Moyenne Générale': '12.7', 'MATHEMATIQUES': '12.5', 'PHYSIQUE-CHIMIE': '13.9', 'NSI': '14'}\n{'Nom': 'VGANB', 'Mentions': 'Compliments', '1/2j abs': '2', 'Rang': '13', 'Moyenne Générale': '13.5', 'MATHEMATIQUES': '13.3', 'PHYSIQUE-CHIMIE': '11.5', 'NSI': '15.7'}\n{'Nom': 'MXRPG', 'Mentions': 'Pas de mention', '1/2j abs': '7', 'Rang': '13', 'Moyenne Générale': '13.4', 'MATHEMATIQUES': '15.8', 'PHYSIQUE-CHIMIE': '15', 'NSI': '11.1'}\n{'Nom': 'CPIZF', 'Mentions': 'Compliments', '1/2j abs': '13', 'Rang': '13.4', 'Moyenne Générale': '15', 'MATHEMATIQUES': '12.5', 'PHYSIQUE-CHIMIE': '12.6', 'NSI': '14.5'}\n{'Nom': 'ZWSPZ', 'Mentions': 'Compliments', '1/2j abs': '3', 'Rang': '14', 'Moyenne Générale': '13.5', 'MATHEMATIQUES': '11.3', 'PHYSIQUE-CHIMIE': '9', 'NSI': '17'}\n{'Nom': 'UVLPZ', 'Mentions': 'Compliments', '1/2j abs': '', 'Rang': '14', 'Moyenne Générale': '12.9', 'MATHEMATIQUES': '12.4', 'PHYSIQUE-CHIMIE': '8', 'NSI': '10.1'}\n{'Nom': 'VZWHE', 'Mentions': 'Compliments', '1/2j abs': '14', 'Rang': '13.1', 'Moyenne Générale': '13.3', 'MATHEMATIQUES': '12', 'PHYSIQUE-CHIMIE': '12.6', 'NSI': '20'}\n{'Nom': 'FVEWG', 'Mentions': 'Compliments', '1/2j abs': '1', 'Rang': '15', 'Moyenne Générale': '13', 'MATHEMATIQUES': '14.2', 'PHYSIQUE-CHIMIE': '12.5', 'NSI': '11.1'}\n{'Nom': 'OYQHD', 'Mentions': 'Compliments', '1/2j abs': '4', 'Rang': '15', 'Moyenne Générale': '13.3', 'MATHEMATIQUES': '12.7', 'PHYSIQUE-CHIMIE': '13.5', 'NSI': '10'}\n{'Nom': 'HAUAK', 'Mentions': 'Pas de mention', '1/2j abs': '', 'Rang': '15', 'Moyenne Générale': '12.8', 'MATHEMATIQUES': '16', 'PHYSIQUE-CHIMIE': '15', 'NSI': '7.1'}\n{'Nom': 'LYHYD', 'Mentions': 'Compliments', '1/2j abs': '2', 'Rang': '16', 'Moyenne Générale': '13.2', 'MATHEMATIQUES': '13.3', 'PHYSIQUE-CHIMIE': '11.5', 'NSI': '13.1'}\n{'Nom': 'QAKEG', 'Mentions': 'Compliments', '1/2j abs': '5', 'Rang': '16', 'Moyenne Générale': '12.9', 'MATHEMATIQUES': '11.1', 'PHYSIQUE-CHIMIE': '11', 'NSI': '13.3'}\n{'Nom': 'FFHOD', 'Mentions': \"Mise en garde pour l'assiduité\", '1/2j abs': '25', 'Rang': '16', 'Moyenne Générale': '12.6', 'MATHEMATIQUES': '10.5', 'PHYSIQUE-CHIMIE': '13', 'NSI': '13.9'}\n{'Nom': 'KBYPL', 'Mentions': 'Pas de mention', '1/2j abs': '3', 'Rang': '17', 'Moyenne Générale': '12.8', 'MATHEMATIQUES': '12.9', 'PHYSIQUE-CHIMIE': '14', 'NSI': '14.3'}\n{'Nom': 'VBNMW', 'Mentions': 'Compliments', '1/2j abs': '4', 'Rang': '17', 'Moyenne Générale': '13', 'MATHEMATIQUES': '12.6', 'PHYSIQUE-CHIMIE': '11', 'NSI': '13.7'}\n{'Nom': 'BQDCH', 'Mentions': 'Compliments', '1/2j abs': '17', 'Rang': '17', 'Moyenne Générale': '12.6', 'MATHEMATIQUES': '10.7', 'PHYSIQUE-CHIMIE': '8', 'NSI': '13.2'}\n{'Nom': 'IPKWS', 'Mentions': 'Compliments', '1/2j abs': '17', 'Rang': '18', 'Moyenne Générale': '12.5', 'MATHEMATIQUES': '11.4', 'PHYSIQUE-CHIMIE': '12', 'NSI': '10.5'}\n{'Nom': 'PKXYT', 'Mentions': 'Pas de mention', '1/2j abs': '33', 'Rang': '18', 'Moyenne Générale': '12.6', 'MATHEMATIQUES': '7.7', 'PHYSIQUE-CHIMIE': '12', 'NSI': '14.3'}\n{'Nom': 'PCEPU', 'Mentions': 'Pas de mention', '1/2j abs': '46', 'Rang': '18', 'Moyenne Générale': '12.9', 'MATHEMATIQUES': '8.2', 'PHYSIQUE-CHIMIE': '', 'NSI': '14.2'}\n{'Nom': 'OFUTJ', 'Mentions': 'Compliments', '1/2j abs': '6', 'Rang': '19', 'Moyenne Générale': '12.6', 'MATHEMATIQUES': '10.8', 'PHYSIQUE-CHIMIE': '10.5', 'NSI': '12.5'}\n{'Nom': 'MFPNQ', 'Mentions': 'Encouragements', '1/2j abs': '7', 'Rang': '19', 'Moyenne Générale': '12.6', 'MATHEMATIQUES': '12', 'PHYSIQUE-CHIMIE': '12.5', 'NSI': '11.2'}\n{'Nom': 'YLDOS', 'Mentions': 'Encouragements', '1/2j abs': '21', 'Rang': '19', 'Moyenne Générale': '12.2', 'MATHEMATIQUES': '14', 'PHYSIQUE-CHIMIE': '14', 'NSI': '9.5'}\n{'Nom': 'REAJE', 'Mentions': 'Encouragements', '1/2j abs': '4', 'Rang': '20', 'Moyenne Générale': '12.6', 'MATHEMATIQUES': '14.2', 'PHYSIQUE-CHIMIE': '11.5', 'NSI': '13.7'}\n{'Nom': 'DRHQA', 'Mentions': 'Encouragements', '1/2j abs': '4', 'Rang': '20', 'Moyenne Générale': '12.5', 'MATHEMATIQUES': '10.6', 'PHYSIQUE-CHIMIE': '10', 'NSI': '12.3'}\n{'Nom': 'UOZMK', 'Mentions': 'Encouragements', '1/2j abs': '16', 'Rang': '20', 'Moyenne Générale': '12.1', 'MATHEMATIQUES': '12.4', 'PHYSIQUE-CHIMIE': '9', 'NSI': '11'}\n{'Nom': 'YEXND', 'Mentions': 'Encouragements', '1/2j abs': '3', 'Rang': '21', 'Moyenne Générale': '12.6', 'MATHEMATIQUES': '13.2', 'PHYSIQUE-CHIMIE': '14.5', 'NSI': '13'}\n{'Nom': 'XVEXG', 'Mentions': 'Encouragements', '1/2j abs': '6', 'Rang': '21', 'Moyenne Générale': '12.2', 'MATHEMATIQUES': '11.1', 'PHYSIQUE-CHIMIE': '10', 'NSI': '14.4'}\n{'Nom': 'IXVPT', 'Mentions': 'Pas de mention', '1/2j abs': '9', 'Rang': '21', 'Moyenne Générale': '11.6', 'MATHEMATIQUES': '13.1', 'PHYSIQUE-CHIMIE': '8', 'NSI': '10'}\n{'Nom': 'MNSTZ', 'Mentions': 'Pas de mention', '1/2j abs': '18', 'Rang': '22', 'Moyenne Générale': '11.8', 'MATHEMATIQUES': '12.8', 'PHYSIQUE-CHIMIE': '10.5', 'NSI': '12.8'}\n{'Nom': 'MGZUB', 'Mentions': 'Pas de mention', '1/2j abs': '32', 'Rang': '22', 'Moyenne Générale': '11.3', 'MATHEMATIQUES': '12.2', 'PHYSIQUE-CHIMIE': '10', 'NSI': '11'}\n{'Nom': 'FIECN', 'Mentions': 'Encouragements', '1/2j abs': '5', 'Rang': '23', 'Moyenne Générale': '12.4', 'MATHEMATIQUES': '11.8', 'PHYSIQUE-CHIMIE': '11.5', 'NSI': '10.7'}\n{'Nom': 'WQNGX', 'Mentions': 'Pas de mention', '1/2j abs': '9', 'Rang': '23', 'Moyenne Générale': '11.4', 'MATHEMATIQUES': '11.4', 'PHYSIQUE-CHIMIE': '12', 'NSI': '9.6'}\n{'Nom': 'RYILJ', 'Mentions': 'Pas de mention', '1/2j abs': '37', 'Rang': '23', 'Moyenne Générale': '11.3', 'MATHEMATIQUES': '16.9', 'PHYSIQUE-CHIMIE': '10', 'NSI': '6.4'}\n{'Nom': 'HIURK', 'Mentions': 'Encouragements', '1/2j abs': '2', 'Rang': '24', 'Moyenne Générale': '12.3', 'MATHEMATIQUES': '12.4', 'PHYSIQUE-CHIMIE': '11.5', 'NSI': '12'}\n{'Nom': 'MDTVZ', 'Mentions': 'Encouragements', '1/2j abs': '7', 'Rang': '24', 'Moyenne Générale': '11', 'MATHEMATIQUES': '10.8', 'PHYSIQUE-CHIMIE': '11', 'NSI': '11.7'}\n{'Nom': 'ORETO', 'Mentions': 'Pas de mention', '1/2j abs': '9', 'Rang': '24', 'Moyenne Générale': '11.3', 'MATHEMATIQUES': '9.2', 'PHYSIQUE-CHIMIE': '9.5', 'NSI': '12.6'}\n{'Nom': 'BZQWB', 'Mentions': 'Pas de mention', '1/2j abs': '1', 'Rang': '25', 'Moyenne Générale': '10.7', 'MATHEMATIQUES': '9.5', 'PHYSIQUE-CHIMIE': '11.5', 'NSI': '13.1'}\n{'Nom': 'WCSQK', 'Mentions': 'Encouragements', '1/2j abs': '2', 'Rang': '25', 'Moyenne Générale': '11.5', 'MATHEMATIQUES': '11', 'PHYSIQUE-CHIMIE': '11', 'NSI': '12.9'}\n{'Nom': 'JAHMU', 'Mentions': 'Encouragements', '1/2j abs': '6', 'Rang': '25', 'Moyenne Générale': '10.9', 'MATHEMATIQUES': '11.6', 'PHYSIQUE-CHIMIE': '10', 'NSI': '8.8'}\n{'Nom': 'OEVTI', 'Mentions': 'Pas de mention', '1/2j abs': '9', 'Rang': '26', 'Moyenne Générale': '11.2', 'MATHEMATIQUES': '13.8', 'PHYSIQUE-CHIMIE': '12', 'NSI': '8.9'}\n{'Nom': 'LZGJO', 'Mentions': 'Encouragements', '1/2j abs': '13', 'Rang': '26', 'Moyenne Générale': '10.6', 'MATHEMATIQUES': '9.2', 'PHYSIQUE-CHIMIE': '8', 'NSI': '11'}\n{'Nom': 'IASDL', 'Mentions': 'Encouragements', '1/2j abs': '23', 'Rang': '26', 'Moyenne Générale': '10.5', 'MATHEMATIQUES': '11.6', 'PHYSIQUE-CHIMIE': '10', 'NSI': '12.6'}\n{'Nom': 'DAQYJ', 'Mentions': 'Encouragements', '1/2j abs': '2', 'Rang': '27', 'Moyenne Générale': '10.4', 'MATHEMATIQUES': '9.8', 'PHYSIQUE-CHIMIE': '8', 'NSI': '12.6'}\n{'Nom': 'IJNTU', 'Mentions': 'Pas de mention', '1/2j abs': '14', 'Rang': '27', 'Moyenne Générale': '10.5', 'MATHEMATIQUES': '10.7', 'PHYSIQUE-CHIMIE': '9', 'NSI': '11.6'}\n{'Nom': 'SRXZR', 'Mentions': 'Encouragements', '1/2j abs': '27', 'Rang': '11', 'Moyenne Générale': '9.7', 'MATHEMATIQUES': '10.5', 'PHYSIQUE-CHIMIE': '9.2', 'NSI': '12.5'}\n{'Nom': 'NGKWD', 'Mentions': 'Encouragements', '1/2j abs': '11', 'Rang': '28', 'Moyenne Générale': '9.9', 'MATHEMATIQUES': '10.2', 'PHYSIQUE-CHIMIE': '4', 'NSI': '9'}\n{'Nom': 'NCEFS', 'Mentions': 'Pas de mention', '1/2j abs': '17', 'Rang': '28', 'Moyenne Générale': '10.6', 'MATHEMATIQUES': '11.8', 'PHYSIQUE-CHIMIE': '8', 'NSI': '13.3'}\n{'Nom': 'WWOLI', 'Mentions': 'Encouragements', '1/2j abs': '21', 'Rang': '28', 'Moyenne Générale': '10.4', 'MATHEMATIQUES': '7', 'PHYSIQUE-CHIMIE': '6.5', 'NSI': '12.7'}\n{'Nom': 'DUIOL', 'Mentions': 'Pas de mention', '1/2j abs': '28', 'Rang': '28', 'Moyenne Générale': '9.9', 'MATHEMATIQUES': '11.3', 'PHYSIQUE-CHIMIE': '5', 'NSI': '8.5'}\n{'Nom': 'TKYOU', 'Mentions': 'Encouragements', '1/2j abs': '3', 'Rang': '29', 'Moyenne Générale': '10.5', 'MATHEMATIQUES': '7.9', 'PHYSIQUE-CHIMIE': '8.5', 'NSI': '10.4'}\n{'Nom': 'MIRZQ', 'Mentions': 'Encouragements', '1/2j abs': '3', 'Rang': '29', 'Moyenne Générale': '10.2', 'MATHEMATIQUES': '9.4', 'PHYSIQUE-CHIMIE': '7', 'NSI': '10'}\n{'Nom': 'UABBU', 'Mentions': 'Pas de mention', '1/2j abs': '24', 'Rang': '29', 'Moyenne Générale': '10.2', 'MATHEMATIQUES': '9.2', 'PHYSIQUE-CHIMIE': '6', 'NSI': '10.9'}\n{'Nom': 'HHXEY', 'Mentions': 'Pas de mention', '1/2j abs': '25', 'Rang': '30', 'Moyenne Générale': '10', 'MATHEMATIQUES': '5.2', 'PHYSIQUE-CHIMIE': '10', 'NSI': '11.6'}\n{'Nom': 'BZNHD', 'Mentions': 'Pas de mention', '1/2j abs': '28', 'Rang': '30', 'Moyenne Générale': '9.4', 'MATHEMATIQUES': '11', 'PHYSIQUE-CHIMIE': '11', 'NSI': '9.4'}\n{'Nom': 'VQQKZ', 'Mentions': 'Encouragements', '1/2j abs': '2', 'Rang': '31', 'Moyenne Générale': '10.1', 'MATHEMATIQUES': '9.2', 'PHYSIQUE-CHIMIE': '10', 'NSI': '10.2'}\n{'Nom': 'WEDTR', 'Mentions': 'Pas de mention', '1/2j abs': '4', 'Rang': '31', 'Moyenne Générale': '9.5', 'MATHEMATIQUES': '8.7', 'PHYSIQUE-CHIMIE': '13.5', 'NSI': '8.1'}\n{'Nom': 'UCVFC', 'Mentions': 'Encouragements', '1/2j abs': '12', 'Rang': '31', 'Moyenne Générale': '9', 'MATHEMATIQUES': '8.2', 'PHYSIQUE-CHIMIE': '8', 'NSI': '8.7'}\n{'Nom': 'BFQTB', 'Mentions': 'Pas de mention', '1/2j abs': '14', 'Rang': '32', 'Moyenne Générale': '9.4', 'MATHEMATIQUES': '11.8', 'PHYSIQUE-CHIMIE': '10', 'NSI': '5.7'}\n{'Nom': 'JICPK', 'Mentions': 'Pas de mention', '1/2j abs': '49', 'Rang': '32', 'Moyenne Générale': '7.7', 'MATHEMATIQUES': '11.6', 'PHYSIQUE-CHIMIE': '9', 'NSI': '1.5'}\n{'Nom': 'MCGET', 'Mentions': 'Pas de mention', '1/2j abs': '32', 'Rang': '9', 'Moyenne Générale': '12.3', 'MATHEMATIQUES': '7.5', 'PHYSIQUE-CHIMIE': '10.3', 'NSI': '11'}\n{'Nom': 'CQSFR', 'Mentions': 'Pas de mention', '1/2j abs': '33', 'Rang': '9', 'Moyenne Générale': '11.7', 'MATHEMATIQUES': '8', 'PHYSIQUE-CHIMIE': '8.8', 'NSI': '14.5'}",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 4: Traitement de données en tables",
      "Chapitre 1: Tables de données"
    ]
  },
  {
    "objectID": "1g/nsi/4-traitement-de-donnees-en-tables/1-tables-de-donnees/index.html#affecter-les-données-à-une-liste",
    "href": "1g/nsi/4-traitement-de-donnees-en-tables/1-tables-de-donnees/index.html#affecter-les-données-à-une-liste",
    "title": "Chapitre 1: Tables de données",
    "section": "3 Affecter les données à une liste",
    "text": "3 Affecter les données à une liste\nNous allons stocker les données en mémoire sous forme d’une liste de dictionnaires pour utilisation ultérieure.\n\n# Création de la liste vide\neleves = []\n\nwith open('./data/notes.csv') as csvfile:\n    reader = csv.DictReader(csvfile)\n    for ligne in reader:\n        eleves.append(ligne)\n\n# affichage du nombre de lignes et de la première\nlen(eleves), eleves[0]\n\n(96,\n {'Nom': 'OBUQW',\n  'Mentions': 'Félicitations',\n  '1/2j abs': '3',\n  'Rang': '1',\n  'Moyenne Générale': '17.4',\n  'MATHEMATIQUES': '18',\n  'PHYSIQUE-CHIMIE': '18.5',\n  'NSI': '17.7'})\n\n\nOn peut maintenant facilement travailler avec les données, par exemple, compter les félicitations.\n\nlen([eleve for eleve in eleves if eleve['Mentions'] == 'Félicitations'])\n\n26",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 4: Traitement de données en tables",
      "Chapitre 1: Tables de données"
    ]
  },
  {
    "objectID": "1g/nsi/4-traitement-de-donnees-en-tables/1-tables-de-donnees/index.html#recherche-de-lignes",
    "href": "1g/nsi/4-traitement-de-donnees-en-tables/1-tables-de-donnees/index.html#recherche-de-lignes",
    "title": "Chapitre 1: Tables de données",
    "section": "4 Recherche de lignes",
    "text": "4 Recherche de lignes\nRecherchons les élèves qui ont les félicitations.\n\n# Lecture du fichier csv\nwith open('./data/notes.csv') as csvfile:\n    reader = csv.DictReader(csvfile)\n    # Itération sur les lignes du fichier\n    for ligne in reader:\n        if ligne[\"Mentions\"] == 'Félicitations':\n            print(ligne)\n&gt;&gt;sortie\n\n{'Nom': 'OBUQW', 'Mentions': 'Félicitations', '1/2j abs': '3', 'Rang': '1', 'Moyenne Générale': '17.4', 'MATHEMATIQUES': '18', 'PHYSIQUE-CHIMIE': '18.5', 'NSI': '17.7'}\n{'Nom': 'XYYVQ', 'Mentions': 'Félicitations', '1/2j abs': '5', 'Rang': '1', 'Moyenne Générale': '18.1', 'MATHEMATIQUES': '19.2', 'PHYSIQUE-CHIMIE': '18', 'NSI': '19'}\n{'Nom': 'SJOLY', 'Mentions': 'Félicitations', '1/2j abs': '', 'Rang': '1', 'Moyenne Générale': '18.2', 'MATHEMATIQUES': '19.2', 'PHYSIQUE-CHIMIE': '17', 'NSI': '19.1'}\n{'Nom': 'CAOZY', 'Mentions': 'Félicitations', '1/2j abs': '1', 'Rang': '2', 'Moyenne Générale': '17', 'MATHEMATIQUES': '18.5', 'PHYSIQUE-CHIMIE': '17.5', 'NSI': '17.9'}\n{'Nom': 'NULRT', 'Mentions': 'Félicitations', '1/2j abs': '2', 'Rang': '2', 'Moyenne Générale': '17.6', 'MATHEMATIQUES': '17.8', 'PHYSIQUE-CHIMIE': '18.5', 'NSI': '17.5'}\n{'Nom': 'SATNL', 'Mentions': 'Félicitations', '1/2j abs': '4', 'Rang': '2', 'Moyenne Générale': '17', 'MATHEMATIQUES': '17.5', 'PHYSIQUE-CHIMIE': '17.5', 'NSI': '18.6'}\n{'Nom': 'BXARC', 'Mentions': 'Félicitations', '1/2j abs': '15', 'Rang': '2', 'Moyenne Générale': '18.1', 'MATHEMATIQUES': '19.4', 'PHYSIQUE-CHIMIE': '19', 'NSI': '16.6'}\n{'Nom': 'UFXVM', 'Mentions': 'Félicitations', '1/2j abs': '1', 'Rang': '3', 'Moyenne Générale': '17.6', 'MATHEMATIQUES': '18.6', 'PHYSIQUE-CHIMIE': '17.5', 'NSI': '16.5'}\n{'Nom': 'ASLZS', 'Mentions': 'Félicitations', '1/2j abs': '6', 'Rang': '3', 'Moyenne Générale': '17.8', 'MATHEMATIQUES': '19.4', 'PHYSIQUE-CHIMIE': '19', 'NSI': '17.8'}\n{'Nom': 'PIGCD', 'Mentions': 'Félicitations', '1/2j abs': '9', 'Rang': '3', 'Moyenne Générale': '17.8', 'MATHEMATIQUES': '18.9', 'PHYSIQUE-CHIMIE': '20', 'NSI': '17.6'}\n{'Nom': 'NBQVQ', 'Mentions': 'Félicitations', '1/2j abs': '1', 'Rang': '4', 'Moyenne Générale': '16.5', 'MATHEMATIQUES': '17.6', 'PHYSIQUE-CHIMIE': '16.5', 'NSI': '17.2'}\n{'Nom': 'IXHGB', 'Mentions': 'Félicitations', '1/2j abs': '4', 'Rang': '17.4', 'Moyenne Générale': '17.3', 'MATHEMATIQUES': '17', 'PHYSIQUE-CHIMIE': '17.9', 'NSI': '16'}\n{'Nom': 'HKYCU', 'Mentions': 'Félicitations', '1/2j abs': '2', 'Rang': '5', 'Moyenne Générale': '16.4', 'MATHEMATIQUES': '18.1', 'PHYSIQUE-CHIMIE': '17', 'NSI': '17.9'}\n{'Nom': 'XRZOA', 'Mentions': 'Félicitations', '1/2j abs': '9', 'Rang': '5', 'Moyenne Générale': '16.6', 'MATHEMATIQUES': '18.3', 'PHYSIQUE-CHIMIE': '17.5', 'NSI': '14.7'}\n{'Nom': 'SEXRW', 'Mentions': 'Félicitations', '1/2j abs': '16', 'Rang': '5', 'Moyenne Générale': '17.1', 'MATHEMATIQUES': '17.8', 'PHYSIQUE-CHIMIE': '16', 'NSI': '18.8'}\n{'Nom': 'FROXY', 'Mentions': 'Félicitations', '1/2j abs': '6', 'Rang': '6', 'Moyenne Générale': '16.3', 'MATHEMATIQUES': '19.3', 'PHYSIQUE-CHIMIE': '17', 'NSI': '15'}\n{'Nom': 'MPBWD', 'Mentions': 'Félicitations', '1/2j abs': '7', 'Rang': '6', 'Moyenne Générale': '16.5', 'MATHEMATIQUES': '17', 'PHYSIQUE-CHIMIE': '17', 'NSI': '16.7'}\n{'Nom': 'PAZCW', 'Mentions': 'Félicitations', '1/2j abs': '6', 'Rang': '16.4', 'Moyenne Générale': '13.3', 'MATHEMATIQUES': '17', 'PHYSIQUE-CHIMIE': '16.8', 'NSI': '13.5'}\n{'Nom': 'XOWON', 'Mentions': 'Félicitations', '1/2j abs': '3', 'Rang': '7', 'Moyenne Générale': '15.4', 'MATHEMATIQUES': '15.2', 'PHYSIQUE-CHIMIE': '16', 'NSI': '16.4'}\n{'Nom': 'XSXJX', 'Mentions': 'Félicitations', '1/2j abs': '8', 'Rang': '7', 'Moyenne Générale': '15.4', 'MATHEMATIQUES': '16.2', 'PHYSIQUE-CHIMIE': '12.5', 'NSI': '16.6'}\n{'Nom': 'RRWVF', 'Mentions': 'Félicitations', '1/2j abs': '12', 'Rang': '7', 'Moyenne Générale': '15.5', 'MATHEMATIQUES': '14.4', 'PHYSIQUE-CHIMIE': '15', 'NSI': '16.4'}\n{'Nom': 'VFQIV', 'Mentions': 'Félicitations', '1/2j abs': '11', 'Rang': '8', 'Moyenne Générale': '14.5', 'MATHEMATIQUES': '14.4', 'PHYSIQUE-CHIMIE': '13', 'NSI': '10.3'}\n{'Nom': 'YPSAM', 'Mentions': 'Félicitations', '1/2j abs': '8', 'Rang': '14.6', 'Moyenne Générale': '13.3', 'MATHEMATIQUES': '14.5', 'PHYSIQUE-CHIMIE': '14.5', 'NSI': '19'}\n{'Nom': 'QCTQB', 'Mentions': 'Félicitations', '1/2j abs': '6', 'Rang': '9', 'Moyenne Générale': '14.4', 'MATHEMATIQUES': '14.1', 'PHYSIQUE-CHIMIE': '11', 'NSI': '11.1'}\n{'Nom': 'TFIAB', 'Mentions': 'Félicitations', '1/2j abs': '4', 'Rang': '10', 'Moyenne Générale': '13.6', 'MATHEMATIQUES': '14.2', 'PHYSIQUE-CHIMIE': '13', 'NSI': '13.3'}\n{'Nom': 'OLQBO', 'Mentions': 'Félicitations', '1/2j abs': '14', 'Rang': '11', 'Moyenne Générale': '13.5', 'MATHEMATIQUES': '12.8', 'PHYSIQUE-CHIMIE': '13', 'NSI': '11.2'}",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 4: Traitement de données en tables",
      "Chapitre 1: Tables de données"
    ]
  },
  {
    "objectID": "1g/nsi/4-traitement-de-donnees-en-tables/1-tables-de-donnees/index.html#recherche-de-doublons",
    "href": "1g/nsi/4-traitement-de-donnees-en-tables/1-tables-de-donnees/index.html#recherche-de-doublons",
    "title": "Chapitre 1: Tables de données",
    "section": "5 Recherche de doublons",
    "text": "5 Recherche de doublons\nVérifions qu’il n’y a pas deux lignes identiques qui se sont glissées par erreur dans le fichier csv.\nPour cela nous allons utiliser une liste annexe vus qui rencence les lignes déjà vues lors de l’itération.\n\nvus = []\nfor eleve in eleves:\n    # vérifie que l'entrée n'a pas déjà été vue\n    assert eleve not in vus\n    # ajout de l'élève à vus\n    vus.append(eleve)\n# Si on arrive au but de l'itération\n# c'est qu'il n'y a pas de doublons\nprint(\"Pas de doublons\")\n&gt;&gt;sortie\n\nPas de doublons",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 4: Traitement de données en tables",
      "Chapitre 1: Tables de données"
    ]
  },
  {
    "objectID": "1g/nsi/4-traitement-de-donnees-en-tables/index.html",
    "href": "1g/nsi/4-traitement-de-donnees-en-tables/index.html",
    "title": "Partie 4: Traitement de données en tables",
    "section": "",
    "text": "Chapitre 1: Tables de données\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 2: Utilisation de la librairie pandas\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAucun article correspondant",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 4: Traitement de données en tables"
    ]
  },
  {
    "objectID": "1g/nsi/1-histoire-de-linformatique/1-quelques-dates-marquantes-de-lhistoire-de-linformatique/index.html",
    "href": "1g/nsi/1-histoire-de-linformatique/1-quelques-dates-marquantes-de-lhistoire-de-linformatique/index.html",
    "title": "Chapitre 1: Quelques dates marquantes de l’histoire de l’informatique",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nÉvénements clés de l’histoire de l’informatique\nSituer dans le temps les principaux événements de l’histoire de l’informatique et leurs protagonistes.\nCes repères historiques seront construits au fur et à mesure de la présentation des concepts et techniques.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 1: Histoire de l’informatique",
      "Chapitre 1: Quelques dates marquantes de l’histoire de l’informatique"
    ]
  },
  {
    "objectID": "1g/nsi/1-histoire-de-linformatique/1-quelques-dates-marquantes-de-lhistoire-de-linformatique/index.html#comment-en-est-on-arrivé-là",
    "href": "1g/nsi/1-histoire-de-linformatique/1-quelques-dates-marquantes-de-lhistoire-de-linformatique/index.html#comment-en-est-on-arrivé-là",
    "title": "Chapitre 1: Quelques dates marquantes de l’histoire de l’informatique",
    "section": "1 Comment en est-on arrivé là?",
    "text": "1 Comment en est-on arrivé là?\nNous sommes aujourd’hui entourés d’ordinateurs, de serveurs, de tablettes, et nous interagissons avec ces machines quotidiennement, mais comment cela a-t-il été possible?\nComme l’explique l’article Informatique de Wikipédia, cela a été possible grâce à des avancées de nature théorique, mais aussi technologiques.\n\nCes champs d’application (de l’informatique) peuvent être séparés en deux branches:\n\nl’une, de nature théorique, qui concerne la définition de concepts et modèles,\net l’autre, de nature pratique, qui s’intéresse aux techniques concrètes de mise en œuvre.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 1: Histoire de l’informatique",
      "Chapitre 1: Quelques dates marquantes de l’histoire de l’informatique"
    ]
  },
  {
    "objectID": "1g/nsi/1-histoire-de-linformatique/1-quelques-dates-marquantes-de-lhistoire-de-linformatique/index.html#sources",
    "href": "1g/nsi/1-histoire-de-linformatique/1-quelques-dates-marquantes-de-lhistoire-de-linformatique/index.html#sources",
    "title": "Chapitre 1: Quelques dates marquantes de l’histoire de l’informatique",
    "section": "2 Sources",
    "text": "2 Sources\nLes domaines de l’informatique sont nombreux: algorithmique, langages de programmation… Et l’informatique fait intervenir de nombreux domaines connexes: électronique, optique, ondes pour le stockage de données, leur échange sur des réseaux…\nVoici quelques liens pour y voir plus clair:\n\nUne histoire de l’informatique sur le site hypotheses.org\nHistoire de l’informatique de Francois Guillier\nHistoire de l’informatique sur Wikipedia\nHistoire des ordinateurs\nChronologie de l’informatique",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 1: Histoire de l’informatique",
      "Chapitre 1: Quelques dates marquantes de l’histoire de l’informatique"
    ]
  },
  {
    "objectID": "1g/nsi/1-histoire-de-linformatique/index.html",
    "href": "1g/nsi/1-histoire-de-linformatique/index.html",
    "title": "Partie 1: Histoire de l’informatique",
    "section": "",
    "text": "Chapitre 1: Quelques dates marquantes de l’histoire de l’informatique\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChapitre 2: Technologie et théorie\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAucun article correspondant",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 1: Histoire de l’informatique"
    ]
  },
  {
    "objectID": "1g/nsi/1-histoire-de-linformatique/2-technologie-et-theorie/index.html",
    "href": "1g/nsi/1-histoire-de-linformatique/2-technologie-et-theorie/index.html",
    "title": "Chapitre 2: Technologie et théorie",
    "section": "",
    "text": "Le développement de l’informatique a nécessité de nombreuses avancées dans des domaines variés tant technologiques que théoriques.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 1: Histoire de l’informatique",
      "Chapitre 2: Technologie et théorie"
    ]
  },
  {
    "objectID": "1g/nsi/1-histoire-de-linformatique/2-technologie-et-theorie/index.html#aspects-technologiques",
    "href": "1g/nsi/1-histoire-de-linformatique/2-technologie-et-theorie/index.html#aspects-technologiques",
    "title": "Chapitre 2: Technologie et théorie",
    "section": "1 Aspects technologiques",
    "text": "1 Aspects technologiques\n\n1.1 Calculateurs mécaniques\nEn 1642, Blaise Pascale est le premier à avoir conçu une machine à calculer mécanique, capable d’effectuer les quatre opérations élémentaires sur les entiers: addition, soustraction, multiplication, division.\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nLa pascaline créée par Blaise Pascal en 1652.© David.Monniaux CC BY-SA 3.0 via Wikimedia Commons \n\n\n1.2 Calculateurs électromécaniques\nAu début du XXe siècle, on commence à utiliser l’électricité pour réaliser des calculateurs.\nD’abord des machines électromécaniques comme le Z3 allemand achevé en 1941. On le dit électromécanique, car il utilisait des relais électromécaniques fonctionnant à une fréquence de 5 à 10 Hz.(Source Wikipedia)\n\n\t\t\t  \n  \n\t\t\t\tZuse Z3 in the Deutsches Museum in Munich, Germany\"\n\t\t\t\t\tloading=\"lazy\"\n\t\t\t\t\tdecoding=\"async\"&gt;\n\t\t\t\n© Venusianer CC BY-SA 3.0 via Wikimedia Commons\nOn remplace rapidement les relais électromécaniques par des tubes à vides comme dans l’ENIAC.\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n Public domain via Wikimedia Commons\n\n\n1.3 Le transistor et l’avènement de l’électronique\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nLe transistor est un composant à trois bornes.©  CC BY-SA 3.0 via Wikimedia Commons C’est avec l’invention du transistor en 1947 que l’ère de l’électronique et de l’informatique va prendre son envol. Cette découverte vaudra à ses inventeurs américains William Shockley et Walter Brattain le prix Nobel de physique en 1956.\n\nLe transistor est considéré comme un énorme progrès face au tube électronique : beaucoup plus petit, plus léger et plus robuste, fonctionnant avec des tensions faibles, autorisant une alimentation par piles, il fonctionne presque instantanément une fois mis sous tension, contrairement aux tubes électroniques qui demandaient une dizaine de secondes de chauffage, généraient une consommation importante et nécessitaient une source de tension élevée (plusieurs centaines de volts). Wikipedia",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 1: Histoire de l’informatique",
      "Chapitre 2: Technologie et théorie"
    ]
  },
  {
    "objectID": "1g/nsi/1-histoire-de-linformatique/2-technologie-et-theorie/index.html#aspects-théoriques",
    "href": "1g/nsi/1-histoire-de-linformatique/2-technologie-et-theorie/index.html#aspects-théoriques",
    "title": "Chapitre 2: Technologie et théorie",
    "section": "2 Aspects théoriques",
    "text": "2 Aspects théoriques\n\n2.1 La machine de Turing\nAu fur et à mesure que les machines évoluaient, on est venu à se poser beaucoup plus théorique: “Une machine peut-elle tout calculer?”, “Existe-t-il une machine capable de décider si une proposition mathématique est vraie ou fausse?”.\nPour répondre à ces questions, Alan Turing propose en 1937 un modèle de machine appelé aujourd’hui machine de Turing. Cette machine a les caractéristiques suivantes:\nElle possède un ruban infini que lequel on dispose des données. La machine peut lire les données, les traiter et en écrire d’autres. Au bout d’un certain temps, il se peut qu’elle s’arrête, et on peut alors lire le résultat.\nTuring démontre grâce à cette machine théorique qu’il existe certains problèmes que la machine n’est pas capable de résoudre.\nOn considère aujourd’hui l’ordinateur comme une réalisation concrète d’une machine de Turing universelle, c’est-à-dire une machine traitant des informations et capable de prendre comme donnée n’importe quel algorithme et de l’exécuter.\n\n\n2.2 L’architecture de von Neumann\nLe premier ordinateur électronique conçu pour être une machine de Turing est l’EINAC réalisé en 1943. Son architecture fut décrite par John von Neumann et sert de base, à quelques améliorations près, à l’architecture de tous les ordinateurs depuis.\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nArchitecture de Von Neumann\n\n\nInformatique et sciences du numérique Spécialité ISN en terminale S - Avec des exercices corrigés et des idées de projets par Gilles Dowek\nCette architecture est centrée autour de deux composants principaux:\n\nle processeur,\net la mémoire.\n\n\n\nInformatique et sciences du numérique Spécialité ISN en terminale S - Avec des exercices corrigés et des idées de projets par Gilles Dowek\nInformatique pour tous en classes préparatoires aux grandes écoles de Benjamin Wack",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 1: Histoire de l’informatique",
      "Chapitre 2: Technologie et théorie"
    ]
  },
  {
    "objectID": "1g/nsi/3-representation-des-donnees-types-construits/1-introduction-aux-tableaux/exo/index.html",
    "href": "1g/nsi/3-representation-des-donnees-types-construits/1-introduction-aux-tableaux/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "## Quiz\n\n1. Quel est le type de données de base en Python qui permet de stocker une séquence modifiable de valeurs?\n\n   -  [x] Liste\n   -  [ ] Tuple\n   -  [ ] Dictionnaire\n   -  [ ] Ensemble\n\n1.  Quel est le type de données de base en Python qui permet de stocker une séquence immuable de valeurs?\n\n    -  [ ] Liste\n    -  [x] Tuple\n    -  [ ] Dictionnaire\n    -  [ ] Ensemble",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 3: Représentation des données : types construits",
      "Chapitre 1: Introduction aux tableaux",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/3-representation-des-donnees-types-construits/1-introduction-aux-tableaux/exo/index.html#questions-de-cours",
    "href": "1g/nsi/3-representation-des-donnees-types-construits/1-introduction-aux-tableaux/exo/index.html#questions-de-cours",
    "title": "Exercices",
    "section": "1 Questions de cours",
    "text": "1 Questions de cours\n\nQu’est-ce qu’un tuple en Python ?\n\nComment pouvez-vous créer un tuple en Python ?\n\nComment pouvez-vous accéder à un élément d’un tuple en Python ?\nComment pouvez-vous modifier un tuple en Python ?\nComment pouvez-vous fusionner deux tuples en Python ?\nComment pouvez-vous convertir un tuple en liste et une liste en tuple en Python ?\nQuels sont les avantages de l’utilisation de tuples par rapport aux listes en Python ?\nComment pouvez-vous supprimer un tuple en Python ?\nQuels sont quelques exemples d’utilisation courante de tuples en Python ?\nQuelle est la différence entre un tuple et une liste en Python ?",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 3: Représentation des données : types construits",
      "Chapitre 1: Introduction aux tableaux",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/3-representation-des-donnees-types-construits/1-introduction-aux-tableaux/quiz/index.html",
    "href": "1g/nsi/3-representation-des-donnees-types-construits/1-introduction-aux-tableaux/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "1. Quel est le type de données de base en Python qui permet de stocker une séquence modifiable de valeurs?\n\n   -  [x] Liste\n   -  [ ] Tuple\n   -  [ ] Dictionnaire\n   -  [ ] Ensemble\n\n1.  Quel est le type de données de base en Python qui permet de stocker une séquence immuable de valeurs?\n\n    -  [ ] Liste\n    -  [x] Tuple\n    -  [ ] Dictionnaire\n    -  [ ] Ensemble\n\n2.  Comment accédez-vous au troisième élément d'une liste ou d'un tuple nommé `t` en Python?\n\n    -  [ ] `t(2)`\n    -  [x] `t[2]`\n    -  [ ] `t(3)`\n    -  [ ] `t[3]`\n\n3.  Quelle méthode utilisez-vous pour ajouter un élément à la fin d'une liste en Python?\n\n    -  [ ] `insert()`\n    -  [ ] `extend()`\n    -  [x] `append()`\n    -  [ ] `add()`\n\n4.  Quelle méthode utilisez-vous pour insérer un élément à un index spécifique d'une liste en\n    Python?\n\n    -  [ ] `append()`\n    -  [x] `insert()`\n    -  [ ] `extend()`\n    -  [ ] `add()`\n\n5.  Quelle est la syntaxe pour créer un tuple en Python?\n\n    -  [ ] `[1, 2, 3]`\n    -  [ ] `{1, 2, 3}`\n    -  [x] `(1, 2, 3)`\n    -  [ ] `\"1, 2, 3\"`\n\n6.  Qu'est-ce qu'un tuple en Python?\n\n    - [x] Un type de données qui peut contenir un nombre quelconque d'éléments, mais qui ne peut pas\n     être modifié une fois créé.\n    - [ ] Un type de données qui peut contenir un nombre quelconque d'éléments, et qui peut être\n     modifié une fois créé.\n    - [ ] Un type de données qui ne peut contenir qu'un seul élément.\n    \n7.  Comment créez-vous une liste en Python?\n\n    - [ ] En utilisant des accolades `{}`\n    - [ ] En utilisant des parenthèses `()`\n    - [x] En utilisant des crochets `[]`\n    \n   \n8.  Quelle est la syntaxe pour accéder à un élément d'un tuple en Python?\n\n    - [x] `tuple[index]`\n    - [ ] `tuple{index}`\n    - [ ] `tuple(index)`\n    \n9.  Comment puis-je trouver la longueur d'un tuple en Python?\n    \n\n    - [x] En utilisant la fonction `len(tuple)`\n    - [ ] En utilisant la méthode `tuple.length()`\n    - [ ] En utilisant la variable `tuple.size`\n    \n\n11. Quelle est la valeur de la variable `r` à la fin de l'exécution du script suivant?\n\n    ```python\n    t = (10, 6, 1, 12, 15) \n    r = t[2] - 1\n    ```\n\n    - [ ] 9 \n    - [ ] 5 \n    - [x] 0 \n    - [ ] -5\n\n12. Quelle est la valeur de la variable `r` à la fin de l'exécution du script suivant?\n\n    ```python\n    tab = [10,6,1,12,15]\n    r = tab[3] - tab[1]\n    ```\n\n    - [ ] -9 \n    - [ ] 2 \n    - [ ] 3 \n    - [x] 6\n\n13. Qu'observe-t-on lors de l'exécution du script suivant:\n\n    ```python\n    a = 1\n    b = 2\n    a = b\n    b = a\n    print(a, b)\n    ```\n    - [ ] `1 2`\n    - [ ] `2 1`\n    - [ ] `1 1`\n    - [x] `2 2`\n\n14. Qu'observe-t-on lors de l'exécution du script suivant:\n\n    ```python\n    a = 1\n    b = 2\n    (a, b) = (b, a)\n    print(a, b)\n    ```\n    - [ ] `1 2`\n    - [x] `2 1`\n    - [ ] `1 1`\n    - [ ] `2 2`\n\n15. Quel est le type de l'expression `f(4)` si la fonction f est définie par:\n   \n    ```python\n    def f(x):\n        return (x, x**2)\n    ```\n\n    - [ ] un entier \n    - [ ] un flottant \n    - [x] un tuple\n    - [ ] une liste \n\n16. Quel est la valeur de l'expression `f(4)` si la fonction f est définie par:\n   \n    ```python\n    def f(x):\n        return (x, x**2)\n    ```\n\n    - [ ] 4 \n    - [x] (4, 16)\n    - [ ] 16\n    - [ ] (4, 8)\n\n17. La fonction ci-dessous prend en argument deux nombres entiers.\n\n    ```python\n    def f(n1,n2): \n        etendue = max(n1,n2)-min(n1,n2) \n        moyenne = (n1+n2)/2 \n        return etendue, moyenne \n    ```\n   \n    Quel est le type de la valeur renvoyée par un appel à cette fonction? \n\n    - [ ] un entier \n    - [ ] un réel (ou flottant) \n    - [x] un tuple \n    - [ ] une liste\n   \n18. On considère le code suivant:\n\n    ```python\n    def s(tuple1, tuple2): \n        (x1,y1) = tuple1 \n        (x2,y2) = tuple2 \n        return (x1+x2, y1+y2)\n    ```\n    \n    Que renvoie l'appel `s((1,3), (2,4))`? \n\n    - [x] le tuple (3,7) \n    - [ ] le tuple (4,6) \n    - [ ] l'entier 10 \n    - [ ] une erreur\n  \n19. Qu'observe-t-on lors de l'exécution du script suivant:\n\n    ```python\n    t = (3, 4)\n    t[0] = 2\n    print(t)\n    ```\n\n    - [ ] (2, 3, 4)\n    - [ ] (2, 4)\n    - [ ] (3, 2)\n    - [x] une erreur `TypeError: 'tuple' object does not support item assignment`\n\n20. Qu'observe-t-on lors de l'exécution du script suivant:\n\n    ```python\n    t = [3, 4]\n    t[0] = 1\n    print(t)\n    ```\n \n    - [ ] 1\n    - [x] [1, 4]\n    - [ ] [3, 4]\n    - [ ] [1, 3, 4]",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 3: Représentation des données : types construits",
      "Chapitre 1: Introduction aux tableaux",
      "Quiz"
    ]
  },
  {
    "objectID": "1g/nsi/3-representation-des-donnees-types-construits/3-dictionnaires/index.html",
    "href": "1g/nsi/3-representation-des-donnees-types-construits/3-dictionnaires/index.html",
    "title": "Chapitre 3: Dictionnaires",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nDictionnaires par clés et valeurs\nConstruire une entrée de dictionnaire\nItérer sur les éléments d’un dictionnaire.\nIl est possible de présenter les données EXIF d’une image sous la forme d’un enregistrement.\nEn Python, les p-uplets nommés sont implémentés par des dictionnaires.\nUtiliser les méthodes keys(), values() et items()",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 3: Représentation des données : types construits",
      "Chapitre 3: Dictionnaires"
    ]
  },
  {
    "objectID": "1g/nsi/3-representation-des-donnees-types-construits/3-dictionnaires/index.html#syntaxe",
    "href": "1g/nsi/3-representation-des-donnees-types-construits/3-dictionnaires/index.html#syntaxe",
    "title": "Chapitre 3: Dictionnaires",
    "section": "1 Syntaxe",
    "text": "1 Syntaxe\nLes dictionnaires sont entourés d’accolades {}. Les clés doivent être des objets imuables, typiquement des str.\n{'clé_1': valeur_1, 'clé_n': valeur_n, ...'clé_n': valeur_n}\n\nD = { 'nom': 'Lagaffe' , 'prenom': 'Gaston', 'age': 22 }\ntype(D)\n\ndict\n\n\nPour accéder aux éléments du dictionnaire, il suffit d’appeler la clé correspondante, d’autre part la fonction len() est également disponible.\n\nlen(D)\n\n3\n\n\n\nD['nom']\n\n'Lagaffe'\n\n\n\nD['age']\n\n22",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 3: Représentation des données : types construits",
      "Chapitre 3: Dictionnaires"
    ]
  },
  {
    "objectID": "1g/nsi/3-representation-des-donnees-types-construits/3-dictionnaires/index.html#ajout-et-suppression-déléments",
    "href": "1g/nsi/3-representation-des-donnees-types-construits/3-dictionnaires/index.html#ajout-et-suppression-déléments",
    "title": "Chapitre 3: Dictionnaires",
    "section": "2 Ajout et suppression d’éléments",
    "text": "2 Ajout et suppression d’éléments\nLes dictionnaires étant mutables, on peut ajouter des éléments au dictionnaire en **assignant* des clés paire valeur à notre guise.\n\nD[\"expression\"] = \"M'enfin\"\nD\n\n{'nom': 'Lagaffe', 'prenom': 'Gaston', 'age': 22, 'expression': \"M'enfin\"}\n\n\nOn peut au contraire supprimer des éléments du dictionnaire avec la méthode pop().\n\nD.pop(\"age\")\nD\n\n{'nom': 'Lagaffe', 'prenom': 'Gaston', 'expression': \"M'enfin\"}",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 3: Représentation des données : types construits",
      "Chapitre 3: Dictionnaires"
    ]
  },
  {
    "objectID": "1g/nsi/3-representation-des-donnees-types-construits/3-dictionnaires/index.html#autres-méthodes-des-dictionnaires",
    "href": "1g/nsi/3-representation-des-donnees-types-construits/3-dictionnaires/index.html#autres-méthodes-des-dictionnaires",
    "title": "Chapitre 3: Dictionnaires",
    "section": "3 Autres méthodes des dictionnaires",
    "text": "3 Autres méthodes des dictionnaires\nLes méthodes des dictionnaires sont décrites dans la documentation ou grâce à l’appel help(tuple), outre les méthodes d’itération il peut être utile de connaitre la méthode get(clé) qui renvoie la valeur associée à l clé ou None si la clé n’existe pas.\nCela permet d’éviter les exceptions du type KeyError si la clé n’existe pas.\n\nD\n\n{'nom': 'Lagaffe', 'prenom': 'Gaston', 'expression': \"M'enfin\"}\n\n\nPar exemple, la clé age n’existe plus donc la syntaxe d’accés par clé renvoir une erreur.\n\nprint(D[\"nom\"])\nprint(D[\"prenom\"])\nprint(D[\"age\"])\n&gt;&gt;sortie\n\nLagaffe\nGaston\n\n&gt;&gt;sortie\n\nKeyError: 'age'\n\n\nPar contre, la méthode get() ne générera pas la KeyError et renverra None la clé n’existe pas.\n\nprint(D.get(\"nom\"))\nprint(D.get(\"prenom\"))\nprint(D.get(\"age\"))\n&gt;&gt;sortie\n\nLagaffe\nGaston\nNone\n\n\n\n\n\n\n\n\n\nEn plus: Documentation des dictionnaires\n\n\n\n\n\n\n\nhelp(dict)\n&gt;&gt;sortie\n\nHelp on class dict in module builtins:\n\nclass dict(object)\n |  dict() -&gt; new empty dictionary\n |  dict(mapping) -&gt; new dictionary initialized from a mapping object's\n |      (key, value) pairs\n |  dict(iterable) -&gt; new dictionary initialized as if via:\n |      d = {}\n |      for k, v in iterable:\n |          d[k] = v\n |  dict(**kwargs) -&gt; new dictionary initialized with the name=value pairs\n |      in the keyword argument list.  For example:  dict(one=1, two=2)\n |  \n |  Built-in subclasses:\n |      StgDict\n |  \n |  Methods defined here:\n |  \n |  __contains__(self, key, /)\n |      True if the dictionary has the specified key, else False.\n |  \n |  __delitem__(self, key, /)\n |      Delete self[key].\n |  \n |  __eq__(self, value, /)\n |      Return self==value.\n |  \n |  __ge__(self, value, /)\n |      Return self&gt;=value.\n |  \n |  __getattribute__(self, name, /)\n |      Return getattr(self, name).\n |  \n |  __getitem__(...)\n |      x.__getitem__(y) &lt;==&gt; x[y]\n |  \n |  __gt__(self, value, /)\n |      Return self&gt;value.\n |  \n |  __init__(self, /, *args, **kwargs)\n |      Initialize self.  See help(type(self)) for accurate signature.\n |  \n |  __ior__(self, value, /)\n |      Return self|=value.\n |  \n |  __iter__(self, /)\n |      Implement iter(self).\n |  \n |  __le__(self, value, /)\n |      Return self&lt;=value.\n |  \n |  __len__(self, /)\n |      Return len(self).\n |  \n |  __lt__(self, value, /)\n |      Return self&lt;value.\n |  \n |  __ne__(self, value, /)\n |      Return self!=value.\n |  \n |  __or__(self, value, /)\n |      Return self|value.\n |  \n |  __repr__(self, /)\n |      Return repr(self).\n |  \n |  __reversed__(self, /)\n |      Return a reverse iterator over the dict keys.\n |  \n |  __ror__(self, value, /)\n |      Return value|self.\n |  \n |  __setitem__(self, key, value, /)\n |      Set self[key] to value.\n |  \n |  __sizeof__(...)\n |      D.__sizeof__() -&gt; size of D in memory, in bytes\n |  \n |  clear(...)\n |      D.clear() -&gt; None.  Remove all items from D.\n |  \n |  copy(...)\n |      D.copy() -&gt; a shallow copy of D\n |  \n |  get(self, key, default=None, /)\n |      Return the value for key if key is in the dictionary, else default.\n |  \n |  items(...)\n |      D.items() -&gt; a set-like object providing a view on D's items\n |  \n |  keys(...)\n |      D.keys() -&gt; a set-like object providing a view on D's keys\n |  \n |  pop(...)\n |      D.pop(k[,d]) -&gt; v, remove specified key and return the corresponding value.\n |      \n |      If the key is not found, return the default if given; otherwise,\n |      raise a KeyError.\n |  \n |  popitem(self, /)\n |      Remove and return a (key, value) pair as a 2-tuple.\n |      \n |      Pairs are returned in LIFO (last-in, first-out) order.\n |      Raises KeyError if the dict is empty.\n |  \n |  setdefault(self, key, default=None, /)\n |      Insert key with a value of default if key is not in the dictionary.\n |      \n |      Return the value for key if key is in the dictionary, else default.\n |  \n |  update(...)\n |      D.update([E, ]**F) -&gt; None.  Update D from dict/iterable E and F.\n |      If E is present and has a .keys() method, then does:  for k in E: D[k] = E[k]\n |      If E is present and lacks a .keys() method, then does:  for k, v in E: D[k] = v\n |      In either case, this is followed by: for k in F:  D[k] = F[k]\n |  \n |  values(...)\n |      D.values() -&gt; an object providing a view on D's values\n |  \n |  ----------------------------------------------------------------------\n |  Class methods defined here:\n |  \n |  __class_getitem__(...) from builtins.type\n |      See PEP 585\n |  \n |  fromkeys(iterable, value=None, /) from builtins.type\n |      Create a new dictionary with keys from iterable and values set to value.\n |  \n |  ----------------------------------------------------------------------\n |  Static methods defined here:\n |  \n |  __new__(*args, **kwargs) from builtins.type\n |      Create and return a new object.  See help(type) for accurate signature.\n |  \n |  ----------------------------------------------------------------------\n |  Data and other attributes defined here:\n |  \n |  __hash__ = None",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 3: Représentation des données : types construits",
      "Chapitre 3: Dictionnaires"
    ]
  },
  {
    "objectID": "1g/nsi/3-representation-des-donnees-types-construits/3-dictionnaires/index.html#itération-sur-les-dictionnaires",
    "href": "1g/nsi/3-representation-des-donnees-types-construits/3-dictionnaires/index.html#itération-sur-les-dictionnaires",
    "title": "Chapitre 3: Dictionnaires",
    "section": "4 Itération sur les dictionnaires",
    "text": "4 Itération sur les dictionnaires\nLes dictionnaires étant des associations de clés(keys) et de valeurs(values), il existe trois méthodes pour itérer sur les clés, les valeurs ou les deux.\n\n4.1 Itération sur les clés: keys()\n\nfor key in D.keys():\n    print(key)\n&gt;&gt;sortie\n\nnom\nprenom\nexpression\n\n\nOu plus simplement.\n\nfor key in D:\n    print(key)\n&gt;&gt;sortie\n\nnom\nprenom\nexpression\n\n\n\n\n4.2 Itération sur les valeurs: values()\n\nfor value in D.values():\n    print(value)\n&gt;&gt;sortie\n\nLagaffe\nGaston\nM'enfin\n\n\n\n\n4.3 Itération sur les paires clé, valeurs: items()\n\nfor key, value in D.items():\n    print(key, '=&gt;', value)\n&gt;&gt;sortie\n\nnom =&gt; Lagaffe\nprenom =&gt; Gaston\nexpression =&gt; M'enfin",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 3: Représentation des données : types construits",
      "Chapitre 3: Dictionnaires"
    ]
  },
  {
    "objectID": "1g/nsi/3-representation-des-donnees-types-construits/3-dictionnaires/index.html#p-uplets-nommés",
    "href": "1g/nsi/3-representation-des-donnees-types-construits/3-dictionnaires/index.html#p-uplets-nommés",
    "title": "Chapitre 3: Dictionnaires",
    "section": "5 p-uplets nommés",
    "text": "5 p-uplets nommés\nIl est possible de créer des p-uplets nommés afin de pouvoir accéder aux éléments de la collection par clé. Contrairement aux dictionnaires, ils sont immutables et donc potentiellement plus performants, ils sont cependant peu utilisés et nécessite d’être importé par le module collections avant d’être utilisé.\n\nfrom collections import namedtuple\n\nEleve = namedtuple('Eleve', 'nom, age, classe, spécialité')\ne = Eleve(\"John\", 17, \"1g\", \"nsi\" )\ne\n\nEleve(nom='John', age=17, classe='1g', spécialité='nsi')\n\n\nL’accès peut se faire en ajoutant un point et le nom de la clé. Il s’agit d’une notation pointée comme dans le cas d’appel de méthodes, cependant il n’y a pas de parenthèses, car il s’agit de valeurs et non de fonctions(On parle d’attributs de l’objet).\n\ne.age\n\n17\n\n\n\ne.spécialité\n\n'nsi'",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 3: Représentation des données : types construits",
      "Chapitre 3: Dictionnaires"
    ]
  },
  {
    "objectID": "1g/nsi/3-representation-des-donnees-types-construits/3-dictionnaires/index.html#structures-imbriquées-avec-les-dictionnaires",
    "href": "1g/nsi/3-representation-des-donnees-types-construits/3-dictionnaires/index.html#structures-imbriquées-avec-les-dictionnaires",
    "title": "Chapitre 3: Dictionnaires",
    "section": "6 Structures imbriquées avec les dictionnaires",
    "text": "6 Structures imbriquées avec les dictionnaires\nTout comme nous avons vu les tableaux de tableau dans le chapitre précédent, il est possible d’imaginer des structures imbriquées avec des dictionnaires.\nOn va s’intéresser plus particulièrement à une liste de dictionnaire qui pourrait être obtenue par lecture d’un fichier de données csv.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 3: Représentation des données : types construits",
      "Chapitre 3: Dictionnaires"
    ]
  },
  {
    "objectID": "1g/nsi/3-representation-des-donnees-types-construits/2-usages-avances-des-tableaux/exo/index.html",
    "href": "1g/nsi/3-representation-des-donnees-types-construits/2-usages-avances-des-tableaux/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Qu’est-ce qu’une liste en Python?\nComment créez-vous une liste en Python? Donner en exemple les instructions permettant de créer une liste xs de 3 entiers.\nComment accédez-vous aux éléments d’une liste en Python? Donner en exemple les instructions permettant d’accéder au deuxième et au dernier élément de xs.\nComment modifiez-vous les éléments d’une liste en Python? Donner un exemple sur xs.\nComment ajoutez-vous des éléments à une liste en Python? Donner deux exemples d’ajout, un à la fin et un autre au début de la liste.\nComment supprimez-vous des éléments d’une liste en Python? Donner deux exemples de suppressions, un à la fin et un autre au début de la liste.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 3: Représentation des données : types construits",
      "Chapitre 2: Usages avancés des tableaux",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/3-representation-des-donnees-types-construits/2-usages-avances-des-tableaux/exo/index.html#questions-de-cours",
    "href": "1g/nsi/3-representation-des-donnees-types-construits/2-usages-avances-des-tableaux/exo/index.html#questions-de-cours",
    "title": "Exercices",
    "section": "",
    "text": "Qu’est-ce qu’une liste en Python?\nComment créez-vous une liste en Python? Donner en exemple les instructions permettant de créer une liste xs de 3 entiers.\nComment accédez-vous aux éléments d’une liste en Python? Donner en exemple les instructions permettant d’accéder au deuxième et au dernier élément de xs.\nComment modifiez-vous les éléments d’une liste en Python? Donner un exemple sur xs.\nComment ajoutez-vous des éléments à une liste en Python? Donner deux exemples d’ajout, un à la fin et un autre au début de la liste.\nComment supprimez-vous des éléments d’une liste en Python? Donner deux exemples de suppressions, un à la fin et un autre au début de la liste.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 3: Représentation des données : types construits",
      "Chapitre 2: Usages avancés des tableaux",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/3-representation-des-donnees-types-construits/2-usages-avances-des-tableaux/exo/index.html#carré-magique",
    "href": "1g/nsi/3-representation-des-donnees-types-construits/2-usages-avances-des-tableaux/exo/index.html#carré-magique",
    "title": "Exercices",
    "section": "2 Carré magique",
    "text": "2 Carré magique\n\nEn mathématiques, un carré magique d’ordre nn est composé de n2n^2 entiers strictement positifs, écrits sous la forme d’un tableau carré. Ces nombres sont disposés de sorte que leurs sommes sur chaque rangée, sur chaque colonne et sur chaque diagonale principale soient égales. On nomme alors constante magique (et parfois densité) la valeur de ces sommes.\n\nArticle Wikipédia sur le carré magique\nEn voici un exemple:\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n Public domain via Wikimedia Commons\nNous allons stocker les valeurs de ce carré magique sous la forme d’un tableau de tableau.\ncarré = [[2, 7, 6],\n         [9, 5, 1],\n         [4, 3, 8]]\n\nQue renvoie len(carré) ?\nQuelle est la valeur de carré[1]?\nQuelle est la valeur de carré[2][0]?\nDéfinir une fonction qui somme_ligne(c, n) qui prend 2 paramètres:\n\nc: un carré magique représenté sous forme de liste de liste.\nn: l’index de la ligne considéré.\n\nQui renvoie la somme des éléments de la ligne n du carré.\nPar exemple l’appel somme_ligne(carré, 0) renvoie 15.\nVous pourrez partir de cette base de code à compléter:\ndef somme_ligne(c,n):\n    somme = 0\n    ligne = c[n]\n    for val in ligne:\n        ...\n    return ...\nProposer une fonction vérifie_lignes(c), qui utilise la fonction somme_ligne, qui prend un carré magique en paramètre et renvoie True, si toutes ses lignes sont égales et False sinon.\nEssayer d’être général afin que votre fonction puisse utiliser des carrés de taille quelconque, et pas seulement de 3 sur 3.\n\nEn plus: Créer des fonctions:\n\nsomme_colonne(c, n), vérifie_colonnes(c) semblables aux fonctions précédentes, mais qui travaillent sur les colonnes du carré.\nsomme_diagonale1(c), somme_diagonale2(c) qui calculent les sommes de chacune des diagonales du carré.\nVous êtes maintenant capable de créer la fonction vérifie_carré_magique(c) qui renvoie True si le carré c donné en argument est magique et False sinon.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 3: Représentation des données : types construits",
      "Chapitre 2: Usages avancés des tableaux",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/3-representation-des-donnees-types-construits/2-usages-avances-des-tableaux/quiz/index.html",
    "href": "1g/nsi/3-representation-des-donnees-types-construits/2-usages-avances-des-tableaux/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 3: Représentation des données : types construits",
      "Chapitre 2: Usages avancés des tableaux",
      "Quiz"
    ]
  },
  {
    "objectID": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/6-circuits-combinatoires/exo/index.html",
    "href": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/6-circuits-combinatoires/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Quelle est la table du circuit suivant?\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nExercice 13.1 du livre ISN aux éditions Eyrolles",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 6: Architectures matérielles et systèmes d’exploitation",
      "Chapitre 6: Circuits combinatoires*",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/6-circuits-combinatoires/exo/index.html#circuit-avec-transistors",
    "href": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/6-circuits-combinatoires/exo/index.html#circuit-avec-transistors",
    "title": "Exercices",
    "section": "",
    "text": "Quelle est la table du circuit suivant?\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nExercice 13.1 du livre ISN aux éditions Eyrolles",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 6: Architectures matérielles et systèmes d’exploitation",
      "Chapitre 6: Circuits combinatoires*",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/6-circuits-combinatoires/exo/index.html#association-de-portes-logiques",
    "href": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/6-circuits-combinatoires/exo/index.html#association-de-portes-logiques",
    "title": "Exercices",
    "section": "2 Association de portes logiques",
    "text": "2 Association de portes logiques\nQuelle est la table du circuit suivant? Est-ce la table d’une fonction booléenne connue?\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nex ISN 13.2",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 6: Architectures matérielles et systèmes d’exploitation",
      "Chapitre 6: Circuits combinatoires*",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/6-circuits-combinatoires/quiz/index.html",
    "href": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/6-circuits-combinatoires/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 6: Architectures matérielles et systèmes d’exploitation",
      "Chapitre 6: Circuits combinatoires*",
      "Quiz"
    ]
  },
  {
    "objectID": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/1-architecture-dun-ordinateur/index.html",
    "href": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/1-architecture-dun-ordinateur/index.html",
    "title": "Chapitre 1: Architecture d’un ordinateur",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nModèle d’architecture séquentielle (von Neumann)\nDistinguer les rôles et les caractéristiques des différents constituants d’une machine.\nLa présentation se limite aux concepts généraux.\nOn distingue les architectures monoprocesseur et les architectures multiprocesseur.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 6: Architectures matérielles et systèmes d’exploitation",
      "Chapitre 1: Architecture d’un ordinateur"
    ]
  },
  {
    "objectID": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/1-architecture-dun-ordinateur/index.html#lordinateur-actuel",
    "href": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/1-architecture-dun-ordinateur/index.html#lordinateur-actuel",
    "title": "Chapitre 1: Architecture d’un ordinateur",
    "section": "1 L’ordinateur actuel",
    "text": "1 L’ordinateur actuel\nL’animation du CEA vous présente le fonctionnement général d’un ordinateur. Si votre appareil ne supporte pas flash, vous pouvez consulter la version vidéo. Vidéo servie sans cookie via yewtu.be\n\n\n\n\n\n\n\nApplication: Vue schématique d'un ordinateur\n\n\n\n\n\n\nRéaliser en grand format, une vue schématique d’un ordinateur en indiquant le nom des diverses parties, leurs connexions et leurs rôles.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 6: Architectures matérielles et systèmes d’exploitation",
      "Chapitre 1: Architecture d’un ordinateur"
    ]
  },
  {
    "objectID": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/1-architecture-dun-ordinateur/index.html#larchitecture-de-von-neumann",
    "href": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/1-architecture-dun-ordinateur/index.html#larchitecture-de-von-neumann",
    "title": "Chapitre 1: Architecture d’un ordinateur",
    "section": "2 L’architecture de von Neumann",
    "text": "2 L’architecture de von Neumann\nLe premier ordinateur électronique conçu pour être une machine de Turing est l’ENIAC réalisé en 1943.\nSon architecture fut décrite par John von Neumann, un mathématicien et physicien américano-hongrois pour la réalisation de l’EDVAC en juin 1945 (le successeur binaire de l’ENIAC qui était décimal).\nCette architecture sert de base, à quelques améliorations près, à l’architecture de tous les ordinateurs depuis.\n\n\nArchitecture de von Neumann\n\n\n\nC’est un modèle pour un ordinateur qui utilise une structure de stockage unique pour conserver à la fois les instructions et les données demandées ou produites par le calcul.\n\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nLe processeur, la mémoire et les périphériques d'entrée et de sortie communiquent entre eux grâce à trois bus de communication: le bus d'adresses, le bus de données et le bus de contrôle. CC0 via Wikimedia Commons\nL’architecture de Von Neumann est centrée autour de deux composants principaux:\n\nle processeur ou CPU (Central Processing Unit),\net la mémoire.\n\nCes deux circuits sont reliés par des fils appelés bus de communication.\nD’autre part, le processeur dispose de bus d’entrée et de sortie qui le relient à d’autres parties de l’ordinateur appelées les périphériques comme le disque dur, l’écran, le clavier…\nLe processeur joue le rôle du chef d’orchestre, il donne des ordres aux périphériques et à la mémoire et est responsable de l’exécution du programme de l’ordinateur.\n\nUn ordinateur avec cette architecture est un ordinateur à programme enregistré: il enregistre les instructions des programmes qu’il exécute dans sa mémoire vive.\n\n\n\n\n\n\n\n\nEn plus\n\n\n\n\n\n\nAu contraire, l’architecture de type Harvard est une conception des processeurs qui sépare physiquement la mémoire de données et la mémoire programme. L’accès à chacune des deux mémoires s’effectue via deux bus distincts.\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nL'architecture de Harvard a été a été mise en pratique pour la première fois avec le Mark I en 1944.©  CC BY-SA 1.0 via Wikimedia Commons",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 6: Architectures matérielles et systèmes d’exploitation",
      "Chapitre 1: Architecture d’un ordinateur"
    ]
  },
  {
    "objectID": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/1-architecture-dun-ordinateur/index.html#les-unités-du-processeur",
    "href": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/1-architecture-dun-ordinateur/index.html#les-unités-du-processeur",
    "title": "Chapitre 1: Architecture d’un ordinateur",
    "section": "3 Les unités du processeur",
    "text": "3 Les unités du processeur\nAu sein du processeur le traitement des tâches a été séparé en deux:\n\nL’unité de commande dirige le fonctionnement du processeur. Elle indique à la mémoire de l’ordinateur, à l’unité arithmétique et logique et aux périphériques d’entrée et de sortie comment répondre aux instructions qui ont été envoyées au processeur.\nL’unité arithmétique et logique est un ensemble de circuits numériques combinatoires qui effectuent des opérations spécifiques: calculs sur les entiers, sur les flottants calculs logiques en algèbre de Boole….\n\nLorsque l’opération est terminée, l’unité de commande passe à l’instruction suivante du programme. La fréquence d’exécution du processeur est contrôlée par un signal d’horloge: la cadence des processeurs actuels est de l’ordre du GHz à l’heure actuelle.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 6: Architectures matérielles et systèmes d’exploitation",
      "Chapitre 1: Architecture d’un ordinateur"
    ]
  },
  {
    "objectID": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/1-architecture-dun-ordinateur/index.html#les-divers-types-de-mémoire",
    "href": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/1-architecture-dun-ordinateur/index.html#les-divers-types-de-mémoire",
    "title": "Chapitre 1: Architecture d’un ordinateur",
    "section": "4 Les divers types de mémoire",
    "text": "4 Les divers types de mémoire\nLa mémoire désignée dans l’architecture de Von Neumann est ce que l’on appelle aujourd’hui la mémoire vive (RAM). Celle-ci est rapide, mais a besoin d’être alimentée en permanence pour garder les données, ainsi à chaque extinction de l’ordinateur, elle est perdue, on la qualifie de mémoire volatile.\nPour résoudre ce problème on recourt à deux types de mémoires non volatiles:\n\nLa mémoire de masse: Pour stocker les données et les programmes, on ajoute un périphérique appelé mémoire de masse: le disque dur de vos ordinateurs, ou une mémoire flash dans le cas des tablettes et smartphones. Cette mémoire est capable de stocker une grande quantité de données, mais à l’inconvénient d’être beaucoup moins rapides que la mémoire vive(RAM Random Access Memory), c’est pour cela que lors du lancement d’un programme les données nécessaire à son exécution sont généralement transférées vers la RAM pour une exécution plus rapide.\nLa mémoire morte est une mémoire qui ne peut être que lue(ROM Read Only Memory), elle contient en général le firmware de l’ordinateur (BIOS ou UEFI) qui est le programme qui se charge à chaque allumage de l’ordinateur.\nLes registres du processeur: Le processeur possède également un très petit nombre de cases mémoires très rapides appelées des registres dont la capacité dépasse rarement quelques dizaines d’octet pour des raisons de coût et de place. Source Wikipedia\n\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nClasser les diverses mémoires présentes dans un ordinateur par “rapidité”, et expliquer leurs principales caractéristiques.\n\nMémoire vive,\nregistre du processeur,\nmémoire de masse et\nmémoire morte.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 6: Architectures matérielles et systèmes d’exploitation",
      "Chapitre 1: Architecture d’un ordinateur"
    ]
  },
  {
    "objectID": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/1-architecture-dun-ordinateur/index.html#architectures-multiprocesseurs",
    "href": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/1-architecture-dun-ordinateur/index.html#architectures-multiprocesseurs",
    "title": "Chapitre 1: Architecture d’un ordinateur",
    "section": "5 Architectures multiprocesseurs",
    "text": "5 Architectures multiprocesseurs\nOn utilise aujourd’hui des architectures multiprocesseurs afin d’améliorer la rapidité d’exécution sans augmenter la fréquence d’horloge.\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nDans l'architecture ci-dessus, la mémoire est partagée par tous les processeurs. Un seul processeur ne peut accéder à la mémoire à la fois ce qui peut nécessiter des temps d'attentes pour les autres. CC0 via Wikimedia Commons\n\n\n\n\n\n\n\nEn plus\n\n\n\n\n\n\nL’utilisation efficace des architectures multiprocesseurs nécessite de pouvoir traiter les informations de manière simultanée, pour cela il faut des algorithmes spécialisés: on parle de parallélisme.\n\n\n\n\n\n\n\nInformatique et sciences du numérique Spécialité ISN en terminale S - Avec des exercices corrigés et des idées de projets par Gilles Dowek\nInformatique pour tous en classes préparatoires aux grandes écoles de Benjamin Wack",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 6: Architectures matérielles et systèmes d’exploitation",
      "Chapitre 1: Architecture d’un ordinateur"
    ]
  },
  {
    "objectID": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/2-jeu-dinstructions-du-processeur/exo/index.html",
    "href": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/2-jeu-dinstructions-du-processeur/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Rappels des instructions utilisées dans ce cours.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 6: Architectures matérielles et systèmes d’exploitation",
      "Chapitre 2: Jeu d’instructions du processeur",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/2-jeu-dinstructions-du-processeur/exo/index.html#addition-simple",
    "href": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/2-jeu-dinstructions-du-processeur/exo/index.html#addition-simple",
    "title": "Exercices",
    "section": "1 Addition simple",
    "text": "1 Addition simple\nÉcrire une séquence d’instructions qui multiplie par 5 le nombre contenu dans la case mémoire 10 et stocke le résultat dans la case mémoire 11.\nTraduire les instrcuctions en langage machine binaire avec des mots de 4 bits(3= 0011 par exemple).",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 6: Architectures matérielles et systèmes d’exploitation",
      "Chapitre 2: Jeu d’instructions du processeur",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/2-jeu-dinstructions-du-processeur/exo/index.html#différence",
    "href": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/2-jeu-dinstructions-du-processeur/exo/index.html#différence",
    "title": "Exercices",
    "section": "2 Différence",
    "text": "2 Différence\nÉcrire un programme qui lit deux valeurs x et y contenues respectivement dans les cases mémoires 11 et 12, calcule la différence y−xy - x et stocke le résultat à l’adresse 13. On suppose que ces deux valeurs sont des nombres entiers positifs.\nCompléter ce programme pour qu’il stocke la valeur 0 à l’adresse 15 si x est égal à y, ou la valeur x sinon.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 6: Architectures matérielles et systèmes d’exploitation",
      "Chapitre 2: Jeu d’instructions du processeur",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/2-jeu-dinstructions-du-processeur/exo/index.html#multiplication",
    "href": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/2-jeu-dinstructions-du-processeur/exo/index.html#multiplication",
    "title": "Exercices",
    "section": "3 Multiplication",
    "text": "3 Multiplication\nÉcrire un programme qui multiplie la valeur contenue à la case mémoire 12 par celle contenue dans la case mémoire 13 et stocke le résultat à l’adresse 14. On suppose que ces valeurs sont des nombres entiers positifs.\nQuel problème l’écriture de ce programme pose-t-elle ? Quelle modification du processeur permettrait de contourner ce problème et donc de simplifier le programme ?",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 6: Architectures matérielles et systèmes d’exploitation",
      "Chapitre 2: Jeu d’instructions du processeur",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/2-jeu-dinstructions-du-processeur/exo/index.html#tp-ecrire-de-lassembleur-sur-un-simulateur",
    "href": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/2-jeu-dinstructions-du-processeur/exo/index.html#tp-ecrire-de-lassembleur-sur-un-simulateur",
    "title": "Exercices",
    "section": "4 TP: Ecrire de l’assembleur sur un simulateur",
    "text": "4 TP: Ecrire de l’assembleur sur un simulateur\nLa page suivante propose d’écrire quelques programmes en assembleur.\nhttps://pixees.fr/informatiquelycee/n_site/nsi_prem_sim_cpu.html\nElle utilise la simulation de Peter Higginson qui simule le langage assembleur AQA.\nhttp://www.peterhigginson.co.uk/AQA/\n\n\n\nChapitre 15: L’organisation d’un ordinateur Informatique et sciences du numérique Spécialité ISN en terminale S - Avec des exercices corrigés et des idées de projets par Gilles Dowek\nhttps://pixees.fr/informatiquelycee/n_site/nsi_prem_sim_cpu.html\nhttp://www.lyceerotroudreux.com/images/NSI/Langage_Assembleur.pdf\nhttp://www.peterhigginson.co.uk/AQA/info.html",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 6: Architectures matérielles et systèmes d’exploitation",
      "Chapitre 2: Jeu d’instructions du processeur",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/2-jeu-dinstructions-du-processeur/quiz/index.html",
    "href": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/2-jeu-dinstructions-du-processeur/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 6: Architectures matérielles et systèmes d’exploitation",
      "Chapitre 2: Jeu d’instructions du processeur",
      "Quiz"
    ]
  },
  {
    "objectID": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/4-reseaux/index.html",
    "href": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/4-reseaux/index.html",
    "title": "Chapitre 4: Réseaux",
    "section": "",
    "text": "Programme\n\n\n\n\n\n\n\n\n\nContenus\nCapacités attendues\nCommentaires\n\n\n\n\nTransmission de données dans un réseau\nProtocoles de communication\nArchitecture d’un réseau\nMettre en évidence l’intérêt du découpage des données en paquets et de leur encapsulation.\nDérouler le fonctionnement d’un protocole simple de récupération de perte de paquets(bit alterné).\nSimuler ou mettre en œuvre un réseau.\nLe protocole peut être expliqué et simulé en mode débranché.\nLe lien est fait avec ce qui a été vu en classe de seconde sur le protocole TCP/IP.\nLe rôle des différents constituants du réseau local de l’établissement est présenté.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 6: Architectures matérielles et systèmes d’exploitation",
      "Chapitre 4: Réseaux"
    ]
  },
  {
    "objectID": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/4-reseaux/index.html#rappels-de-snt-les-protocoles-tcpip",
    "href": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/4-reseaux/index.html#rappels-de-snt-les-protocoles-tcpip",
    "title": "Chapitre 4: Réseaux",
    "section": "1 Rappels de SNT: Les protocoles TCP/IP",
    "text": "1 Rappels de SNT: Les protocoles TCP/IP\n\nAfin de transmettre un message d’une machine à une autre sur un réseau, celui-ci est découpé en plusieurs paquets transmis séparément. Article paquet sur Wikipédia\n\nOn a vu en seconde les deux protocoles fondamentaux d’internet:\n\nLe protocole IP: qui permet d’attribuer à chaque machine une adresse IP unique pour l’identifier sur le réseau.\nLe protocole TCP: qui permet d’assurer la communication de l’information en la découpant en paquets, et en s’assurant que tous les paquets sont reçus et conformes à l’information envoyée.\n\nChaque protocole ajoute des en-têtes aux paquets, sortes d’enveloppes cachant le contenu des paquets et permettant de leur ajouter des métadonnées.\n\nVoici par exemple la structure d’un paquet ipV6 avec ses en-têtes.\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nEn-tête IPv6©  CC BY-SA 3.0 via Wikimedia Commons",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 6: Architectures matérielles et systèmes d’exploitation",
      "Chapitre 4: Réseaux"
    ]
  },
  {
    "objectID": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/4-reseaux/index.html#structures-des-réseaux",
    "href": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/4-reseaux/index.html#structures-des-réseaux",
    "title": "Chapitre 4: Réseaux",
    "section": "2 Structures des réseaux",
    "text": "2 Structures des réseaux\nVidéo servie sans cookie via yewtu.be\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\n\nReprésenter des structures de réseaux en anneau et en bus et expliquer l’intérêt de ce type de structures.\nPourquoi les transmissions sont-elles effectuées par paquets sur un réseau?\nQuel est l’élément central d’un réseau local?\nQuel est le protocole qui permet d’identifier toutes les machines sur internet? Pourquoi en existe-t-il deux versions?\nQu’est-ce qu’un routeur? Comment fonctionne-t-il?\nMettre dans l’ordre les opérations suivantes lors d’une requête à serveur web depuis un navigateur sur un ordinateur à la maison. Certaines étapes manquent (par exemple d’autres recherches dans les tables de routage), on les ignore pour simplifier. L’ordinateur obtient l’IP du serveur par le protocole DNS.\n\nLe serveur envoie la réponse à la requête.\nLa box transmet les paquets vers le serveur.\nLe serveur traite la requête.\nLa box cherche l’IP du serveur dans sa table de routage.\nL’ordinateur envoie un paquet de requête sur le réseau.\nLa box transmet la réponse vers l’ordinateur.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 6: Architectures matérielles et systèmes d’exploitation",
      "Chapitre 4: Réseaux"
    ]
  },
  {
    "objectID": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/4-reseaux/index.html#le-modèle-en-couche-osi",
    "href": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/4-reseaux/index.html#le-modèle-en-couche-osi",
    "title": "Chapitre 4: Réseaux",
    "section": "3 Le modèle en couche OSI",
    "text": "3 Le modèle en couche OSI\nLe modèle OSI (Open System Interconnection) est un modèle en couche dans lequel chaque couche a un rôle particulier dans la communication.\nIl contient 7 couches alors que le modèle TCP/IP vu en seconde n’en contient que 4.\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nComparaison des modèles OSI et TCP IP©  CC BY-SA 3.0 via Wikimedia Commons\n\n3.1 Encapsulation des données\nLorsque la couche application envoie les données aux couches inférieures, elle y ajoute des métadonnées appelées «en-tête» ou «en-queue» destinées à la couche application de l’autre machine distante.\nChaque couche ajoute ses propres en-têtes à l’émission lorsque les données de l’application descendent les couches. Et ainsi la trame d’informations circulant sur la couche liaison est “surchargée des métadonnées” de chacune des couches supérieures.\n\nÀ la réception, chaque couche récupère et détache les métadonnées qui lui sont destinées et transmet le message sans ces métadonnées à la couche supérieure.\n\n\n3.2 La couche application\nLes applications:\n\nweb(HTTP) échangent des pages web, des données de formulaire, de session…\nmail(SMTP) échangent des emails, les stockent, permettent leur lecture…\nSSH, FTP, …\n\n\n\n3.3 La couche transport\nOn découpe le message en segments et on y ajoute un numéro de port qui correspond à l’application qui l’utilise:\n\nHTTP: 80\nHTTPS: 443\nSMTP: 25\n\nL’état de la connexion est vérifié, si tous les segments sont bien reçus et conformes grâce au calcul d’une somme de contrôle.\nLa couche transport propose deux principaux protocoles pour le transfert de données vers une machine distante:\n\nle protocole TCP(Transmission Control Protocol) pour un transfert connecté et fiable,\nle protocole UDP(User Datagram Protocol) pour un transfert déconnecté et non fiable.\n\nChaque protocole est utilisé dans des applications différentes: temps réel pour l’UDP, non-temps réel, mais sensible à la perte au réordonnancement pour le TCP.\n\n\n3.4 La couche réseau/internet\nOn ajoute les adresses IP de la source et du destinataire, la longueur du paquet, sa durée de vie pour former ce que l’on appelle un paquet IP.\n\n\n3.5 La couche liaison\nLe paquet et encapsulé dans une trame qui contient l’adresse unique de la machine dans le réseau local.\nPuis la trame va transiter à travers le réseau physique: Ondes radio, fibre optique, câbles RJ45… jusqu’à atteindre le réseau local de la machine destinataire ou chaque couche va utiliser les en-têtes fournis par la même couche que la machine source.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 6: Architectures matérielles et systèmes d’exploitation",
      "Chapitre 4: Réseaux"
    ]
  },
  {
    "objectID": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/4-reseaux/index.html#le-protocole-du-bit-alterné",
    "href": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/4-reseaux/index.html#le-protocole-du-bit-alterné",
    "title": "Chapitre 4: Réseaux",
    "section": "4 Le protocole du bit alterné",
    "text": "4 Le protocole du bit alterné\nLe protocole du bit alterné est un protocole de réseau simple fonctionnant au niveau de la couche liaison de données (couche OSI 2) qui retransmet les messages perdus ou corrompus.\nIl était utilisé dans le réseau ARPANET, l’ancêtre d’internet.\n\n4.1 Fonctionnement\nAlice veut envoyer à Bob un message M, qu’elle a prédécoupé en sous-messages M0, M1, M2,…\nNous sommes à la couche 2, on souhaite une solution légère qui assure que tous les paquets sont reçus dans l’ordre(pas comme en TCP couche 4).\nOn va simplement utiliser un en-tête à un bit.\nLorsque Alice envoie un message, elle le renvoie en continu, avec le même bit d’en-tête, jusqu’à ce qu’il reçoive un accusé de réception de B contenant le même bit d’en-tête. Lorsque cela se produit, A inverse le bit d’en-tête et commence à transmettre le message suivant.\nLorsque Bob reçoit un message qui n’est pas corrompu et a le bit d’en-tête 0, il commence à envoyer ACK0 (Accusé de réception de 0 aknowledgement en anglais) et continue à le faire jusqu’à ce qu’il reçoive un message valide avec le numéro 1. Puis il commence à envoyer ACK1, etc.\nCela signifie qu’Alice peut toujours recevoir ACK0 alors qu’elle transmet déjà des messages avec le bit d’en-tête un. (Et vice versa.) Elle traite ces messages comme des codes d’acquittement négatif (NAK). Le comportement le plus simple est de les ignorer tous et de continuer à transmettre.\nArticle Alternating bit protocol sur Wikipédia anglais\n\n\n4.2 Illustrations\nCas où le sous-message est perdu\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nCas où le ACK est perdu\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nLe protocole a bien détecté le doublon du sous-message M1.\nCas où un sous-message est en retard\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nLe protocole a bien détecté le doublon du sous-message M1… mais que se passerait-il si notre premier sous-message M1 était encore plus en retard ?\nSite du lycée La Martinière Diderot académie de Lyon",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 6: Architectures matérielles et systèmes d’exploitation",
      "Chapitre 4: Réseaux"
    ]
  },
  {
    "objectID": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/3-systemes-dexploitation/exo/index.html",
    "href": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/3-systemes-dexploitation/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Ce TP est une adaptation du TP proposé sur pixees.fr sous licence CC-BY-SA créé par David Roche.\n\nÀ la préhistoire des systèmes d’exploitation, ces derniers étaient dépourvus d’interface graphique (système de fenêtres pilotables à la souris), toutes les interactions système d'exploitation - utilisateur se faisaient par l’intermédiaire de lignes de commandes (suites de caractères, souvent ésotériques, saisies par l’utilisateur). Aujourd’hui, même si les interfaces graphiques modernes permettent d’effectuer la plupart des opérations, il est important de connaitre quelques-unes de ces lignes de commandes.\n\nPour saisir des lignes de commandes, nous allons utiliser une émulation du système d’exploitation linux dans le navigateur proposée par Fabrice Bellard disponible à l’adresse suivante:\nhttps://bellard.org/jslinux/vm.html?url=https://bellard.org/jslinux/buildroot-x86.cfg\n\n\nOuvrez une console, vous devriez avoir quelque chose qui ressemble à cela :\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nEmulateur JS Linux\n\n\nNous avons ci-dessus la console de l’utilisateur root qui utilise un ordinateur qui se nomme localhost (root@localhost).\nVous pouvez rentrer vos commandes après le signe #.\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nEssayez les commandes suivantes:\n\nwhoami\nhostname\n\n\n\n\n\n\n\n\n\nPrincipalement nous allons, grâce à la ligne de commande, travailler sur les fichiers et les répertoires. Dans les systèmes de type UNIX (par exemple GNU/Linux ou macOS), nous avons un système de fichier en arborescence :\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nCC -BY-SA David Roche via pixees.fr\nDans le schéma ci-dessus on trouve des répertoires (noms entourés d’un rectangle, exemple : home) et des fichiers (uniquement des noms grub.cfg). À noter : les extensions des noms de fichiers, par exemple le cfg de grub.cfg, ne sont pas obligatoires dans les systèmes de type UNIX, par exemple, bash est bien un nom de fichier et il n’a pas d’extension.\nOn parle d’arborescence, car ce système de fichier ressemble à un arbre à l’envers.\nComme vous pouvez le constater, la base de l’arbre s’appelle la racine de l’arborescence et se représente par un /\n\n\nPour indiquer la position d’un fichier (ou d’un répertoire) dans l’arborescence, il existe 2 méthodes : indiquer un chemin absolu ou indiquer un chemin relatif. Le chemin absolu doit indiquer le chemin depuis la racine. Par exemple le chemin absolu du fichier fiche.ods sera : /home/elsa/documents/fiche.ods\nRemarquez que nous démarrons bien de la racine / (attention les symboles de séparation sont aussi des /)\nIl est possible d’indiquer le chemin non pas depuis la racine, mais depuis un répertoire quelconque, nous parlerons alors de chemin relatif :\nLe chemin relatif permettant d’accéder au fichier photo_1.jpg depuis le répertoire max est : images/photo_vac/photo_1.jpg\nRemarquez l’absence du / au début du chemin (c’est cela qui nous permettra de distinguer un chemin relatif et un chemin absolu).\nImaginons maintenant que nous désirions indiquer le chemin relatif pour accéder au fichier gdbd_3.jpg depuis le répertoire photos_vac.\nComment faire ?\nIl faut remonter d’un niveau dans l’arborescence pour se retrouver dans le répertoire images et ainsi pouvoir repartir vers la bonne branche. Pour ce faire il faut utiliser 2 points : ..\n../ski/gdbd_3.jpg\nIl est tout à fait possible de remonter de plusieurs « niveaux » : ../../ depuis le répertoire photos_vac permet de remonter dans le répertoire max\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nEn vous basant sur l’arborescence ci-dessus, déterminez le chemin absolu permettant d’accéder au fichier :\n\ncat\nrapport.odt\n\nToujours en vous basant sur l’arborescence ci-dessus, déterminez le chemin relatif permettant d’accéder au fichier :\n\nrapport.odt depuis le répertoire elsa\nfiche.ods depuis le répertoire boulot\n\n\n\n\n\n\n\n\n\n\n\n\n\nEn plus: Attention à la casse\n\n\n\n\n\n\nLes systèmes de type UNIX sont sensibles à la casse (il faut différencier les caractères majuscules et les caractères minuscules) : le répertoire Documents et le répertoire documents sont 2 répertoires différents.\n\n\n\n\n\n\n\n\n\nLa commande cd permet de changer le répertoire courant. Il suffit d’indiquer le chemin (relatif ou absolu) qui permet d’atteindre le nouveau répertoire :\nPar exemple (en utilisant l’arborescence ci-dessus) :\n\nsi le répertoire courant est le répertoire elsa et que vous voulez vous rendre dans le répertoire documents, il faudra saisir la commande : cd     documents (relatif) ou cd /home/elsa/documents (absolu)\nsi le répertoire courant est le répertoire photos_vac et que vous voulez vous rendre dans le répertoire ski, il faudra saisir la commande : cd ../ski (relatif) ou cd /home/max/images/ski (absolu)\nsi le répertoire courant est le répertoire boulot et que vous voulez vous rendre dans le répertoire documents, il faudra saisir la commande : cd .. (relatif) ou cd /home/elsa/documents (absolu)\n\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nToujours en utilisant l’arborescence ci-dessus, quelle est la commande à saisir si le répertoire courant est le répertoire home et que vous voulez vous rendre dans le répertoire boulot (vous utiliserez d’abord un chemin absolu puis un chemin relatif)\n\n\n\n\n\n\n\n\nLa commande ls permet de lister le contenu du répertoire courant.\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nCC -BY-SA David Roche via pixees.fr\nDans l’exemple ci-dessus, depuis le répertoire personnel de l’utilisateur david, nous passons dans le répertoire nsi à l’aide d’un cd nsi, puis nous affichons le contenu de ce répertoire nsi à l’aide de la commande ls. Nous trouvons dans le répertoire nsi : 2 fichiers (fiche1.odt et photo.jpg) et un répertoire (test).\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nAprès avoir ouvert une console, utilisez la commande ls depuis votre répertoire personnel.\n\n\n\n\n\n\n\n\nLa commande mkdir permet de créer un répertoire dans le répertoire courant. La commande est de la forme mkdir nom_du_répertoire\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nCC -BY-SA David Roche via pixees.fr\nRemarque : il est préférable de ne pas utiliser de caractères accentués dans les noms de répertoire (ou de fichier). Il en est de même pour les espaces (à remplacer par des caractères tirets bas _)\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nAprès avoir ouvert une console, utilisez la commande mkdir afin de créer un répertoire test_nsi dans votre répertoire personnel.\n\n\n\n\n\n\n\n\nLa commande rm permet de supprimer un fichier ou un répertoire. La commande est de la forme rm nom_du_répertoire_ou_nom_du_fichier, pour supprimer un répertoire non vide, utiliser rm -rf ...\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nCC -BY-SA David Roche via pixees.fr\nLa plupart des commandes UNIX peuvent être utilisées avec une ou des options. Par exemple, pour supprimer un répertoire non vide, il est nécessaire d’utiliser la commande rm avec l’option -r : rm -r nom_du_répertoire\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nCC -BY-SA David Roche via pixees.fr\n\n\n\nLa commande touch permet de créer un fichier vide. La commande est de la forme touch nom_du_fichier_à_créer\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nCC -BY-SA David Roche via pixees.fr\n\n\n\nLa commande cp permet de copier un fichier. La commande est de la forme cp /répertoire_source/nom_fichier_à_copier /répertoire_destination/nom_fichier\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nCC -BY-SA David Roche via pixees.fr\n\n\n\n\n\n\n\nEn plus: Copie avec renommage\n\n\n\n\n\n\nLe nom du fichier destination n’est pas obligatoirement |le même que le nom du fichier source (on peut avoir cp fic.txt info/fiche.txt)\n\n\n\n\n\n\n\n\n\n\n\n\nApplication: Créer et supprimer du contenu\n\n\n\n\n\n\nPlacez-vous dans le répertoire test_nsi créé précédemment. Créez un fichier test.txt. Créez un répertoire doc. Copiez le fichier test.txt dans le répertoire doc. Effacez le répertoire doc (et son contenu).\n\n\n\n\n\n\n\n\nLes systèmes de type UNIX sont des systèmes multi-utilisateurs, plusieurs utilisateurs peuvent donc partager un même ordinateur, chaque utilisateur possédant un environnement de travail qui lui est propre.\nChaque utilisateur possède certains droits lui permettant d’effectuer certaines opérations et pas d’autres. Le système d’exploitation permet de gérer ces droits très finement. Un utilisateur un peu particulier possède tous les droits : ce super utilisateur est appelé administrateur ou root.\nC’est cet administrateur qui pourra attribuer ou retirer certains droits aux autres utilisateurs. Au lieu de gérer les utilisateurs un par un, il est possible de créer des groupes d’utilisateurs. L’administrateur attribue des droits à un groupe au lieu d’attribuer des droits particuliers à chaque utilisateur.\n\n\n\n\n\n\n\nApplication: Création d'un nouvel utilisateur avec son répertoire `home`\n\n\n\n\n\n\nComme vous êtes actuellement l’utilisateur root vous avez tous les droits. Vous pouvez ainsi ajouter un nouvel utilisateur.\nadduser toto\nVous pouvez vérifier que cette commande crée en même temps un répertoire personnel dans le dossier /home pour cet utilisateur: ls /home.\nVous pouvez lancer le shell avec cet utilisateur grâce à la commande: su -p toto, puis tenter de créer des fichiers, supprimer des répertoires comme vous allez le voir c’est pas toujours possible!\n\n\n\n\n\n\n\n\nComme nous venons de le voir, chaque utilisateur possède des droits qui lui ont été octroyés par le super utilisateur. Nous nous intéresserons ici uniquement aux droits liés aux fichiers, mais vous devez savoir qu’il existe d’autres droits liés aux autres éléments du système d’exploitation ((imprimante, installation de logiciels…).\nLes fichiers et les répertoires possèdent 3 types de droits :\n\nles droits en lecture (symbolisés par la lettre r) : est-il possible de lire le contenu de ce fichier\nles droits en écriture (symbolisés par la lettre w) : est-il possible de modifier le contenu de ce fichier\nles droits en exécution (symbolisés par la lettre x) : est-il possible d’exécuter le contenu de ce fichier (quand le fichier du code exécutable)\n\nIl existe 3 types d’utilisateurs pour un fichier ou un répertoire :\n\nle propriétaire du fichier (par défaut c’est la personne qui a créé le fichier), il est symbolisé par la lettre u\nun fichier est associé à un groupe, tous les utilisateurs appartenant à ce groupe possèdent des droits particuliers sur ce fichier. Le groupe est symbolisé par la lettre g\ntous les autres utilisateurs (ceux qui ne sont pas le propriétaire du fichier et qui n’appartiennent pas au groupe associé au fichier). Ces utilisateurs sont symbolisés la lettre o\n\nIl est possible d’utiliser la commande ls avec l’option -l afin d’avoir des informations supplémentaires.\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nconsole\n\n\nPrenons la première ligne :\n-rw-r--r-- 1 david david 0 avril 13 19:58 fic.txt\n \nLisons cette ligne de gauche à droite :\n\nle premier symbole - signifie que l’on a affaire à un fichier, dans le cas d’un répertoire, nous aurions un d (voir la 2e ligne)\nles 3 symboles suivants rw-donnent les droits du propriétaire du fichier : lecture autorisée (r), écriture autorisée (w), exécution interdite (- à la place de x)\nles 3 symboles suivants r--donnent les droits du groupe lié au fichier : lecture autorisée (r), écriture interdite (- à la place de w), exécution interdite (- à la place de x)\nles 3 symboles suivants r--donnent les droits des autres utilisateurs : lecture autorisée (r), écriture interdite (- à la place de w), exécution interdite (- à la place de x)\nle caractère suivant 1 donne le nombre de liens (nous n’étudierons pas cette notion ici)\nle premier david représente le nom du propriétaire du fichier\nle second david représente le nom du groupe lié au fichier\nle 0 représente la taille du fichier en octet (ici notre fichier est vide)\navril 13 19:58 donne la date et l’heure de la dernière modification du fichier\nfic.txt est le nom du fichier\n\nPrenons la deuxième ligne :\ndrwxr-xr-x 2 david david 4096 avril 13 20:05 info\n      \nLisons cette ligne de gauche à droite :\n\nle premier symbole d signifie que l’on a un répertoire\nles 3 symboles suivants rwxdonnent les droits du propriétaire du répertoire : lecture du contenu du répertoire autorisée (r), modification du contenu du répertoire autorisée (w), il est possible de parcourir le répertoire (voir le contenu du répertoire) (x)\nles 3 symboles suivants r-xdonnent les droits du groupe lié au répertoire : modification du contenu du répertoire interdite (- à la place de w)\nles 3 symboles suivants r-xdonnent les droits des autres utilisateurs : modification du contenu du répertoire interdite (- à la place de w)\nle caractère suivant 2 donne le nombre de liens (nous n’étudierons pas cette notion ici)\nle premier david représente le nom du propriétaire du répertoire\nle second david représente le nom du groupe lié au répertoire\nle 4096 représente la taille du répertoire en octets\navril 13 20:05 donne la date et l’heure de la dernière modification du contenu du répertoire\ninfo est le nom du répertoire\n\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nAnalysez la 3e ligne du résultat de la commande ls -l ci-dessus\n\n\n\n\n\nIl est important de ne pas perdre de vu que l’utilisateur root possède tous les droits sur tous les fichiers et tous les répertoires, nous aurons donc pour root systématiquement rwx.\nLe propriétaire d’un fichier peut modifier les permissions d’un fichier ou d’un répertoire à l’aide de la commande chmod. Pour utiliser cette commande, il est nécessaire de connaitre certains symboles :\n\nLes symboles liés aux utilisateurs : u correspond au propriétaire, g correspond au groupe lié au fichier (ou au répertoire), o correspond aux autres utilisateurs et a correspond à tout le monde (permet de modifier u, g et o en même temps)\nles symboles liés à l’ajout ou la suppression des permissions : + on ajoute une permission, - on supprime une permission, = les permissions sont réinitialisées (permissions par défaut)\nles symboles liés aux permissions : r : lecture, w : écriture, x : exécution.\n\nLa commande chmod à cette forme :\nchmod [u g o a] [+ - =] [r w x] nom_du_fichier\n         \npar exemple\nchmod o+w toto.txt\n        \nattribuera la permission écriture pour le fichier toto.txt aux autres utilisateurs\nIl est possible de combiner les symboles :\nchmod g-wx toto.txt\n     \nLa commande chmod ci-dessus permet de supprimer la permission écriture et la permission exécution pour le fichier toto.txt au groupe lié au fichier\nUne fois de plus, root a tous les droits sur l’ensemble des fichiers et des répertoires, il peut donc utiliser la commande chmod sur tous les répertoires et tous les fichiers.\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nAnalysez attentivement l’enchainement de commandes suivantes :\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nCC -BY-SA David Roche via pixees.fr\n\n\n\n\n\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nCréez un répertoire test_nsi2 dans votre répertoire personnel. Placez-vous dans le répertoire test_nsi2. Créez un fichier titi.txt, vérifiez les permissions associées à ce fichier. Modifiez les permissions associées au fichier titi.txt afin que les autres utilisateurs aient la permission écriture",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 6: Architectures matérielles et systèmes d’exploitation",
      "Chapitre 3: Systèmes d’exploitation",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/3-systemes-dexploitation/exo/index.html#tp-les-commandes-de-base-en-ligne-de-commande",
    "href": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/3-systemes-dexploitation/exo/index.html#tp-les-commandes-de-base-en-ligne-de-commande",
    "title": "Exercices",
    "section": "",
    "text": "Ce TP est une adaptation du TP proposé sur pixees.fr sous licence CC-BY-SA créé par David Roche.\n\nÀ la préhistoire des systèmes d’exploitation, ces derniers étaient dépourvus d’interface graphique (système de fenêtres pilotables à la souris), toutes les interactions système d'exploitation - utilisateur se faisaient par l’intermédiaire de lignes de commandes (suites de caractères, souvent ésotériques, saisies par l’utilisateur). Aujourd’hui, même si les interfaces graphiques modernes permettent d’effectuer la plupart des opérations, il est important de connaitre quelques-unes de ces lignes de commandes.\n\nPour saisir des lignes de commandes, nous allons utiliser une émulation du système d’exploitation linux dans le navigateur proposée par Fabrice Bellard disponible à l’adresse suivante:\nhttps://bellard.org/jslinux/vm.html?url=https://bellard.org/jslinux/buildroot-x86.cfg\n\n\nOuvrez une console, vous devriez avoir quelque chose qui ressemble à cela :\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nEmulateur JS Linux\n\n\nNous avons ci-dessus la console de l’utilisateur root qui utilise un ordinateur qui se nomme localhost (root@localhost).\nVous pouvez rentrer vos commandes après le signe #.\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nEssayez les commandes suivantes:\n\nwhoami\nhostname\n\n\n\n\n\n\n\n\n\nPrincipalement nous allons, grâce à la ligne de commande, travailler sur les fichiers et les répertoires. Dans les systèmes de type UNIX (par exemple GNU/Linux ou macOS), nous avons un système de fichier en arborescence :\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nCC -BY-SA David Roche via pixees.fr\nDans le schéma ci-dessus on trouve des répertoires (noms entourés d’un rectangle, exemple : home) et des fichiers (uniquement des noms grub.cfg). À noter : les extensions des noms de fichiers, par exemple le cfg de grub.cfg, ne sont pas obligatoires dans les systèmes de type UNIX, par exemple, bash est bien un nom de fichier et il n’a pas d’extension.\nOn parle d’arborescence, car ce système de fichier ressemble à un arbre à l’envers.\nComme vous pouvez le constater, la base de l’arbre s’appelle la racine de l’arborescence et se représente par un /\n\n\nPour indiquer la position d’un fichier (ou d’un répertoire) dans l’arborescence, il existe 2 méthodes : indiquer un chemin absolu ou indiquer un chemin relatif. Le chemin absolu doit indiquer le chemin depuis la racine. Par exemple le chemin absolu du fichier fiche.ods sera : /home/elsa/documents/fiche.ods\nRemarquez que nous démarrons bien de la racine / (attention les symboles de séparation sont aussi des /)\nIl est possible d’indiquer le chemin non pas depuis la racine, mais depuis un répertoire quelconque, nous parlerons alors de chemin relatif :\nLe chemin relatif permettant d’accéder au fichier photo_1.jpg depuis le répertoire max est : images/photo_vac/photo_1.jpg\nRemarquez l’absence du / au début du chemin (c’est cela qui nous permettra de distinguer un chemin relatif et un chemin absolu).\nImaginons maintenant que nous désirions indiquer le chemin relatif pour accéder au fichier gdbd_3.jpg depuis le répertoire photos_vac.\nComment faire ?\nIl faut remonter d’un niveau dans l’arborescence pour se retrouver dans le répertoire images et ainsi pouvoir repartir vers la bonne branche. Pour ce faire il faut utiliser 2 points : ..\n../ski/gdbd_3.jpg\nIl est tout à fait possible de remonter de plusieurs « niveaux » : ../../ depuis le répertoire photos_vac permet de remonter dans le répertoire max\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nEn vous basant sur l’arborescence ci-dessus, déterminez le chemin absolu permettant d’accéder au fichier :\n\ncat\nrapport.odt\n\nToujours en vous basant sur l’arborescence ci-dessus, déterminez le chemin relatif permettant d’accéder au fichier :\n\nrapport.odt depuis le répertoire elsa\nfiche.ods depuis le répertoire boulot\n\n\n\n\n\n\n\n\n\n\n\n\n\nEn plus: Attention à la casse\n\n\n\n\n\n\nLes systèmes de type UNIX sont sensibles à la casse (il faut différencier les caractères majuscules et les caractères minuscules) : le répertoire Documents et le répertoire documents sont 2 répertoires différents.\n\n\n\n\n\n\n\n\n\nLa commande cd permet de changer le répertoire courant. Il suffit d’indiquer le chemin (relatif ou absolu) qui permet d’atteindre le nouveau répertoire :\nPar exemple (en utilisant l’arborescence ci-dessus) :\n\nsi le répertoire courant est le répertoire elsa et que vous voulez vous rendre dans le répertoire documents, il faudra saisir la commande : cd     documents (relatif) ou cd /home/elsa/documents (absolu)\nsi le répertoire courant est le répertoire photos_vac et que vous voulez vous rendre dans le répertoire ski, il faudra saisir la commande : cd ../ski (relatif) ou cd /home/max/images/ski (absolu)\nsi le répertoire courant est le répertoire boulot et que vous voulez vous rendre dans le répertoire documents, il faudra saisir la commande : cd .. (relatif) ou cd /home/elsa/documents (absolu)\n\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nToujours en utilisant l’arborescence ci-dessus, quelle est la commande à saisir si le répertoire courant est le répertoire home et que vous voulez vous rendre dans le répertoire boulot (vous utiliserez d’abord un chemin absolu puis un chemin relatif)\n\n\n\n\n\n\n\n\nLa commande ls permet de lister le contenu du répertoire courant.\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nCC -BY-SA David Roche via pixees.fr\nDans l’exemple ci-dessus, depuis le répertoire personnel de l’utilisateur david, nous passons dans le répertoire nsi à l’aide d’un cd nsi, puis nous affichons le contenu de ce répertoire nsi à l’aide de la commande ls. Nous trouvons dans le répertoire nsi : 2 fichiers (fiche1.odt et photo.jpg) et un répertoire (test).\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nAprès avoir ouvert une console, utilisez la commande ls depuis votre répertoire personnel.\n\n\n\n\n\n\n\n\nLa commande mkdir permet de créer un répertoire dans le répertoire courant. La commande est de la forme mkdir nom_du_répertoire\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nCC -BY-SA David Roche via pixees.fr\nRemarque : il est préférable de ne pas utiliser de caractères accentués dans les noms de répertoire (ou de fichier). Il en est de même pour les espaces (à remplacer par des caractères tirets bas _)\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nAprès avoir ouvert une console, utilisez la commande mkdir afin de créer un répertoire test_nsi dans votre répertoire personnel.\n\n\n\n\n\n\n\n\nLa commande rm permet de supprimer un fichier ou un répertoire. La commande est de la forme rm nom_du_répertoire_ou_nom_du_fichier, pour supprimer un répertoire non vide, utiliser rm -rf ...\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nCC -BY-SA David Roche via pixees.fr\nLa plupart des commandes UNIX peuvent être utilisées avec une ou des options. Par exemple, pour supprimer un répertoire non vide, il est nécessaire d’utiliser la commande rm avec l’option -r : rm -r nom_du_répertoire\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nCC -BY-SA David Roche via pixees.fr\n\n\n\nLa commande touch permet de créer un fichier vide. La commande est de la forme touch nom_du_fichier_à_créer\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nCC -BY-SA David Roche via pixees.fr\n\n\n\nLa commande cp permet de copier un fichier. La commande est de la forme cp /répertoire_source/nom_fichier_à_copier /répertoire_destination/nom_fichier\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nCC -BY-SA David Roche via pixees.fr\n\n\n\n\n\n\n\nEn plus: Copie avec renommage\n\n\n\n\n\n\nLe nom du fichier destination n’est pas obligatoirement |le même que le nom du fichier source (on peut avoir cp fic.txt info/fiche.txt)\n\n\n\n\n\n\n\n\n\n\n\n\nApplication: Créer et supprimer du contenu\n\n\n\n\n\n\nPlacez-vous dans le répertoire test_nsi créé précédemment. Créez un fichier test.txt. Créez un répertoire doc. Copiez le fichier test.txt dans le répertoire doc. Effacez le répertoire doc (et son contenu).\n\n\n\n\n\n\n\n\nLes systèmes de type UNIX sont des systèmes multi-utilisateurs, plusieurs utilisateurs peuvent donc partager un même ordinateur, chaque utilisateur possédant un environnement de travail qui lui est propre.\nChaque utilisateur possède certains droits lui permettant d’effectuer certaines opérations et pas d’autres. Le système d’exploitation permet de gérer ces droits très finement. Un utilisateur un peu particulier possède tous les droits : ce super utilisateur est appelé administrateur ou root.\nC’est cet administrateur qui pourra attribuer ou retirer certains droits aux autres utilisateurs. Au lieu de gérer les utilisateurs un par un, il est possible de créer des groupes d’utilisateurs. L’administrateur attribue des droits à un groupe au lieu d’attribuer des droits particuliers à chaque utilisateur.\n\n\n\n\n\n\n\nApplication: Création d'un nouvel utilisateur avec son répertoire `home`\n\n\n\n\n\n\nComme vous êtes actuellement l’utilisateur root vous avez tous les droits. Vous pouvez ainsi ajouter un nouvel utilisateur.\nadduser toto\nVous pouvez vérifier que cette commande crée en même temps un répertoire personnel dans le dossier /home pour cet utilisateur: ls /home.\nVous pouvez lancer le shell avec cet utilisateur grâce à la commande: su -p toto, puis tenter de créer des fichiers, supprimer des répertoires comme vous allez le voir c’est pas toujours possible!\n\n\n\n\n\n\n\n\nComme nous venons de le voir, chaque utilisateur possède des droits qui lui ont été octroyés par le super utilisateur. Nous nous intéresserons ici uniquement aux droits liés aux fichiers, mais vous devez savoir qu’il existe d’autres droits liés aux autres éléments du système d’exploitation ((imprimante, installation de logiciels…).\nLes fichiers et les répertoires possèdent 3 types de droits :\n\nles droits en lecture (symbolisés par la lettre r) : est-il possible de lire le contenu de ce fichier\nles droits en écriture (symbolisés par la lettre w) : est-il possible de modifier le contenu de ce fichier\nles droits en exécution (symbolisés par la lettre x) : est-il possible d’exécuter le contenu de ce fichier (quand le fichier du code exécutable)\n\nIl existe 3 types d’utilisateurs pour un fichier ou un répertoire :\n\nle propriétaire du fichier (par défaut c’est la personne qui a créé le fichier), il est symbolisé par la lettre u\nun fichier est associé à un groupe, tous les utilisateurs appartenant à ce groupe possèdent des droits particuliers sur ce fichier. Le groupe est symbolisé par la lettre g\ntous les autres utilisateurs (ceux qui ne sont pas le propriétaire du fichier et qui n’appartiennent pas au groupe associé au fichier). Ces utilisateurs sont symbolisés la lettre o\n\nIl est possible d’utiliser la commande ls avec l’option -l afin d’avoir des informations supplémentaires.\n\n\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\n\nconsole\n\n\nPrenons la première ligne :\n-rw-r--r-- 1 david david 0 avril 13 19:58 fic.txt\n \nLisons cette ligne de gauche à droite :\n\nle premier symbole - signifie que l’on a affaire à un fichier, dans le cas d’un répertoire, nous aurions un d (voir la 2e ligne)\nles 3 symboles suivants rw-donnent les droits du propriétaire du fichier : lecture autorisée (r), écriture autorisée (w), exécution interdite (- à la place de x)\nles 3 symboles suivants r--donnent les droits du groupe lié au fichier : lecture autorisée (r), écriture interdite (- à la place de w), exécution interdite (- à la place de x)\nles 3 symboles suivants r--donnent les droits des autres utilisateurs : lecture autorisée (r), écriture interdite (- à la place de w), exécution interdite (- à la place de x)\nle caractère suivant 1 donne le nombre de liens (nous n’étudierons pas cette notion ici)\nle premier david représente le nom du propriétaire du fichier\nle second david représente le nom du groupe lié au fichier\nle 0 représente la taille du fichier en octet (ici notre fichier est vide)\navril 13 19:58 donne la date et l’heure de la dernière modification du fichier\nfic.txt est le nom du fichier\n\nPrenons la deuxième ligne :\ndrwxr-xr-x 2 david david 4096 avril 13 20:05 info\n      \nLisons cette ligne de gauche à droite :\n\nle premier symbole d signifie que l’on a un répertoire\nles 3 symboles suivants rwxdonnent les droits du propriétaire du répertoire : lecture du contenu du répertoire autorisée (r), modification du contenu du répertoire autorisée (w), il est possible de parcourir le répertoire (voir le contenu du répertoire) (x)\nles 3 symboles suivants r-xdonnent les droits du groupe lié au répertoire : modification du contenu du répertoire interdite (- à la place de w)\nles 3 symboles suivants r-xdonnent les droits des autres utilisateurs : modification du contenu du répertoire interdite (- à la place de w)\nle caractère suivant 2 donne le nombre de liens (nous n’étudierons pas cette notion ici)\nle premier david représente le nom du propriétaire du répertoire\nle second david représente le nom du groupe lié au répertoire\nle 4096 représente la taille du répertoire en octets\navril 13 20:05 donne la date et l’heure de la dernière modification du contenu du répertoire\ninfo est le nom du répertoire\n\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nAnalysez la 3e ligne du résultat de la commande ls -l ci-dessus\n\n\n\n\n\nIl est important de ne pas perdre de vu que l’utilisateur root possède tous les droits sur tous les fichiers et tous les répertoires, nous aurons donc pour root systématiquement rwx.\nLe propriétaire d’un fichier peut modifier les permissions d’un fichier ou d’un répertoire à l’aide de la commande chmod. Pour utiliser cette commande, il est nécessaire de connaitre certains symboles :\n\nLes symboles liés aux utilisateurs : u correspond au propriétaire, g correspond au groupe lié au fichier (ou au répertoire), o correspond aux autres utilisateurs et a correspond à tout le monde (permet de modifier u, g et o en même temps)\nles symboles liés à l’ajout ou la suppression des permissions : + on ajoute une permission, - on supprime une permission, = les permissions sont réinitialisées (permissions par défaut)\nles symboles liés aux permissions : r : lecture, w : écriture, x : exécution.\n\nLa commande chmod à cette forme :\nchmod [u g o a] [+ - =] [r w x] nom_du_fichier\n         \npar exemple\nchmod o+w toto.txt\n        \nattribuera la permission écriture pour le fichier toto.txt aux autres utilisateurs\nIl est possible de combiner les symboles :\nchmod g-wx toto.txt\n     \nLa commande chmod ci-dessus permet de supprimer la permission écriture et la permission exécution pour le fichier toto.txt au groupe lié au fichier\nUne fois de plus, root a tous les droits sur l’ensemble des fichiers et des répertoires, il peut donc utiliser la commande chmod sur tous les répertoires et tous les fichiers.\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nAnalysez attentivement l’enchainement de commandes suivantes :\n\n\t\t\t  \n  \n\t\t\t\t\n\t\t\t\nCC -BY-SA David Roche via pixees.fr\n\n\n\n\n\n\n\n\n\n\n\n\nApplication\n\n\n\n\n\n\nCréez un répertoire test_nsi2 dans votre répertoire personnel. Placez-vous dans le répertoire test_nsi2. Créez un fichier titi.txt, vérifiez les permissions associées à ce fichier. Modifiez les permissions associées au fichier titi.txt afin que les autres utilisateurs aient la permission écriture",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 6: Architectures matérielles et systèmes d’exploitation",
      "Chapitre 3: Systèmes d’exploitation",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/3-systemes-dexploitation/quiz/index.html",
    "href": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/3-systemes-dexploitation/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "1. Dans un système Linux, on dispose d'un répertoire racine contenant deux répertoires documents et\n   sauvegardes. On se trouve dans le répertoire documents où figure un fichier NSI.txt. Quelle\n   commande permet de créer une copie nommée NSI2.txt de ce fichier dans le répertoire sauvegardes?\n\n   - [ ] cp NSI.txt NSI2.txt \n   - [ ] cp NSI.txt sauvegardes/NSI2.txt \n   - [ ] cp NSI.txt ../NSI2.txt \n   - [x] cp NSI.txt ../sauvegardes/NSI2.txt \n\n1. À partir du dossier ~/Doc/QCM, quelle commande permet de rejoindre le dossier ~/Hack/Reponses? \n   \n\n   - [ ] cd Hack/Reponses \n   - [ ] cd /Hack/Reponses \n   - [ ] cd /~/Hack/Reponses \n   - [x] cd ../../Hack/Reponses \n\n1. Dans un terminal sous Linux, quelle commande faut-il écrire pour donner à tout le monde le droit\n   d'écriture sur un fichier information.py?\n\n   - [ ] `chmod o+w information.py`\n   - [x] `chmod a+w information.py`\n   - [ ] `chmod o+x information.py`\n   - [ ] `chmod a+x information.py`\n\n1. Quelle commande permet de connaître le répertoire courant? \n\n   - [ ] `cd`\n   - [ ] `ls`\n   - [x] `pwd`\n   - [ ] `chmod`\n\n\n1. Lorsque, en ligne de commande, on saisit la commande `rm *` \n   ceci a pour effet : \n\n\n   - [ ] d’activer une télécommande \n   - [ ] d’accéder au répertoire parent du répertoire courant \n   - [ ] d’effacer tous les fichiers du répertoire courant et ses sous-répertoires \n   - [x] d’effacer tous les fichiers du répertoire courant \n\n1. Quel est l’effet de la commande shell suivante?\n   \ncp NSI_ex1_Franck.txt NSI_ex1_Marie.txt ```\n\nLe fichier NSI_ex1_Franck.txt est copié sous le nom NSI_ex1_Marie.txt\nLe fichier NSI_ex1_Franck.txt est renommé sous le nom NSI_ex1_Marie.txt\nLe fichier NSI_ex1_Marie.txt est copié sous le nom NSI_ex1_Franck.txt\nLe fichier NSI_ex1_Marie.txt est renommé sous le nom NSI_ex1_Franck.txt\n\n\nSous UNIX, que va réaliser la ligne de commande cat file.txt?\n\nrien du tout\nl’affichage du contenu du fichier file.txt dans la console\nla création d’un fichier file.txt\nla suppression du fichier file.txt\n\nLorsque, en ligne de commande, on saisit la commande chmod u+w a.txt ceci a pour effet :\n\nde permettre au propriétaire du fichier de modifier le contenu de ce fichier\nd’interdire au propriétaire de modifier le contenu de ce fichier\nd’interdire à tous les autres utilisateurs de lire le fichier\nd’effacer le fichier\n\nQuel est le rôle de la commande shell ls?\n\nbasculer en mode administrateur\nlister le contenu du répertoire courant\ndonner un accès complet à un fichier\neffacer le contenu du répertoire courant\n\nSachant que le répertoire courant contient les fichiers fich.txt, mafich.txt et programme.py, quel est le résultat de la commande ls fich* dans un shell Linux?\n\nfich.txt mafich.txt\nmafich.txt\nfich.txt\nprogramme.py\n\nDans la console Linux, quelle commande faut-il exécuter pour créer un dossier nommé travail dans le dossier courant?\n\npwd travail\ncd travail\nmkdir travail\ndir /home/martin/travail\n\nQuelle commande du shell Linux permet de modifier les autorisations d’accès à un fichier?\n\nchmod\nchown\nchgrp\ndir\n\nQue peut-on dire du système de fichiers, suite à l’exécution des commandes suivantes?\n% ls \nentier.py flottant.py readme.md \n% mkdir foo \n% mv *.py foo \n\nles fichiers entier.py, flottant.py, et foo ont été déplacés dans le répertoire de l’utilisateur\nl’utilisateur foo est propriétaire des fichiers entier.py et flottant.py\nle répertoire foo contient le résultat de l’exécution des deux fichiers entier.py et flottant.py\nle répertoire foo contient deux fichiers d’extension .py\n\nSous Linux, on se place dans un répertoire appelé documents. Dans quel répertoire se trouve-t-on après avoir exécuté la commande cd ../images?\n\ndans un répertoire images, qui est un sous-répertoire du répertoire documents\ndans un répertoire images, qui est à la racine du système de fichiers\ndans un répertoire images, qui est dans l’arborescence de fichiers à la même hauteur que le répertoire documents\ndans un répertoire images, qui est sur le CD-ROM du lecteur de l’ordinateur\n\nDans la console Linux, quelle commande faut-il exécuter pour obtenir la documentation sur la commande pwd?\n\nman pwd\ncd pwd\nmkdir pwd\nls pwd\n\nQuel est l’effet de la commande shell suivante? % cd ..\n\néjecter le CD\ncopier le contenu du répertoire courant dans un répertoire caché\nchanger le répertoire courant vers le répertoire supérieur\nsupprimer le répertoire courant\n\nParmi les commandes suivantes, laquelle permet à n’importe quel utilisateur d’exécuter le fichier appelé jeu?\n\nchmod u+x jeu\nchmod u+rwx jeu\nchmod a+x jeu\nchmod a-x jeu\n\nLa commande suivante vient d’être exécutée en ligne de commande sous Linux : cp /users/luc/interro.txt ./ Que réalise cette commande?\n\ncopie du fichier users vers le répertoire luc\ncopie du fichier interro.txt vers le répertoire luc\ncopie du fichier interro.txt vers le répertoire courant\ncopie du fichier interro.txt vers le répertoire users\n\nQue peut-on dire du système de fichier, suite à l’exécution des commandes suivantes? % cd % ls Documents Images Videos help.txt tutorial.txt script.py % mv *.txt Documents\n\nL’utilisateur Documents a pris possession des fichiers help.txt et tutorial.txt\nLe répertoire /Documents contient maintenant les fichiers help.txt et tutorial.txt\nLe répertoire Documents du répertoire de l’utilisateur contient maintenant les fichiers help.txt et tutorial.txt\nscript.py a été exécuté et a déplacé les fichiers textes\n\nSous Linux, dans quel but utilise-t-on la commande cat readme.txt?\n\npour supprimer le fichier readme.txt\npour copier le fichier readme.txt\npour afficher le contenu du fichier readme.txt\npour renommer le fichier readme.txt\n\nSous Linux, les droits d’accès à un fichier dont le propriétaire est Joseph sont les suivants : rwxr-xr--. Laquelle des affirmations suivantes est fausse?\n\nJoseph a l’autorisation de lire ce fichier\nles membres du groupe de Joseph ont l’autorisation de lire ce fichier\ntous les utilisateurs ont l’autorisation de lire ce fichier\nles membres du groupe de Joseph ont l’autorisation de modifier ce fichier\n\nLequel de ces systèmes d’exploitation est sous licence propriétaire?\n\nAndroid\nLinux\nWindows\nUbuntu\n\nUne et une seule de ces affirmations est fausse. Laquelle?\n\nUn système d’exploitation libre est la plupart du temps gratuit\nJe peux contribuer à un système d’exploitation libre\nIl est interdit d’étudier un système d’exploitation propriétaire\nUn système d’exploitation propriétaire est plus sécurisé\n\nÀ partir du dossier ~/Doc/QCM, quelle commande permet de rejoindre le dossier ~/Hack/Reponses?\n\ncd Hack/Reponses\ncd /Hack/Reponses\ncd /~/Hack/Reponses\ncd ../../Hack/Reponses\n\nLa commande chmod a-r monfichier\n\npermet à tous (all en anglais) la lecture de monfichier\ninterdit à tous (all en anglais) la lecture de monfichier\npermet à tous (all en anglais) l’écriture dans monfichier\ninterdit à tous (all en anglais) l’écriture dans monfichier\n\n\n```",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 6: Architectures matérielles et systèmes d’exploitation",
      "Chapitre 3: Systèmes d’exploitation",
      "Quiz"
    ]
  },
  {
    "objectID": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/5-robotique/exo/index.html",
    "href": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/5-robotique/exo/index.html",
    "title": "Exercices",
    "section": "",
    "text": "Aucun exercice pour l’instant.",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 6: Architectures matérielles et systèmes d’exploitation",
      "Chapitre 5: Robotique",
      "Exercices"
    ]
  },
  {
    "objectID": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/5-robotique/quiz/index.html",
    "href": "1g/nsi/6-architectures-materielles-et-systemes-dexploitation/5-robotique/quiz/index.html",
    "title": "Quiz",
    "section": "",
    "text": "Pas de quiz pour l'instant",
    "crumbs": [
      "Accueil",
      "1<sup>ère</sup> NSI",
      "Partie 6: Architectures matérielles et systèmes d’exploitation",
      "Chapitre 5: Robotique",
      "Quiz"
    ]
  },
  {
    "objectID": "1g/index.html",
    "href": "1g/index.html",
    "title": "Première",
    "section": "",
    "text": "NSI\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAucun article correspondant"
  }
]