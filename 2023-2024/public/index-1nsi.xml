<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>lyceum</title>
<link>https://www.lyceum.fr/2023-2024/#category=1NSI</link>
<atom:link href="https://www.lyceum.fr/2023-2024/index-1nsi.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.4.554</generator>
<lastBuildDate>Thu, 16 May 2024 13:21:00 GMT</lastBuildDate>
<item>
  <title>Chapitre 1: Quelques dates marquantes de l’histoire de l’informatique</title>
  <link>https://www.lyceum.fr/2023-2024/1g/nsi/1-histoire-de-linformatique/1-quelques-dates-marquantes-de-lhistoire-de-linformatique/</link>
  <description><![CDATA[ 




<div class="programme">
<div class="callout callout-style-simple callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Programme
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="programme">
<table class="table table-bordered table-hover">
<thead class="table-warning">
<tr class="header">
<th>Contenus</th>
<th>Capacités attendues</th>
<th>Commentaires</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Événements clés de l’histoire de l’informatique</td>
<td>Situer dans le temps les principaux événements de l’histoire de l’informatique et leurs protagonistes.</td>
<td>Ces repères historiques seront construits au fur et à mesure de la présentation des concepts et techniques.</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<section id="comment-en-est-on-arrivé-là" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="comment-en-est-on-arrivé-là"><span class="header-section-number">1</span> Comment en est-on arrivé là?</h2>
<p>Nous sommes aujourd’hui entourés d’ordinateurs, de serveurs, de tablettes, et nous interagissons avec ces machines quotidiennement, mais comment cela a-t-il été possible?</p>
<p>Comme l’explique l’article <a href="https://fr.wikipedia.org/wiki/Informatique">Informatique</a> de Wikipédia, cela a été possible grâce à des avancées de nature <strong>théorique</strong>, mais aussi <strong>technologiques</strong>.</p>
<blockquote class="blockquote">
<p>Ces champs d’application (de l’informatique) peuvent être séparés en deux branches:</p>
<ul>
<li>l’une, de <strong>nature théorique</strong>, qui concerne la définition de concepts et modèles,</li>
<li>et l’autre, de <strong>nature pratique</strong>, qui s’intéresse aux techniques concrètes de mise en œuvre.</li>
</ul>
</blockquote>
</section>
<section id="sources" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="sources"><span class="header-section-number">2</span> Sources</h2>
<p>Les <em>domaines de l’informatique</em> sont nombreux: algorithmique, langages de programmation… Et l’informatique fait intervenir de nombreux <em>domaines connexes</em>: électronique, optique, ondes pour le stockage de données, leur échange sur des réseaux…</p>
<p>Voici quelques liens pour y voir plus clair:</p>
<ul>
<li><a href="http://archinfo01.hypotheses.org/770">Une histoire de l’informatique sur le site hypotheses.org</a></li>
<li><a href="http://www.histoire-informatique.org/">Histoire de l’informatique de Francois Guillier</a></li>
<li><a href="https://fr.wikipedia.org/wiki/Histoire_de_l%27informatique">Histoire de l’informatique sur Wikipedia</a></li>
<li><a href="https://fr.wikipedia.org/wiki/Histoire_des_ordinateurs">Histoire des ordinateurs</a></li>
<li><a href="https://fr.wikipedia.org/wiki/Chronologie_de_l%27informatique">Chronologie de l’informatique</a></li>
</ul>


</section>

 ]]></description>
  <category>1NSI</category>
  <guid>https://www.lyceum.fr/2023-2024/1g/nsi/1-histoire-de-linformatique/1-quelques-dates-marquantes-de-lhistoire-de-linformatique/</guid>
  <pubDate>Thu, 16 May 2024 13:21:00 GMT</pubDate>
</item>
<item>
  <title>Chapitre 2: Technologie et théorie</title>
  <link>https://www.lyceum.fr/2023-2024/1g/nsi/1-histoire-de-linformatique/2-technologie-et-theorie/</link>
  <description><![CDATA[ 




<div class="intro">
<p>Le développement de l’informatique a nécessité de nombreuses avancées dans des domaines variés tant <em>technologiques que théoriques</em>.</p>
</div>
<section id="aspects-technologiques" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="aspects-technologiques"><span class="header-section-number">1</span> Aspects technologiques</h2>
<section id="calculateurs-mécaniques" class="level3" data-number="1.1">
<h3 data-number="1.1" class="anchored" data-anchor-id="calculateurs-mécaniques"><span class="header-section-number">1.1</span> Calculateurs mécaniques</h3>
<p>En 1642, <em>Blaise Pascale</em> est le premier à avoir conçu une machine à calculer <strong>mécanique</strong>, capable d’effectuer les quatre opérations élémentaires sur les entiers: addition, soustraction, multiplication, division.</p>
<p></p><figure class="wikimage figure"><picture>
			  <source type="image/webp" srcset="/img/VDPTQw7bga-300.webp 300w, /img/VDPTQw7bga-600.webp 600w, /img/VDPTQw7bga-2042.webp 2042w" sizes="100vw">
  <source type="image/jpeg" srcset="/img/VDPTQw7bga-300.jpeg 300w, /img/VDPTQw7bga-600.jpeg 600w, /img/VDPTQw7bga-2042.jpeg 2042w" sizes="100vw">
				<img class="img-fluid figure-img" src="https://www.lyceum.fr/2023-2024/img/VDPTQw7bga-300.webp" width="2042" height="1119" alt="La pascaline créée par Blaise Pascal en 1652." loading="lazy" decoding="async">
			</picture>
<figcaption id="caption">La pascaline créée par Blaise Pascal en 1652.</figcaption><figcaption id="credit">©&nbsp;David.Monniaux&nbsp;CC BY-SA 3.0&nbsp;<a id="image-description" href="//commons.wikimedia.org/wiki/File:Arts_et_Metiers_Pascaline_dsc03869.jpg">via Wikimedia Commons</a></figcaption></figure> <p></p>
</section>
<section id="calculateurs-électromécaniques" class="level3" data-number="1.2">
<h3 data-number="1.2" class="anchored" data-anchor-id="calculateurs-électromécaniques"><span class="header-section-number">1.2</span> Calculateurs électromécaniques</h3>
<p>Au début du XX<sup>e</sup> siècle, on commence à utiliser l’<strong>électricité</strong> pour réaliser des calculateurs.</p>
<p>D’abord des machines <strong>électromécaniques</strong> comme le <strong>Z3</strong> allemand achevé en 1941. On le dit électromécanique, car il utilisait des relais électromécaniques fonctionnant à une fréquence de 5 à 10 Hz.(Source <a href="https://fr.wikipedia.org/wiki/Zuse_3">Wikipedia</a>)</p>
<p></p><figure class="wikimage figure"><picture>
			  <source type="image/webp" srcset="/img/1Y3ynjzfRP-300.webp 300w, /img/1Y3ynjzfRP-600.webp 600w, /img/1Y3ynjzfRP-1600.webp 1600w" sizes="100vw">
  <source type="image/jpeg" srcset="/img/1Y3ynjzfRP-300.jpeg 300w, /img/1Y3ynjzfRP-600.jpeg 600w, /img/1Y3ynjzfRP-1600.jpeg 1600w" sizes="100vw">
				<img class="img-fluid figure-img" src="https://www.lyceum.fr/2023-2024/img/1Y3ynjzfRP-300.webp" width="1600" height="1200" alt="Replica of the <a href=" https:="" en.wikipedia.org="" wiki="" z3_(computer)"="" title="en:Z3 (computer)">Zuse Z3 in the <a href="https://en.wikipedia.org/wiki/Deutsches_Museum" class="extiw" title="en:Deutsches Museum"><i>Deutsches Museum</i></a> in <a href="https://en.wikipedia.org/wiki/Munich" class="extiw" title="en:Munich">Munich</a>, <a href="https://en.wikipedia.org/wiki/Germany" class="extiw" title="en:Germany">Germany</a>"
					loading="lazy"
					decoding="async"&gt;
			</picture>
<figcaption id="caption"></figcaption><figcaption id="credit">©&nbsp;<a href="https://de.wikipedia.org/wiki/User:Venusianer" class="extiw" title="de:User:Venusianer">Venusianer</a>&nbsp;CC BY-SA 3.0&nbsp;<a id="image-description" href="//commons.wikimedia.org/wiki/File:Z3_Deutsches_Museum.JPG">via Wikimedia Commons</a></figcaption></figure><p></p>
<p>On remplace rapidement les relais électromécaniques par des tubes à vides comme dans l’<a href="https://fr.wikipedia.org/wiki/ENIAC">ENIAC</a>.</p>
<p></p><figure class="wikimage figure"><picture>
			  <source type="image/webp" srcset="/img/ps7RLqQ4jH-300.webp 300w, /img/ps7RLqQ4jH-600.webp 600w, /img/ps7RLqQ4jH-1239.webp 1239w" sizes="100vw">
  <source type="image/jpeg" srcset="/img/ps7RLqQ4jH-300.jpeg 300w, /img/ps7RLqQ4jH-600.jpeg 600w, /img/ps7RLqQ4jH-1239.jpeg 1239w" sizes="100vw">
				<img class="img-fluid figure-img" src="https://www.lyceum.fr/2023-2024/img/ps7RLqQ4jH-300.webp" width="1239" height="1024" alt="" u.s.="" army="" photo",="" from="" m.="" weik,="" "the="" eniac="" story"="" a="" technician="" changes="" tube.="" caption="" reads="" "replacing="" bad="" tube="" meant="" checking="" among="" eniac's="" 19,000="" possibilities."="" center:="" glenn="" a.="" beck"="" loading="lazy" decoding="async">
			</picture>
<figcaption id="caption"></figcaption><figcaption id="credit">&nbsp;Public domain&nbsp;<a id="image-description" href="//commons.wikimedia.org/wiki/File:ENIAC-changing_a_tube.jpg">via Wikimedia Commons</a></figcaption></figure><p></p>
</section>
<section id="le-transistor-et-lavènement-de-lélectronique" class="level3" data-number="1.3">
<h3 data-number="1.3" class="anchored" data-anchor-id="le-transistor-et-lavènement-de-lélectronique"><span class="header-section-number">1.3</span> Le transistor et l’avènement de l’électronique</h3>
<p></p><figure class="wikimage figure"><picture>
			  <source type="image/webp" srcset="/img/RVKqvULtPL-300.webp 300w, /img/RVKqvULtPL-600.webp 600w, /img/RVKqvULtPL-4400.webp 4400w" sizes="100vw">
  <source type="image/jpeg" srcset="/img/RVKqvULtPL-300.jpeg 300w, /img/RVKqvULtPL-600.jpeg 600w, /img/RVKqvULtPL-4400.jpeg 4400w" sizes="100vw">
				<img class="img-fluid figure-img" src="https://www.lyceum.fr/2023-2024/img/RVKqvULtPL-300.webp" width="4400" height="3480" alt="Le transistor est un composant à trois bornes." loading="lazy" decoding="async">
			</picture>
<figcaption id="caption">Le transistor est un composant à trois bornes.</figcaption><figcaption id="credit">©&nbsp;&nbsp;CC BY-SA 3.0&nbsp;<a id="image-description" href="//commons.wikimedia.org/wiki/File:Transistorer_(cropped).jpg">via Wikimedia Commons</a></figcaption></figure> C’est avec l’invention du transistor en 1947 que l’ère de l’électronique et de l’informatique va prendre son envol. Cette découverte vaudra à ses inventeurs américains William Shockley et Walter Brattain le prix Nobel de physique en 1956.<p></p>
<blockquote class="blockquote">
<p>Le transistor est considéré comme un énorme progrès face au tube électronique : beaucoup plus petit, plus léger et plus robuste, fonctionnant avec des tensions faibles, autorisant une alimentation par piles, il fonctionne presque instantanément une fois mis sous tension, contrairement aux tubes électroniques qui demandaient une dizaine de secondes de chauffage, généraient une consommation importante et nécessitaient une source de tension élevée (plusieurs centaines de volts). <a href="https://fr.wikipedia.org/wiki/Transistor#Historique" class="cite-source">Wikipedia</a></p>
</blockquote>
</section>
</section>
<section id="aspects-théoriques" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="aspects-théoriques"><span class="header-section-number">2</span> Aspects théoriques</h2>
<section id="la-machine-de-turing" class="level3" data-number="2.1">
<h3 data-number="2.1" class="anchored" data-anchor-id="la-machine-de-turing"><span class="header-section-number">2.1</span> La machine de Turing</h3>
<p>Au fur et à mesure que les machines évoluaient, on est venu à se poser beaucoup plus théorique: “Une machine peut-elle tout calculer?”, “Existe-t-il une machine capable de décider si une proposition mathématique est vraie ou fausse?”.</p>
<p>Pour répondre à ces questions, Alan Turing propose en 1937 un modèle de machine appelé aujourd’hui <em>machine de Turing</em>. Cette machine a les caractéristiques suivantes:</p>
<p>Elle possède un ruban infini que lequel on dispose des données. La machine peut lire les données, les traiter et en écrire d’autres. Au bout d’un certain temps, il se peut qu’elle s’arrête, et on peut alors lire le résultat.</p>
<p>Turing démontre grâce à cette machine <em>théorique</em> qu’il existe certains problèmes que la machine n’est pas capable de résoudre.</p>
<p>On considère aujourd’hui l’ordinateur comme une réalisation concrète d’une machine de Turing universelle, c’est-à-dire une machine traitant des informations et capable de prendre comme donnée n’importe quel algorithme et de l’exécuter.</p>
</section>
<section id="larchitecture-de-von-neumann" class="level3" data-number="2.2">
<h3 data-number="2.2" class="anchored" data-anchor-id="larchitecture-de-von-neumann"><span class="header-section-number">2.2</span> L’architecture de von Neumann</h3>
<p>Le premier ordinateur électronique conçu pour être une machine de Turing est l’EINAC réalisé en 1943. Son architecture fut décrite par John von Neumann et sert de base, à quelques améliorations près, à l’architecture de tous les ordinateurs depuis.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><picture>
			  <source type="image/webp" srcset="/img/NDn-z2wfYS-300.webp 300w, /img/NDn-z2wfYS-600.webp 600w, /img/NDn-z2wfYS-1249.webp 1249w" sizes="100vw">
  <source type="image/png" srcset="/img/NDn-z2wfYS-300.png 300w, /img/NDn-z2wfYS-600.png 600w, /img/NDn-z2wfYS-1249.png 1249w" sizes="100vw">
				<img class="img-fluid figure-img" src="https://www.lyceum.fr/2023-2024/img/NDn-z2wfYS-300.webp" width="1249" height="552" alt="" loading="lazy" decoding="async">
			</picture>
</p>
<figcaption>Architecture de Von Neumann</figcaption>
</figure>
</div>
<p><a href="http://www.editions-eyrolles.com/Livre/9782212135435/" class="cite-source">Informatique et sciences du numérique Spécialité ISN en terminale S - Avec des exercices corrigés et des idées de projets par Gilles Dowek</a></p>
<p>Cette architecture est centrée autour de deux composants principaux:</p>
<ul>
<li>le <strong>processeur</strong>,</li>
<li>et la <strong>mémoire</strong>.</li>
</ul>
<div class="ref">
<ul>
<li><a href="http://www.editions-eyrolles.com/Livre/9782212135435/">Informatique et sciences du numérique Spécialité ISN en terminale S - Avec des exercices corrigés et des idées de projets par Gilles Dowek</a></li>
<li><a href="http://www.editions-eyrolles.com/Livre/9782212137002/informatique-pour-tous-en-classes-preparatoires-aux-grandes-ecoles">Informatique pour tous en classes préparatoires aux grandes écoles de Benjamin Wack</a></li>
</ul>
</div>


</section>
</section>

 ]]></description>
  <category>1NSI</category>
  <guid>https://www.lyceum.fr/2023-2024/1g/nsi/1-histoire-de-linformatique/2-technologie-et-theorie/</guid>
  <pubDate>Thu, 16 May 2024 13:21:00 GMT</pubDate>
</item>
<item>
  <title>Chapitre 1: Représentation des entiers naturels</title>
  <link>https://www.lyceum.fr/2023-2024/1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/1-representation-des-entiers-naturels/</link>
  <description><![CDATA[ 




<div class="programme">
<div class="callout callout-style-simple callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Programme
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="programme">
<table class="table table-bordered table-hover">
<thead class="table-warning">
<tr class="header">
<th>Contenus</th>
<th>Capacités attendues</th>
<th>Commentaires</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Écriture d’un entier positif dans une base b ⩾ 2</td>
<td>Passer de la représentation d’une base dans une autre.</td>
<td>Les bases 2, 10 et 16 sont privilégiées.</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<div>

</div>
<div class="intro quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p>On a l’habitude d’écrire les nombres entiers naturels en utilisant la notation décimale, cependant les ordinateurs actuels utilisent la base 2 pour représenter toutes les informations et donc les nombres. Dans ce chapitre nous allons voir comment compter en binaire?</p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p></p><figure class="wikimage figure"><picture>
			  <source type="image/webp" srcset="/img/Hr3DXW7K6Q-268.webp 268w" sizes="100vw">
  <source type="image/gif" srcset="/img/Hr3DXW7K6Q-268.gif 268w" sizes="100vw">
				<img class="img-fluid figure-img" src="https://www.lyceum.fr/2023-2024/img/Hr3DXW7K6Q-268.webp" width="268" height="123" alt="Cette animation montre comment compter en binaire de 0 à 31 en utilisant 5 bits." loading="lazy" decoding="async">
			</picture>
<figcaption id="caption">Cette animation montre comment compter en binaire de 0 à 31 en utilisant 5 bits.</figcaption><figcaption id="credit">©&nbsp;&nbsp;CC BY-SA 4.0&nbsp;<a id="image-description" href="//commons.wikimedia.org/wiki/File:Binary_counter.gif">via Wikimedia Commons</a></figcaption></figure><p></p>
</div>
</div>
</div>
<p>Chacun de ces nombres étant comprise entre 0 et 9, cela représente un ensemble de dix chiffres d’où le nom de notation décimale.</p>
<p>Les chiffres utilisés sont: <strong>0 1 2 3 4 5 6 7 8 9</strong></p>
<p>Cependant, nos ordinateurs actuels utilisent des transistors pour calculer qui ne possèdent que deux états: <strong>0 1</strong>.</p>
<p>Lorsqu’on va compter, on va très rapidement se retrouver à court de chiffres, et on sera obligé d’ajouter des deuzaines, quatraines, huitaines à gauche… Tout comme nous ajoutions des dizaines, centaines, milliers en base 10.</p>
<table class="table table-bordered table-hover">
<thead class="table-warning">
<tr class="header">
<th>Représentation décimale</th>
<th>Représentation binaire</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>0</td>
<td>0</td>
</tr>
<tr class="even">
<td>1</td>
<td>1</td>
</tr>
<tr class="odd">
<td>2</td>
<td>10</td>
</tr>
<tr class="even">
<td>3</td>
<td>11</td>
</tr>
<tr class="odd">
<td>4</td>
<td>100</td>
</tr>
<tr class="even">
<td>5</td>
<td>101</td>
</tr>
<tr class="odd">
<td>6</td>
<td>110</td>
</tr>
<tr class="even">
<td>7</td>
<td>111</td>
</tr>
<tr class="odd">
<td>8</td>
<td>1000</td>
</tr>
</tbody>
</table>
<section id="codage-binaire" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="codage-binaire"><span class="header-section-number">1</span> Codage binaire</h2>
<blockquote class="blockquote">
<p>Le système binaire est un système de numération utilisant la base 2. On nomme couramment bit (de l’anglais binary digit, soit « chiffre binaire ») les chiffres de la numération binaire positionnelle. Ceux-ci ne peuvent prendre que deux valeurs, notées par convention 0 et 1.</p>
<p>C’est un concept essentiel de l’informatique. En effet, les processeurs des ordinateurs actuels sont composés de transistors ne gérant chacun que deux états.</p>
<p><a href="http://fr.wikipedia.org/wiki/Syst%C3%A8me_binaire" class="cite-source">Article Wikipédia sur le système binaire</a></p>
</blockquote>
<p>Actuellement, dans les systèmes numériques comme les ordinateurs, toutes <em>les informations</em>, qu’il s’agisse de nombres, de textes d’images, de sons ou encore de vidéos sont codées sous forme <strong>binaire</strong>.</p>
<p>Le système binaire est un système de <em>numération positionnel</em> utilisant la <strong>base deux</strong>.</p>
<p>Les chiffres utilisés sont: <strong>0 1</strong></p>
<div class="prop">
<p>Avec <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mi>n</mi><annotation encoding="application/x-tex">n</annotation></semantics></math> bits, on peut représenter <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><msup><mn>2</mn><mi>n</mi></msup><annotation encoding="application/x-tex">2^n</annotation></semantics></math> informations.</p>
<p>Dans le cas des entiers naturels, on peut compter de <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mn>0</mn><annotation encoding="application/x-tex">0</annotation></semantics></math> à <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><msup><mn>2</mn><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup><annotation encoding="application/x-tex">2^{n-1}</annotation></semantics></math>.</p>
</div>
<div class="examples">
<ul>
<li>avec 4 bits: de 0 à 15.</li>
<li>avec 8 bits: de 0 à 255.</li>
</ul>
</div>
<div class="plus">
<div class="callout callout-style-simple callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-2-contents" aria-controls="callout-2" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
En plus: Dépassement de capacité
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-2" class="callout-2-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="plus" data-titre="Dépassement de capacité">
<div>

</div>
<div class="quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<blockquote class="blockquote">
<p>Un dépassement d’entier (integer overflow) est, en informatique, une condition qui se produit lorsqu’une opération mathématique produit une valeur numérique supérieure à celle représentable dans l’espace de stockage disponible. <span class="cite-source"><a href="https://fr.wikipedia.org/wiki/D%C3%A9passement_d%27entier">Article Wikipédia</a></span></p>
</blockquote>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p></p><figure class="wikimage figure"><picture>
			  <source type="image/webp" srcset="/img/ehpZtCQEcU-300.webp 300w, /img/ehpZtCQEcU-600.webp 600w, /img/ehpZtCQEcU-799.webp 799w" sizes="100vw">
  <source type="image/svg+xml" srcset="/img/ehpZtCQEcU-799.svg 799w" sizes="100vw">
				<img class="img-fluid figure-img" src="https://www.lyceum.fr/2023-2024/img/ehpZtCQEcU-300.webp" width="799" height="465" alt="Le vol 501 d'Ariane 5 en 1996 s'est soldé par sa destruction en raison d'un dépassement d'entier." loading="lazy" decoding="async">
			</picture>
<figcaption id="caption">Le vol 501 d'Ariane 5 en 1996 s'est soldé par sa destruction en raison d'un dépassement d'entier.</figcaption><figcaption id="credit">©&nbsp;&nbsp;CC BY 3.0&nbsp;<a id="image-description" href="//commons.wikimedia.org/wiki/File:Ariane_501_Fallout_Zone.svg">via Wikimedia Commons</a></figcaption></figure><p></p>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<section id="comment-passer-de-la-notation-binaire-à-la-notation-décimale" class="level3" data-number="1.1">
<h3 data-number="1.1" class="anchored" data-anchor-id="comment-passer-de-la-notation-binaire-à-la-notation-décimale"><span class="header-section-number">1.1</span> Comment passer de la notation binaire à la notation décimale ?</h3>
<div class="example">
<p><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mn>1110</mn><annotation encoding="application/x-tex">
1110
</annotation></semantics></math></p>
<p><math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><msub><mn>1110</mn><mn>2</mn></msub><annotation encoding="application/x-tex">1110_2</annotation></semantics></math> est l’addition de droite à gauche de zéro unité, une <em>deuzaine</em>, une <em>quatraine</em>, une <em>huitaine</em>.</p>
<p>Soit mathématiquement:</p>
<p><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1110</mn><mo>=</mo><mn>1</mn><mo>×</mo><msup><mn>2</mn><mn>3</mn></msup><mo>+</mo><mn>1</mn><mo>×</mo><msup><mn>2</mn><mn>2</mn></msup><mo>+</mo><mn>1</mn><mo>×</mo><msup><mn>2</mn><mn>1</mn></msup><mo>+</mo><mn>0</mn><mo>×</mo><msup><mn>2</mn><mn>0</mn></msup><mo>=</mo><mn>14</mn></mrow><annotation encoding="application/x-tex">
1110=1 \times 2^3 + 1 \times 2^2 + 1 \times 2^1 + 0 \times 2^0 = 14
</annotation></semantics></math></p>
</div>
<p><em>Remarque: on indique la base de numération par un indice à la fin du nombre.</em></p>
<p>Soit <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mn>1110</mn><mn>2</mn></msub><mo>=</mo><msub><mn>14</mn><mn>10</mn></msub></mrow><annotation encoding="application/x-tex">1110_2 = 14_{10}</annotation></semantics></math></p>
</section>
<section id="comment-passer-de-la-notation-décimale-à-la-notation-binaire" class="level3" data-number="1.2">
<h3 data-number="1.2" class="anchored" data-anchor-id="comment-passer-de-la-notation-décimale-à-la-notation-binaire"><span class="header-section-number">1.2</span> Comment passer de la notation décimale à la notation binaire ?</h3>
<p>On regroupe les objets par paquets de 2 en réalisant des divisions successives jusqu’à obtenir un quotient égal à 0.</p>
<div class="example">
<p>Trouver en base deux la représentation du nombre <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><msub><mn>13</mn><mn>10</mn></msub><annotation encoding="application/x-tex">13_{10}</annotation></semantics></math></p>
<pre><code>13| 2
   |---
 1 | 6 | 2
       |---
     0 | 3 | 2
           |---
         1 | 1 | 2
               |---
             1 | 0</code></pre>
</div>
<p>L’écriture du nombre se fait alors de droite à gauche :</p>
<p><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mn>13</mn><mn>10</mn></msub><mo>=</mo><msub><mn>1101</mn><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">
13_{10} = 1101_{2}
</annotation></semantics></math></p>
<p>On peut vérifier le résultat:</p>
<p><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mn>1110</mn><mn>2</mn></msub><mo>=</mo><mn>1</mn><mo>×</mo><msup><mn>2</mn><mn>3</mn></msup><mo>+</mo><mn>1</mn><mo>×</mo><msup><mn>2</mn><mn>2</mn></msup><mo>+</mo><mn>1</mn><mo>×</mo><msup><mn>2</mn><mn>1</mn></msup><mo>+</mo><mn>0</mn><mo>×</mo><msup><mn>2</mn><mn>0</mn></msup><mo>=</mo><msub><mn>13</mn><mn>10</mn></msub></mrow><annotation encoding="application/x-tex">
{1110}_{2} = 1 \times 2^3 + 1 \times 2^2 + 1 \times 2^1 + 0 \times 2^0 = 13_{10}
</annotation></semantics></math></p>
</section>
</section>
<section id="loctet" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="loctet"><span class="header-section-number">2</span> L’octet</h2>
<blockquote class="blockquote">
<p>Les mémoires actuelles sont toutes composées de cellules mémoires capables de retenir un bit. En mettant pleins de ces cellules dans un seul composant, et en mettant quelques circuits électroniques pour gérer le tout, on obtient une mémoire.<a href="http://fr.openclassrooms.com/informatique/cours/fonctionnement-d-un-ordinateur-depuis-zero/memoriser-un-bit" class="cite-source">OpenClassroom</a></p>
</blockquote>
<p>L’état d’un circuit mémoire, se décrit par une suite finie de 0 et de 1, que l’on appelle un <strong>mot</strong>. Par exemple, le mot 100 décrit l’état d’un circuit composé de trois circuits mémoires un bit, respectivement dans l’état 1, 0 et 0.</p>
<p>Dans la mémoire des ordinateurs les circuits mémoire un bit sont souvent groupés par huit : les <strong>octets</strong>.</p>
<dl>
<dt>
Octet
</dt>
<dd>
<div>
<p>Un octet (<em>byte</em> en anglais) est une suite de 8 bits. Il permet de coder <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>8</mn></msup><mo>=</mo><mn>256</mn></mrow><annotation encoding="application/x-tex">2^8=256</annotation></semantics></math> valeurs.</p>
</div>
</dd>
</dl>
<div class="plus">
<div class="callout callout-style-simple callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-3-contents" aria-controls="callout-3" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
En plus: Les unités de stockage
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-3" class="callout-3-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="plus" data-titre="Les unités de stockage">
<p>Contrairement aux préfixes du système international(SI) utilisé en physique qui utilise des puissances de 10, on utilise en informatique la norme IEC basés des puissances de 2.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><picture>
			  <source type="image/webp" srcset="/img/RZG7wp6C5J-300.webp 300w, /img/RZG7wp6C5J-441.webp 441w" sizes="100vw">
  <source type="image/png" srcset="/img/RZG7wp6C5J-300.png 300w, /img/RZG7wp6C5J-441.png 441w" sizes="100vw">
				<img class="img-fluid figure-img" src="https://www.lyceum.fr/2023-2024/img/RZG7wp6C5J-300.webp" width="441" height="419" alt="" loading="lazy" decoding="async">
			</picture>
</p>
<figcaption>Les préfixes SI et IEC ont des noms et des valeurs proches, les fabricants de disque dur l’ont bien compris et utilisent toujours le préfixe SI pour faire croire à un plus grand stockage.</figcaption>
</figure>
</div>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="codage-hexadécimal" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="codage-hexadécimal"><span class="header-section-number">3</span> Codage hexadécimal</h2>
<p>La notation binaire bien qu’adaptée aux composants électroniques, ne l’est pas du tout pour l’homme. Certains des premiers ordinateurs, comme l’<a href="https://fr.wikipedia.org/wiki/ENIAC#Histoire">ENIAC</a> utilisaient la base 10, cependant cette idée a été abandonnée en raison des difficultés que cela entraînaient au niveau électronique. La base 16, <strong>le système hexadécimal rend l’utilisation du binaire plus humaine</strong>.</p>
<p>Un chiffre hexadécimal est un mot de 4 bits puisque <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>4</mn></msup><mo>=</mo><mn>16</mn></mrow><annotation encoding="application/x-tex">2^4 = 16</annotation></semantics></math>.</p>
<p>Les chiffres utilisés sont: <strong>0 1 2 3 4 5 6 7 8 9 a b c d e f</strong></p>
<p>Voici les correspondances entre les bases hexadécimale, décimale et binaire.</p>
<table class="table table-bordered table-hover">
<thead class="table-warning">
<tr class="header">
<th>Chiffre hexadécimal</th>
<th>Représentation décimale</th>
<th>Représentation binaire</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>0</td>
<td>0</td>
<td>0000</td>
</tr>
<tr class="even">
<td>1</td>
<td>1</td>
<td>0001</td>
</tr>
<tr class="odd">
<td>2</td>
<td>2</td>
<td>0010</td>
</tr>
<tr class="even">
<td>3</td>
<td>3</td>
<td>0011</td>
</tr>
<tr class="odd">
<td>4</td>
<td>4</td>
<td>0100</td>
</tr>
<tr class="even">
<td>5</td>
<td>5</td>
<td>0101</td>
</tr>
<tr class="odd">
<td>6</td>
<td>6</td>
<td>0110</td>
</tr>
<tr class="even">
<td>7</td>
<td>7</td>
<td>0111</td>
</tr>
<tr class="odd">
<td>8</td>
<td>8</td>
<td>1000</td>
</tr>
<tr class="even">
<td>9</td>
<td>9</td>
<td>1001</td>
</tr>
<tr class="odd">
<td>A</td>
<td>10</td>
<td>1010</td>
</tr>
<tr class="even">
<td>B</td>
<td>11</td>
<td>1011</td>
</tr>
<tr class="odd">
<td>C</td>
<td>12</td>
<td>1100</td>
</tr>
<tr class="even">
<td>D</td>
<td>13</td>
<td>1101</td>
</tr>
<tr class="odd">
<td>E</td>
<td>14</td>
<td>1110</td>
</tr>
<tr class="even">
<td>F</td>
<td>15</td>
<td>1111</td>
</tr>
<tr class="odd">
<td>10</td>
<td>16</td>
<td>10000</td>
</tr>
</tbody>
</table>
<section id="comment-passer-de-la-notation-binaire-à-la-notation-hexadécimale" class="level3" data-number="3.1">
<h3 data-number="3.1" class="anchored" data-anchor-id="comment-passer-de-la-notation-binaire-à-la-notation-hexadécimale"><span class="header-section-number">3.1</span> Comment passer de la notation binaire à la notation hexadécimale ?</h3>
<div class="example">
<p>Comment représenter le mot binaire de 16 bits: <code>1010101111100001</code></p>
<p>On est d’accord, en binaire, c’est <em>inhumain</em>, par contre en hexadécimal, cela devient beaucoup plus lisible et manipulable:</p>
<p><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mn>1010101111100001</mn><mn>2</mn></msub><mo>=</mo><msub><mrow><mi>a</mi><mi>b</mi><mi>e</mi><mn>1</mn></mrow><mn>16</mn></msub></mrow><annotation encoding="application/x-tex">
{1010101111100001}_2 = {abe1}_{16}
</annotation></semantics></math></p>
<p>Ou si l’on tient vraiment à notre bonne vielle base 10:</p>
<p><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>b</mi><mi>e</mi><msub><mn>1</mn><mn>16</mn></msub><mo>=</mo><msub><mrow><mo stretchy="true" form="prefix">(</mo><mn>10</mn><mo>×</mo><msup><mn>16</mn><mn>3</mn></msup><mo>+</mo><mn>11</mn><mo>×</mo><msup><mn>16</mn><mn>2</mn></msup><mo>+</mo><mn>14</mn><mo>×</mo><msup><mn>16</mn><mn>1</mn></msup><mo>+</mo><mn>1</mn><mo>×</mo><msup><mn>16</mn><mn>0</mn></msup><mo stretchy="true" form="postfix">)</mo></mrow><mn>10</mn></msub><mo>=</mo><msub><mn>44001</mn><mn>10</mn></msub></mrow><annotation encoding="application/x-tex">
abe1_{16}=(10 \times 16^3 + 11 \times 16^2 + 14 \times 16^1 + 1 \times 16^0)_{10}=44001_{10}
</annotation></semantics></math></p>
</div>
<p>Pour passer de l’écriture binaire à l’écriture hexadécimale, il suffit de regrouper les chiffres binaires 4 par 4.</p>
<div class="example">
<p>Trouver en base seize la représentation du nombre <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><msub><mn>101101</mn><mn>2</mn></msub><annotation encoding="application/x-tex">101101_{2}</annotation></semantics></math></p>
<pre><code>En base 2:    101101 = 0010 1101
En base 16:              2    D</code></pre>
<p>Soit: <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mn>101101</mn><mn>2</mn></msub><mo>=</mo><mn>2</mn><msub><mi>D</mi><mn>16</mn></msub></mrow><annotation encoding="application/x-tex">101101_{2} = 2D_{16}</annotation></semantics></math></p>
<p>On peut vérifier le résultat en base 10:</p>
<p><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mn>101101</mn><mn>2</mn></msub><mo>=</mo><mo>+</mo><mn>1</mn><mo>×</mo><msup><mn>2</mn><mn>5</mn></msup><mo>+</mo><mn>0</mn><mo>×</mo><msup><mn>2</mn><mn>4</mn></msup><mo>+</mo><mn>1</mn><mo>×</mo><msup><mn>2</mn><mn>3</mn></msup><mo>+</mo><mn>1</mn><mo>×</mo><msup><mn>2</mn><mn>2</mn></msup><mo>+</mo><mn>0</mn><mo>×</mo><msup><mn>2</mn><mn>1</mn></msup><mo>+</mo><mn>1</mn><mo>×</mo><msup><mn>2</mn><mn>0</mn></msup><mo>=</mo><msub><mn>13</mn><mn>10</mn></msub></mrow><annotation encoding="application/x-tex">
{101101}_2 = + 1 \times 2^5 + 0 \times 2^4 + 1 \times 2^3 + 1 \times 2^2 + 0 \times 2^1 + 1 \times 2^0 = 13_{10}
</annotation></semantics></math></p>
</div>
</section>
<section id="comment-passer-de-la-notation-décimale-à-la-notation-hexadécimale" class="level3" data-number="3.2">
<h3 data-number="3.2" class="anchored" data-anchor-id="comment-passer-de-la-notation-décimale-à-la-notation-hexadécimale"><span class="header-section-number">3.2</span> Comment passer de la notation décimale à la notation hexadécimale ?</h3>
<p>On regroupe les objets par paquets de 16 en réalisant des divisions successives jusqu’à obtenir un quotient égal à 0.</p>
<div class="example">
<p>Trouver en base seize la représentation du nombre <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><msub><mn>255</mn><mn>16</mn></msub><annotation encoding="application/x-tex">255_{16}</annotation></semantics></math></p>
<pre><code> 286  | 16
      |---
14(e)| 17 | 16
           |---
         1 | 1 | 16
               |---
             1 | 0 </code></pre>
</div>
<p>L’écriture du nombre se fait alors de droite à gauche en remplaçant les nombres décimaux par leurs écritures hexadécimales:</p>
<p><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mn>286</mn><mn>10</mn></msub><mo>=</mo><mn>11</mn><msub><mi>e</mi><mn>16</mn></msub></mrow><annotation encoding="application/x-tex">
286_{10} = 11e_{16}
</annotation></semantics></math></p>
<p>On peut vérifier le résultat :</p>
<p><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mrow><mi>e</mi><mn>11</mn></mrow><mn>16</mn></msub><mo>=</mo><mn>1</mn><mo>×</mo><msup><mn>16</mn><mn>2</mn></msup><mo>+</mo><mn>1</mn><mo>×</mo><msup><mn>16</mn><mn>1</mn></msup><mo>+</mo><mn>14</mn><mrow><mo stretchy="true" form="prefix">(</mo><mi>e</mi><mo stretchy="true" form="postfix">)</mo></mrow><mo>×</mo><msup><mn>2</mn><mn>0</mn></msup><mo>=</mo><mn>256</mn><mo>+</mo><mn>16</mn><mo>+</mo><mn>14</mn><mo>=</mo><msub><mn>286</mn><mn>10</mn></msub></mrow><annotation encoding="application/x-tex">
{e11}_{16} = 1 \times 16^2 + 1 \times 16^1 + 14(e) \times 2^0 = 256 + 16 + 14 = 286_{10}
</annotation></semantics></math></p>
</section>
</section>
<section id="opérations-arithmétiques" class="level2" data-number="4">
<h2 data-number="4" class="anchored" data-anchor-id="opérations-arithmétiques"><span class="header-section-number">4</span> Opérations arithmétiques</h2>
<p>Les méthodes utilisées en base dix s’appliquent de la même façon dans les autres bases.</p>
<div class="callout callout-style-default callout-caution callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Mise en garde
</div>
</div>
<div class="callout-body-container callout-body">
<p>Des dépassements de capacités (<em>integer overflow</em>) peuvent advenir en cas d’addition(<math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>255</mn><mo>+</mo><mn>1</mn><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">255 + 1 = 0</annotation></semantics></math> sur un octet!).</p>
<p>Les soustractions doivent donner des résultats positifs, car on ne code pas encore les entiers relatifs(<math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>10</mn><mo>−</mo><mn>13</mn><mo>=</mo><mo>−</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">10 - 13 = -3</annotation></semantics></math> qui ne peut pas être codé!).</p>
</div>
</div>
<section id="addition-binaire" class="level3" data-number="4.1">
<h3 data-number="4.1" class="anchored" data-anchor-id="addition-binaire"><span class="header-section-number">4.1</span> Addition binaire</h3>
<div class="example">
<p>Réaliser l’addition binaire: <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mn>1011</mn><mn>2</mn></msub><mo>+</mo><msub><mn>1010</mn><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">1011_2 + 1010_2</annotation></semantics></math></p>
<pre><code> (1) (1)
    1 0 1 1
  + 1 0 1 0
    -------
  1 0 1 0 1
</code></pre>
</div>
<p>On peut vérifier le résultat en base 10 :</p>
<p><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mo stretchy="true" form="prefix">(</mo><msub><mn>1011</mn><mn>2</mn></msub><mo>=</mo><msub><mn>11</mn><mn>10</mn></msub><mo stretchy="true" form="postfix">)</mo></mrow><mo>+</mo><mrow><mo stretchy="true" form="prefix">(</mo><msub><mn>1010</mn><mn>2</mn></msub><mo>=</mo><msub><mn>10</mn><mn>10</mn></msub><mo stretchy="true" form="postfix">)</mo></mrow><mo>=</mo><msub><mn>10101</mn><mn>2</mn></msub><mo>=</mo><msub><mn>21</mn><mn>10</mn></msub></mrow><annotation encoding="application/x-tex">
({1011}_2 = 11_{10})+({1010}_2 = 10_{10})={10101}_2 = 21_{10}
</annotation></semantics></math></p>
</section>
<section id="addition-hexadécimale" class="level3" data-number="4.2">
<h3 data-number="4.2" class="anchored" data-anchor-id="addition-hexadécimale"><span class="header-section-number">4.2</span> Addition hexadécimale</h3>
<div class="example">
<p>Réaliser l’addition hexadécimale: <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><msub><mn>803</mn><mn>16</mn></msub><mo>+</mo><mn>2</mn><mi>D</mi><msub><mn>35</mn><mn>16</mn></msub></mrow><annotation encoding="application/x-tex">A803_{16} + 2D35_{16}</annotation></semantics></math></p>
<pre><code>   (1)
    A 8 0 3
  + 2 D 3 5
    -------
    D 5 3 8
</code></pre>
</div>
<p>On peut vérifier le résultat en base 10:</p>
<p><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mo stretchy="true" form="prefix">(</mo><msub><mrow><mi>A</mi><mn>803</mn></mrow><mn>16</mn></msub><mo>=</mo><mn>43</mn><msub><mn>011</mn><mn>10</mn></msub><mo stretchy="true" form="postfix">)</mo></mrow><mo>+</mo><mrow><mo stretchy="true" form="prefix">(</mo><msub><mrow><mn>2</mn><mi>D</mi><mn>35</mn></mrow><mn>16</mn></msub><mo>=</mo><mn>11</mn><msub><mn>573</mn><mn>10</mn></msub><mo stretchy="true" form="postfix">)</mo></mrow><mo>=</mo><msub><mrow><mi>D</mi><mn>538</mn></mrow><mn>16</mn></msub><mo>=</mo><mn>54</mn><msub><mn>584</mn><mn>10</mn></msub></mrow><annotation encoding="application/x-tex">
({A803}_{16} = 43 011_{10})+({2D35}_{16} = 11 573_{10})={D538}_{16} = 54 584_{10}
</annotation></semantics></math></p>
</section>
<section id="soustraction-binaire" class="level3" data-number="4.3">
<h3 data-number="4.3" class="anchored" data-anchor-id="soustraction-binaire"><span class="header-section-number">4.3</span> Soustraction binaire</h3>
<div class="example">
<p>Réaliser la soustraction binaire: <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mn>1011</mn><mn>2</mn></msub><mo>−</mo><msub><mn>0110</mn><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">1011_2 - 0110_2</annotation></semantics></math></p>
<pre><code>    1 0 1 1
  - 0 1 1 0
   (1)
    -------
    0 1 0 1
</code></pre>
</div>
<p>On peut vérifier le résultat en base 10:</p>
<p><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mo stretchy="true" form="prefix">(</mo><msub><mn>1011</mn><mn>2</mn></msub><mo>=</mo><msub><mn>11</mn><mn>10</mn></msub><mo stretchy="true" form="postfix">)</mo></mrow><mo>−</mo><mrow><mo stretchy="true" form="prefix">(</mo><msub><mn>0110</mn><mn>2</mn></msub><mo>=</mo><msub><mn>6</mn><mn>10</mn></msub><mo stretchy="true" form="postfix">)</mo></mrow><mo>=</mo><msub><mn>0101</mn><mn>2</mn></msub><mo>=</mo><msub><mn>5</mn><mn>10</mn></msub></mrow><annotation encoding="application/x-tex">
({1011}_2 = 11_{10})-({0110}_2 = 6_{10})={0101}_2 = 5_{10}
</annotation></semantics></math></p>
</section>
<section id="soustraction-hexadécimale" class="level3" data-number="4.4">
<h3 data-number="4.4" class="anchored" data-anchor-id="soustraction-hexadécimale"><span class="header-section-number">4.4</span> Soustraction hexadécimale</h3>
<div class="example">
<p>Réaliser la soustraction hexadécimale : <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><msub><mn>803</mn><mn>16</mn></msub><mo>−</mo><mn>2</mn><mi>D</mi><msub><mn>35</mn><mn>16</mn></msub></mrow><annotation encoding="application/x-tex">A803_{16} - 2D35_{16}</annotation></semantics></math></p>
<pre><code>     A  8  0  3
  -  2  D  3  5
    (1)(1)(1)
    -----------
     7  A  C  E
</code></pre>
</div>
<p>On peut vérifier le résultat en base 10 :</p>
<p><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mo stretchy="true" form="prefix">(</mo><msub><mrow><mi>A</mi><mn>803</mn></mrow><mn>16</mn></msub><mo>=</mo><mn>43</mn><msub><mn>011</mn><mn>10</mn></msub><mo stretchy="true" form="postfix">)</mo></mrow><mo>−</mo><mrow><mo stretchy="true" form="prefix">(</mo><msub><mrow><mn>2</mn><mi>D</mi><mn>35</mn></mrow><mn>16</mn></msub><mo>=</mo><mn>11</mn><msub><mn>573</mn><mn>10</mn></msub><mo stretchy="true" form="postfix">)</mo></mrow><mo>=</mo><msub><mrow><mn>7</mn><mi>A</mi><mi>C</mi><mi>E</mi></mrow><mn>16</mn></msub><mo>=</mo><mn>31</mn><msub><mn>438</mn><mn>10</mn></msub></mrow><annotation encoding="application/x-tex">
({A803}_{16} = 43 011_{10})-({2D35}_{16} = 11 573_{10})={7ACE}_{16} = 31 438_{10}
</annotation></semantics></math></p>
<p>Maintenant que vous avez tout compris, voici un lien vers un convertisseur en ligne.</p>
<p><a href="http://www.binaryconvert.com/convert_unsigned_int.html" class="uri">http://www.binaryconvert.com/convert_unsigned_int.html</a></p>
</section>
</section>
<section id="conversions-et-opérations-en-python" class="level2" data-number="5">
<h2 data-number="5" class="anchored" data-anchor-id="conversions-et-opérations-en-python"><span class="header-section-number">5</span> Conversions et opérations en python</h2>
<p>Bien entendu, comme ce genre d’opérations est courante en informatique, python possède des fonctions pour manipuler les nombres entiers en base décimale <code>int()</code>, en base deux <code>bin()</code>, en base seize <code>hex()</code>.</p>
<p>Vous pouvez trouver quelques exemples de ces conversions sur cette réponse du forum de programmation en anglais <a href="http://stackoverflow.com/a/11029366/1919130">stackoverflow</a></p>
<p><strong>ATTENTION</strong></p>
<p>Les nombres binaires et hexadécimaux sont représentés en Python sous forme de chaîne de caractères avec un préfixe.</p>
<ul>
<li><code>Ob</code> pour les nombres binaires par exemple<code>'0x1001'</code> pour <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><msub><mn>1001</mn><mn>2</mn></msub><annotation encoding="application/x-tex">1001_{2}</annotation></semantics></math></li>
<li><code>Ox</code> pour les nombres hexadécimaux par exemple<code>'0xABCD'</code> pour <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>B</mi><msub><mi>C</mi><mn>16</mn></msub></mrow><annotation encoding="application/x-tex">ABC_{16}</annotation></semantics></math></li>
</ul>


</section>

 ]]></description>
  <category>1NSI</category>
  <guid>https://www.lyceum.fr/2023-2024/1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/1-representation-des-entiers-naturels/</guid>
  <pubDate>Thu, 16 May 2024 13:21:00 GMT</pubDate>
</item>
<item>
  <title>Chapitre 2: Représentation des entiers relatifs</title>
  <link>https://www.lyceum.fr/2023-2024/1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/2-representation-des-entiers-relatifs/</link>
  <description><![CDATA[ 




<div class="programme">
<div class="callout callout-style-simple callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Programme
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="programme">
<table class="table table-bordered table-hover">
<thead class="table-warning">
<tr class="header">
<th>Contenus</th>
<th>Capacités attendues</th>
<th>Commentaires</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Représentation binaire d’un entier relatif</td>
<td>Évaluer le nombre de bits nécessaires à l’écriture en base 2 d’un entier, de la somme ou du produit de deux nombres entiers. Utiliser le complément à 2.</td>
<td>Il s’agit de décrire les tailles courantes des entiers (8, 16, 32 ou 64 bits). Il est possible d’évoquer la représentation des entiers de taille arbitraire de Python.</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<div>

</div>
<div class="intro quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p>Jusqu’à maintenant, nous avons appris à représenter des entiers naturels en représentation binaire ou hexadécimale. Cependant, dans de nombreux programmes, il est nécessaire d’utiliser d’autres types de nombres comme les <strong>entiers relatifs</strong> ou les <strong>réels</strong>. Dans ce chapitre nous allons voir comment coder les nombres entiers relatifs grâce à la <a href="https://en.wikipedia.org/wiki/Method_of_complements">méthode des compléments</a> qui permet de coder une plage symétrique d’entiers positifs et négatifs de manière à ce qu’ils puissent utiliser le même algorithme (matériel) pour l’addition sur toute la plage.</p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><picture>
			  <source type="image/webp" srcset="/img/4PFTZSLrq4-300.webp 300w, /img/4PFTZSLrq4-478.webp 478w" sizes="100vw">
  <source type="image/png" srcset="/img/4PFTZSLrq4-300.png 300w, /img/4PFTZSLrq4-478.png 478w" sizes="100vw">
				<img class="img-fluid figure-img" src="https://www.lyceum.fr/2023-2024/img/4PFTZSLrq4-300.webp" width="478" height="402" alt="" loading="lazy" decoding="async">
			</picture>
</p>
<figcaption>Complément à 2 sur 3 bits.</figcaption>
</figure>
</div>
</div>
</div>
</div>
<section id="méthode-naïve-utilisation-dun-bit-de-signe" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="méthode-naïve-utilisation-dun-bit-de-signe"><span class="header-section-number">1</span> Méthode naïve: utilisation d’un bit de signe</h2>
<p>La façon la plus simple de procéder serait de réserver le bit de poids fort pour le signe(0 pour positif et 1 pour négatif), et de garder le rester pour la représentation de la valeur absolue du nombre.</p>
<p>Avec un codage utilisant des mots de n bits, on pourrait représenter des nombres entre <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><msup><mn>2</mn><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">-2^{n-1}+1</annotation></semantics></math> et <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^{n-1}-1</annotation></semantics></math>.</p>
<p>Par exemple, avec un codage sur 3 bits, des nombres entre -3 et 3:</p>
<table class="table table-bordered table-hover">
<thead class="table-warning">
<tr class="header">
<th>Représentation binaire</th>
<th>Valeur décimale</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>000</td>
<td>+0</td>
</tr>
<tr class="even">
<td>001</td>
<td>+1</td>
</tr>
<tr class="odd">
<td>010</td>
<td>+2</td>
</tr>
<tr class="even">
<td>011</td>
<td>+3</td>
</tr>
<tr class="odd">
<td>100</td>
<td>-0</td>
</tr>
<tr class="even">
<td>101</td>
<td>-1</td>
</tr>
<tr class="odd">
<td>110</td>
<td>-2</td>
</tr>
<tr class="even">
<td>111</td>
<td>-3</td>
</tr>
</tbody>
</table>
<blockquote class="blockquote">
<p>Malheureusement cette représentation possède deux inconvénients. Le premier (mineur) est que le nombre zéro (0) possède deux représentations. L’autre inconvénient (majeur) est que cette représentation impose de modifier l’algorithme d’addition ; si un des nombres est négatif, l’addition binaire usuelle donne un résultat incorrect. <a href="http://fr.wikipedia.org/wiki/Compl%C3%A9ment_%C3%A0_deux#Explication">Voir l’article de Wikipédia pour plus de détails</a></p>
</blockquote>
<div class="appli">
<div class="callout callout-style-simple callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-2-contents" aria-controls="callout-2" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Application
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-2" class="callout-2-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="appli">
<p>Vérifier que 3 - 2 ne donne pas le bon résultat avec cet encodage en binaire.</p>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="notation-en-complément-à-deux" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="notation-en-complément-à-deux"><span class="header-section-number">2</span> Notation en complément à deux</h2>
<p>Cette méthode permet de remédier aux problèmes évoqués ci-dessus.</p>
<p>On utilise un encodage de longueur fixe <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mi>n</mi><annotation encoding="application/x-tex">n</annotation></semantics></math>:</p>
<ul>
<li>La première moitié représente les entiers <em>positifs ou nul</em> codés normalement <em>avec un 0 sur le bit de poids fort</em>;</li>
<li>La deuxième moitié représente les entiers <em>strictement négatifs</em>. Pour cela on leur ajoute <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><msup><mn>2</mn><mi>n</mi></msup><annotation encoding="application/x-tex">2^n</annotation></semantics></math> et on retrouve un <em>1 sur le bit de poids fort</em>.</li>
</ul>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>Dans cet encodage, le bit de poids fort contient encore l’information du signe:</p>
<ul>
<li><code>0</code> pour les entiers <em>positifs ou nul</em>.</li>
<li><code>1</code> pour les entiers <em>strictement négatifs</em>.</li>
</ul>
</div>
</div>
<div class="prop">
<p>En complément à 2 sur <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mi>n</mi><annotation encoding="application/x-tex">n</annotation></semantics></math> bits, on peut représenter des nombres entre <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><msup><mn>2</mn><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">-2^{n-1}</annotation></semantics></math> et <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^{n-1}-1</annotation></semantics></math>.</p>
</div>
<div class="cell" data-execution_count="1">
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><picture>
			  <source type="image/webp" srcset="/img/a57pdmzzXB-300.webp 300w, /img/a57pdmzzXB-600.webp 600w, /img/a57pdmzzXB-1174.webp 1174w" sizes="100vw">
  <source type="image/png" srcset="/img/a57pdmzzXB-300.png 300w, /img/a57pdmzzXB-600.png 600w, /img/a57pdmzzXB-1174.png 1174w" sizes="100vw">
				<img class="img-fluid figure-img" src="https://www.lyceum.fr/2023-2024/img/a57pdmzzXB-300.webp" width="1174" height="942" alt="" loading="lazy" decoding="async">
			</picture>
</p>
</figure>
</div>
</div>
</div>
<section id="méthode-dencodage" class="level3" data-number="2.1">
<h3 data-number="2.1" class="anchored" data-anchor-id="méthode-dencodage"><span class="header-section-number">2.1</span> Méthode d’encodage</h3>
<p>L’entier négatif <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mi>x</mi><annotation encoding="application/x-tex">x</annotation></semantics></math> est codé comme s’il s’agissait de l’entier <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>+</mo><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">x + 2^{n}</annotation></semantics></math> ou n est la taille du mot.</p>
<p>Il est possible d’appliquer un algorithme simple pour réaliser cette addition en binaire <em>(cette méthode sera désignée comme 2ᵉ méthode par la suite)</em>.</p>
<ul>
<li>On inverse les bits de l’écriture binaire de sa valeur absolue.</li>
<li>On ajoute 1 au résultat (les dépassements sont ignorés).</li>
</ul>
<p><a href="https://fr.wikipedia.org/wiki/Compl%C3%A9ment_%C3%A0_deux" class="cite-source">Article Wikipédia sur le complément à deux</a></p>
<div class="example">
<p>Utilisons cet encodage sur 3 bits.</p>
<p><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><msub><mn>1</mn><mn>10</mn></msub><mo>=</mo><msub><mi>?</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">
-1_{10} = ?_{2}
</annotation></semantics></math></p>
<section id="ère-méthode" class="level5" data-number="2.1.0.1">
<h5 data-number="2.1.0.1" class="anchored" data-anchor-id="ère-méthode"><span class="header-section-number">2.1.0.1</span> 1<sup>ère</sup> méthode</h5>
<p><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mn>1</mn><mo>=</mo><mo>&gt;</mo><mo>−</mo><mn>1</mn><mo>+</mo><msup><mn>2</mn><mn>3</mn></msup><mo>=</mo><msub><mn>7</mn><mn>10</mn></msub><mo>=</mo><msub><mn>111</mn><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">
-1 =&gt; -1 + 2^3 = 7_{10} = 111_2
</annotation></semantics></math></p>
</section>
<section id="e-méthode" class="level5" data-number="2.1.0.2">
<h5 data-number="2.1.0.2" class="anchored" data-anchor-id="e-méthode"><span class="header-section-number">2.1.0.2</span> 2<sup>e</sup> méthode</h5>
<ol type="1">
<li>La valeur <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">-1</annotation></semantics></math> a pour valeur absolue <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mn>1</mn><annotation encoding="application/x-tex">1</annotation></semantics></math> codé <code>001</code> sur 3 bits.</li>
<li>On inverse les bits: <code>110</code></li>
<li>On ajoute 1: <code>111</code></li>
</ol>
<p>Les deux méthodes donnent le même résultat:</p>
<p><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><msub><mn>1</mn><mn>10</mn></msub><mo>=</mo><msub><mn>111</mn><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">
-1_{10} = 111_{2}
</annotation></semantics></math></p>
</section>
<section id="tableau-de-valeurs" class="level4" data-number="2.1.1">
<h4 data-number="2.1.1" class="anchored" data-anchor-id="tableau-de-valeurs"><span class="header-section-number">2.1.1</span> Tableau de valeurs</h4>
<p>Avec un codage sur 3 bits, on peut coder des nombres entre <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><msup><mn>2</mn><mrow><mn>3</mn><mo>−</mo><mn>1</mn></mrow></msup><mo>=</mo><mo>−</mo><mn>4</mn></mrow><annotation encoding="application/x-tex">-2^{3-1}=-4</annotation></semantics></math> et <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><msup><mn>2</mn><mrow><mn>3</mn><mo>−</mo><mn>1</mn></mrow></msup><mo>−</mo><mn>1</mn><mo>=</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">-2^{3-1}-1=3</annotation></semantics></math>.</p>
<table class="table table-bordered table-hover">
<thead class="table-warning">
<tr class="header">
<th>Représentation binaire</th>
<th>Valeur décimale</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>000</td>
<td>+0</td>
</tr>
<tr class="even">
<td>001</td>
<td>+1</td>
</tr>
<tr class="odd">
<td>010</td>
<td>+2</td>
</tr>
<tr class="even">
<td>011</td>
<td>+3</td>
</tr>
<tr class="odd">
<td>100</td>
<td>-4</td>
</tr>
<tr class="even">
<td>101</td>
<td>-3</td>
</tr>
<tr class="odd">
<td>110</td>
<td>-2</td>
</tr>
<tr class="even">
<td>111</td>
<td>-1</td>
</tr>
</tbody>
</table>
<div class="cell" data-execution_count="2">
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><picture>
			  <source type="image/webp" srcset="/img/4orufxFHoo-300.webp 300w, /img/4orufxFHoo-600.webp 600w, /img/4orufxFHoo-1174.webp 1174w" sizes="100vw">
  <source type="image/png" srcset="/img/4orufxFHoo-300.png 300w, /img/4orufxFHoo-600.png 600w, /img/4orufxFHoo-1174.png 1174w" sizes="100vw">
				<img class="img-fluid figure-img" src="https://www.lyceum.fr/2023-2024/img/4orufxFHoo-300.webp" width="1174" height="900" alt="" loading="lazy" decoding="async">
			</picture>
</p>
</figure>
</div>
</div>
</div>
</section>
</div>
</section>
<section id="méthode-de-décodage" class="level3" data-number="2.2">
<h3 data-number="2.2" class="anchored" data-anchor-id="méthode-de-décodage"><span class="header-section-number">2.2</span> Méthode de décodage</h3>
<p>Pour connaitre le nombre que représente un entier négatif, on effectue la démarche inverse:</p>
<ul>
<li>On lui retranche 1 puis,</li>
<li>on inverse tous ces bits,</li>
<li>On convertit en base 10, et on ajoute le signe -.</li>
</ul>
<p>Ce qui revient à lui soustraire <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><msup><mn>2</mn><mi>n</mi></msup><annotation encoding="application/x-tex">2^n</annotation></semantics></math>.</p>
<div class="example">
<p>Toujours en travaillant sur 3 bits:</p>
<p><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mn>110</mn><mn>2</mn></msub><mo>=</mo><msub><mi>?</mi><mn>10</mn></msub></mrow><annotation encoding="application/x-tex">
110_2 = ?_{10}
</annotation></semantics></math></p>
<section id="ère-méthode-1" class="level4" data-number="2.2.1">
<h4 data-number="2.2.1" class="anchored" data-anchor-id="ère-méthode-1"><span class="header-section-number">2.2.1</span> 1<sup>ère</sup> méthode</h4>
<p><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mn>110</mn><mn>2</mn></msub><mo>=</mo><msub><mn>6</mn><mn>10</mn></msub><mo>=</mo><mo>&gt;</mo><mn>6</mn><mo>−</mo><msup><mn>2</mn><mn>3</mn></msup><mo>=</mo><mo>−</mo><msub><mn>2</mn><mn>10</mn></msub></mrow><annotation encoding="application/x-tex">
110_2 = 6_{10} =&gt; 6 - 2^3 = -2_{10}
</annotation></semantics></math></p>
</section>
<section id="e-méthode-1" class="level4" data-number="2.2.2">
<h4 data-number="2.2.2" class="anchored" data-anchor-id="e-méthode-1"><span class="header-section-number">2.2.2</span> 2<sup>e</sup> méthode</h4>
<ol type="1">
<li>On retranche 1: <code>110 - 1 = 101</code></li>
<li>On inverse les bits: <code>010</code></li>
<li>On convertit en base 10: <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mn>010</mn><mn>2</mn></msub><mo>=</mo><msub><mn>2</mn><mn>10</mn></msub></mrow><annotation encoding="application/x-tex">010_2 = 2_{10}</annotation></semantics></math> donc c’est <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">-2</annotation></semantics></math>.</li>
</ol>
<p>Les deux méthodes donnent le même résultat:</p>
<p><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mn>110</mn><mn>2</mn></msub><mo>=</mo><mo>−</mo><msub><mn>2</mn><mn>10</mn></msub></mrow><annotation encoding="application/x-tex">
110_2 = -2_{10}
</annotation></semantics></math></p>
</section>
</div>
</section>
</section>
<section id="opérations" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="opérations"><span class="header-section-number">3</span> Opérations</h2>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Astuce
</div>
</div>
<div class="callout-body-container callout-body">
<p>Il faut bien garder à l’esprit que l’encodage en complément à deux ne peut être fait que sur des <em>mots binaires</em> de taille fixe et que les dépassements de capacité ne sont pas pris en compte.</p>
</div>
</div>
<section id="soustraction" class="level3" data-number="3.1">
<h3 data-number="3.1" class="anchored" data-anchor-id="soustraction"><span class="header-section-number">3.1</span> Soustraction</h3>
<p>Réalisons le calcul <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn><mo>−</mo><mn>2</mn><mo>=</mo><mn>3</mn><mo>+</mo><mrow><mo stretchy="true" form="prefix">(</mo><mo>−</mo><mn>2</mn><mo stretchy="true" form="postfix">)</mo></mrow></mrow><annotation encoding="application/x-tex">3-2 = 3+ (-2)</annotation></semantics></math> sur trois bits.</p>
<pre><code>   011
  +110
  ----
(1)001</code></pre>
<p>On trouve bien <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mn>001</mn><mn>2</mn></msub><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">{001}_2=1</annotation></semantics></math> car le 4<sup>e</sup> bit n’est pas prise en compte.</p>
</section>
<section id="multiplication" class="level3" data-number="3.2">
<h3 data-number="3.2" class="anchored" data-anchor-id="multiplication"><span class="header-section-number">3.2</span> Multiplication</h3>
<p>Réalisons le calcul <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mo>*</mo><mrow><mo stretchy="true" form="prefix">(</mo><mo>−</mo><mn>2</mn><mo stretchy="true" form="postfix">)</mo></mrow></mrow><annotation encoding="application/x-tex">2*(-2)</annotation></semantics></math> sur trois bits.</p>
<pre><code>     010
    x110
    ----
     000
    010
   010
   -----
 (01)100</code></pre>
<p>On trouve bien sur trois bits <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mn>100</mn><mn>2</mn></msub><mo>=</mo><mo>−</mo><mn>4</mn></mrow><annotation encoding="application/x-tex">{100}_2=-4</annotation></semantics></math>.</p>


</section>
</section>

 ]]></description>
  <category>1NSI</category>
  <guid>https://www.lyceum.fr/2023-2024/1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/2-representation-des-entiers-relatifs/</guid>
  <pubDate>Thu, 16 May 2024 13:21:00 GMT</pubDate>
</item>
<item>
  <title>Chapitre 3: Représentation des nombres à virgule</title>
  <link>https://www.lyceum.fr/2023-2024/1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/3-representation-des-nombres-a-virgule/</link>
  <description><![CDATA[ 




<div class="programme">
<div class="callout callout-style-simple callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Programme
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="programme">
<table class="table table-bordered table-hover">
<thead class="table-warning">
<tr class="header">
<th>Contenus</th>
<th>Capacités attendues</th>
<th>Commentaires</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Représentation approximative des nombres réels: notion de nombre flottant</td>
<td>Représentation approximative des nombres réels: notion de nombre flottant</td>
<td><code>0.2 + 0.1</code> n’est pas égal à <code>0.3</code>. Il faut éviter de tester l’égalité de deux flottants. Aucune connaissance précise de la norme IEEE-754 n’est exigible.</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<div>

</div>
<div class="intro quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p>Nous avons appris à encoder des nombres entiers naturels, et relatifs, et nous avons vu que les limites physiques des machines imposaient des limites sur l’étendue des valeurs. Maintenant que nous allons tenter de coder les réels, les limites de notre machine vont encore entraîner des limites sur l’<em>étendue des valeurs</em>, mais également sur <strong>la précision des valeurs</strong>.</p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p></p><figure class="wikimage figure"><picture>
			  <source type="image/webp" srcset="/img/zgYF8AyG5m-300.webp 300w, /img/zgYF8AyG5m-500.webp 500w, /img/zgYF8AyG5m-600.webp 600w" sizes="100vw">
  <source type="image/svg+xml" srcset="/img/zgYF8AyG5m-500.svg 500w" sizes="100vw">
				<img class="img-fluid figure-img" src="https://www.lyceum.fr/2023-2024/img/zgYF8AyG5m-300.webp" width="600" height="114" alt="Pour encoder un nombre flottant on
utilise 1 bit de signe f bits pour la mantisse et e bits pour l'exposant." loading="lazy" decoding="async">
			</picture>
<figcaption id="caption">Pour encoder un nombre flottant on
utilise 1 bit de signe f bits pour la mantisse et e bits pour l'exposant.</figcaption><figcaption id="credit">©&nbsp;&nbsp;CC BY-SA 3.0&nbsp;<a id="image-description" href="//commons.wikimedia.org/wiki/File:General_floating_point.svg">via Wikimedia Commons</a></figcaption></figure><p></p>
</div>
</div>
</div>
<section id="virgule-fixe-et-virgule-flottante" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="virgule-fixe-et-virgule-flottante"><span class="header-section-number">1</span> Virgule fixe et virgule flottante</h2>
<p>Il existe deux façons de coder les nombres à virgule:</p>
<ul>
<li>Le codage en <strong>virgule fixe</strong> qui consiste à garder <em>un nombre fixe de chiffes après la virgule.</em></li>
</ul>
<div class="example">
<p>Par exemple sur un octet, on peut utiliser 4 bits pour la partie entière et 4 bits pour la partie décimale.</p>
<p>Ainsi, <code>0101 1011</code> a pour valeur:</p>
<p><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>2</mn></msup><mo>+</mo><msup><mn>2</mn><mn>0</mn></msup><mo>+</mo><msup><mn>2</mn><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo>+</mo><msup><mn>2</mn><mrow><mo>−</mo><mn>2</mn></mrow></msup><mo>+</mo><msup><mn>2</mn><mrow><mo>−</mo><mn>3</mn></mrow></msup><mo>=</mo><mn>4</mn><mo>+</mo><mn>1</mn><mo>+</mo><mn>0.5</mn><mo>+</mo><mn>0.25</mn><mo>+</mo><mn>0.125</mn><mo>=</mo><mn>5</mn><mo>,</mo><mn>825</mn></mrow><annotation encoding="application/x-tex">
2^2 + 2^0 + 2^{-1} + 2^{-2} + 2^{-3} = 4 + 1 + 0.5 + 0.25 + 0.125 = 5,825
</annotation></semantics></math></p>
</div>
<ul>
<li>Dans le codage en <em>virgule flottante</em>, on garde <em>un nombre fixe de chiffres significatifs</em> et on réserve l’autre partie du codage à l’exposant. C’est une méthode semblable à la notation scientifique utilisée en physique, mais avec des puissances de 2.</li>
</ul>
<p><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>±</mo><mi>m</mi><mo>×</mo><msup><mn>2</mn><mi>n</mi></msup><mrow><mspace width="0.333em"></mspace><mtext mathvariant="normal"> avec </mtext><mspace width="0.333em"></mspace></mrow><mi>m</mi><mo>∈</mo><mo stretchy="false" form="prefix">[</mo><mn>1</mn><mo>;</mo><mn>2</mn><mo stretchy="false" form="prefix">[</mo></mrow><annotation encoding="application/x-tex">
\pm m \times  2^{n} \text{ avec } m \in [1; 2[
</annotation></semantics></math></p>
<p>C’est cette deuxième méthode qui est utilisée dans les ordinateurs et smartphones et que nous allons étudier cette année.</p>
</section>
<section id="principe-du-codage-en-virgule-flottante" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="principe-du-codage-en-virgule-flottante"><span class="header-section-number">2</span> Principe du codage en virgule flottante</h2>
<p>On représente un nombre à virgule flottante sous la forme:</p>
<p><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mspace width="0.222em"></mspace><mi>m</mi><mo>⋅</mo><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">
s\ m \cdot 2^n
</annotation></semantics></math></p>
<p></p><figure class="wikimage figure"><picture>
			  <source type="image/webp" srcset="/img/zgYF8AyG5m-300.webp 300w, /img/zgYF8AyG5m-500.webp 500w, /img/zgYF8AyG5m-600.webp 600w" sizes="100vw">
  <source type="image/svg+xml" srcset="/img/zgYF8AyG5m-500.svg 500w" sizes="100vw">
				<img class="img-fluid figure-img" src="https://www.lyceum.fr/2023-2024/img/zgYF8AyG5m-300.webp" width="600" height="114" alt="Pour encoder un nombre flottant on
utilise 1 bit de signe f bits pour la mantisse et e bits pour l'exposant." loading="lazy" decoding="async">
			</picture>
<figcaption id="caption">Pour encoder un nombre flottant on
utilise 1 bit de signe f bits pour la mantisse et e bits pour l'exposant.</figcaption><figcaption id="credit">©&nbsp;&nbsp;CC BY-SA 3.0&nbsp;<a id="image-description" href="//commons.wikimedia.org/wiki/File:General_floating_point.svg">via Wikimedia Commons</a></figcaption></figure><p></p>
<p>Supposons un nombre flottant codé sur un octet utilisant 1 bit de signe, 3 bits pour l’exposant et 4 bits pour la mantisse: <code>1 100 1011</code></p>
<ul>
<li><p><math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mi>s</mi><annotation encoding="application/x-tex">s</annotation></semantics></math> est le signe représenté par le bit de poids fort:</p>
<ul>
<li><math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">s=0</annotation></semantics></math>: signe <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mo>+</mo><annotation encoding="application/x-tex">+</annotation></semantics></math></li>
<li><math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">s=1</annotation></semantics></math>: signe <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mo>−</mo><annotation encoding="application/x-tex">-</annotation></semantics></math></li>
</ul>
<p><math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">s=1</annotation></semantics></math> Notre codage représente donc un nombre <strong>négatif</strong>.</p></li>
<li><p><math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mi>n</mi><annotation encoding="application/x-tex">n</annotation></semantics></math> est l’exposant représenté par un <em>entier relatif décalé</em> et non en complément à deux(ceci afin de faciliter la comparaison des exposants).</p>
<p>Ce décalage est de <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mrow><mi>e</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^{e-1} - 1</annotation></semantics></math> <em>(e représente le nombre de bits utilisé pour coder l’exposant)</em></p>
<p>L’exposant a pour valeur <code>100</code> codé sur 3 bits, il doit être décalé de <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>2</mn></msup><mo>−</mo><mn>1</mn><mo>=</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">2^{2} - 1 = 3</annotation></semantics></math>. Ainsi, puisque <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mn>100</mn><mn>2</mn></msub><mo>=</mo><msub><mn>4</mn><mn>10</mn></msub></mrow><annotation encoding="application/x-tex">100_2 = 4_{10}</annotation></semantics></math>, l’exposant <code>100</code> correspond à un exposant de 4-3=<strong>1</strong>.</p></li>
<li><p><math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mi>m</mi><annotation encoding="application/x-tex">m</annotation></semantics></math> est la mantisse qui est un nombre binaire à virgule compris entre 1 inclus et 2 exclus. Le seul chiffre avant la virgule étant toujours 1, il n’est pas représenté(on le dit <em>implicite</em>), et le codage binaire de la mantisse représente donc uniquement les chiffres après la virgule qui sont despuissances <em>négatives</em> de 2: de gauche à droite, un demi, un quart, un huitème, un seizième…</p></li>
</ul>
<p>Dans notre exemple, la mantisse est: <code>1011</code>, elle représentera le nombre:</p>
<p><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mo>=</mo><mn>1</mn><mo>+</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo>+</mo><mfrac><mn>1</mn><msup><mn>2</mn><mn>3</mn></msup></mfrac><mo>+</mo><mfrac><mn>1</mn><msup><mn>2</mn><mn>4</mn></msup></mfrac><mo>=</mo><mn>1</mn><mo>+</mo><mn>0</mn><mo>,</mo><mn>5</mn><mo>+</mo><mn>0</mn><mo>,</mo><mn>125</mn><mo>+</mo><mn>0</mn><mo>,</mo><mn>0625</mn><mo>=</mo><mn>1</mn><mo>,</mo><mn>6875</mn></mrow><annotation encoding="application/x-tex">
m = 1 + \frac{1}{2} +  \frac{1}{2^3}+ \frac{1}{2^4} =  1+0,5+0,125+0,0625 = 1,6875
</annotation></semantics></math></p>
<p>Le code <code>1 101 1011</code> sur un octet utilisant 1 bit de signe, 3 bits pour l’exposant et 4 bits pour la mantisse représente donc:</p>
<p><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mn>1</mn><mo>,</mo><mn>6875</mn><mo>⋅</mo><msup><mn>2</mn><mn>1</mn></msup><mo>=</mo><mo>−</mo><mn>3</mn><mo>,</mo><mn>375</mn></mrow><annotation encoding="application/x-tex">
- 1,6875 \cdot 2^{1}= -3,375
</annotation></semantics></math></p>
<div class="appli">
<div class="callout callout-style-simple callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-2-contents" aria-controls="callout-2" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Application
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-2" class="callout-2-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="appli">
<p>Calculer la valeur représentée par le codage suivant sur 16 bits</p>
<p></p><figure class="wikimage figure"><picture>
			  <source type="image/webp" srcset="/img/votUdcgW_h-257.webp 257w, /img/votUdcgW_h-300.webp 300w, /img/votUdcgW_h-257.svg 257w" sizes="100vw">
  <source type="image/svg+xml" srcset="/img/votUdcgW_h-257.svg 257w" sizes="100vw">
				<img class="img-fluid figure-img" src="https://www.lyceum.fr/2023-2024/img/votUdcgW_h-257.webp" width="257" height="75" alt="Les 16 bits sont répartis en 7 bits de mantisse, 8 bits d'exposant et 1 bit de signe." loading="lazy" decoding="async">
			</picture>
<figcaption id="caption">Les 16 bits sont répartis en 7 bits de mantisse, 8 bits d'exposant et 1 bit de signe.</figcaption><figcaption id="credit">©&nbsp;&nbsp;CC BY-SA 4.0&nbsp;<a id="image-description" href="//commons.wikimedia.org/wiki/File:Bfloat16_format.svg">via Wikimedia Commons</a></figcaption></figure><p></p>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="la-norme-ieee-754" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="la-norme-ieee-754"><span class="header-section-number">3</span> La norme IEEE 754</h2>
<blockquote class="blockquote">
<p>L’IEEE 754 est une norme pour la représentation des nombres à virgule flottante en binaire. Elle est la norme la plus employée actuellement pour le calcul des nombres à virgule flottante dans le domaine informatique. <a href="http://fr.wikipedia.org/wiki/IEEE_754">Source Wikipédia</a></p>
</blockquote>
<p>Cette norme définit notamment 2 formats pour représenter des nombres à virgule flottante:</p>
<div>

</div>
<div class="quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p><em>simple précision</em> (32 bits : 1 bit de signe, 8 bits d’exposant (-126 à 127), 23 bits de mantisse),</p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p><em>double précision</em> (64 bits : 1 bit de signe, 11 bits d’exposant (-1022 à 1023), 52 bits de mantisse).</p>
</div>
</div>
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p></p><figure class="wikimage figure"><picture>
			  <source type="image/webp" srcset="/img/ILcXFYLmIC-300.webp 300w, /img/ILcXFYLmIC-342.webp 342w" sizes="100vw">
  <source type="image/png" srcset="/img/ILcXFYLmIC-300.png 300w, /img/ILcXFYLmIC-342.png 342w" sizes="100vw">
				<img class="img-fluid figure-img" src="https://www.lyceum.fr/2023-2024/img/ILcXFYLmIC-300.webp" width="342" height="54" alt="Norme IEEE 754 de codage simple précision sur 32 bits." loading="lazy" decoding="async">
			</picture>
<figcaption id="caption">Norme IEEE 754 de codage simple précision sur 32 bits.</figcaption><figcaption id="credit">©&nbsp;&nbsp;CC BY-SA 3.0&nbsp;<a id="image-description" href="//commons.wikimedia.org/wiki/File:IEEE754_simple_precision.png">via Wikimedia Commons</a></figcaption></figure><p></p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p></p><figure class="wikimage figure"><picture>
			  <source type="image/webp" srcset="/img/cSNxhBV6c_-300.webp 300w, /img/cSNxhBV6c_-600.webp 600w, /img/cSNxhBV6c_-662.webp 662w" sizes="100vw">
  <source type="image/png" srcset="/img/cSNxhBV6c_-300.png 300w, /img/cSNxhBV6c_-600.png 600w, /img/cSNxhBV6c_-662.png 662w" sizes="100vw">
				<img class="img-fluid figure-img" src="https://www.lyceum.fr/2023-2024/img/cSNxhBV6c_-300.webp" width="662" height="54" alt="Norme IEEE 754 de codage simple précision sur 64 bits." loading="lazy" decoding="async">
			</picture>
<figcaption id="caption">Norme IEEE 754 de codage simple précision sur 64 bits.</figcaption><figcaption id="credit">©&nbsp;&nbsp;CC BY-SA 3.0&nbsp;<a id="image-description" href="//commons.wikimedia.org/wiki/File:IEEE754_double_precision.png">via Wikimedia Commons</a></figcaption></figure><p></p>
</div>
</div>
</div>
<div class="appli">
<div class="callout callout-style-simple callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-3-contents" aria-controls="callout-3" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Application: Réaliser la conversion en base 2 de la valeur approchée de pi: 3.141592653589793
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-3" class="callout-3-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="appli" data-titre="Réaliser la conversion en base 2 de la valeur approchée de pi: 3.141592653589793">
<ul>
<li>en simple précision: <a href="http://www.binaryconvert.com/result_float.html?decimal=051046049052049053057050054053051053056057055057051">ici</a></li>
<li>en double précision: <a href="http://www.binaryconvert.com/result_double.html?decimal=051046049052049053057050054053051053056057055057051">ici</a></li>
</ul>
<p>Comparer la précision obtenue dans les deux cas.</p>
</div>
</div>
</div>
</div>
</div>
<div class="plus">
<div class="callout callout-style-simple callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-4-contents" aria-controls="callout-4" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
En plus
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-4" class="callout-4-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="plus">
<p>La norme donne une signification particulière au plus petit et au plus grand exposant pour définir certaines valeurs spéciales.</p>
<ul>
<li>le zéro positif: <code>+0 = 0 00000000000 0000000000000000000000000000000000000000000000000000</code>,</li>
<li>le zéro négatif: <code>-0 = 1 00000000000 0000000000000000000000000000000000000000000000000000</code>,</li>
<li>l’infini positif: <code>+∞ = 0 11111111111 0000000000000000000000000000000000000000000000000000</code>,</li>
<li>l’infini négatif: <code>+∞ = 1 11111111111 0000000000000000000000000000000000000000000000000000</code>,</li>
<li>Not a Number …</li>
</ul>
<p><a href="https://en.wikipedia.org/wiki/Double-precision_floating-point_format#Double-precision_examples" class="cite-source">Article Wikipédia en anglais</a></p>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="tests-dégalité-sur-les-flottants" class="level2" data-number="4">
<h2 data-number="4" class="anchored" data-anchor-id="tests-dégalité-sur-les-flottants"><span class="header-section-number">4</span> Tests d’égalité sur les flottants</h2>
<p>Si on effectue le calcul <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.2</mn><mo>+</mo><mn>0.1</mn></mrow><annotation encoding="application/x-tex">0.2 +0.1</annotation></semantics></math> en Python, on obtient:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span></span>
<span id="cb1-2"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.30000000000000004</span></span></code></pre></div>
<p>Et contre toute attente, certains tests que l’on aurait cru positifs renvoient des valeurs négatives(ce que l’on appelle un <em><a href="https://fr.wikipedia.org/wiki/Faux_n%C3%A9gatif">faux négatif</a></em>):</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span></span>
<span id="cb2-2"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span></code></pre></div>
<p>Ainsi <strong>un calcul avec des nombres à virgule ne peut-être qu’approximatif</strong>. Cependant, plus on augmente la taille du registre du processeur et plus nous pourrons représenter de valeurs, et plus nos calculs gagneront en précision.</p>
<p>Comme nous sommes limités sur la précision des flottants, on transforme les tests d’égalités en tests d’inégalités à une précision donnée.</p>
<p>Ainsi:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span></span>
<span id="cb3-2"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span></code></pre></div>
<p>Par contre, en utilisant une précision du millionième:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> math <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pour utiliser la fonction valeur absolue  fabs()</span></span>
<span id="cb4-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;</span> precision <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1E-6</span></span>
<span id="cb4-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;</span> math.fabs((<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> precision</span>
<span id="cb4-4"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span></code></pre></div>
<p>D’ailleurs la bibliothèque <code>math</code> de Python inclut à cet effet la fonction <a href="https://docs.python.org/3/library/math.html#math.isclose"><code>math.isclose()</code></a>.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> math <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> isclose</span>
<span id="cb5-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;</span> isclose(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb5-3"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span></code></pre></div>


</section>

 ]]></description>
  <category>1NSI</category>
  <guid>https://www.lyceum.fr/2023-2024/1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/3-representation-des-nombres-a-virgule/</guid>
  <pubDate>Thu, 16 May 2024 13:21:00 GMT</pubDate>
</item>
<item>
  <title>Chapitre 4: Représentation des textes</title>
  <link>https://www.lyceum.fr/2023-2024/1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/4-representation-des-textes/</link>
  <description><![CDATA[ 




<div class="programme">
<div class="callout callout-style-simple callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Programme
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="programme">
<table class="table table-bordered table-hover">
<thead class="table-warning">
<tr class="header">
<th>Contenus</th>
<th>Capacités attendues</th>
<th>Commentaires</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><p>Représentation d’un texte en machine.</p>
<p>Exemples des encodages <code>ASCII</code>, <code>ISO-8859-1</code>, <code>Unicode</code></p></td>
<td><p>Identifier l’intérêt des différents systèmes d’encodage.</p>
<p>Convertir un fichier texte dans différents formats d’encodage.</p></td>
<td>Aucune connaissance précise des normes d’encodage n’est exigible</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<div>

</div>
<div class="intro quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p>Dans ce chapitre, nous allons voir comment coder en binaire du texte, et donc apprendre quelles sont les méthodes utilisées pour encoder des caractères en binaire. Nous allons voir que le choix du codage des caractères dépend fortement des langues, ainsi la langue française comporte de nombreuses lettres spécifiques: <kbd>é</kbd>, <kbd>è</kbd>, <kbd>ê</kbd>, <kbd>ç</kbd>, <kbd>à</kbd>…</p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><picture>
			  <source type="image/webp" srcset="/img/wDKlPflTog-300.webp 300w, /img/wDKlPflTog-600.webp 600w, /img/wDKlPflTog-1364.webp 1364w" sizes="100vw">
  <source type="image/png" srcset="/img/wDKlPflTog-300.png 300w, /img/wDKlPflTog-600.png 600w, /img/wDKlPflTog-1364.png 1364w" sizes="100vw">
				<img class="img-fluid figure-img" src="https://www.lyceum.fr/2023-2024/img/wDKlPflTog-300.webp" width="1364" height="812" alt="" loading="lazy" decoding="async">
			</picture>
</p>
<figcaption>Table des caractères ISO-8859-1 qu’on utilisait pour encoder les textes français</figcaption>
</figure>
</div>
</div>
</div>
</div>
<div>

</div>
<div class="quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p>Le premier codage à avoir été utilisé est le codage ASCII <em>(American Standard Code for Information Interchange)</em>, qui ne prévoit pas l’utilisation de lettres accentuées et qui peut vous amener parfois à lire des textes à la limite du compréhensible sur vos écrans.</p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><picture>
			  <source type="image/webp" srcset="/img/fNE7dZKuJi-300.webp 300w, /img/fNE7dZKuJi-600.webp 600w, /img/fNE7dZKuJi-915.webp 915w" sizes="100vw">
  <source type="image/png" srcset="/img/fNE7dZKuJi-300.png 300w, /img/fNE7dZKuJi-600.png 600w, /img/fNE7dZKuJi-915.png 915w" sizes="100vw">
				<img class="img-fluid figure-img" src="https://www.lyceum.fr/2023-2024/img/fNE7dZKuJi-300.webp" width="915" height="108" alt="" loading="lazy" decoding="async">
			</picture>
</p>
<figcaption>Image d’un texte présentant une erreur d’encodage de caractères</figcaption>
</figure>
</div>
</div>
</div>
</div>
<section id="le-codage-ascii" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="le-codage-ascii"><span class="header-section-number">1</span> Le codage ASCII</h2>
<blockquote class="blockquote">
<p>Le codage ASCII est une norme de codage de caractères en informatique ancienne et connue pour son influence incontournable sur les codages de caractères qui lui ont succédé. Elle était la plus largement compatible pour ce qui est des caractères latins non accentués. <strong>ASCII contient les caractères nécessaires pour écrire en anglais.</strong></p>
</blockquote>
<blockquote class="blockquote">
<p>L’ASCII définit seulement <strong>128 caractères</strong> numérotés de 0 à 127 et codés en binaire de 0000000 à 1111111. Sept bits suffisent donc pour représenter un caractère codé en ASCII. Toutefois, les ordinateurs travaillant presque tous sur un multiple de huit bits (multiple d’un octet) depuis les années 1970, chaque caractère d’un texte en ASCII est souvent stocké dans un octet dont le 8e bit est 0. &nbsp; <a href="https://fr.wikipedia.org/wiki/American_Standard_Code_for_Information_Interchange" class="cite-source">Article ASCII sur Wikipédia</a></p>
</blockquote>
<p>Voici la table ASCII:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><picture>
			  <source type="image/webp" srcset="/img/UrP4z7k20Q-300.webp 300w, /img/UrP4z7k20Q-600.webp 600w, /img/UrP4z7k20Q-5490.webp 5490w" sizes="100vw">
  <source type="image/png" srcset="/img/UrP4z7k20Q-300.png 300w, /img/UrP4z7k20Q-600.png 600w, /img/UrP4z7k20Q-5490.png 5490w" sizes="100vw">
				<img class="img-fluid figure-img" src="https://www.lyceum.fr/2023-2024/img/UrP4z7k20Q-300.webp" width="5490" height="1656" alt="" loading="lazy" decoding="async">
			</picture>
</p>
<figcaption>Table ASCII</figcaption>
</figure>
</div>
<p>Certains des caractères présents ne peuvent pas être affichés(repérés par un fond bleu), ce sont des caractères de contrôle. Vous pouvez trouver leur signification sur cette <a href="http://isn.fil.univ-lille1.fr/activite3/doc/ascii.txt">page</a>.</p>
<p>Pour lire le tableau, on associe au caractère le code binaire suivant: <code>n°deligne_n°decolonne</code>. Par exemple, le caractère <kbd>a</kbd> est situé dans la case correspondant à la 7ᵉ ligne, 2ᵉ colonne. Sa représentation binaire est:<code>110_0001</code> soit sous la forme d’un octet: <code>01100001</code>. Ce qui correspond au caractère 97 en décimal.</p>
<p>Pour faciliter la lecture des codes ASCII par un humain, il est plus commode de coder les numéros de ligne et de colonne en hexadécimal, et la lettre ‘a’ aura alors pour code <code>61</code> en hexadécimal.</p>
</section>
<section id="lencodage-iso" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="lencodage-iso"><span class="header-section-number">2</span> L’encodage ISO</h2>
<blockquote class="blockquote">
<p>La nécessité de représenter des textes comportant des caractères non présents dans la table ASCII tels ceux de l’alphabet latin utilisés en français comme le ‘à’, le ‘é’ ou le ‘ç’ impose l’utilisation d’un autre codage que l’ASCII.</p>
</blockquote>
<div class="prop">
<p>Les codages ISO sont des extensions du codage ASCII:</p>
<ul>
<li>Le codage des 128 caractères présents dans la table ASCII est conservé;</li>
<li>les 128 caractères supplémentaires sont <em>régionalisés</em> en fonction des divers alphabets du monde.</li>
</ul>
</div>
<blockquote class="blockquote">
<p>L’ISO, organisation internationale de normalisation, propose de son côté plusieurs variantes de codages adaptées aux différentes langues. La plus utilisée concerne les langues européennes occidentales. Il s’agit de l’ISO-8859-1, aussi nommé <code>ISO-Latin1</code>. <a href="http://isn.fil.univ-lille1.fr/activite3/codcar.html" class="cite-source">Université de Lille</a></p>
</blockquote>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><picture>
			  <source type="image/webp" srcset="/img/wDKlPflTog-300.webp 300w, /img/wDKlPflTog-600.webp 600w, /img/wDKlPflTog-1364.webp 1364w" sizes="100vw">
  <source type="image/png" srcset="/img/wDKlPflTog-300.png 300w, /img/wDKlPflTog-600.png 600w, /img/wDKlPflTog-1364.png 1364w" sizes="100vw">
				<img class="img-fluid figure-img" src="https://www.lyceum.fr/2023-2024/img/wDKlPflTog-300.webp" width="1364" height="812" alt="" loading="lazy" decoding="async">
			</picture>
</p>
<figcaption>Table des caractères ISO-8859-1</figcaption>
</figure>
</div>
<p>On peut constater que cette table ne prend pas en charge le caractère <kbd>€</kbd>, ainsi une nouvelle norme mieux adaptée au français a été introduite l’<code>ISO 8859-15</code>.</p>
<p>Certains caractères ont été ajoutés dont <kbd>€</kbd>, <kbd>œ</kbd>, <kbd>Œ</kbd>…</p>
<p>Mais il existe d’autres variantes adaptées à d’autres langues:</p>
<ul>
<li><code>ISO-8859-2</code> pour les pays d’Europe de l’Est,</li>
<li><code>ISO-8859-3</code> pour les pays du sud est de l’Europe…</li>
</ul>
<p>Du fait de l’internationalisation des pratiques en informatique, on a mis au point un standard international permettant d’encoder les caractères de toutes les langues: le standard <strong><code>Unicode</code></strong>.</p>
</section>
<section id="lencodage-unicode-utf-8" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="lencodage-unicode-utf-8"><span class="header-section-number">3</span> L’encodage Unicode UTF-8</h2>
<p>L’encodage UTF-8 est un encodage en élaboration qui permet d’encoder tous les caractères de toutes les langues, il est actuellement en train de s’imposer face aux antres encodages en raison de son universalité.</p>
<p></p><figure class="wikimage figure"><picture>
			  <source type="image/webp" srcset="/img/jX7yYJsvQn-300.webp 300w, /img/jX7yYJsvQn-600.webp 600w, /img/jX7yYJsvQn-734.webp 734w" sizes="100vw">
  <source type="image/png" srcset="/img/jX7yYJsvQn-300.png 300w, /img/jX7yYJsvQn-600.png 600w, /img/jX7yYJsvQn-734.png 734w" sizes="100vw">
				<img class="img-fluid figure-img" src="https://www.lyceum.fr/2023-2024/img/jX7yYJsvQn-300.webp" width="734" height="492" alt="Après de nombreuses propositions pour remplacer le codage ASCII, il semble que l'encodage UTF-8 semble prendre le dessus." loading="lazy" decoding="async">
			</picture>
<figcaption id="caption">Après de nombreuses propositions pour remplacer le codage ASCII, il semble que l'encodage UTF-8 semble prendre le dessus.</figcaption><figcaption id="credit">©&nbsp;&nbsp;CC BY-SA 4.0&nbsp;<a id="image-description" href="//commons.wikimedia.org/wiki/File:UnicodeGrow2b.png">via Wikimedia Commons</a></figcaption></figure><p></p>
<div class="prop">
<p>La norme UTF-8 utilise un codage de longueurs variable sur un à quatre octets. Les caractères à un octet sont équivalents avec le code ASCII assurant ainsi la <strong>rétro-compatibilité avec le standard ASCII</strong>.</p>
</div>
<div class="plus">
<div class="callout callout-style-simple callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-2-contents" aria-controls="callout-2" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
En plus: Statistiques actualisées
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-2" class="callout-2-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="plus" data-titre="Statistiques actualisées">
<p>Au 21 septembre 2019, l’UTF-8 est utilisé par 94% des sites. <a href="https://w3techs.com/technologies/overview/character_encoding/all">Source</a></p>
</div>
</div>
</div>
</div>
</div>
<blockquote class="blockquote">
<p>À l’évidence, 256 caractères ne suffisant pas pour représenter les lettres de tous les alphabets utilisés (pensons au russe, à l’hébreu, etc.), un nouveau standard a été introduit : Unicode. La table Unicode comporte la définition de près de cent cinquante mille caractères. &nbsp; Le codage de cette table est multiple. Le codage le plus couramment utilisé se nomme UTF-8. Son principe est le suivant : une première série de caractères sont codés sur un octet. D’autres caractères sont codés sur deux octets, le premier octet débute par ‘110’ pour l’indiquer, l’octet suivant débute par ‘10’. De même des codages sur 3 ou 4 octets sont utilisés pour d’autres caractères. (Cette rapide introduction à UTF-8 est volontairement simplifiée.) &nbsp; Les 128 premiers caractères de la table UTF-8 sont compatibles avec le codage ASCII. Ainsi le codage UTF-8 d’un texte ne comportant que des caractères présents dans la table ASCII sera le même que le codage ASCII de ce texte. &nbsp; Ce ne sera pas vrai pour un texte ISO-Latin-1. Il importe donc, quand on veut décoder un texte, de savoir quel est le codage utilisé sous peine de décoder improprement les caractères. <a href="http://isn.fil.univ-lille1.fr/activite3/codcar.html" class="cite-source">Université de Lille</a></p>
</blockquote>
<p>La table complète des caractères Unicode peut être consultée sur l’article <a href="https://en.wikipedia.org/wiki/List_of_Unicode_characters">Wikipédia</a></p>
<p>Par exemple si on cherche dans cette table la lettre <kbd>é</kbd>, on trouve le code:<strong><code>U+00E9</code></strong> appelé point code, en binaire cela correspond au nombre décimal 233, et au nombre binaire <code>1110 1001</code>. Ce nombre binaire sera représenté en UTF-8 sur deux octets sous la forme: <code>110x_xxxx 10xx_xxxx</code>. Les chiffres binaires du point de code sont rangés de droite à gauche aux positions ‘x’ de ce schéma.</p>
<p>On obtient donc <code>1100_0011 1010_1001</code> pour le caractère <kbd>é</kbd>.</p>
<p>Ce qui représente en hexadécimal:<code>C3 A9</code>, il occupe donc deux octets.</p>
</section>
<section id="lencodage-des-caractères-en-python" class="level2" data-number="4">
<h2 data-number="4" class="anchored" data-anchor-id="lencodage-des-caractères-en-python"><span class="header-section-number">4</span> L’encodage des caractères en python</h2>
<p>En <strong><code>python 3</code></strong>, tous les fichiers doivent être codés en UTF-8, et les chaînes de caractères <code>string</code> sont encodées en UTF-8, contrairement aux <code>bytes</code> qui ne doivent contenir que des caractères ASCII.</p>
</section>
<section id="lencodage-des-caractères-en-html" class="level2" data-number="5">
<h2 data-number="5" class="anchored" data-anchor-id="lencodage-des-caractères-en-html"><span class="header-section-number">5</span> L’encodage des caractères en <code>html</code></h2>
<p>Pour obtenir un affichage correct des caractères spéciaux en <code>html</code>, il faut déclarer l’encodage utf-8 dans le fichier d’en-tête(<code>&lt;head&gt;</code>) de la page <code>html</code> en utilisant la balise <code>&lt;meta&gt;</code>.</p>
<p>Voici la structure type d’un fichier <code>html5</code>.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource html number-lines code-with-copy"><code class="sourceCode html"><span id="cb1-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;!doctype</span> html<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">html</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-3"></span>
<span id="cb1-4">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">head</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-5">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">meta</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> charset</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"utf-8"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-6">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">title</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>Titre du document<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">title</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-7">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">head</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-8"></span>
<span id="cb1-9">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">body</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-10">        Contenu du document, avec d'éventuels accents!!!</span>
<span id="cb1-11">        et caractères étranges , de toutes les langues...</span>
<span id="cb1-12">        ...ظɶ</span>
<span id="cb1-13">        ...ऴ,ඛ</span>
<span id="cb1-14">        ...ტ,ላ,Ꮹ,ᜨ...</span>
<span id="cb1-15">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">body</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-16"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">html</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
<p>Il est également possible d’afficher des caractères par leur code <code>html</code>, ces codes sont également présents sur l’article <a href="https://en.wikipedia.org/wiki/List_of_Unicode_characters">Wikipédia</a>.</p>
<p>Par exemple le caractère <kbd>À</kbd> <code>U+00C0</code> peut être codé en <code>html</code> par <code>&amp;#192;</code>, ou encore en notation hexadécimale: <code>&amp;#xc0;</code></p>


</section>

 ]]></description>
  <category>1NSI</category>
  <guid>https://www.lyceum.fr/2023-2024/1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/4-representation-des-textes/</guid>
  <pubDate>Thu, 16 May 2024 13:21:00 GMT</pubDate>
</item>
<item>
  <title>Chapitre 5: Les booléens</title>
  <link>https://www.lyceum.fr/2023-2024/1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/5-les-booleens/</link>
  <description><![CDATA[ 




<div class="programme">
<div class="callout callout-style-simple callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Programme
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="programme">
<table class="table table-bordered table-hover">
<thead class="table-warning">
<tr class="header">
<th>Contenus</th>
<th>Capacités attendues</th>
<th>Commentaires</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><p>Valeurs booléennes : <code>0</code>, <code>1</code>.</p>
<p>Opérateurs booléens : <code>and</code>, <code>or</code>, <code>not</code>.</p>
<p>Expressions booléennes</p></td>
<td>Dresser la table d’une d’une expression booléenne.</td>
<td><p>Le ou exclusif (<code>xor</code>) est évoqué.</p>
<p>Quelques applications directes comme l’addition binaire sont présentées.</p>
<p>L’attention des élèves est attirée sur le caractère séquentiel de certains opérateurs booléens.</p></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<!-- Uniformisation des notations & | ! à la sympy pour se rapprocher du C ou js et car on est en info

variables notées comme des variables propositionnelles: P Q R(Wikipedia) au lieu de x,y,z ou a,b,c,d...
https://fr.wikipedia.org/wiki/Variable_propositionnelle

On peut envisager un TP TD simplifications par python vérifications

 -->
<div>

</div>
<div class="intro quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p>Au XIXe siècle, le britannique <em>Georges Boole</em> crée une algèbre pour traduire les raisonnements logiques en opérations. Plus tard, au début de l’informatique dans les années 1930, <em>Claude Shannon</em> montre dans sa <a href="https://en.wikipedia.org/wiki/A_Symbolic_Analysis_of_Relay_ET_Switching_Circuits">thèse</a> qu’il devrait également être possible d’utiliser des arrangements de relais électriques pour résoudre des problèmes d’algèbre booléenne. La route était ouverte à l’apparition des premiers ordinateurs électriques, et bientôt électroniques.</p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p></p><figure class="wikimage figure"><picture>
			  <source type="image/webp" srcset="/img/nESwF_lGu7-300.webp 300w, /img/nESwF_lGu7-600.webp 600w, /img/nESwF_lGu7-1834.webp 1834w" sizes="100vw">
  <source type="image/jpeg" srcset="/img/nESwF_lGu7-300.jpeg 300w, /img/nESwF_lGu7-600.jpeg 600w, /img/nESwF_lGu7-1834.jpeg 1834w" sizes="100vw">
				<img class="img-fluid figure-img" src="https://www.lyceum.fr/2023-2024/img/nESwF_lGu7-300.webp" width="1834" height="2077" alt="Le mathématicien britannique Georges Boole (1815-1864) est le fondateur de la logique symbolique moderne." loading="lazy" decoding="async">
			</picture>
<figcaption id="caption">Le mathématicien britannique Georges Boole (1815-1864) est le fondateur de la logique symbolique moderne.</figcaption><figcaption id="credit">&nbsp;Public domain&nbsp;<a id="image-description" href="//commons.wikimedia.org/wiki/File:PSM_V17_D740_George_Boole.jpg">via Wikimedia Commons</a></figcaption></figure><p></p>
</div>
</div>
</div>
<p>Dans ce cours, nous allons nous intéresser à un type simple, les booléens qui ne possèdent que deux valeurs et qui sont donc codés que sur un seul bit:</p>
<ul>
<li><em>FAUX</em>: dont la syntaxe peut varier suivant les langages de programmation; <code>0</code> <code>False</code>, <code>false</code> …</li>
<li><em>VRAI</em>: noté <code>0</code>, <code>True</code>, <code>true</code> …</li>
</ul>
<p>Ces types sont extrêmement utilisés en informatique notamment pour l’exécution <strong>conditionnelle</strong> de code en fonction des conditions. La fameuse instruction <code>if ... else</code>.</p>
<p>Comme il n’existe que deux valeurs booléennes, les opérations ne sont pas les mêmes qu’avec les nombres.</p>
<section id="introduction-à-lalgèbre-de-boole" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="introduction-à-lalgèbre-de-boole"><span class="header-section-number">1</span> Introduction à l’algèbre de Boole</h2>
<p>Dans le monde noir et blanc des idéaux, il y a une vérité absolue. C’est-à-dire que tout est vrai ou faux. Dans ce contexte philosophique, considérons les exemples suivants:</p>
<blockquote class="blockquote">
<p>“Un plus un égal deux.” <strong>Vrai ou faux?</strong></p>
</blockquote>
<p>C’est (sans doute) vrai!</p>
<blockquote class="blockquote">
<p>“1 + 1 = 2” ET “2 + 2 = 4” <strong>Vrai ou faux? </strong></p>
</blockquote>
<p>C’est aussi vrai.</p>
<p>Mais qu’en est-il:</p>
<blockquote class="blockquote">
<p>“1 + 1 = 3” OU “Sydney est en Australie” <strong>Vrai ou faux?</strong></p>
</blockquote>
<p>C’est vrai! Bien que 1 + 1 = 3 ne soit pas vrai, le <code>OU</code> dans l’instruction a indiqué que, si l’une ou l’autre partie de l’instruction est vraie, l’instruction entière l’est également.</p>
<p>Considérons maintenant un exemple plus déconcertant</p>
<blockquote class="blockquote">
<p>“2 + 2 = 4” OU “1 + 1 = 3” ET “1 - 3 = -1” <strong>Vrai ou faux?</strong></p>
</blockquote>
<p>La vérité ou la fausseté des déclarations dépend de l’ordre dans lequel vous évaluez la déclaration. Si vous évaluez d’abord “2 + 2 = 4 <code>OU</code> 1 + 1 = 3”, la déclaration est fausse et sinon vraie. Comme en algèbre ordinaire, il est nécessaire de définir certaines règles pour régir l’ordre d’évaluation, afin d’éviter toute ambiguïté.</p>
<p>Avant de décider dans quel ordre évaluer les énoncés, nous faisons ce que la plupart des mathématiciens aiment faire, remplacer les phrases par des symboles ces symboles représentent ce que l’on appelle des <strong>variables propositionnelles</strong>:</p>
<ul>
<li>Soit <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mi>P</mi><annotation encoding="application/x-tex">P</annotation></semantics></math> la vérité ou la fausseté de l’énoncé 2 + 2 = 4.</li>
<li>Soit <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mi>Q</mi><annotation encoding="application/x-tex">Q</annotation></semantics></math> la vérité ou la fausseté de l’énoncé 1 + 1 = 3.</li>
<li>Soit <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mi>R</mi><annotation encoding="application/x-tex">R</annotation></semantics></math> la vérité ou la fausseté de l’énoncé 1 - 3 = -1.</li>
</ul>
<p>Ensuite, l’exemple ci-dessus peut être récrit de manière plus compacte:</p>
<p><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mspace width="0.222em"></mspace><mtext mathvariant="normal">ou</mtext><mspace width="0.222em"></mspace><mi>Q</mi><mspace width="0.222em"></mspace><mtext mathvariant="normal">et</mtext><mspace width="0.222em"></mspace><mi>R</mi></mrow><annotation encoding="application/x-tex">
P\ \textrm{ou}\ Q\ \textrm{et}\ R
</annotation></semantics></math></p>
<p>Pour aller encore plus loin, les mathématiciens remplacent également les opérations par des signes <strong>OU par <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mo>∨</mo><annotation encoding="application/x-tex">\vee</annotation></semantics></math></strong> et <strong>ET par <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mo>∧</mo><annotation encoding="application/x-tex">\wedge</annotation></semantics></math></strong>, l’énoncé devient:</p>
<p><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo>∨</mo><mi>Q</mi><mo>∧</mo><mi>R</mi></mrow><annotation encoding="application/x-tex">
P \vee Q \wedge R
</annotation></semantics></math></p>
<p>Il faut également établir l’ordre de priorité. Nous évaluons <code>ET</code> en premier, puis <code>OU</code> avec le P.</p>
<p>La déclaration <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo>∨</mo><mi>Q</mi><mo>∧</mo><mi>R</mi></mrow><annotation encoding="application/x-tex">P \vee Q \wedge R</annotation></semantics></math> est vraie on peut écrire:</p>
<p><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo>∨</mo><mi>Q</mi><mo>∧</mo><mi>R</mi><mo>=</mo><mtext mathvariant="normal">VRAI</mtext></mrow><annotation encoding="application/x-tex">
 P \vee Q \wedge R = \textrm{VRAI}
 </annotation></semantics></math></p>
</section>
<section id="opérations-fondamentales-et-notations" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="opérations-fondamentales-et-notations"><span class="header-section-number">2</span> Opérations fondamentales et notations</h2>
<p>Dans ce cours on notera les valeurs <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="normal">VRAI</mtext><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\textrm{VRAI} = 1</annotation></semantics></math> et <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="normal">FAUX</mtext><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\textrm{FAUX} = 0</annotation></semantics></math>.</p>
<p>L’algèbre booléenne est construite à partir de <a href="https://fr.wikipedia.org/wiki/Alg%C3%A8bre_de_Boole_(logique)#Fonctions_logiques_fondamentales">3 opérations fondamentales</a>, les notations dépendent du domaine d’étude (logique, électronique, algèbre…), on utilisera une notation proche de <em>langages de programmation</em> usuels tels que le C ou le javascript.</p>
<table class="table table-bordered table-hover">
<thead class="table-warning">
<tr class="header">
<th>Opération</th>
<th>Écriture utilisée</th>
<th>Écritures rencontrées</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>ET</td>
<td><code>&amp;</code></td>
<td><math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mo>×</mo><annotation encoding="application/x-tex">\times</annotation></semantics></math> ou <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mo>⋅</mo><annotation encoding="application/x-tex">\cdot</annotation></semantics></math> ou <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mo>∧</mo><annotation encoding="application/x-tex">\wedge</annotation></semantics></math></td>
</tr>
<tr class="even">
<td>OU</td>
<td><code>|</code></td>
<td><math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mo>+</mo><annotation encoding="application/x-tex">+</annotation></semantics></math> ou <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mo>∨</mo><annotation encoding="application/x-tex">\vee</annotation></semantics></math></td>
</tr>
<tr class="odd">
<td>NON</td>
<td><code>!</code></td>
<td>P’, ~P, <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>¬</mo><mi>P</mi></mrow><annotation encoding="application/x-tex">\neg P</annotation></semantics></math>, <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mover><mi>P</mi><mo accent="true">¯</mo></mover><annotation encoding="application/x-tex">\overline{P}</annotation></semantics></math></td>
</tr>
</tbody>
</table>
<div class="prop">
<p>Le ET logique (<code>&amp;</code>) est <strong>prioritaire</strong> sur le OU (<code>|</code>).</p>
</div>
<p>On notera dans ce cours les <strong>variables booléennes</strong> avec des lettres majuscules: <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mi>P</mi><annotation encoding="application/x-tex">\displaystyle
P</annotation></semantics></math>, <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mi>Q</mi><annotation encoding="application/x-tex">\displaystyle Q</annotation></semantics></math>, <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mi>R</mi><annotation encoding="application/x-tex">\displaystyle R</annotation></semantics></math>… On parle de <a href="https://fr.wikipedia.org/wiki/Variable_propositionnelle">variable propositionnelle</a>.</p>
<p>Dans les langages informatiques, les syntaxes peuvent être encore différentes!</p>
<table class="table table-bordered table-hover">
<thead class="table-warning">
<tr class="header">
<th>Opération</th>
<th>python</th>
<th>javascript</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>Valeurs booléennes</strong></td>
<td></td>
<td></td>
</tr>
<tr class="even">
<td>VRAI = 1</td>
<td><code>True</code></td>
<td><code>true</code></td>
</tr>
<tr class="odd">
<td>FAUX = 0</td>
<td><code>False</code></td>
<td><code>false</code></td>
</tr>
<tr class="even">
<td><strong>Opérateurs booléens</strong></td>
<td></td>
<td></td>
</tr>
<tr class="odd">
<td>NON (!)</td>
<td><code>not a</code></td>
<td><code>!a</code></td>
</tr>
<tr class="even">
<td>ET (&amp;)</td>
<td><code>a and b</code></td>
<td><code>a &amp;&amp; b</code></td>
</tr>
<tr class="odd">
<td>OU (|)</td>
<td><code>a or b</code></td>
<td><code>a || b</code></td>
</tr>
</tbody>
</table>
</section>
<section id="tables-de-vérités" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="tables-de-vérités"><span class="header-section-number">3</span> Tables de vérités</h2>
<dl>
<dt>
Tables de vérité
</dt>
<dd>
<div>
<p>Une table de vérité donne tous les résultats possibles d’une opération booléenne en fonction de la ou les entrées.</p>
</div>
</dd>
</dl>
<p>Nous allons dans un premier temps nous intéresser aux tables de vérité des trois fonctions logiques fondamentales:</p>
<section id="fonction-non-logique" class="level3" data-number="3.1">
<h3 data-number="3.1" class="anchored" data-anchor-id="fonction-non-logique"><span class="header-section-number">3.1</span> Fonction NON LOGIQUE: <code>!</code></h3>
<p>La fonction logique <code>NON</code> n’a qu’un argument.</p>
<p>Elle renvoie l’inverse de son argument <code>FAUX</code> si l’argument est <code>VRAI</code>, et vice-versa.</p>
<table class="table table-bordered table-hover">
<thead class="table-warning">
<tr class="header">
<th>P</th>
<th>!P</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><p>0</p>
<p>0</p></td>
<td><p>1</p>
<p>0</p></td>
</tr>
</tbody>
</table>
</section>
<section id="fonction-et-logique" class="level3" data-number="3.2">
<h3 data-number="3.2" class="anchored" data-anchor-id="fonction-et-logique"><span class="header-section-number">3.2</span> Fonction ET LOGIQUE: <code>&amp;</code></h3>
<p>La fonction <code>ET LOGIQUE</code> a deux arguments, elle renvoie <code>VRAI</code> si les deux arguments ont pour valeur <code>VRAI</code>.</p>
<table class="table table-bordered table-hover">
<thead class="table-warning">
<tr class="header">
<th>P</th>
<th>Q</th>
<th>P &amp; Q</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><p>0</p>
<p>0</p>
<p>1</p>
<p>1</p></td>
<td><p>0</p>
<p>1</p>
<p>0</p>
<p>1</p></td>
<td><p>0</p>
<p>0</p>
<p>0</p>
<p>1</p></td>
</tr>
</tbody>
</table>
<p>On voit bien grâce à cette table pourquoi on utilise parfois le signe <code>x</code> pour désigner la fonction ET LOGIQUE.</p>
<ul>
<li><math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>×</mo><mn>0</mn><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">0 \times 0 = 0</annotation></semantics></math></li>
<li><math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>×</mo><mn>1</mn><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">0 \times 1 = 0</annotation></semantics></math></li>
<li><math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>×</mo><mn>0</mn><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">1 \times 0 = 0</annotation></semantics></math></li>
<li><math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>×</mo><mn>1</mn><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">1 \times 1 = 1</annotation></semantics></math></li>
</ul>
</section>
<section id="fonction-ou-logique" class="level3" data-number="3.3">
<h3 data-number="3.3" class="anchored" data-anchor-id="fonction-ou-logique"><span class="header-section-number">3.3</span> Fonction OU LOGIQUE: <code>|</code></h3>
<p>La fonction <code>OU LOGIQUE</code> a deux arguments, elle renvoie <code>VRAI</code> si au moins un des deux arguments a pour valeur <code>VRAI</code>.</p>
<table class="table table-bordered table-hover">
<thead class="table-warning">
<tr class="header">
<th>P</th>
<th>Q</th>
<th>P | Q</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><p>0</p>
<p>0</p>
<p>1</p>
<p>1</p></td>
<td><p>0</p>
<p>1</p>
<p>0</p>
<p>1</p></td>
<td><p>0</p>
<p>1</p>
<p>1</p>
<p>1</p></td>
</tr>
</tbody>
</table>
<p>On voit grâce à cette table que le signe <code>+</code> utilisé pour désigner la fonction OU LOGIQUE fonctionne à peu près comme le <code>+</code> de notre algèbre traditionnelle.</p>
<ul>
<li><math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>+</mo><mn>0</mn><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">0 + 0 = 0</annotation></semantics></math></li>
<li><math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>+</mo><mn>1</mn><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">0 + 1 = 1</annotation></semantics></math></li>
<li><math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>+</mo><mn>0</mn><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">1 + 0 = 1</annotation></semantics></math></li>
<li><math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>+</mo><mn>1</mn><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">1 + 1 = 1</annotation></semantics></math></li>
</ul>
<div class="plus">
<div class="callout callout-style-simple callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-2-contents" aria-controls="callout-2" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
En plus: XOR, NAND et NOR
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-2" class="callout-2-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="plus" data-titre="XOR, NAND et NOR">
<p>Bien que toutes les opérations booléennes puissent être écrites avec les trois opérations fondamentales ET, OU et NON, on utilise fréquemment d’autres opérations:</p>
<ul>
<li><strong>XOR</strong>: OU EXCLUSIF cette opération renvoie vrai uniquement si P ou Q sont vraies, mais pas les deux <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mi>&amp;</mi><mi>!</mi><mi>Q</mi><mo stretchy="false" form="prefix">|</mo><mi>!</mi><mi>P</mi><mi>&amp;</mi><mi>Q</mi></mrow><annotation encoding="application/x-tex">P \&amp; !Q | !P \&amp; Q</annotation></semantics></math>.</li>
<li><strong>NAND</strong>: NON ET cette opération renvoie faux uniquement si P et Q sont vraies <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>!</mi><mrow><mo stretchy="true" form="prefix">(</mo><mi>P</mi><mi>&amp;</mi><mi>Q</mi><mo stretchy="true" form="postfix">)</mo></mrow></mrow><annotation encoding="application/x-tex">!(P \&amp; Q)</annotation></semantics></math>.</li>
<li><strong>NOR</strong>: NON OU cette opération renvoie vrai uniquement si P et Q sont fausses <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>!</mi><mrow><mo stretchy="true" form="prefix">(</mo><mi>P</mi><mo stretchy="false" form="prefix">|</mo><mi>Q</mi><mo stretchy="true" form="postfix">)</mo></mrow></mrow><annotation encoding="application/x-tex">!(P | Q)</annotation></semantics></math>.</li>
</ul>
<p>Vous pouvez construire les tables de vérité de ces fonctions en application.</p>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="tables-de-vérité-composées" class="level3" data-number="3.4">
<h3 data-number="3.4" class="anchored" data-anchor-id="tables-de-vérité-composées"><span class="header-section-number">3.4</span> Tables de vérité composées</h3>
<p>Les trois tables de vérité présentées ci-dessus sont les plus élémentaires et servent de jeux de construction pour les plus complexes.</p>
<p>Supposons que nous voulions construire une table de vérité pour P &amp; Q | R (c-à-d P ET Q OU R).</p>
<p>Remarquez que cette table implique trois variables (P, Q et R), nous nous attendons donc à ce qu’elle soit plus grande que les précédentes.</p>
<p>Pour construire une table de vérité, nous écrivons d’abord toutes les combinaisons possibles des trois variables:</p>
<pre><code>P   Q   R
---------
0   0   0
0   0   1
0   1   0
0   1   1
1   0   0
1   0   1
1   1   0
1   1   1</code></pre>
<p>Nous complétons ensuite le tableau à la main en calculant la valeur que chaque combinaison produira en utilisant l’expression P&amp;Q | R.</p>
<pre><code>P   Q   R  | P &amp; Q | R
-----------|----------
0   0   0  |     0
0   0   1  |     1
0   1   0  |     0
0   1   1  |     1
1   0   0  |     0
1   0   1  |     1
1   1   0  |     1
1   1   1  |     1</code></pre>
<p>La procédure que nous suivons pour produire des tables de vérité est maintenant claire. Voici quelques exemples supplémentaires de tables de vérité.</p>
<div class="appli">
<div class="callout callout-style-simple callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-3-contents" aria-controls="callout-3" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Application: Construire des tables de vérité
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-3" class="callout-3-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="appli" data-titre="Construire des tables de vérité">
<p>Construire les tables de vérité suivantes:</p>
<ul>
<li>P | Q | R</li>
<li>!(P | Q &amp; R)</li>
<li>(P | Q &amp; !R) &amp; S</li>
</ul>
<p><strong>CORRECTION</strong></p>
<ul>
<li><p>Table de vérité de <strong>P | Q | R</strong></p>
<table class="table table-bordered table-hover">
<tbody>
<tr class="odd">
<td>P</td>
<td>Q</td>
<td>R</td>
<td>P | Q | R</td>
</tr>
<tr class="even">
<td>0</td>
<td>0</td>
<td>0</td>
<td>0</td>
</tr>
<tr class="odd">
<td>0</td>
<td>0</td>
<td>1</td>
<td>1</td>
</tr>
<tr class="even">
<td>0</td>
<td>1</td>
<td>0</td>
<td>1</td>
</tr>
<tr class="odd">
<td>0</td>
<td>1</td>
<td>1</td>
<td>1</td>
</tr>
<tr class="even">
<td>1</td>
<td>0</td>
<td>0</td>
<td>1</td>
</tr>
<tr class="odd">
<td>1</td>
<td>0</td>
<td>1</td>
<td>1</td>
</tr>
<tr class="even">
<td>1</td>
<td>1</td>
<td>0</td>
<td>1</td>
</tr>
<tr class="odd">
<td>1</td>
<td>1</td>
<td>1</td>
<td>1</td>
</tr>
</tbody>
</table></li>
<li><p>Table de vérité de <strong>!(P | Q &amp; R)</strong></p>
<table class="table table-bordered table-hover">
<tbody>
<tr class="odd">
<td>P</td>
<td>Q</td>
<td>R</td>
<td>Q&amp;R</td>
<td>P | QR</td>
<td>!(P | Q &amp; R)</td>
</tr>
<tr class="even">
<td>0</td>
<td>0</td>
<td>0</td>
<td></td>
<td></td>
<td>1</td>
</tr>
<tr class="odd">
<td>0</td>
<td>0</td>
<td>1</td>
<td></td>
<td></td>
<td>1</td>
</tr>
<tr class="even">
<td>0</td>
<td>1</td>
<td>0</td>
<td></td>
<td></td>
<td>1</td>
</tr>
<tr class="odd">
<td>0</td>
<td>1</td>
<td>1</td>
<td>1</td>
<td>1</td>
<td>0</td>
</tr>
<tr class="even">
<td>1</td>
<td>0</td>
<td>0</td>
<td></td>
<td>1</td>
<td>0</td>
</tr>
<tr class="odd">
<td>1</td>
<td>0</td>
<td>1</td>
<td></td>
<td>1</td>
<td>0</td>
</tr>
<tr class="even">
<td>1</td>
<td>1</td>
<td>0</td>
<td></td>
<td>1</td>
<td>0</td>
</tr>
<tr class="odd">
<td>1</td>
<td>1</td>
<td>1</td>
<td>1</td>
<td>1</td>
<td>0</td>
</tr>
</tbody>
</table></li>
<li><p>Table de vérité de <strong>(P | Q &amp; !R) &amp; S</strong></p>
<table class="table table-bordered table-hover">
<tbody>
<tr class="odd">
<td>P</td>
<td>Q</td>
<td>R</td>
<td>S</td>
<td>Q &amp; !R</td>
<td>P | Q &amp; !R</td>
<td>(P | Q &amp; !R) &amp; S</td>
</tr>
<tr class="even">
<td>0</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr class="odd">
<td>0</td>
<td>0</td>
<td>0</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr class="even">
<td>0</td>
<td>0</td>
<td>1</td>
<td>0</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr class="odd">
<td>0</td>
<td>0</td>
<td>1</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr class="even">
<td>0</td>
<td>1</td>
<td>0</td>
<td>0</td>
<td>1</td>
<td>1</td>
<td></td>
</tr>
<tr class="odd">
<td>0</td>
<td>1</td>
<td>0</td>
<td>1</td>
<td>1</td>
<td>1</td>
<td>1</td>
</tr>
<tr class="even">
<td>0</td>
<td>1</td>
<td>1</td>
<td>0</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr class="odd">
<td>0</td>
<td>1</td>
<td>1</td>
<td>1</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr class="even">
<td>1</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td></td>
<td>1</td>
<td></td>
</tr>
<tr class="odd">
<td>1</td>
<td>0</td>
<td>0</td>
<td>1</td>
<td></td>
<td>1</td>
<td>1</td>
</tr>
<tr class="even">
<td>1</td>
<td>0</td>
<td>1</td>
<td>0</td>
<td></td>
<td>1</td>
<td></td>
</tr>
<tr class="odd">
<td>1</td>
<td>0</td>
<td>1</td>
<td>1</td>
<td></td>
<td>1</td>
<td>1</td>
</tr>
<tr class="even">
<td>1</td>
<td>1</td>
<td>0</td>
<td>0</td>
<td>1</td>
<td>1</td>
<td></td>
</tr>
<tr class="odd">
<td>1</td>
<td>1</td>
<td>0</td>
<td>1</td>
<td>1</td>
<td>1</td>
<td>1</td>
</tr>
<tr class="even">
<td>1</td>
<td>1</td>
<td>1</td>
<td>0</td>
<td></td>
<td>1</td>
<td></td>
</tr>
<tr class="odd">
<td>1</td>
<td>1</td>
<td>1</td>
<td>1</td>
<td></td>
<td>1</td>
<td>1</td>
</tr>
</tbody>
</table></li>
</ul>
</div>
</div>
</div>
</div>
</div>
<p>Vous pouvez consulter la page d’<a href="./exo">exercices</a> pour vous entraîner.</p>
</section>
</section>
<section id="équivalence-dexpressions-booléennes" class="level2" data-number="4">
<h2 data-number="4" class="anchored" data-anchor-id="équivalence-dexpressions-booléennes"><span class="header-section-number">4</span> Équivalence d’expressions booléennes</h2>
<p>En algèbre ordinaire, deux expressions peuvent être équivalentes, par exemple:</p>
<p><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>×</mo><mi>z</mi><mo>+</mo><mi>y</mi><mo>×</mo><mi>z</mi><mo>=</mo><mrow><mo stretchy="true" form="prefix">(</mo><mi>x</mi><mo>+</mo><mi>y</mi><mo stretchy="true" form="postfix">)</mo></mrow><mo>×</mo><mi>z</mi></mrow><annotation encoding="application/x-tex">
x \times z + y \times z = (x + y) \times z
</annotation></semantics></math></p>
<p>La même chose peut être dite de l’algèbre booléenne. Construisons des tables de vérité pour:</p>
<p><math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mi>&amp;</mi><mi>R</mi><mo stretchy="false" form="prefix">|</mo><mi>Q</mi><mi>&amp;</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">P \&amp; R | Q \&amp; R</annotation></semantics></math> et <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mo stretchy="true" form="prefix">(</mo><mi>P</mi><mo stretchy="false" form="prefix">|</mo><mi>Q</mi><mo stretchy="true" form="postfix">)</mo></mrow><mi>&amp;</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">(P | Q) \&amp; R</annotation></semantics></math></p>
<pre><code>P   Q   R  | P &amp; R | Q &amp; R
--------------------------
0   0   0  |       0 
0   0   1  |       0 
0   1   0  |       0 
0   1   1  |       1 
1   0   0  |       0 
1   0   1  |       1 
1   1   0  |       0 
1   1   1  |       1 </code></pre>
<pre><code>P   Q   R  | (P | Q) &amp; R
------------------------
0   0   0  |     0 
0   0   1  |     0 
0   1   0  |     0 
0   1   1  |     1 
1   0   0  |     0 
1   0   1  |     1 
1   1   0  |     0 
1   1   1  |     1 </code></pre>
<p>En comparant les deux tableaux, vous aurez remarqué que les résultats(c’est-à-dire la dernière colonne) des deux tableaux sont identiques!</p>
<dl>
<dt>
Équivalence d’expressions booléennes
</dt>
<dd>
<div>
<p>Nous disons que deux expressions booléennes sont équivalentes si la sortie de leurs tables de vérité est la même. L’équivalence d’expressions booléennes est notée avec le signe =.</p>
</div>
</dd>
</dl>
</section>
<section id="les-lois-de-lalgèbre-de-boole" class="level2" data-number="5">
<h2 data-number="5" class="anchored" data-anchor-id="les-lois-de-lalgèbre-de-boole"><span class="header-section-number">5</span> Les lois de l’algèbre de BOOLE</h2>
<p><strong>Il n’est pas demandé d’apprendre ces lois, mais vous devez savoir les démontrer.</strong></p>
<table class="table table-bordered table-hover">
<thead class="table-warning">
<tr class="header">
<th>Nom de la loi</th>
<th>Écriture mathématique</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Éléments neutres</td>
<td><p><math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false" form="prefix">|</mo><mn>0</mn><mo>=</mo><mi>P</mi></mrow><annotation encoding="application/x-tex">P|0=P</annotation></semantics></math></p>
<p><math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mi>&amp;</mi><mn>1</mn><mo>=</mo><mi>P</mi></mrow><annotation encoding="application/x-tex">P\&amp;1=P</annotation></semantics></math></p></td>
</tr>
<tr class="even">
<td>Éléments absorbants</td>
<td><p><math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mi>&amp;</mi><mn>0</mn><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">P\&amp;0=0</annotation></semantics></math></p>
<p><math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false" form="prefix">|</mo><mn>1</mn><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">P| 1=1</annotation></semantics></math></p></td>
</tr>
<tr class="odd">
<td>Complémentarité</td>
<td><p><math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false" form="prefix">|</mo><mi>!</mi><mi>P</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">P| !P=1</annotation></semantics></math></p>
<p><math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mi>&amp;</mi><mi>!</mi><mi>P</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">P\&amp; !P=0</annotation></semantics></math></p></td>
</tr>
<tr class="even">
<td>Idempotence</td>
<td><p><math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false" form="prefix">|</mo><mi>P</mi><mo>=</mo><mi>P</mi></mrow><annotation encoding="application/x-tex">P| P=P</annotation></semantics></math></p>
<p><math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mi>&amp;</mi><mi>P</mi><mo>=</mo><mi>P</mi></mrow><annotation encoding="application/x-tex">P \&amp;P = P</annotation></semantics></math></p></td>
</tr>
<tr class="odd">
<td>Commutativité</td>
<td><p><math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mi>&amp;</mi><mi>Q</mi><mo>=</mo><mi>Q</mi><mi>&amp;</mi><mi>P</mi></mrow><annotation encoding="application/x-tex">P \&amp; Q = Q \&amp; P</annotation></semantics></math></p>
<p><math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mrow><mo stretchy="true" form="prefix">|</mo><mi>Q</mi><mo>=</mo><mi>Q</mi><mo stretchy="true" form="postfix">|</mo></mrow><mi>P</mi></mrow><annotation encoding="application/x-tex">P | Q = Q | P</annotation></semantics></math></p></td>
</tr>
<tr class="even">
<td>Associativité</td>
<td><p><math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mi>&amp;</mi><mrow><mo stretchy="true" form="prefix">(</mo><mi>Q</mi><mi>&amp;</mi><mi>R</mi><mo stretchy="true" form="postfix">)</mo></mrow><mo>=</mo><mrow><mo stretchy="true" form="prefix">(</mo><mi>P</mi><mi>&amp;</mi><mi>Q</mi><mo stretchy="true" form="postfix">)</mo></mrow><mi>&amp;</mi><mi>R</mi><mo>=</mo><mi>P</mi><mi>&amp;</mi><mi>Q</mi><mi>&amp;</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">P \&amp; (Q \&amp; R)= (P \&amp; Q) \&amp;R =P \&amp;Q \&amp; R</annotation></semantics></math></p>
<p><math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mrow><mo stretchy="true" form="prefix">|</mo><mrow><mo stretchy="true" form="prefix">(</mo><mi>Q</mi><mrow><mo stretchy="true" form="prefix">|</mo><mi>R</mi><mo stretchy="false" form="postfix">)</mo><mo>=</mo><mo stretchy="false" form="prefix">(</mo><mi>P</mi><mo stretchy="true" form="postfix">|</mo></mrow><mi>Q</mi><mo stretchy="true" form="postfix">)</mo></mrow><mo stretchy="true" form="postfix">|</mo></mrow><mi>R</mi><mo>=</mo><mi>P</mi><mrow><mo stretchy="true" form="prefix">|</mo><mi>Q</mi><mo stretchy="true" form="postfix">|</mo></mrow><mi>R</mi></mrow><annotation encoding="application/x-tex">P | ( Q | R ) = (P | Q) | R = P | Q | R</annotation></semantics></math></p></td>
</tr>
<tr class="odd">
<td>Distributivité</td>
<td><p><math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mi>&amp;</mi><mo stretchy="false" form="prefix">(</mo><mi>Q</mi><mrow><mo stretchy="true" form="prefix">|</mo><mi>R</mi><mo stretchy="false" form="postfix">)</mo><mo>=</mo><mi>P</mi><mi>&amp;</mi><mi>Q</mi><mo stretchy="true" form="postfix">|</mo></mrow><mi>P</mi><mi>&amp;</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">P \&amp; ( Q | R ) = P \&amp; Q | P \&amp; R</annotation></semantics></math></p>
<p><math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false" form="prefix">|</mo><mrow><mo stretchy="true" form="prefix">(</mo><mi>Q</mi><mi>&amp;</mi><mi>R</mi><mo stretchy="true" form="postfix">)</mo></mrow><mo>=</mo><mrow><mo stretchy="true" form="prefix">(</mo><mi>P</mi><mo stretchy="false" form="prefix">|</mo><mi>Q</mi><mo stretchy="true" form="postfix">)</mo></mrow><mi>&amp;</mi><mrow><mo stretchy="true" form="prefix">(</mo><mi>P</mi><mo stretchy="false" form="prefix">|</mo><mi>R</mi><mo stretchy="true" form="postfix">)</mo></mrow></mrow><annotation encoding="application/x-tex">P | ( Q \&amp; R ) =(P | Q)\&amp;(P | R)</annotation></semantics></math></p></td>
</tr>
<tr class="even">
<td>Lois de De Morgan</td>
<td><p><math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>!</mi><mrow><mo stretchy="true" form="prefix">(</mo><mi>P</mi><mo stretchy="false" form="prefix">|</mo><mi>Q</mi><mo stretchy="true" form="postfix">)</mo></mrow><mo>=</mo><mi>!</mi><mi>P</mi><mi>&amp;</mi><mi>!</mi><mi>Q</mi></mrow><annotation encoding="application/x-tex">!(P | Q)= !P \&amp; !Q</annotation></semantics></math></p>
<p><math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>!</mi><mrow><mo stretchy="true" form="prefix">(</mo><mi>P</mi><mi>&amp;</mi><mi>Q</mi><mo stretchy="true" form="postfix">)</mo></mrow><mo>=</mo><mi>!</mi><mi>P</mi><mo stretchy="false" form="prefix">|</mo><mi>!</mi><mi>Q</mi></mrow><annotation encoding="application/x-tex">!(P\&amp; Q)= !P | !Q</annotation></semantics></math></p></td>
</tr>
</tbody>
</table>
<p>Ces lois peuvent facilement être démontrées à l’aide de <em>tables de vérité</em>.</p>
<div class="ref">
<ul>
<li>https://en.m.wikibooks.org/wiki/High_School_Mathematics_Extensions/Logic</li>
<li>http://info.blaisepascal.fr/nsi-les-booleens</li>
<li>https://www.maxicours.com/se/cours/simplification-de-l-expression-logique-a-l-aide-des-regles-de-l-algebre-booleenne/</li>
<li>http://www.courstechinfo.be/MathInfo/FctLogiques1.html</li>
<li>https://www.plymouth.ac.uk/uploads/production/document/path/3/3760/PlymouthUniversity_MathsETStats_Boolean_algebra_ET_logic_gates.pdf</li>
</ul>
</div>


</section>

 ]]></description>
  <category>1NSI</category>
  <guid>https://www.lyceum.fr/2023-2024/1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/5-les-booleens/</guid>
  <pubDate>Thu, 16 May 2024 13:21:00 GMT</pubDate>
</item>
<item>
  <title>Chapitre 1: Introduction aux tableaux</title>
  <link>https://www.lyceum.fr/2023-2024/1g/nsi/3-representation-des-donnees-types-construits/1-introduction-aux-tableaux/</link>
  <description><![CDATA[ 




<div class="programme">
<div class="callout callout-style-simple callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Programme
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="programme">
<table class="table table-bordered table-hover">
<thead class="table-warning">
<tr class="header">
<th>Contenus</th>
<th>Capacités attendues</th>
<th>Commentaires</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>p-uplets. p-uplets nommés</td>
<td>Écrire une fonction renvoyant un p-uplet de valeurs.</td>
<td></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<div>

</div>
<div class="intro quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p>Dans la deuxième partie <a href="../../../../1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/">2-Représentation des données: types et valeurs de base</a>, nous avions vu certains types de <strong>variables simples</strong>: <code>int</code>(entiers), <code>float</code>(nombres à virgule flottante) <code>bool</code>(booléen), <code>str</code>(chaîne de caractères). Nous allons maintenant voir des <strong>types construits</strong> qui sont des <em>collections d’objets</em> de type simple assemblés dans ce que l’on appelle une structure de données.</p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p></p><figure class="wikimage figure"><picture>
			  <source type="image/webp" srcset="/img/d-hVLO-gAH-300.webp 300w, /img/d-hVLO-gAH-600.webp 600w, /img/d-hVLO-gAH-711.webp 711w" sizes="100vw">
  <source type="image/png" srcset="/img/d-hVLO-gAH-300.png 300w, /img/d-hVLO-gAH-600.png 600w, /img/d-hVLO-gAH-711.png 711w" sizes="100vw">
				<img class="img-fluid figure-img" src="https://www.lyceum.fr/2023-2024/img/d-hVLO-gAH-300.webp" width="711" height="159" alt="Un ensemble de valeurs entières stockées dans un tableau à une dimension." loading="lazy" decoding="async">
			</picture>
<figcaption id="caption">Un ensemble de valeurs entières stockées dans un tableau à une dimension.</figcaption><figcaption id="credit">&nbsp;Public domain&nbsp;<a id="image-description" href="//commons.wikimedia.org/wiki/File:Tableau_à_une_dimension.png">via Wikimedia Commons</a></figcaption></figure><p></p>
</div>
</div>
</div>
<p>Nous verrons dans cette partie trois exemples de types construits:</p>
<ul>
<li>les p-uplets <code>tuple</code> et listes <code>list</code>: des collections d’éléments ordonnés dans lesquels les valeurs sont accédées via un <strong>indice de position</strong>.</li>
<li>les p-uplet nommés <code>namedtuple</code> et les dictionnaires <code>dict</code>: ensemble d’éléments dans lesquels les valeurs sont accédées via une <strong>clef</strong>.</li>
</ul>
<section id="quest-ce-quun-tableau" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="quest-ce-quun-tableau"><span class="header-section-number">1</span> Qu’est-ce qu’un tableau?</h2>
<dl>
<dt>
Tableau
</dt>
<dd>
<div>
<p>En informatique, un tableau est une structure de données représentant une séquence finie d’éléments auxquels on peut accéder efficacement par leur indice, dans la séquence.</p>
</div>
</dd>
</dl>
<p>Il existe deux implémentations des tableaux en Python: les <code>tuple</code>s et les <code>list</code>es.</p>
<section id="syntaxe-des-tuples-a-b-c" class="level3" data-number="1.1">
<h3 data-number="1.1" class="anchored" data-anchor-id="syntaxe-des-tuples-a-b-c"><span class="header-section-number">1.1</span> Syntaxe des tuples <code>(a, b, c)</code></h3>
<p>Les tuples sont des valeurs séparées par des virgules <code>,</code> entourées de parenthèses <code>(..., ..., ...</code>)` qui peuvent parfois être <em>omises</em>.</p>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1">t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb1-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(t)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="1">
<pre><code>tuple</code></pre>
</div>
</div>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># sans parenthèses</span></span>
<span id="cb3-2">t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb3-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(t)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="2">
<pre><code>tuple</code></pre>
</div>
</div>
</section>
<section id="syntaxe-des-listes-a-b-c" class="level3" data-number="1.2">
<h3 data-number="1.2" class="anchored" data-anchor-id="syntaxe-des-listes-a-b-c"><span class="header-section-number">1.2</span> Syntaxe des listes <code>[a, b, c]</code></h3>
<p>Les valeurs de la collection sont entourées par des crochets <code>[]</code>, leurs éléments sont séparés par des virgules.</p>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb5-1">tab <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [ <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"z"</span> , <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"e"</span>]</span>
<span id="cb5-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(tab)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="3">
<pre><code>list</code></pre>
</div>
</div>
</section>
<section id="différences-entre-tuple-et-liste" class="level3" data-number="1.3">
<h3 data-number="1.3" class="anchored" data-anchor-id="différences-entre-tuple-et-liste"><span class="header-section-number">1.3</span> Différences entre tuple et liste</h3>
<p>Outre la syntaxe, il y a plusieurs différences clés entre les tuples et les listes en Python:</p>
<ul>
<li><p><strong>Immutabilité</strong> : les tuples sont immuables, c’est-à-dire qu’une fois créés, ils ne peuvent pas être modifiés. Les listes, en revanche, sont mutables, c’est-à-dire que vous pouvez ajouter, supprimer ou remplacer des éléments dans une liste une fois qu’elle a été créée.</p></li>
<li><p><strong>Performance</strong> : les tuples sont généralement plus rapides à créer et à accéder que les listes. Cela est dû à leur immutabilité, qui signifie qu’il n’y a pas besoin de gérer la modification des éléments dans un tuple.</p></li>
<li><p><strong>Utilisation</strong> : les tuples sont souvent utilisés lorsque vous avez besoin de stocker des données qui ne doivent pas être modifiées, tandis que les listes sont utilisées lorsque vous avez besoin de stocker des données qui doivent être modifiées fréquemment.</p></li>
</ul>
</section>
</section>
<section id="différences-et-similitudes-entre-tuple-et-listes" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="différences-et-similitudes-entre-tuple-et-listes"><span class="header-section-number">2</span> Différences et similitudes entre tuple et listes</h2>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb7-1">t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.0</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"trois"</span>)</span>
<span id="cb7-2">t</span>
<span id="cb7-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(t)</span>
<span id="cb7-4">t[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb7-5">t[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb7-6">t[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb7-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(t)</span>
<span id="cb7-8">t[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"un"</span></span>
<span id="cb7-9">tab <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.0</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"trois"</span>]</span>
<span id="cb7-10">tab</span>
<span id="cb7-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(tab)</span>
<span id="cb7-12">tab[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb7-13">tab[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb7-14">tab[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb7-15"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(tab)</span>
<span id="cb7-16">tab[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"un"</span></span>
<span id="cb7-17">tab</span></code></pre></div>
<div class="quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="tuple quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p><strong>Tuple</strong></p>
<p>On peut stocker plusieurs valeurs de types différents.</p>
<div class="cell" data-execution_count="4">
<div class="cell-output cell-output-display" data-execution_count="4">
<pre><code>(1, 2.0, 'trois')</code></pre>
</div>
</div>
<div class="cell" data-execution_count="5">
<div class="cell-output cell-output-display" data-execution_count="5">
<pre><code>tuple</code></pre>
</div>
</div>
<p>L’accès se fait par un indice entier de position qui <em>commence à 0</em>. On place l’indice entre des crochets.</p>
<div class="cell" data-execution_count="6">
<div class="cell-output cell-output-display" data-execution_count="6">
<pre><code>1</code></pre>
</div>
</div>
<div class="cell" data-execution_count="7">
<div class="cell-output cell-output-display" data-execution_count="7">
<pre><code>2.0</code></pre>
</div>
</div>
<div class="cell" data-execution_count="8">
<div class="cell-output cell-output-display" data-execution_count="8">
<pre><code>'trois'</code></pre>
</div>
</div>
<p>La longueur du tuple est obtenue grâce à la fonction <code>len()</code></p>
<div class="cell" data-execution_count="9">
<div class="cell-output cell-output-display" data-execution_count="9">
<pre><code>3</code></pre>
</div>
</div>
<p>Les tuples sont <a href="https://fr.wiktionary.org/wiki/immutable"><em>immutables</em></a>, c’est-à-dire qu’on ne peut les modifier une fois qu’ils ont été créés.</p>
<div class="cell" data-execution_count="10">
<p><span class="smallcaps">&gt;&gt;sortie</span></p>
<div class="cell-output cell-output-error">
<pre><code>TypeError: 'tuple' object does not support item assignment</code></pre>
</div>
</div>
</div>
<div class="liste quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p><strong>Liste</strong></p>
<p>On peut stocker plusieurs valeurs de types différents.</p>
<div class="cell" data-execution_count="11">
<div class="cell-output cell-output-display" data-execution_count="11">
<pre><code>[1, 2.0, 'trois']</code></pre>
</div>
</div>
<div class="cell" data-execution_count="12">
<div class="cell-output cell-output-display" data-execution_count="12">
<pre><code>list</code></pre>
</div>
</div>
<p>L’accès se fait par un indice entier de position qui <em>commence à 0</em>. On place l’indice entre des crochets.</p>
<div class="cell" data-execution_count="13">
<div class="cell-output cell-output-display" data-execution_count="13">
<pre><code>1</code></pre>
</div>
</div>
<div class="cell" data-execution_count="14">
<div class="cell-output cell-output-display" data-execution_count="14">
<pre><code>2.0</code></pre>
</div>
</div>
<div class="cell" data-execution_count="15">
<div class="cell-output cell-output-display" data-execution_count="15">
<pre><code>'trois'</code></pre>
</div>
</div>
<p>La longueur de la liste est obtenue grâce à la fonction <code>len()</code></p>
<div class="cell" data-execution_count="16">
<div class="cell-output cell-output-display" data-execution_count="16">
<pre><code>3</code></pre>
</div>
</div>
<p>Les listes sont <a href="https://fr.wiktionary.org/wiki/mutable"><em>mutables</em></a>, c’est-à-dire qu’on peut les modifier une fois qu’elles ont été créés.</p>
<div class="cell" data-execution_count="17">
<div class="cell-output cell-output-display" data-execution_count="17">
<pre><code>['un', 2.0, 'trois']</code></pre>
</div>
</div>
</div>
</div>
</div>
<p><strong>ATTENTION: Dans les types construits, il faut bien distinguer l’indice et la valeur stockée à cet indice.</strong></p>
<p></p><figure class="wikimage figure"><picture>
			  <source type="image/webp" srcset="/img/d-hVLO-gAH-300.webp 300w, /img/d-hVLO-gAH-600.webp 600w, /img/d-hVLO-gAH-711.webp 711w" sizes="100vw">
  <source type="image/png" srcset="/img/d-hVLO-gAH-300.png 300w, /img/d-hVLO-gAH-600.png 600w, /img/d-hVLO-gAH-711.png 711w" sizes="100vw">
				<img class="img-fluid figure-img" src="https://www.lyceum.fr/2023-2024/img/d-hVLO-gAH-300.webp" width="711" height="159" alt="Les valeurs stockées sont de type quelconque par contre les indice sont des entiers commençant à 0." loading="lazy" decoding="async">
			</picture>
<figcaption id="caption">Les valeurs stockées sont de type quelconque par contre les indice sont des entiers commençant à 0.</figcaption><figcaption id="credit">&nbsp;Public domain&nbsp;<a id="image-description" href="//commons.wikimedia.org/wiki/File:Tableau_à_une_dimension.png">via Wikimedia Commons</a></figcaption></figure><p></p>
</section>
<section id="méthodes-et-fonctions" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="méthodes-et-fonctions"><span class="header-section-number">3</span> Méthodes et fonctions</h2>
<section id="quest-ce-quune-méthode" class="level3" data-number="3.1">
<h3 data-number="3.1" class="anchored" data-anchor-id="quest-ce-quune-méthode"><span class="header-section-number">3.1</span> Qu’est-ce qu’une méthode?</h3>
<p>Python étant un <a href="../../../../tg/nsi/1-structures-de-donnees/2-programmation-objet">langage objet</a>, des méthodes sont ajoutées aux tableaux pour interagir facilement avec eux.</p>
<p>La différence entre méthode et fonction sera approfondie en terminale lors de l’étude de la <a href="../../../../tg/nsi/1-structures-de-donnees/2-programmation-objet">programmation orientée objet</a>. Pour l’instant, nous pouvons simplement dire qu’il s’agit d’une fonction attachée à un objet qui s’appelle en utilisant une <strong>notation pointée</strong>.</p>
<div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb22-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># appel d'une fonction</span></span>
<span id="cb22-2">fonction(arguments) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ex: len(tab)</span></span>
<span id="cb22-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># appel d'une méthode d'objet</span></span>
<span id="cb22-4">objet.méthode(arguments) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ex: tab.append(5)</span></span></code></pre></div>
</section>
<section id="méthodes-des-tuples" class="level3" data-number="3.2">
<h3 data-number="3.2" class="anchored" data-anchor-id="méthodes-des-tuples"><span class="header-section-number">3.2</span> Méthodes des tuples</h3>
<p>Les tuples étant immuables ne présentent que deux méthodes qui sont décrites dans la <a href="https://docs.python.org/fr/3/library/stdtypes.html#sequence-types-list-tuple-range">documentation</a> ou grâce à l’appel <code>help(tuple)</code></p>
<ul>
<li>La méthode <code>index</code>: indice de la première occurrence de l’élément cherché donné en argument.</li>
<li>La méthode <code>count</code>: nombre d’éléments de valeur donnée en argument.</li>
</ul>
<div class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb23-1">t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="19">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb24-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># appel de la méthode index()</span></span>
<span id="cb24-2">t.index(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="19">
<pre><code>3</code></pre>
</div>
</div>
<div class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb26-1">t.count(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="20">
<pre><code>3</code></pre>
</div>
</div>
<div class="plus">
<div class="callout callout-style-simple callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-2-contents" aria-controls="callout-2" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
En plus: Documentation des tuples
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-2" class="callout-2-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="plus" data-titre="Documentation des tuples">
<div class="cell" data-execution_count="21">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb28-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">help</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">tuple</span>)</span></code></pre></div>
<p><span class="smallcaps">&gt;&gt;sortie</span></p>
<div class="cell-output cell-output-stdout">
<pre><code>Help on class tuple in module builtins:

class tuple(object)
 |  tuple(iterable=(), /)
 |  
 |  Built-in immutable sequence.
 |  
 |  If no argument is given, the constructor returns an empty tuple.
 |  If iterable is specified the tuple is initialized from iterable's items.
 |  
 |  If the argument is a tuple, the return value is the same object.
 |  
 |  Built-in subclasses:
 |      asyncgen_hooks
 |      MonthDayNano
 |      RefResolutionErrorAttributes
 |      TypeCheckerAttributes
 |      ... and 8 other subclasses
 |  
 |  Methods defined here:
 |  
 |  __add__(self, value, /)
 |      Return self+value.
 |  
 |  __contains__(self, key, /)
 |      Return key in self.
 |  
 |  __eq__(self, value, /)
 |      Return self==value.
 |  
 |  __ge__(self, value, /)
 |      Return self&gt;=value.
 |  
 |  __getattribute__(self, name, /)
 |      Return getattr(self, name).
 |  
 |  __getitem__(self, key, /)
 |      Return self[key].
 |  
 |  __getnewargs__(self, /)
 |  
 |  __gt__(self, value, /)
 |      Return self&gt;value.
 |  
 |  __hash__(self, /)
 |      Return hash(self).
 |  
 |  __iter__(self, /)
 |      Implement iter(self).
 |  
 |  __le__(self, value, /)
 |      Return self&lt;=value.
 |  
 |  __len__(self, /)
 |      Return len(self).
 |  
 |  __lt__(self, value, /)
 |      Return self&lt;value.
 |  
 |  __mul__(self, value, /)
 |      Return self*value.
 |  
 |  __ne__(self, value, /)
 |      Return self!=value.
 |  
 |  __repr__(self, /)
 |      Return repr(self).
 |  
 |  __rmul__(self, value, /)
 |      Return value*self.
 |  
 |  count(self, value, /)
 |      Return number of occurrences of value.
 |  
 |  index(self, value, start=0, stop=9223372036854775807, /)
 |      Return first index of value.
 |      
 |      Raises ValueError if the value is not present.
 |  
 |  ----------------------------------------------------------------------
 |  Class methods defined here:
 |  
 |  __class_getitem__(...) from builtins.type
 |      See PEP 585
 |  
 |  ----------------------------------------------------------------------
 |  Static methods defined here:
 |  
 |  __new__(*args, **kwargs) from builtins.type
 |      Create and return a new object.  See help(type) for accurate signature.
</code></pre>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="méthodes-des-listes" class="level3" data-number="3.3">
<h3 data-number="3.3" class="anchored" data-anchor-id="méthodes-des-listes"><span class="header-section-number">3.3</span> Méthodes des listes</h3>
<p>Les listes présentent de nombreuses méthodes en plus de celles des tuples qui vont permettre de les <a href="https://docs.python.org/fr/3/library/stdtypes.html#mutable-sequence-types">modifier</a>.</p>
<p>Voici quelques utilisations courantes à retenir(la liste complète est dans la documentation!).</p>
<ul>
<li>ajouter des éléments à la liste à la fin avec la méthode <code>append</code>, ou à un indice quelconque avec la méthode <code>insert</code>.</li>
</ul>
<div class="cell" data-execution_count="22">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb30-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ajout à la fin</span></span>
<span id="cb30-2">tab.append(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span>
<span id="cb30-3">tab</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="22">
<pre><code>['un', 2.0, 'trois', 4]</code></pre>
</div>
</div>
<div class="cell" data-execution_count="23">
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb32-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ajout à l'indice 0(au début)</span></span>
<span id="cb32-2">tab.insert(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'zéro'</span>)</span>
<span id="cb32-3">tab</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="23">
<pre><code>['zéro', 'un', 2.0, 'trois', 4]</code></pre>
</div>
</div>
<ul>
<li>supprimer des éléments de la liste à la fin avec la méthode <code>pop()</code>, ou à un indice quelconque avec la méthode <code>pop(indice)</code>.</li>
</ul>
<div class="cell" data-execution_count="24">
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb34-1">tab.pop()</span>
<span id="cb34-2">tab</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="24">
<pre><code>['zéro', 'un', 2.0, 'trois']</code></pre>
</div>
</div>
<div class="cell" data-execution_count="25">
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb36-1">tab.pop(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb36-2">tab</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="25">
<pre><code>['zéro', 2.0, 'trois']</code></pre>
</div>
</div>
<div class="plus">
<div class="callout callout-style-simple callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-3-contents" aria-controls="callout-3" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
En plus: Documentation des listes
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-3" class="callout-3-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="plus" data-titre="Documentation des listes">
<div class="cell" data-execution_count="26">
<div class="sourceCode cell-code" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb38-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">help</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>)</span></code></pre></div>
<p><span class="smallcaps">&gt;&gt;sortie</span></p>
<div class="cell-output cell-output-stdout">
<pre><code>Help on class list in module builtins:

class list(object)
 |  list(iterable=(), /)
 |  
 |  Built-in mutable sequence.
 |  
 |  If no argument is given, the constructor creates a new empty list.
 |  The argument must be an iterable if specified.
 |  
 |  Methods defined here:
 |  
 |  __add__(self, value, /)
 |      Return self+value.
 |  
 |  __contains__(self, key, /)
 |      Return key in self.
 |  
 |  __delitem__(self, key, /)
 |      Delete self[key].
 |  
 |  __eq__(self, value, /)
 |      Return self==value.
 |  
 |  __ge__(self, value, /)
 |      Return self&gt;=value.
 |  
 |  __getattribute__(self, name, /)
 |      Return getattr(self, name).
 |  
 |  __getitem__(...)
 |      x.__getitem__(y) &lt;==&gt; x[y]
 |  
 |  __gt__(self, value, /)
 |      Return self&gt;value.
 |  
 |  __iadd__(self, value, /)
 |      Implement self+=value.
 |  
 |  __imul__(self, value, /)
 |      Implement self*=value.
 |  
 |  __init__(self, /, *args, **kwargs)
 |      Initialize self.  See help(type(self)) for accurate signature.
 |  
 |  __iter__(self, /)
 |      Implement iter(self).
 |  
 |  __le__(self, value, /)
 |      Return self&lt;=value.
 |  
 |  __len__(self, /)
 |      Return len(self).
 |  
 |  __lt__(self, value, /)
 |      Return self&lt;value.
 |  
 |  __mul__(self, value, /)
 |      Return self*value.
 |  
 |  __ne__(self, value, /)
 |      Return self!=value.
 |  
 |  __repr__(self, /)
 |      Return repr(self).
 |  
 |  __reversed__(self, /)
 |      Return a reverse iterator over the list.
 |  
 |  __rmul__(self, value, /)
 |      Return value*self.
 |  
 |  __setitem__(self, key, value, /)
 |      Set self[key] to value.
 |  
 |  __sizeof__(self, /)
 |      Return the size of the list in memory, in bytes.
 |  
 |  append(self, object, /)
 |      Append object to the end of the list.
 |  
 |  clear(self, /)
 |      Remove all items from list.
 |  
 |  copy(self, /)
 |      Return a shallow copy of the list.
 |  
 |  count(self, value, /)
 |      Return number of occurrences of value.
 |  
 |  extend(self, iterable, /)
 |      Extend list by appending elements from the iterable.
 |  
 |  index(self, value, start=0, stop=9223372036854775807, /)
 |      Return first index of value.
 |      
 |      Raises ValueError if the value is not present.
 |  
 |  insert(self, index, object, /)
 |      Insert object before index.
 |  
 |  pop(self, index=-1, /)
 |      Remove and return item at index (default last).
 |      
 |      Raises IndexError if list is empty or index is out of range.
 |  
 |  remove(self, value, /)
 |      Remove first occurrence of value.
 |      
 |      Raises ValueError if the value is not present.
 |  
 |  reverse(self, /)
 |      Reverse *IN PLACE*.
 |  
 |  sort(self, /, *, key=None, reverse=False)
 |      Sort the list in ascending order and return None.
 |      
 |      The sort is in-place (i.e. the list itself is modified) and stable (i.e. the
 |      order of two equal elements is maintained).
 |      
 |      If a key function is given, apply it once to each list item and sort them,
 |      ascending or descending, according to their function values.
 |      
 |      The reverse flag can be set to sort in descending order.
 |  
 |  ----------------------------------------------------------------------
 |  Class methods defined here:
 |  
 |  __class_getitem__(...) from builtins.type
 |      See PEP 585
 |  
 |  ----------------------------------------------------------------------
 |  Static methods defined here:
 |  
 |  __new__(*args, **kwargs) from builtins.type
 |      Create and return a new object.  See help(type) for accurate signature.
 |  
 |  ----------------------------------------------------------------------
 |  Data and other attributes defined here:
 |  
 |  __hash__ = None
</code></pre>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</section>
</section>
<section id="utilisations-courantes-des-tuples" class="level2" data-number="4">
<h2 data-number="4" class="anchored" data-anchor-id="utilisations-courantes-des-tuples"><span class="header-section-number">4</span> Utilisations courantes des tuples</h2>
<section id="déstructuration" class="level3" data-number="4.1">
<h3 data-number="4.1" class="anchored" data-anchor-id="déstructuration"><span class="header-section-number">4.1</span> Déstructuration</h3>
<p>Il peut être <em>pratique</em> de récupérer les valeurs stockées dans le tuple dans des variables de type simple: on parle de <strong>déstructuration</strong>.</p>
<div class="cell" data-execution_count="27">
<div class="sourceCode cell-code" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb40-1">t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"α"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"β"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"γ"</span>)</span>
<span id="cb40-2">a, b, c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> t</span>
<span id="cb40-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"t="</span>, t)</span>
<span id="cb40-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a="</span>, a)</span>
<span id="cb40-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b="</span>, b)</span>
<span id="cb40-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c="</span>, c)</span></code></pre></div>
<p><span class="smallcaps">&gt;&gt;sortie</span></p>
<div class="cell-output cell-output-stdout">
<pre><code>t= ('α', 'β', 'γ')
a= α
b= β
c= γ</code></pre>
</div>
</div>
</section>
<section id="permuter-des-variables" class="level3" data-number="4.2">
<h3 data-number="4.2" class="anchored" data-anchor-id="permuter-des-variables"><span class="header-section-number">4.2</span> Permuter des variables</h3>
<p>Habituellement, lorsque l’on souhaite permuter deux variables, il est nécessaire de passer par une troisième variable auxiliaire. Grâce aux tuples, la permutation peut se faire en une instruction.</p>
<div class="cell" data-execution_count="28">
<div class="sourceCode cell-code" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb42-1">a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb42-2">b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb42-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a="</span>,a, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b="</span>, b)</span>
<span id="cb42-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Permutation"</span>)</span>
<span id="cb42-5">a, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> b, a</span>
<span id="cb42-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a="</span>,a, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b="</span>, b)</span></code></pre></div>
<p><span class="smallcaps">&gt;&gt;sortie</span></p>
<div class="cell-output cell-output-stdout">
<pre><code>a= 3 b= 2
Permutation
a= 2 b= 3</code></pre>
</div>
</div>
</section>
<section id="renvoyer-plusieurs-valeurs-dans-une-fonction" class="level3" data-number="4.3">
<h3 data-number="4.3" class="anchored" data-anchor-id="renvoyer-plusieurs-valeurs-dans-une-fonction"><span class="header-section-number">4.3</span> Renvoyer plusieurs valeurs dans une fonction</h3>
<p>Il s’agit d’une application courante des tuples. Prenons l’exemple d’une fonction qui renvoie les deux racines du trinôme.</p>
<div class="cell" data-execution_count="29">
<div class="sourceCode cell-code" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb44-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> racines_du_trinome(a,b,c):</span>
<span id="cb44-2">    delta <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>c</span>
<span id="cb44-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> delta <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb44-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>delta<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>a), <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>delta<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>a)</span>
<span id="cb44-5"></span>
<span id="cb44-6">racines_du_trinome(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="29">
<pre><code>(-1.0, 1.0)</code></pre>
</div>
</div>
<p>Ici on récupère les racines par déstructuration.</p>
<div class="cell" data-execution_count="30">
<div class="sourceCode cell-code" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb46-1">x1, x2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> racines_du_trinome(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb46-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"racine 1:"</span>, x1)</span>
<span id="cb46-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"racine 2:"</span>, x2)</span></code></pre></div>
<p><span class="smallcaps">&gt;&gt;sortie</span></p>
<div class="cell-output cell-output-stdout">
<pre><code>racine 1: -1.4142135623730951
racine 2: 1.4142135623730951</code></pre>
</div>
</div>
</section>
</section>
<section id="savoir-si-un-tableau-contient-une-valeur" class="level2" data-number="5">
<h2 data-number="5" class="anchored" data-anchor-id="savoir-si-un-tableau-contient-une-valeur"><span class="header-section-number">5</span> Savoir si un tableau contient une valeur</h2>
<p>Outre la méthode <code>index()</code>, on peut utiliser l’opérateur booléen <code>in</code> pur savoir si une valeur est dans la liste.</p>
<div class="cell" data-execution_count="31">
<div class="sourceCode cell-code" id="cb48" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb48-1">tab <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]</span>
<span id="cb48-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> tab)</span>
<span id="cb48-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> tab)</span></code></pre></div>
<p><span class="smallcaps">&gt;&gt;sortie</span></p>
<div class="cell-output cell-output-stdout">
<pre><code>True
False</code></pre>
</div>
</div>
</section>
<section id="parcours-séquentiel-des-tableaux" class="level2" data-number="6">
<h2 data-number="6" class="anchored" data-anchor-id="parcours-séquentiel-des-tableaux"><span class="header-section-number">6</span> Parcours séquentiel des tableaux</h2>
<p>Les tableaux étant des structures ordonnées finies, il est facile de les parcourir dans l’ordre avec une boucle bornée <code>for</code>.</p>
<p>En python, on peut réaliser l’itération sur les valeurs ou sur les indices si nécessaire. Cette dernière est plus compliquée, mais plus puissant, car on a alors accès à l’indice <code>i</code> <strong>et</strong> à la valeur <code>tab[i]</code>).</p>
<section id="itération-sur-les-valeurs" class="level3" data-number="6.1">
<h3 data-number="6.1" class="anchored" data-anchor-id="itération-sur-les-valeurs"><span class="header-section-number">6.1</span> Itération sur les valeurs</h3>
<p>On fait une itération sur les valeurs du tableau en utilisant le mot-clé <code>in</code>.</p>
<div class="cell" data-execution_count="32">
<div class="sourceCode cell-code" id="cb50" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb50-1">tab <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">17</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>]</span>
<span id="cb50-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> val <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> tab:</span>
<span id="cb50-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(val)</span></code></pre></div>
<p><span class="smallcaps">&gt;&gt;sortie</span></p>
<div class="cell-output cell-output-stdout">
<pre><code>12
-3
15
-9
17
7</code></pre>
</div>
</div>
</section>
<section id="itération-sur-les-indices" class="level3" data-number="6.2">
<h3 data-number="6.2" class="anchored" data-anchor-id="itération-sur-les-indices"><span class="header-section-number">6.2</span> Itération sur les indices</h3>
<p>C’est la méthode classique utilisée dans les langages impératifs.</p>
<div class="cell" data-execution_count="33">
<div class="sourceCode cell-code" id="cb52" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb52-1">t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">17</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>)</span>
<span id="cb52-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(t)):</span>
<span id="cb52-3">    val <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> t[i]</span>
<span id="cb52-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"indice:"</span>, i, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"valeur:"</span>, val)</span></code></pre></div>
<p><span class="smallcaps">&gt;&gt;sortie</span></p>
<div class="cell-output cell-output-stdout">
<pre><code>indice: 0 valeur: 12
indice: 1 valeur: -3
indice: 2 valeur: 15
indice: 3 valeur: -9
indice: 4 valeur: 17
indice: 5 valeur: 7</code></pre>
</div>
</div>
<div class="plus">
<div class="callout callout-style-simple callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-4-contents" aria-controls="callout-4" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
En plus
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-4" class="callout-4-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="plus">
<p>Même si le choix du nom des variables d’itération vous appartient, on a l’habitude d’utiliser:</p>
<ul>
<li><code>i</code>, <code>idx</code>, <code>j</code>, <code>k</code>… pour les index</li>
<li><code>val</code>, <code>v</code>, <code>e</code>… pour les valeurs des éléments du tableau.</li>
</ul>
</div>
</div>
</div>
</div>
</div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>Ces deux méthodes fonctionnent aussi bien avec les tuples que les listes, mais également avec les chaînes de caractères <code>str</code>.</p>
<div class="cell" data-execution_count="34">
<div class="sourceCode cell-code" id="cb54" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb54-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> lettre <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bonjour"</span>:</span>
<span id="cb54-2">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(lettre)</span></code></pre></div>
<p><span class="smallcaps">&gt;&gt;sortie</span></p>
<div class="cell-output cell-output-stdout">
<pre><code>B
o
n
j
o
u
r</code></pre>
</div>
</div>
<div class="cell" data-execution_count="35">
<div class="sourceCode cell-code" id="cb56" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb56-1">mot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bonjour"</span></span>
<span id="cb56-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(mot)):</span>
<span id="cb56-3">    val <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mot[i]</span>
<span id="cb56-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"indice:"</span>, i, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"valeur:"</span>, val)</span></code></pre></div>
<p><span class="smallcaps">&gt;&gt;sortie</span></p>
<div class="cell-output cell-output-stdout">
<pre><code>indice: 0 valeur: B
indice: 1 valeur: o
indice: 2 valeur: n
indice: 3 valeur: j
indice: 4 valeur: o
indice: 5 valeur: u
indice: 6 valeur: r</code></pre>
</div>
</div>
</div>
</div>


</section>
</section>

 ]]></description>
  <category>1NSI</category>
  <guid>https://www.lyceum.fr/2023-2024/1g/nsi/3-representation-des-donnees-types-construits/1-introduction-aux-tableaux/</guid>
  <pubDate>Thu, 16 May 2024 13:21:00 GMT</pubDate>
</item>
<item>
  <title>Chapitre 2: Usages avancés des tableaux</title>
  <link>https://www.lyceum.fr/2023-2024/1g/nsi/3-representation-des-donnees-types-construits/2-usages-avances-des-tableaux/</link>
  <description><![CDATA[ 




<div class="programme">
<div class="callout callout-style-simple callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Programme
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="programme">
<table class="table table-bordered table-hover">
<thead class="table-warning">
<tr class="header">
<th>Contenus</th>
<th>Capacités attendues</th>
<th>Commentaires</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Tableau indexé, tableau donné en compréhension</td>
<td><p>Lire et modifier les éléments d’un tableau grâce à leurs index.</p>
<p>Construire un tableau par compréhension.</p>
<p>Utiliser des tableaux de tableaux pour représenter des matrices, notation <code>a[i][j]</code></p>
<p>Itérer sur les éléments d’un tableau.</p></td>
<td><p>Seuls les tableaux dont les éléments sont du même type sont présentés.</p>
<p>Aucune connaissance des tranches (slices) n’est exigible.</p>
<p>L’aspect dynamique des tableaux de Python n’est pas évoqué.</p>
<p>Python identifie listes et tableaux.</p>
<p>Il n’est pas fait référence aux tableaux de la bibliothèque NumPy.</p></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<div>

</div>
<div class="intro quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p>Nous nous intéressons dans ce chapitre à quelques fonctions avancées des tableaux comme leur création <em>par compréhension</em> et l’utilisation de tableaux de tableaux pour représenter des données à deux dimensions comme une image par exemple.</p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p></p><figure class="wikimage figure"><picture>
			  <source type="image/webp" srcset="/img/-fWE2XuSIf-289.webp 289w, /img/-fWE2XuSIf-300.webp 300w, /img/-fWE2XuSIf-600.webp 600w" sizes="100vw">
  <source type="image/svg+xml" srcset="/img/-fWE2XuSIf-289.svg 289w" sizes="100vw">
				<img class="img-fluid figure-img" src="https://www.lyceum.fr/2023-2024/img/-fWE2XuSIf-289.webp" width="600" height="707" alt="Un tableau (dynamique) possède une taille varaiable, et on peut lui ajouter ou lui enlever des éléments après sa création et son stockage en mémoire." loading="lazy" decoding="async">
			</picture>
<figcaption id="caption">Un tableau (dynamique) possède une taille varaiable, et on peut lui ajouter ou lui enlever des éléments après sa création et son stockage en mémoire.</figcaption><figcaption id="credit">&nbsp;CC0&nbsp;<a id="image-description" href="//commons.wikimedia.org/wiki/File:Dynamic_array.svg">via Wikimedia Commons</a></figcaption></figure><p></p>
</div>
</div>
</div>
<section id="tableau-donné-en-compréhension" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="tableau-donné-en-compréhension"><span class="header-section-number">1</span> Tableau donné en compréhension</h2>
<p>Plutôt que de remplir un tableau par énumération de ces éléments dans une boucle, on peut définir des <a href="">listes en compréhension</a>, c’est-à-dire des listes dont le contenu est <em>défini par filtrage du contenu d’une autre liste</em>.</p>
<section id="boucle-classique" class="level3" data-number="1.1">
<h3 data-number="1.1" class="anchored" data-anchor-id="boucle-classique"><span class="header-section-number">1.1</span> Boucle classique</h3>
<p>On commence par créer une liste vide, puis, on ajoute grâce à une boucle les éléments un à un à la liste grâce à la méthode <code>append()</code>.</p>
<p>Voici par exemple comment créer une liste contenant les puissances de 2 de <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><msup><mn>2</mn><mn>1</mn></msup><annotation encoding="application/x-tex">2^1</annotation></semantics></math> à <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><msup><mn>2</mn><mn>12</mn></msup><annotation encoding="application/x-tex">2^{12}</annotation></semantics></math>.</p>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1">t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb1-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>):</span>
<span id="cb1-3">    t.append(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>i)</span>
<span id="cb1-4">t</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="1">
<pre><code>[1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096]</code></pre>
</div>
</div>
</section>
<section id="écriture-en-compréhension" class="level3" data-number="1.2">
<h3 data-number="1.2" class="anchored" data-anchor-id="écriture-en-compréhension"><span class="header-section-number">1.2</span> Écriture en compréhension</h3>
<p>Cette construction syntaxique offre des avantages de lisibilité et de concision et se rapproche de la notation utilisée en mathématiques :</p>
<p><math display="block" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>=</mo><mo stretchy="false" form="prefix">{</mo><msup><mn>2</mn><mi>n</mi></msup><mo stretchy="false" form="prefix">|</mo><mi>n</mi><mo>∈</mo><mi>ℕ</mi><mo>,</mo><mi>n</mi><mo>&lt;</mo><mn>13</mn><mo stretchy="false" form="postfix">}</mo></mrow><annotation encoding="application/x-tex">
S=\{2^{n} | n\in {\mathbb{N}}, n&lt;13\}
</annotation></semantics></math></p>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb3-1">t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>n <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> n <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>)]</span>
<span id="cb3-2">t</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="2">
<pre><code>[1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096]</code></pre>
</div>
</div>
<p>On peut même ajouter des conditions. Par exemple ici on crée une liste des puissances de 2 des puissances paires.</p>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb5-1">t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>n <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> n <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb5-2">t</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="3">
<pre><code>[1, 4, 16, 64, 256, 1024, 4096]</code></pre>
</div>
</div>
<div class="plus">
<div class="callout callout-style-simple callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-2-contents" aria-controls="callout-2" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
En plus: Syntaxe complète avec `else`
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-2" class="callout-2-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="plus" data-titre="Syntaxe complète avec `else`">
<p>Il est possible d’utiliser une clause <code>else</code> dans les conditions grâce à l’opérateur ternaire: <code>valeur_si_vrai if condition else valeur_si_faux</code></p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb7-1">[f(x) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> condition <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> g(x) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> sequence]</span></code></pre></div>
<p>Par exemple:</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb8-1">[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(i) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" est pair"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(i) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" est impair"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)]</span></code></pre></div>
<p>renvoie: <code>['0 est pair', '1 est impair', '2 est pair', '3 est impair', '4 est pair']</code></p>
</div>
</div>
</div>
</div>
</div>
</section>
</section>
<section id="tableaux-à-deux-dimensions-les-matrices" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="tableaux-à-deux-dimensions-les-matrices"><span class="header-section-number">2</span> Tableaux à deux dimensions: les matrices</h2>
<div>

</div>
<div class="quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p>Pour représenter un tableau de données, on peut utiliser une liste de liste. <math display="block" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="true" form="prefix">(</mo><mtable><mtr><mtd columnalign="center" style="text-align: center"><mn>1</mn></mtd><mtd columnalign="center" style="text-align: center"><mn>2</mn></mtd><mtd columnalign="center" style="text-align: center"><mn>3</mn></mtd></mtr><mtr><mtd columnalign="center" style="text-align: center"><mn>4</mn></mtd><mtd columnalign="center" style="text-align: center"><mn>5</mn></mtd><mtd columnalign="center" style="text-align: center"><mn>6</mn></mtd></mtr><mtr><mtd columnalign="center" style="text-align: center"><mn>7</mn></mtd><mtd columnalign="center" style="text-align: center"><mn>8</mn></mtd><mtd columnalign="center" style="text-align: center"><mn>9</mn></mtd></mtr></mtable><mo stretchy="true" form="postfix">)</mo></mrow><annotation encoding="application/x-tex">
\begin{pmatrix}
   1 &amp; 2 &amp; 3\\
   4 &amp; 5 &amp; 6\\
   7 &amp; 8 &amp; 9 
\end{pmatrix}
</annotation></semantics></math></p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p></p><figure class="wikimage figure"><picture>
			  <source type="image/webp" srcset="/img/yVBB2v0xKe-206.webp 206w, /img/yVBB2v0xKe-300.webp 300w, /img/yVBB2v0xKe-600.webp 600w" sizes="100vw">
  <source type="image/svg+xml" srcset="/img/yVBB2v0xKe-206.svg 206w" sizes="100vw">
				<img class="img-fluid figure-img" src="https://www.lyceum.fr/2023-2024/img/yVBB2v0xKe-206.webp" width="600" height="431" alt="Stockage d'un tableau dans une liste de listes." loading="lazy" decoding="async">
			</picture>
<figcaption id="caption">Stockage d'un tableau dans une liste de listes.</figcaption><figcaption id="credit">&nbsp;Public domain&nbsp;<a id="image-description" href="//commons.wikimedia.org/wiki/File:Array_of_array_storage.svg">via Wikimedia Commons</a></figcaption></figure><p></p>
</div>
</div>
</div>
<div class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb9-1">mat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>],</span>
<span id="cb9-2">       [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>],</span>
<span id="cb9-3">       [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>]]</span>
<span id="cb9-4">mat</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="4">
<pre><code>[[1, 2, 3], [4, 5, 6], [7, 8, 9]]</code></pre>
</div>
</div>
<section id="accès-aux-éléments" class="level3" data-number="2.1">
<h3 data-number="2.1" class="anchored" data-anchor-id="accès-aux-éléments"><span class="header-section-number">2.1</span> Accès aux éléments</h3>
<p>On accède alors aux éléments en précisant l’index de ligne et de colonne: <code>mat[i ligne][j colonne]</code>.</p>
<p>Par exemple pour accéder au troisième élément de la première ligne.</p>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb11-1">mat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="5">
<pre><code>3</code></pre>
</div>
</div>
<p>Accès au deuxième élément de la troisième ligne.</p>
<div class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb13-1">mat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="6">
<pre><code>8</code></pre>
</div>
</div>
</section>
<section id="accès-aux-lignes-et-colonnes" class="level3" data-number="2.2">
<h3 data-number="2.2" class="anchored" data-anchor-id="accès-aux-lignes-et-colonnes"><span class="header-section-number">2.2</span> Accès aux lignes et colonnes</h3>
<p>L’accès à une ligne est aisé, par exemple pour la deuxième ligne.</p>
<div class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb15-1">mat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="7">
<pre><code>[4, 5, 6]</code></pre>
</div>
</div>
<p>L’accès aux colonnes est plus délicat, on peut par exemple utiliser une liste en compréhension, par exemple pour accéder à la première colonne.</p>
<div class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb17-1">[ligne[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> ligne <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> mat]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="8">
<pre><code>[1, 4, 7]</code></pre>
</div>
</div>
</section>
<section id="itérations-sur-les-valeurs" class="level3" data-number="2.3">
<h3 data-number="2.3" class="anchored" data-anchor-id="itérations-sur-les-valeurs"><span class="header-section-number">2.3</span> Itérations sur les valeurs</h3>
<p>Comme il s’agit d’une structure imbriquée, nous devons utiliser deux boucles imbriquées.</p>
<p>On peut par exemple itérer sur les valeurs des lignes.</p>
<div class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb19-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> ligne <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> mat:</span>
<span id="cb19-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> val <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> ligne:</span>
<span id="cb19-3">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(val)</span></code></pre></div>
<p><span class="smallcaps">&gt;&gt;sortie</span></p>
<div class="cell-output cell-output-stdout">
<pre><code>1
2
3
4
5
6
7
8
9</code></pre>
</div>
</div>


</section>
</section>

 ]]></description>
  <category>1NSI</category>
  <guid>https://www.lyceum.fr/2023-2024/1g/nsi/3-representation-des-donnees-types-construits/2-usages-avances-des-tableaux/</guid>
  <pubDate>Thu, 16 May 2024 13:21:00 GMT</pubDate>
</item>
<item>
  <title>Chapitre 3: Dictionnaires</title>
  <link>https://www.lyceum.fr/2023-2024/1g/nsi/3-representation-des-donnees-types-construits/3-dictionnaires/</link>
  <description><![CDATA[ 




<div class="programme">
<div class="callout callout-style-simple callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Programme
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="programme">
<table class="table table-bordered table-hover">
<thead class="table-warning">
<tr class="header">
<th>Contenus</th>
<th>Capacités attendues</th>
<th>Commentaires</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Dictionnaires par clés et valeurs</td>
<td><p>Construire une entrée de dictionnaire</p>
<p>Itérer sur les éléments d’un dictionnaire.</p></td>
<td><p>Il est possible de présenter les données EXIF d’une image sous la forme d’un enregistrement.</p>
<p>En Python, les p-uplets nommés sont implémentés par des dictionnaires.</p>
<p>Utiliser les méthodes <code>keys()</code>, <code>values()</code> et <code>items()</code></p></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<div>

</div>
<div class="intro quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p>Dans un dictionnaire les valeurs de la collection ne sont pas repéré par un index, mais par une <em>clé</em>. Ils ne possèdent donc pas d’ordre a priori, c’est une structure <em>non-ordonnée</em>. Les dernières versions de Python assurent cependant un ordre lors de leur itération.</p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p></p><figure class="wikimage figure"><picture>
			  <source type="image/webp" srcset="/img/DfK9FySFiR-300.webp 300w, /img/DfK9FySFiR-688.svg 688w" sizes="100vw">
  <source type="image/svg+xml" srcset="/img/DfK9FySFiR-688.svg 688w" sizes="100vw">
				<img class="img-fluid figure-img" src="https://www.lyceum.fr/2023-2024/img/DfK9FySFiR-300.webp" width="688" height="261" alt="Les dictionnaires en Python sont ce que l'on appelle un tableau associatif." loading="lazy" decoding="async">
			</picture>
<figcaption id="caption">Les dictionnaires en Python sont ce que l'on appelle un tableau associatif.</figcaption><figcaption id="credit">&nbsp;Public domain&nbsp;<a id="image-description" href="//commons.wikimedia.org/wiki/File:Associative_array_as_linked_list.svg">via Wikimedia Commons</a></figcaption></figure><p></p>
</div>
</div>
</div>
<section id="syntaxe" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="syntaxe"><span class="header-section-number">1</span> Syntaxe</h2>
<p>Les dictionnaires sont entourés d’accolades <code>{}</code>. Les clés doivent être des objets <em>imuables</em>, typiquement des <code>str</code>.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1">{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'clé_1'</span>: valeur_1, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'clé_n'</span>: valeur_n, ...<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'clé_n'</span>: valeur_n}</span></code></pre></div>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb2-1">D <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> { <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'nom'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Lagaffe'</span> , <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'prenom'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Gaston'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'age'</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">22</span> }</span>
<span id="cb2-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(D)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="1">
<pre><code>dict</code></pre>
</div>
</div>
<p>Pour accéder aux éléments du dictionnaire, il suffit d’appeler la clé correspondante, d’autre part la fonction <code>len()</code> est également disponible.</p>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(D)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="2">
<pre><code>3</code></pre>
</div>
</div>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb6-1">D[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'nom'</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="3">
<pre><code>'Lagaffe'</code></pre>
</div>
</div>
<div class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb8-1">D[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'age'</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="4">
<pre><code>22</code></pre>
</div>
</div>
</section>
<section id="ajout-et-suppression-déléments" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="ajout-et-suppression-déléments"><span class="header-section-number">2</span> Ajout et suppression d’éléments</h2>
<p>Les dictionnaires étant <em><a href="https://fr.wiktionary.org/wiki/mutable">mutables</a></em>, on peut ajouter des éléments au dictionnaire en **assignant* des clés paire valeur à notre guise.</p>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb10-1">D[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"expression"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"M'enfin"</span></span>
<span id="cb10-2">D</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="5">
<pre><code>{'nom': 'Lagaffe', 'prenom': 'Gaston', 'age': 22, 'expression': "M'enfin"}</code></pre>
</div>
</div>
<p>On peut au contraire supprimer des éléments du dictionnaire avec la méthode <code>pop()</code>.</p>
<div class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb12-1">D.pop(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"age"</span>)</span>
<span id="cb12-2">D</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="6">
<pre><code>{'nom': 'Lagaffe', 'prenom': 'Gaston', 'expression': "M'enfin"}</code></pre>
</div>
</div>
</section>
<section id="autres-méthodes-des-dictionnaires" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="autres-méthodes-des-dictionnaires"><span class="header-section-number">3</span> Autres méthodes des dictionnaires</h2>
<p>Les méthodes des <code>dict</code>ionnaires sont décrites dans la <a href="https://docs.python.org/fr/3/library/stdtypes.html#sequence-types-list-tuple-range">documentation</a> ou grâce à l’appel <code>help(tuple)</code>, outre les méthodes d’itération il peut être utile de connaitre la méthode <code>get(clé)</code> qui renvoie la valeur associée à l clé ou <code>None</code> si la clé n’existe pas.</p>
<p>Cela permet d’éviter les exceptions du type <code>KeyError</code> si la clé n’existe pas.</p>
<div class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb14-1">D</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="7">
<pre><code>{'nom': 'Lagaffe', 'prenom': 'Gaston', 'expression': "M'enfin"}</code></pre>
</div>
</div>
<p>Par exemple, la clé <code>age</code> n’existe plus donc la syntaxe d’accés par clé renvoir une erreur.</p>
<div class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(D[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nom"</span>])</span>
<span id="cb16-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(D[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"prenom"</span>])</span>
<span id="cb16-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(D[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"age"</span>])</span></code></pre></div>
<p><span class="smallcaps">&gt;&gt;sortie</span></p>
<div class="cell-output cell-output-stdout">
<pre><code>Lagaffe
Gaston</code></pre>
</div>
<p><span class="smallcaps">&gt;&gt;sortie</span></p>
<div class="cell-output cell-output-error">
<pre><code>KeyError: 'age'</code></pre>
</div>
</div>
<p>Par contre, la méthode <code>get()</code> ne générera pas la <code>KeyError</code> et renverra <code>None</code> la clé n’existe pas.</p>
<div class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb19-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(D.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nom"</span>))</span>
<span id="cb19-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(D.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"prenom"</span>))</span>
<span id="cb19-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(D.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"age"</span>))</span></code></pre></div>
<p><span class="smallcaps">&gt;&gt;sortie</span></p>
<div class="cell-output cell-output-stdout">
<pre><code>Lagaffe
Gaston
None</code></pre>
</div>
</div>
<div class="plus">
<div class="callout callout-style-simple callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-2-contents" aria-controls="callout-2" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
En plus: Documentation des dictionnaires
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-2" class="callout-2-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="plus" data-titre="Documentation des dictionnaires">
<div class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb21-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">help</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>)</span></code></pre></div>
<p><span class="smallcaps">&gt;&gt;sortie</span></p>
<div class="cell-output cell-output-stdout">
<pre><code>Help on class dict in module builtins:

class dict(object)
 |  dict() -&gt; new empty dictionary
 |  dict(mapping) -&gt; new dictionary initialized from a mapping object's
 |      (key, value) pairs
 |  dict(iterable) -&gt; new dictionary initialized as if via:
 |      d = {}
 |      for k, v in iterable:
 |          d[k] = v
 |  dict(**kwargs) -&gt; new dictionary initialized with the name=value pairs
 |      in the keyword argument list.  For example:  dict(one=1, two=2)
 |  
 |  Built-in subclasses:
 |      StgDict
 |  
 |  Methods defined here:
 |  
 |  __contains__(self, key, /)
 |      True if the dictionary has the specified key, else False.
 |  
 |  __delitem__(self, key, /)
 |      Delete self[key].
 |  
 |  __eq__(self, value, /)
 |      Return self==value.
 |  
 |  __ge__(self, value, /)
 |      Return self&gt;=value.
 |  
 |  __getattribute__(self, name, /)
 |      Return getattr(self, name).
 |  
 |  __getitem__(...)
 |      x.__getitem__(y) &lt;==&gt; x[y]
 |  
 |  __gt__(self, value, /)
 |      Return self&gt;value.
 |  
 |  __init__(self, /, *args, **kwargs)
 |      Initialize self.  See help(type(self)) for accurate signature.
 |  
 |  __ior__(self, value, /)
 |      Return self|=value.
 |  
 |  __iter__(self, /)
 |      Implement iter(self).
 |  
 |  __le__(self, value, /)
 |      Return self&lt;=value.
 |  
 |  __len__(self, /)
 |      Return len(self).
 |  
 |  __lt__(self, value, /)
 |      Return self&lt;value.
 |  
 |  __ne__(self, value, /)
 |      Return self!=value.
 |  
 |  __or__(self, value, /)
 |      Return self|value.
 |  
 |  __repr__(self, /)
 |      Return repr(self).
 |  
 |  __reversed__(self, /)
 |      Return a reverse iterator over the dict keys.
 |  
 |  __ror__(self, value, /)
 |      Return value|self.
 |  
 |  __setitem__(self, key, value, /)
 |      Set self[key] to value.
 |  
 |  __sizeof__(...)
 |      D.__sizeof__() -&gt; size of D in memory, in bytes
 |  
 |  clear(...)
 |      D.clear() -&gt; None.  Remove all items from D.
 |  
 |  copy(...)
 |      D.copy() -&gt; a shallow copy of D
 |  
 |  get(self, key, default=None, /)
 |      Return the value for key if key is in the dictionary, else default.
 |  
 |  items(...)
 |      D.items() -&gt; a set-like object providing a view on D's items
 |  
 |  keys(...)
 |      D.keys() -&gt; a set-like object providing a view on D's keys
 |  
 |  pop(...)
 |      D.pop(k[,d]) -&gt; v, remove specified key and return the corresponding value.
 |      
 |      If the key is not found, return the default if given; otherwise,
 |      raise a KeyError.
 |  
 |  popitem(self, /)
 |      Remove and return a (key, value) pair as a 2-tuple.
 |      
 |      Pairs are returned in LIFO (last-in, first-out) order.
 |      Raises KeyError if the dict is empty.
 |  
 |  setdefault(self, key, default=None, /)
 |      Insert key with a value of default if key is not in the dictionary.
 |      
 |      Return the value for key if key is in the dictionary, else default.
 |  
 |  update(...)
 |      D.update([E, ]**F) -&gt; None.  Update D from dict/iterable E and F.
 |      If E is present and has a .keys() method, then does:  for k in E: D[k] = E[k]
 |      If E is present and lacks a .keys() method, then does:  for k, v in E: D[k] = v
 |      In either case, this is followed by: for k in F:  D[k] = F[k]
 |  
 |  values(...)
 |      D.values() -&gt; an object providing a view on D's values
 |  
 |  ----------------------------------------------------------------------
 |  Class methods defined here:
 |  
 |  __class_getitem__(...) from builtins.type
 |      See PEP 585
 |  
 |  fromkeys(iterable, value=None, /) from builtins.type
 |      Create a new dictionary with keys from iterable and values set to value.
 |  
 |  ----------------------------------------------------------------------
 |  Static methods defined here:
 |  
 |  __new__(*args, **kwargs) from builtins.type
 |      Create and return a new object.  See help(type) for accurate signature.
 |  
 |  ----------------------------------------------------------------------
 |  Data and other attributes defined here:
 |  
 |  __hash__ = None
</code></pre>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="itération-sur-les-dictionnaires" class="level2" data-number="4">
<h2 data-number="4" class="anchored" data-anchor-id="itération-sur-les-dictionnaires"><span class="header-section-number">4</span> Itération sur les dictionnaires</h2>
<p>Les dictionnaires étant des associations de clés(<em>keys</em>) et de valeurs(<em>values</em>), il existe trois méthodes pour <em>itérer</em> sur les clés, les valeurs ou les deux.</p>
<section id="itération-sur-les-clés-keys" class="level3" data-number="4.1">
<h3 data-number="4.1" class="anchored" data-anchor-id="itération-sur-les-clés-keys"><span class="header-section-number">4.1</span> Itération sur les clés: <code>keys()</code></h3>
<div class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb23-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> key <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> D.keys():</span>
<span id="cb23-2">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(key)</span></code></pre></div>
<p><span class="smallcaps">&gt;&gt;sortie</span></p>
<div class="cell-output cell-output-stdout">
<pre><code>nom
prenom
expression</code></pre>
</div>
</div>
<p>Ou plus simplement.</p>
<div class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb25-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> key <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> D:</span>
<span id="cb25-2">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(key)</span></code></pre></div>
<p><span class="smallcaps">&gt;&gt;sortie</span></p>
<div class="cell-output cell-output-stdout">
<pre><code>nom
prenom
expression</code></pre>
</div>
</div>
</section>
<section id="itération-sur-les-valeurs-values" class="level3" data-number="4.2">
<h3 data-number="4.2" class="anchored" data-anchor-id="itération-sur-les-valeurs-values"><span class="header-section-number">4.2</span> Itération sur les valeurs: <code>values()</code></h3>
<div class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb27-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> value <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> D.values():</span>
<span id="cb27-2">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(value)</span></code></pre></div>
<p><span class="smallcaps">&gt;&gt;sortie</span></p>
<div class="cell-output cell-output-stdout">
<pre><code>Lagaffe
Gaston
M'enfin</code></pre>
</div>
</div>
</section>
<section id="itération-sur-les-paires-clé-valeurs-items" class="level3" data-number="4.3">
<h3 data-number="4.3" class="anchored" data-anchor-id="itération-sur-les-paires-clé-valeurs-items"><span class="header-section-number">4.3</span> Itération sur les paires clé, valeurs: <code>items()</code></h3>
<div class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb29-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> key, value <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> D.items():</span>
<span id="cb29-2">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(key, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'=&gt;'</span>, value)</span></code></pre></div>
<p><span class="smallcaps">&gt;&gt;sortie</span></p>
<div class="cell-output cell-output-stdout">
<pre><code>nom =&gt; Lagaffe
prenom =&gt; Gaston
expression =&gt; M'enfin</code></pre>
</div>
</div>
</section>
</section>
<section id="p-uplets-nommés" class="level2" data-number="5">
<h2 data-number="5" class="anchored" data-anchor-id="p-uplets-nommés"><span class="header-section-number">5</span> p-uplets nommés</h2>
<p>Il est possible de créer des p-uplets nommés afin de pouvoir accéder aux éléments de la collection par clé. Contrairement aux dictionnaires, ils sont immutables et donc potentiellement plus performants, ils sont cependant peu utilisés et nécessite d’être importé par le module <code>collections</code> avant d’être utilisé.</p>
<div class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb31-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> collections <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> namedtuple</span>
<span id="cb31-2"></span>
<span id="cb31-3">Eleve <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> namedtuple(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Eleve'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'nom, age, classe, spécialité'</span>)</span>
<span id="cb31-4">e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Eleve(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"John"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">17</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1g"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nsi"</span> )</span>
<span id="cb31-5">e</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="15">
<pre><code>Eleve(nom='John', age=17, classe='1g', spécialité='nsi')</code></pre>
</div>
</div>
<p>L’accès peut se faire en ajoutant un point et le nom de la clé. Il s’agit d’une <em>notation pointée</em> comme dans le cas d’appel de méthodes, cependant il n’y a pas de parenthèses, car il s’agit de valeurs et non de fonctions(On parle d’attributs de l’objet).</p>
<div class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb33-1">e.age</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="16">
<pre><code>17</code></pre>
</div>
</div>
<div class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb35-1">e.spécialité</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="17">
<pre><code>'nsi'</code></pre>
</div>
</div>
</section>
<section id="structures-imbriquées-avec-les-dictionnaires" class="level2" data-number="6">
<h2 data-number="6" class="anchored" data-anchor-id="structures-imbriquées-avec-les-dictionnaires"><span class="header-section-number">6</span> Structures imbriquées avec les dictionnaires</h2>
<p>Tout comme nous avons vu les tableaux de tableau dans le chapitre précédent, il est possible d’imaginer des structures imbriquées avec des dictionnaires.</p>
<p>On va s’intéresser plus particulièrement à une liste de dictionnaire qui pourrait être obtenue par lecture d’un fichier de données <code>csv</code>.</p>


</section>

 ]]></description>
  <category>1NSI</category>
  <guid>https://www.lyceum.fr/2023-2024/1g/nsi/3-representation-des-donnees-types-construits/3-dictionnaires/</guid>
  <pubDate>Thu, 16 May 2024 13:21:00 GMT</pubDate>
</item>
<item>
  <title>Chapitre 1: Tables de données</title>
  <link>https://www.lyceum.fr/2023-2024/1g/nsi/4-traitement-de-donnees-en-tables/1-tables-de-donnees/</link>
  <description><![CDATA[ 




<div class="programme">
<div class="callout callout-style-simple callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Programme
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="programme">
<table class="table table-bordered table-hover">
<thead class="table-warning">
<tr class="header">
<th>Contenus</th>
<th>Capacités attendues</th>
<th>Commentaires</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Indexation de tables</td>
<td>Importer une table depuis un fichier texte tabulé ou un fichier CSV.</td>
<td>Est utilisé un tableau doublement indexé ou un tableau de p-uplets qui partagent les mêmes descripteurs.</td>
</tr>
<tr class="even">
<td>Recherche dans une table</td>
<td>Rechercher les lignes d’une table vérifiant des critères exprimés en logique propositionnelle.</td>
<td>La recherche de doublons, les tests de cohérence d’une table sont présentés.</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<div>

</div>
<div class="intro quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p>Avec l’augmentation des capacités de stockage, on sauvegarde de plus en plus de données en vue de les traiter ultérieurement afin de leur donner une valeur ajoutée. On appelle ainsi les données: “Le nouvel or noir”. Dans ce chapitre, nous allons apprendre à lire des données à partir de fichiers <a href="../../../../2gt/snt/4-les-donnees-structurees-et-leur-traitement/1-donnees"><code>csv</code></a> afin d’y accéder sous forme de <a href="../../../../1g/nsi/3-representation-des-donnees-types-construits">type construits</a> imbriqués: nous utiliserons des listes de dictionnaires.</p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p></p><figure class="wikimage figure"><picture>
			  <source type="image/webp" srcset="/img/U_ts4e1GMh-298.webp 298w" sizes="100vw">
  <source type="image/jpeg" srcset="/img/U_ts4e1GMh-298.jpeg 298w" sizes="100vw">
				<img class="img-fluid figure-img" src="https://www.lyceum.fr/2023-2024/img/U_ts4e1GMh-298.webp" width="298" height="239" alt="Le format csv est un langage répandu dans le monde des données car il est à la fois exploitable aisément par les langages de programmation mais également par les logiciels de tableur." loading="lazy" decoding="async">
			</picture>
<figcaption id="caption">Le format csv est un langage répandu dans le monde des données car il est à la fois exploitable aisément par les langages de programmation mais également par les logiciels de tableur.</figcaption><figcaption id="credit">©&nbsp;&nbsp;CC BY-SA 4.0&nbsp;<a id="image-description" href="//commons.wikimedia.org/wiki/File:CSV_Logo_dt_RGB.jpg">via Wikimedia Commons</a></figcaption></figure><p></p>
</div>
</div>
</div>
<section id="le-format-csv" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="le-format-csv"><span class="header-section-number">1</span> Le format <code>csv</code></h2>
<p>Vous avez l’habitude d’utiliser un tableur pour traiter des tables de données.</p>
<p>Cependant, le problème de compatibilité des fichiers entre les divers logiciels de tableur fait que l’informaticien préfère souvent des formats textuels simples comme le <code>csv</code> ou encore le <code>xml</code> ou le <code>json</code>(voir le cours de <a href="../../../../2gt/snt/1-les-donnees-structurees/1-les-donnees-structurees">snt</a>.</p>
<dl>
<dt>
csv
</dt>
<dd>
<div>
<p>Le format <code>csv</code> pour <em>comma separated values</em> est un format de fichier textuel dans lequel les colonnes données sont <em>séparées par des virgules</em>.</p>
</div>
</dd>
</dl>
<p>Les descripteurs de colonnes sont placés sur la première ligne et les autres lignes correspondent aux entrées du tableau.</p>
<p>Tous les logiciels de tableur et langages de programmation peuvent facilement lire ou écrire ces fichiers.</p>
<div class="example">
<p>Voici l’exemple d’un fichier de notes généré par le logiciel Pronote.</p>
<pre><code>Mentions,1/2j abs,Rang,Moyenne Générale,MATHEMATIQUES,PHYSIQUE-CHIMIE,NSI
Félicitations,3,1,17.4,15.3,15.5,18,18.5
Encouragements,5,13,10.1,8,10,15,12.4</code></pre>
</div>
<div class="plus">
<div class="callout callout-style-simple callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-2-contents" aria-controls="callout-2" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
En plus
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-2" class="callout-2-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="plus">
<p>On utilise parfois la tabulation (ou le point-virgule) comme séparateur pour une lecture plus aisée par l’homme, et ne pas être gêné par le fait que nous autres français utilisons la virgule comme séparateur décimal!</p>
<pre><code>Mentions        1/2j abs    Rang    Moyenne Générale    MATHEMATIQUES   PHYSIQUE-CHIMIE NSI
Félicitations   3           1       17.4    15.3        15.5            18              18.5
Encouragements  5           13      10.1    8           10              15              12.4</code></pre>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="lecture-dun-fichier-csv-en-python" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="lecture-dun-fichier-csv-en-python"><span class="header-section-number">2</span> Lecture d’un fichier <code>csv</code> en Python</h2>
<p>Python propose un module <code>csv</code> spécialisé avec notamment une classe <code>DictReader</code> qui permet de lire les lignes du fichier <code>csv</code> sous la forme de dictionnaires.</p>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> csv</span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Lecture du fichier</span></span>
<span id="cb3-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'./data/notes.csv'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> csvfile:</span>
<span id="cb3-5">    reader <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> csv.DictReader(csvfile)</span>
<span id="cb3-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Itération sur les lignes</span></span>
<span id="cb3-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> ligne <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> reader:</span>
<span id="cb3-8">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(ligne)</span></code></pre></div>
<p><span class="smallcaps">&gt;&gt;sortie</span></p>
<div class="cell-output cell-output-stdout">
<pre><code>{'Nom': 'OBUQW', 'Mentions': 'Félicitations', '1/2j abs': '3', 'Rang': '1', 'Moyenne Générale': '17.4', 'MATHEMATIQUES': '18', 'PHYSIQUE-CHIMIE': '18.5', 'NSI': '17.7'}
{'Nom': 'XYYVQ', 'Mentions': 'Félicitations', '1/2j abs': '5', 'Rang': '1', 'Moyenne Générale': '18.1', 'MATHEMATIQUES': '19.2', 'PHYSIQUE-CHIMIE': '18', 'NSI': '19'}
{'Nom': 'SJOLY', 'Mentions': 'Félicitations', '1/2j abs': '', 'Rang': '1', 'Moyenne Générale': '18.2', 'MATHEMATIQUES': '19.2', 'PHYSIQUE-CHIMIE': '17', 'NSI': '19.1'}
{'Nom': 'CAOZY', 'Mentions': 'Félicitations', '1/2j abs': '1', 'Rang': '2', 'Moyenne Générale': '17', 'MATHEMATIQUES': '18.5', 'PHYSIQUE-CHIMIE': '17.5', 'NSI': '17.9'}
{'Nom': 'NULRT', 'Mentions': 'Félicitations', '1/2j abs': '2', 'Rang': '2', 'Moyenne Générale': '17.6', 'MATHEMATIQUES': '17.8', 'PHYSIQUE-CHIMIE': '18.5', 'NSI': '17.5'}
{'Nom': 'SATNL', 'Mentions': 'Félicitations', '1/2j abs': '4', 'Rang': '2', 'Moyenne Générale': '17', 'MATHEMATIQUES': '17.5', 'PHYSIQUE-CHIMIE': '17.5', 'NSI': '18.6'}
{'Nom': 'BXARC', 'Mentions': 'Félicitations', '1/2j abs': '15', 'Rang': '2', 'Moyenne Générale': '18.1', 'MATHEMATIQUES': '19.4', 'PHYSIQUE-CHIMIE': '19', 'NSI': '16.6'}
{'Nom': 'UFXVM', 'Mentions': 'Félicitations', '1/2j abs': '1', 'Rang': '3', 'Moyenne Générale': '17.6', 'MATHEMATIQUES': '18.6', 'PHYSIQUE-CHIMIE': '17.5', 'NSI': '16.5'}
{'Nom': 'ASLZS', 'Mentions': 'Félicitations', '1/2j abs': '6', 'Rang': '3', 'Moyenne Générale': '17.8', 'MATHEMATIQUES': '19.4', 'PHYSIQUE-CHIMIE': '19', 'NSI': '17.8'}
{'Nom': 'PIGCD', 'Mentions': 'Félicitations', '1/2j abs': '9', 'Rang': '3', 'Moyenne Générale': '17.8', 'MATHEMATIQUES': '18.9', 'PHYSIQUE-CHIMIE': '20', 'NSI': '17.6'}
{'Nom': 'NBQVQ', 'Mentions': 'Félicitations', '1/2j abs': '1', 'Rang': '4', 'Moyenne Générale': '16.5', 'MATHEMATIQUES': '17.6', 'PHYSIQUE-CHIMIE': '16.5', 'NSI': '17.2'}
{'Nom': 'IXHGB', 'Mentions': 'Félicitations', '1/2j abs': '4', 'Rang': '17.4', 'Moyenne Générale': '17.3', 'MATHEMATIQUES': '17', 'PHYSIQUE-CHIMIE': '17.9', 'NSI': '16'}
{'Nom': 'HKYCU', 'Mentions': 'Félicitations', '1/2j abs': '2', 'Rang': '5', 'Moyenne Générale': '16.4', 'MATHEMATIQUES': '18.1', 'PHYSIQUE-CHIMIE': '17', 'NSI': '17.9'}
{'Nom': 'XRZOA', 'Mentions': 'Félicitations', '1/2j abs': '9', 'Rang': '5', 'Moyenne Générale': '16.6', 'MATHEMATIQUES': '18.3', 'PHYSIQUE-CHIMIE': '17.5', 'NSI': '14.7'}
{'Nom': 'SEXRW', 'Mentions': 'Félicitations', '1/2j abs': '16', 'Rang': '5', 'Moyenne Générale': '17.1', 'MATHEMATIQUES': '17.8', 'PHYSIQUE-CHIMIE': '16', 'NSI': '18.8'}
{'Nom': 'FROXY', 'Mentions': 'Félicitations', '1/2j abs': '6', 'Rang': '6', 'Moyenne Générale': '16.3', 'MATHEMATIQUES': '19.3', 'PHYSIQUE-CHIMIE': '17', 'NSI': '15'}
{'Nom': 'MPBWD', 'Mentions': 'Félicitations', '1/2j abs': '7', 'Rang': '6', 'Moyenne Générale': '16.5', 'MATHEMATIQUES': '17', 'PHYSIQUE-CHIMIE': '17', 'NSI': '16.7'}
{'Nom': 'PAZCW', 'Mentions': 'Félicitations', '1/2j abs': '6', 'Rang': '16.4', 'Moyenne Générale': '13.3', 'MATHEMATIQUES': '17', 'PHYSIQUE-CHIMIE': '16.8', 'NSI': '13.5'}
{'Nom': 'XOWON', 'Mentions': 'Félicitations', '1/2j abs': '3', 'Rang': '7', 'Moyenne Générale': '15.4', 'MATHEMATIQUES': '15.2', 'PHYSIQUE-CHIMIE': '16', 'NSI': '16.4'}
{'Nom': 'XSXJX', 'Mentions': 'Félicitations', '1/2j abs': '8', 'Rang': '7', 'Moyenne Générale': '15.4', 'MATHEMATIQUES': '16.2', 'PHYSIQUE-CHIMIE': '12.5', 'NSI': '16.6'}
{'Nom': 'RRWVF', 'Mentions': 'Félicitations', '1/2j abs': '12', 'Rang': '7', 'Moyenne Générale': '15.5', 'MATHEMATIQUES': '14.4', 'PHYSIQUE-CHIMIE': '15', 'NSI': '16.4'}
{'Nom': 'VFQIV', 'Mentions': 'Félicitations', '1/2j abs': '11', 'Rang': '8', 'Moyenne Générale': '14.5', 'MATHEMATIQUES': '14.4', 'PHYSIQUE-CHIMIE': '13', 'NSI': '10.3'}
{'Nom': 'WGLOT', 'Mentions': 'Compliments', '1/2j abs': '8', 'Rang': '14', 'Moyenne Générale': '12', 'MATHEMATIQUES': '16', 'PHYSIQUE-CHIMIE': '11.8', 'NSI': '13.5'}
{'Nom': 'YPSAM', 'Mentions': 'Félicitations', '1/2j abs': '8', 'Rang': '14.6', 'Moyenne Générale': '13.3', 'MATHEMATIQUES': '14.5', 'PHYSIQUE-CHIMIE': '14.5', 'NSI': '19'}
{'Nom': 'AYFHQ', 'Mentions': 'Compliments', '1/2j abs': '2', 'Rang': '9', 'Moyenne Générale': '13.9', 'MATHEMATIQUES': '13.5', 'PHYSIQUE-CHIMIE': '13.5', 'NSI': '14.2'}
{'Nom': 'QCTQB', 'Mentions': 'Félicitations', '1/2j abs': '6', 'Rang': '9', 'Moyenne Générale': '14.4', 'MATHEMATIQUES': '14.1', 'PHYSIQUE-CHIMIE': '11', 'NSI': '11.1'}
{'Nom': 'MXVIJ', 'Mentions': 'Compliments', '1/2j abs': '8', 'Rang': '9', 'Moyenne Générale': '13.7', 'MATHEMATIQUES': '13', 'PHYSIQUE-CHIMIE': '12', 'NSI': '11.2'}
{'Nom': 'UQAYM', 'Mentions': 'Compliments', '1/2j abs': '2', 'Rang': '10', 'Moyenne Générale': '13.9', 'MATHEMATIQUES': '14', 'PHYSIQUE-CHIMIE': '11', 'NSI': '14.8'}
{'Nom': 'TFIAB', 'Mentions': 'Félicitations', '1/2j abs': '4', 'Rang': '10', 'Moyenne Générale': '13.6', 'MATHEMATIQUES': '14.2', 'PHYSIQUE-CHIMIE': '13', 'NSI': '13.3'}
{'Nom': 'NHLZR', 'Mentions': 'Compliments', '1/2j abs': '14', 'Rang': '10', 'Moyenne Générale': '13.9', 'MATHEMATIQUES': '13.7', 'PHYSIQUE-CHIMIE': '11.5', 'NSI': '15.4'}
{'Nom': 'XPVXR', 'Mentions': 'Compliments', '1/2j abs': '10', 'Rang': '13.9', 'Moyenne Générale': '11', 'MATHEMATIQUES': '14', 'PHYSIQUE-CHIMIE': '14.2', 'NSI': '19.5'}
{'Nom': 'OLQBO', 'Mentions': 'Félicitations', '1/2j abs': '14', 'Rang': '11', 'Moyenne Générale': '13.5', 'MATHEMATIQUES': '12.8', 'PHYSIQUE-CHIMIE': '13', 'NSI': '11.2'}
{'Nom': 'CUTBU', 'Mentions': 'Compliments', '1/2j abs': '11', 'Rang': '13.6', 'Moyenne Générale': '12.3', 'MATHEMATIQUES': '11.5', 'PHYSIQUE-CHIMIE': '13.6', 'NSI': '14.5'}
{'Nom': 'SQVNH', 'Mentions': 'Pas de mention', '1/2j abs': '2', 'Rang': '12', 'Moyenne Générale': '13.8', 'MATHEMATIQUES': '15', 'PHYSIQUE-CHIMIE': '16', 'NSI': '12.4'}
{'Nom': 'TVMRA', 'Mentions': 'Pas de mention', '1/2j abs': '65', 'Rang': '12', 'Moyenne Générale': '13.5', 'MATHEMATIQUES': '8', 'PHYSIQUE-CHIMIE': '', 'NSI': '18'}
{'Nom': 'KTBYW', 'Mentions': 'Compliments', '1/2j abs': '12', 'Rang': '13.5', 'Moyenne Générale': '12.7', 'MATHEMATIQUES': '12.5', 'PHYSIQUE-CHIMIE': '13.9', 'NSI': '14'}
{'Nom': 'VGANB', 'Mentions': 'Compliments', '1/2j abs': '2', 'Rang': '13', 'Moyenne Générale': '13.5', 'MATHEMATIQUES': '13.3', 'PHYSIQUE-CHIMIE': '11.5', 'NSI': '15.7'}
{'Nom': 'MXRPG', 'Mentions': 'Pas de mention', '1/2j abs': '7', 'Rang': '13', 'Moyenne Générale': '13.4', 'MATHEMATIQUES': '15.8', 'PHYSIQUE-CHIMIE': '15', 'NSI': '11.1'}
{'Nom': 'CPIZF', 'Mentions': 'Compliments', '1/2j abs': '13', 'Rang': '13.4', 'Moyenne Générale': '15', 'MATHEMATIQUES': '12.5', 'PHYSIQUE-CHIMIE': '12.6', 'NSI': '14.5'}
{'Nom': 'ZWSPZ', 'Mentions': 'Compliments', '1/2j abs': '3', 'Rang': '14', 'Moyenne Générale': '13.5', 'MATHEMATIQUES': '11.3', 'PHYSIQUE-CHIMIE': '9', 'NSI': '17'}
{'Nom': 'UVLPZ', 'Mentions': 'Compliments', '1/2j abs': '', 'Rang': '14', 'Moyenne Générale': '12.9', 'MATHEMATIQUES': '12.4', 'PHYSIQUE-CHIMIE': '8', 'NSI': '10.1'}
{'Nom': 'VZWHE', 'Mentions': 'Compliments', '1/2j abs': '14', 'Rang': '13.1', 'Moyenne Générale': '13.3', 'MATHEMATIQUES': '12', 'PHYSIQUE-CHIMIE': '12.6', 'NSI': '20'}
{'Nom': 'FVEWG', 'Mentions': 'Compliments', '1/2j abs': '1', 'Rang': '15', 'Moyenne Générale': '13', 'MATHEMATIQUES': '14.2', 'PHYSIQUE-CHIMIE': '12.5', 'NSI': '11.1'}
{'Nom': 'OYQHD', 'Mentions': 'Compliments', '1/2j abs': '4', 'Rang': '15', 'Moyenne Générale': '13.3', 'MATHEMATIQUES': '12.7', 'PHYSIQUE-CHIMIE': '13.5', 'NSI': '10'}
{'Nom': 'HAUAK', 'Mentions': 'Pas de mention', '1/2j abs': '', 'Rang': '15', 'Moyenne Générale': '12.8', 'MATHEMATIQUES': '16', 'PHYSIQUE-CHIMIE': '15', 'NSI': '7.1'}
{'Nom': 'LYHYD', 'Mentions': 'Compliments', '1/2j abs': '2', 'Rang': '16', 'Moyenne Générale': '13.2', 'MATHEMATIQUES': '13.3', 'PHYSIQUE-CHIMIE': '11.5', 'NSI': '13.1'}
{'Nom': 'QAKEG', 'Mentions': 'Compliments', '1/2j abs': '5', 'Rang': '16', 'Moyenne Générale': '12.9', 'MATHEMATIQUES': '11.1', 'PHYSIQUE-CHIMIE': '11', 'NSI': '13.3'}
{'Nom': 'FFHOD', 'Mentions': "Mise en garde pour l'assiduité", '1/2j abs': '25', 'Rang': '16', 'Moyenne Générale': '12.6', 'MATHEMATIQUES': '10.5', 'PHYSIQUE-CHIMIE': '13', 'NSI': '13.9'}
{'Nom': 'KBYPL', 'Mentions': 'Pas de mention', '1/2j abs': '3', 'Rang': '17', 'Moyenne Générale': '12.8', 'MATHEMATIQUES': '12.9', 'PHYSIQUE-CHIMIE': '14', 'NSI': '14.3'}
{'Nom': 'VBNMW', 'Mentions': 'Compliments', '1/2j abs': '4', 'Rang': '17', 'Moyenne Générale': '13', 'MATHEMATIQUES': '12.6', 'PHYSIQUE-CHIMIE': '11', 'NSI': '13.7'}
{'Nom': 'BQDCH', 'Mentions': 'Compliments', '1/2j abs': '17', 'Rang': '17', 'Moyenne Générale': '12.6', 'MATHEMATIQUES': '10.7', 'PHYSIQUE-CHIMIE': '8', 'NSI': '13.2'}
{'Nom': 'IPKWS', 'Mentions': 'Compliments', '1/2j abs': '17', 'Rang': '18', 'Moyenne Générale': '12.5', 'MATHEMATIQUES': '11.4', 'PHYSIQUE-CHIMIE': '12', 'NSI': '10.5'}
{'Nom': 'PKXYT', 'Mentions': 'Pas de mention', '1/2j abs': '33', 'Rang': '18', 'Moyenne Générale': '12.6', 'MATHEMATIQUES': '7.7', 'PHYSIQUE-CHIMIE': '12', 'NSI': '14.3'}
{'Nom': 'PCEPU', 'Mentions': 'Pas de mention', '1/2j abs': '46', 'Rang': '18', 'Moyenne Générale': '12.9', 'MATHEMATIQUES': '8.2', 'PHYSIQUE-CHIMIE': '', 'NSI': '14.2'}
{'Nom': 'OFUTJ', 'Mentions': 'Compliments', '1/2j abs': '6', 'Rang': '19', 'Moyenne Générale': '12.6', 'MATHEMATIQUES': '10.8', 'PHYSIQUE-CHIMIE': '10.5', 'NSI': '12.5'}
{'Nom': 'MFPNQ', 'Mentions': 'Encouragements', '1/2j abs': '7', 'Rang': '19', 'Moyenne Générale': '12.6', 'MATHEMATIQUES': '12', 'PHYSIQUE-CHIMIE': '12.5', 'NSI': '11.2'}
{'Nom': 'YLDOS', 'Mentions': 'Encouragements', '1/2j abs': '21', 'Rang': '19', 'Moyenne Générale': '12.2', 'MATHEMATIQUES': '14', 'PHYSIQUE-CHIMIE': '14', 'NSI': '9.5'}
{'Nom': 'REAJE', 'Mentions': 'Encouragements', '1/2j abs': '4', 'Rang': '20', 'Moyenne Générale': '12.6', 'MATHEMATIQUES': '14.2', 'PHYSIQUE-CHIMIE': '11.5', 'NSI': '13.7'}
{'Nom': 'DRHQA', 'Mentions': 'Encouragements', '1/2j abs': '4', 'Rang': '20', 'Moyenne Générale': '12.5', 'MATHEMATIQUES': '10.6', 'PHYSIQUE-CHIMIE': '10', 'NSI': '12.3'}
{'Nom': 'UOZMK', 'Mentions': 'Encouragements', '1/2j abs': '16', 'Rang': '20', 'Moyenne Générale': '12.1', 'MATHEMATIQUES': '12.4', 'PHYSIQUE-CHIMIE': '9', 'NSI': '11'}
{'Nom': 'YEXND', 'Mentions': 'Encouragements', '1/2j abs': '3', 'Rang': '21', 'Moyenne Générale': '12.6', 'MATHEMATIQUES': '13.2', 'PHYSIQUE-CHIMIE': '14.5', 'NSI': '13'}
{'Nom': 'XVEXG', 'Mentions': 'Encouragements', '1/2j abs': '6', 'Rang': '21', 'Moyenne Générale': '12.2', 'MATHEMATIQUES': '11.1', 'PHYSIQUE-CHIMIE': '10', 'NSI': '14.4'}
{'Nom': 'IXVPT', 'Mentions': 'Pas de mention', '1/2j abs': '9', 'Rang': '21', 'Moyenne Générale': '11.6', 'MATHEMATIQUES': '13.1', 'PHYSIQUE-CHIMIE': '8', 'NSI': '10'}
{'Nom': 'MNSTZ', 'Mentions': 'Pas de mention', '1/2j abs': '18', 'Rang': '22', 'Moyenne Générale': '11.8', 'MATHEMATIQUES': '12.8', 'PHYSIQUE-CHIMIE': '10.5', 'NSI': '12.8'}
{'Nom': 'MGZUB', 'Mentions': 'Pas de mention', '1/2j abs': '32', 'Rang': '22', 'Moyenne Générale': '11.3', 'MATHEMATIQUES': '12.2', 'PHYSIQUE-CHIMIE': '10', 'NSI': '11'}
{'Nom': 'FIECN', 'Mentions': 'Encouragements', '1/2j abs': '5', 'Rang': '23', 'Moyenne Générale': '12.4', 'MATHEMATIQUES': '11.8', 'PHYSIQUE-CHIMIE': '11.5', 'NSI': '10.7'}
{'Nom': 'WQNGX', 'Mentions': 'Pas de mention', '1/2j abs': '9', 'Rang': '23', 'Moyenne Générale': '11.4', 'MATHEMATIQUES': '11.4', 'PHYSIQUE-CHIMIE': '12', 'NSI': '9.6'}
{'Nom': 'RYILJ', 'Mentions': 'Pas de mention', '1/2j abs': '37', 'Rang': '23', 'Moyenne Générale': '11.3', 'MATHEMATIQUES': '16.9', 'PHYSIQUE-CHIMIE': '10', 'NSI': '6.4'}
{'Nom': 'HIURK', 'Mentions': 'Encouragements', '1/2j abs': '2', 'Rang': '24', 'Moyenne Générale': '12.3', 'MATHEMATIQUES': '12.4', 'PHYSIQUE-CHIMIE': '11.5', 'NSI': '12'}
{'Nom': 'MDTVZ', 'Mentions': 'Encouragements', '1/2j abs': '7', 'Rang': '24', 'Moyenne Générale': '11', 'MATHEMATIQUES': '10.8', 'PHYSIQUE-CHIMIE': '11', 'NSI': '11.7'}
{'Nom': 'ORETO', 'Mentions': 'Pas de mention', '1/2j abs': '9', 'Rang': '24', 'Moyenne Générale': '11.3', 'MATHEMATIQUES': '9.2', 'PHYSIQUE-CHIMIE': '9.5', 'NSI': '12.6'}
{'Nom': 'BZQWB', 'Mentions': 'Pas de mention', '1/2j abs': '1', 'Rang': '25', 'Moyenne Générale': '10.7', 'MATHEMATIQUES': '9.5', 'PHYSIQUE-CHIMIE': '11.5', 'NSI': '13.1'}
{'Nom': 'WCSQK', 'Mentions': 'Encouragements', '1/2j abs': '2', 'Rang': '25', 'Moyenne Générale': '11.5', 'MATHEMATIQUES': '11', 'PHYSIQUE-CHIMIE': '11', 'NSI': '12.9'}
{'Nom': 'JAHMU', 'Mentions': 'Encouragements', '1/2j abs': '6', 'Rang': '25', 'Moyenne Générale': '10.9', 'MATHEMATIQUES': '11.6', 'PHYSIQUE-CHIMIE': '10', 'NSI': '8.8'}
{'Nom': 'OEVTI', 'Mentions': 'Pas de mention', '1/2j abs': '9', 'Rang': '26', 'Moyenne Générale': '11.2', 'MATHEMATIQUES': '13.8', 'PHYSIQUE-CHIMIE': '12', 'NSI': '8.9'}
{'Nom': 'LZGJO', 'Mentions': 'Encouragements', '1/2j abs': '13', 'Rang': '26', 'Moyenne Générale': '10.6', 'MATHEMATIQUES': '9.2', 'PHYSIQUE-CHIMIE': '8', 'NSI': '11'}
{'Nom': 'IASDL', 'Mentions': 'Encouragements', '1/2j abs': '23', 'Rang': '26', 'Moyenne Générale': '10.5', 'MATHEMATIQUES': '11.6', 'PHYSIQUE-CHIMIE': '10', 'NSI': '12.6'}
{'Nom': 'DAQYJ', 'Mentions': 'Encouragements', '1/2j abs': '2', 'Rang': '27', 'Moyenne Générale': '10.4', 'MATHEMATIQUES': '9.8', 'PHYSIQUE-CHIMIE': '8', 'NSI': '12.6'}
{'Nom': 'IJNTU', 'Mentions': 'Pas de mention', '1/2j abs': '14', 'Rang': '27', 'Moyenne Générale': '10.5', 'MATHEMATIQUES': '10.7', 'PHYSIQUE-CHIMIE': '9', 'NSI': '11.6'}
{'Nom': 'SRXZR', 'Mentions': 'Encouragements', '1/2j abs': '27', 'Rang': '11', 'Moyenne Générale': '9.7', 'MATHEMATIQUES': '10.5', 'PHYSIQUE-CHIMIE': '9.2', 'NSI': '12.5'}
{'Nom': 'NGKWD', 'Mentions': 'Encouragements', '1/2j abs': '11', 'Rang': '28', 'Moyenne Générale': '9.9', 'MATHEMATIQUES': '10.2', 'PHYSIQUE-CHIMIE': '4', 'NSI': '9'}
{'Nom': 'NCEFS', 'Mentions': 'Pas de mention', '1/2j abs': '17', 'Rang': '28', 'Moyenne Générale': '10.6', 'MATHEMATIQUES': '11.8', 'PHYSIQUE-CHIMIE': '8', 'NSI': '13.3'}
{'Nom': 'WWOLI', 'Mentions': 'Encouragements', '1/2j abs': '21', 'Rang': '28', 'Moyenne Générale': '10.4', 'MATHEMATIQUES': '7', 'PHYSIQUE-CHIMIE': '6.5', 'NSI': '12.7'}
{'Nom': 'DUIOL', 'Mentions': 'Pas de mention', '1/2j abs': '28', 'Rang': '28', 'Moyenne Générale': '9.9', 'MATHEMATIQUES': '11.3', 'PHYSIQUE-CHIMIE': '5', 'NSI': '8.5'}
{'Nom': 'TKYOU', 'Mentions': 'Encouragements', '1/2j abs': '3', 'Rang': '29', 'Moyenne Générale': '10.5', 'MATHEMATIQUES': '7.9', 'PHYSIQUE-CHIMIE': '8.5', 'NSI': '10.4'}
{'Nom': 'MIRZQ', 'Mentions': 'Encouragements', '1/2j abs': '3', 'Rang': '29', 'Moyenne Générale': '10.2', 'MATHEMATIQUES': '9.4', 'PHYSIQUE-CHIMIE': '7', 'NSI': '10'}
{'Nom': 'UABBU', 'Mentions': 'Pas de mention', '1/2j abs': '24', 'Rang': '29', 'Moyenne Générale': '10.2', 'MATHEMATIQUES': '9.2', 'PHYSIQUE-CHIMIE': '6', 'NSI': '10.9'}
{'Nom': 'HHXEY', 'Mentions': 'Pas de mention', '1/2j abs': '25', 'Rang': '30', 'Moyenne Générale': '10', 'MATHEMATIQUES': '5.2', 'PHYSIQUE-CHIMIE': '10', 'NSI': '11.6'}
{'Nom': 'BZNHD', 'Mentions': 'Pas de mention', '1/2j abs': '28', 'Rang': '30', 'Moyenne Générale': '9.4', 'MATHEMATIQUES': '11', 'PHYSIQUE-CHIMIE': '11', 'NSI': '9.4'}
{'Nom': 'VQQKZ', 'Mentions': 'Encouragements', '1/2j abs': '2', 'Rang': '31', 'Moyenne Générale': '10.1', 'MATHEMATIQUES': '9.2', 'PHYSIQUE-CHIMIE': '10', 'NSI': '10.2'}
{'Nom': 'WEDTR', 'Mentions': 'Pas de mention', '1/2j abs': '4', 'Rang': '31', 'Moyenne Générale': '9.5', 'MATHEMATIQUES': '8.7', 'PHYSIQUE-CHIMIE': '13.5', 'NSI': '8.1'}
{'Nom': 'UCVFC', 'Mentions': 'Encouragements', '1/2j abs': '12', 'Rang': '31', 'Moyenne Générale': '9', 'MATHEMATIQUES': '8.2', 'PHYSIQUE-CHIMIE': '8', 'NSI': '8.7'}
{'Nom': 'BFQTB', 'Mentions': 'Pas de mention', '1/2j abs': '14', 'Rang': '32', 'Moyenne Générale': '9.4', 'MATHEMATIQUES': '11.8', 'PHYSIQUE-CHIMIE': '10', 'NSI': '5.7'}
{'Nom': 'JICPK', 'Mentions': 'Pas de mention', '1/2j abs': '49', 'Rang': '32', 'Moyenne Générale': '7.7', 'MATHEMATIQUES': '11.6', 'PHYSIQUE-CHIMIE': '9', 'NSI': '1.5'}
{'Nom': 'MCGET', 'Mentions': 'Pas de mention', '1/2j abs': '32', 'Rang': '9', 'Moyenne Générale': '12.3', 'MATHEMATIQUES': '7.5', 'PHYSIQUE-CHIMIE': '10.3', 'NSI': '11'}
{'Nom': 'CQSFR', 'Mentions': 'Pas de mention', '1/2j abs': '33', 'Rang': '9', 'Moyenne Générale': '11.7', 'MATHEMATIQUES': '8', 'PHYSIQUE-CHIMIE': '8.8', 'NSI': '14.5'}</code></pre>
</div>
</div>
</section>
<section id="affecter-les-données-à-une-liste" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="affecter-les-données-à-une-liste"><span class="header-section-number">3</span> Affecter les données à une liste</h2>
<p>Nous allons stocker les données en mémoire sous forme d’une liste de dictionnaires pour utilisation ultérieure.</p>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Création de la liste vide</span></span>
<span id="cb5-2">eleves <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb5-3"></span>
<span id="cb5-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'./data/notes.csv'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> csvfile:</span>
<span id="cb5-5">    reader <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> csv.DictReader(csvfile)</span>
<span id="cb5-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> ligne <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> reader:</span>
<span id="cb5-7">        eleves.append(ligne)</span>
<span id="cb5-8"></span>
<span id="cb5-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># affichage du nombre de lignes et de la première</span></span>
<span id="cb5-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(eleves), eleves[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="2">
<pre><code>(96,
 {'Nom': 'OBUQW',
  'Mentions': 'Félicitations',
  '1/2j abs': '3',
  'Rang': '1',
  'Moyenne Générale': '17.4',
  'MATHEMATIQUES': '18',
  'PHYSIQUE-CHIMIE': '18.5',
  'NSI': '17.7'})</code></pre>
</div>
</div>
<p>On peut maintenant facilement travailler avec les données, par exemple, compter les félicitations.</p>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>([eleve <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> eleve <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> eleves <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> eleve[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Mentions'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Félicitations'</span>])</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="3">
<pre><code>26</code></pre>
</div>
</div>
</section>
<section id="recherche-de-lignes" class="level2" data-number="4">
<h2 data-number="4" class="anchored" data-anchor-id="recherche-de-lignes"><span class="header-section-number">4</span> Recherche de lignes</h2>
<p>Recherchons les élèves qui ont les félicitations.</p>
<div class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Lecture du fichier csv</span></span>
<span id="cb9-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'./data/notes.csv'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> csvfile:</span>
<span id="cb9-3">    reader <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> csv.DictReader(csvfile)</span>
<span id="cb9-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Itération sur les lignes du fichier</span></span>
<span id="cb9-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> ligne <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> reader:</span>
<span id="cb9-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> ligne[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mentions"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Félicitations'</span>:</span>
<span id="cb9-7">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(ligne)</span></code></pre></div>
<p><span class="smallcaps">&gt;&gt;sortie</span></p>
<div class="cell-output cell-output-stdout">
<pre><code>{'Nom': 'OBUQW', 'Mentions': 'Félicitations', '1/2j abs': '3', 'Rang': '1', 'Moyenne Générale': '17.4', 'MATHEMATIQUES': '18', 'PHYSIQUE-CHIMIE': '18.5', 'NSI': '17.7'}
{'Nom': 'XYYVQ', 'Mentions': 'Félicitations', '1/2j abs': '5', 'Rang': '1', 'Moyenne Générale': '18.1', 'MATHEMATIQUES': '19.2', 'PHYSIQUE-CHIMIE': '18', 'NSI': '19'}
{'Nom': 'SJOLY', 'Mentions': 'Félicitations', '1/2j abs': '', 'Rang': '1', 'Moyenne Générale': '18.2', 'MATHEMATIQUES': '19.2', 'PHYSIQUE-CHIMIE': '17', 'NSI': '19.1'}
{'Nom': 'CAOZY', 'Mentions': 'Félicitations', '1/2j abs': '1', 'Rang': '2', 'Moyenne Générale': '17', 'MATHEMATIQUES': '18.5', 'PHYSIQUE-CHIMIE': '17.5', 'NSI': '17.9'}
{'Nom': 'NULRT', 'Mentions': 'Félicitations', '1/2j abs': '2', 'Rang': '2', 'Moyenne Générale': '17.6', 'MATHEMATIQUES': '17.8', 'PHYSIQUE-CHIMIE': '18.5', 'NSI': '17.5'}
{'Nom': 'SATNL', 'Mentions': 'Félicitations', '1/2j abs': '4', 'Rang': '2', 'Moyenne Générale': '17', 'MATHEMATIQUES': '17.5', 'PHYSIQUE-CHIMIE': '17.5', 'NSI': '18.6'}
{'Nom': 'BXARC', 'Mentions': 'Félicitations', '1/2j abs': '15', 'Rang': '2', 'Moyenne Générale': '18.1', 'MATHEMATIQUES': '19.4', 'PHYSIQUE-CHIMIE': '19', 'NSI': '16.6'}
{'Nom': 'UFXVM', 'Mentions': 'Félicitations', '1/2j abs': '1', 'Rang': '3', 'Moyenne Générale': '17.6', 'MATHEMATIQUES': '18.6', 'PHYSIQUE-CHIMIE': '17.5', 'NSI': '16.5'}
{'Nom': 'ASLZS', 'Mentions': 'Félicitations', '1/2j abs': '6', 'Rang': '3', 'Moyenne Générale': '17.8', 'MATHEMATIQUES': '19.4', 'PHYSIQUE-CHIMIE': '19', 'NSI': '17.8'}
{'Nom': 'PIGCD', 'Mentions': 'Félicitations', '1/2j abs': '9', 'Rang': '3', 'Moyenne Générale': '17.8', 'MATHEMATIQUES': '18.9', 'PHYSIQUE-CHIMIE': '20', 'NSI': '17.6'}
{'Nom': 'NBQVQ', 'Mentions': 'Félicitations', '1/2j abs': '1', 'Rang': '4', 'Moyenne Générale': '16.5', 'MATHEMATIQUES': '17.6', 'PHYSIQUE-CHIMIE': '16.5', 'NSI': '17.2'}
{'Nom': 'IXHGB', 'Mentions': 'Félicitations', '1/2j abs': '4', 'Rang': '17.4', 'Moyenne Générale': '17.3', 'MATHEMATIQUES': '17', 'PHYSIQUE-CHIMIE': '17.9', 'NSI': '16'}
{'Nom': 'HKYCU', 'Mentions': 'Félicitations', '1/2j abs': '2', 'Rang': '5', 'Moyenne Générale': '16.4', 'MATHEMATIQUES': '18.1', 'PHYSIQUE-CHIMIE': '17', 'NSI': '17.9'}
{'Nom': 'XRZOA', 'Mentions': 'Félicitations', '1/2j abs': '9', 'Rang': '5', 'Moyenne Générale': '16.6', 'MATHEMATIQUES': '18.3', 'PHYSIQUE-CHIMIE': '17.5', 'NSI': '14.7'}
{'Nom': 'SEXRW', 'Mentions': 'Félicitations', '1/2j abs': '16', 'Rang': '5', 'Moyenne Générale': '17.1', 'MATHEMATIQUES': '17.8', 'PHYSIQUE-CHIMIE': '16', 'NSI': '18.8'}
{'Nom': 'FROXY', 'Mentions': 'Félicitations', '1/2j abs': '6', 'Rang': '6', 'Moyenne Générale': '16.3', 'MATHEMATIQUES': '19.3', 'PHYSIQUE-CHIMIE': '17', 'NSI': '15'}
{'Nom': 'MPBWD', 'Mentions': 'Félicitations', '1/2j abs': '7', 'Rang': '6', 'Moyenne Générale': '16.5', 'MATHEMATIQUES': '17', 'PHYSIQUE-CHIMIE': '17', 'NSI': '16.7'}
{'Nom': 'PAZCW', 'Mentions': 'Félicitations', '1/2j abs': '6', 'Rang': '16.4', 'Moyenne Générale': '13.3', 'MATHEMATIQUES': '17', 'PHYSIQUE-CHIMIE': '16.8', 'NSI': '13.5'}
{'Nom': 'XOWON', 'Mentions': 'Félicitations', '1/2j abs': '3', 'Rang': '7', 'Moyenne Générale': '15.4', 'MATHEMATIQUES': '15.2', 'PHYSIQUE-CHIMIE': '16', 'NSI': '16.4'}
{'Nom': 'XSXJX', 'Mentions': 'Félicitations', '1/2j abs': '8', 'Rang': '7', 'Moyenne Générale': '15.4', 'MATHEMATIQUES': '16.2', 'PHYSIQUE-CHIMIE': '12.5', 'NSI': '16.6'}
{'Nom': 'RRWVF', 'Mentions': 'Félicitations', '1/2j abs': '12', 'Rang': '7', 'Moyenne Générale': '15.5', 'MATHEMATIQUES': '14.4', 'PHYSIQUE-CHIMIE': '15', 'NSI': '16.4'}
{'Nom': 'VFQIV', 'Mentions': 'Félicitations', '1/2j abs': '11', 'Rang': '8', 'Moyenne Générale': '14.5', 'MATHEMATIQUES': '14.4', 'PHYSIQUE-CHIMIE': '13', 'NSI': '10.3'}
{'Nom': 'YPSAM', 'Mentions': 'Félicitations', '1/2j abs': '8', 'Rang': '14.6', 'Moyenne Générale': '13.3', 'MATHEMATIQUES': '14.5', 'PHYSIQUE-CHIMIE': '14.5', 'NSI': '19'}
{'Nom': 'QCTQB', 'Mentions': 'Félicitations', '1/2j abs': '6', 'Rang': '9', 'Moyenne Générale': '14.4', 'MATHEMATIQUES': '14.1', 'PHYSIQUE-CHIMIE': '11', 'NSI': '11.1'}
{'Nom': 'TFIAB', 'Mentions': 'Félicitations', '1/2j abs': '4', 'Rang': '10', 'Moyenne Générale': '13.6', 'MATHEMATIQUES': '14.2', 'PHYSIQUE-CHIMIE': '13', 'NSI': '13.3'}
{'Nom': 'OLQBO', 'Mentions': 'Félicitations', '1/2j abs': '14', 'Rang': '11', 'Moyenne Générale': '13.5', 'MATHEMATIQUES': '12.8', 'PHYSIQUE-CHIMIE': '13', 'NSI': '11.2'}</code></pre>
</div>
</div>
</section>
<section id="recherche-de-doublons" class="level2" data-number="5">
<h2 data-number="5" class="anchored" data-anchor-id="recherche-de-doublons"><span class="header-section-number">5</span> Recherche de doublons</h2>
<p>Vérifions qu’il n’y a pas deux lignes identiques qui se sont glissées par erreur dans le fichier csv.</p>
<p>Pour cela nous allons utiliser une liste annexe <code>vus</code> qui rencence les lignes déjà vues lors de l’itération.</p>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb11-1">vus <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb11-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> eleve <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> eleves:</span>
<span id="cb11-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># vérifie que l'entrée n'a pas déjà été vue</span></span>
<span id="cb11-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">assert</span> eleve <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> vus</span>
<span id="cb11-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ajout de l'élève à vus</span></span>
<span id="cb11-6">    vus.append(eleve)</span>
<span id="cb11-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Si on arrive au but de l'itération</span></span>
<span id="cb11-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># c'est qu'il n'y a pas de doublons</span></span>
<span id="cb11-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pas de doublons"</span>)</span></code></pre></div>
<p><span class="smallcaps">&gt;&gt;sortie</span></p>
<div class="cell-output cell-output-stdout">
<pre><code>Pas de doublons</code></pre>
</div>
</div>
<!--
## Recherche de doublons

TODO

## Test de cohérence d'une table

TODO
-->


</section>

 ]]></description>
  <category>1NSI</category>
  <guid>https://www.lyceum.fr/2023-2024/1g/nsi/4-traitement-de-donnees-en-tables/1-tables-de-donnees/</guid>
  <pubDate>Thu, 16 May 2024 13:21:00 GMT</pubDate>
</item>
<item>
  <title>Chapitre 2: Utilisation de la librairie pandas</title>
  <link>https://www.lyceum.fr/2023-2024/1g/nsi/4-traitement-de-donnees-en-tables/2-utilisation-de-la-librairie-pandas/</link>
  <description><![CDATA[ 




<div class="programme">
<div class="callout callout-style-simple callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Programme
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="programme">
<table class="table table-bordered table-hover">
<thead class="table-warning">
<tr class="header">
<th>Contenus</th>
<th>Capacités attendues</th>
<th>Commentaires</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Tri d’une table</td>
<td>Trier une table suivant une colonne.</td>
<td>Une fonction de tri intégrée au système ou à une bibliothèque peut être utilisée.</td>
</tr>
<tr class="even">
<td>Fusion de tables</td>
<td>Construire une nouvelle table en combinant les données de deux tables.</td>
<td>La notion de domaine de valeurs est mise en évidence.</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<div class="intro">
<p>L’utilisation des données en table étant très largement répandue, une bibliothèque spécialisée s’est développée et imposée dans le monde de python <a href="https://pandas.pydata.org/"><code>pandas</code></a>. Cette libraire va grandement nous faciliter la lecture et l’utilisation des données.</p>
<p></p><figure class="wikimage figure"><img src="https://upload.wikimedia.org/wikipedia/commons/e/ed/Pandas_logo.svg" class="img-fluid figure-img" alt="pandas logo, used since version 1.0 (2020)"><figcaption id="caption"></figcaption><figcaption id="credit">©&nbsp;&nbsp;BSD&nbsp;<a id="image-description" href="//commons.wikimedia.org/wiki/File:Pandas_logo.svg">via Wikimedia Commons</a></figcaption></figure><p></p>
</div>
<section id="lecture-dun-fichier-csv" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="lecture-dun-fichier-csv"><span class="header-section-number">1</span> Lecture d’un fichier <code>csv</code></h2>
<p>La méthode <code>read_csv</code> permet la lecture d’un fichier <code>csv</code>. On utilise ici la <a href="https://www.data.gouv.fr/fr/datasets/cartographie-des-stationnements-deux-roues-de-nice/">Cartographie des stationnements deux roues de Nice</a> mise à disposition sur le site gouvernemental: <a href="https://data.gouv.fr" class="uri">https://data.gouv.fr</a> avec la description suivante:</p>
<p>Vous trouverez ici la cartographie des stationnements deux roues. Table des données SIG relatives aux GAV-GAM et GAV/GAM nb : GAV = Garage à Vélo + GAM = Garage à Moto Code profil 1 = GAM; Code profil 2 = GAV, Code profil 0 = GAV-GAM</p>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># on importe les données dans un variable appelée df pour dataframe(le nom de la variable vous appartient)</span></span>
<span id="cb1-4">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gav-gam-06-09-2019.csv"</span>, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">";"</span>)</span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># on affiche les 5 premières lignes</span></span>
<span id="cb1-7">df.head(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="1">
<div>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>

<table class="table table-bordered table-hover table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead class="table-warning">
<tr class="header" style="text-align: right;">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">NB_ARC_VL</th>
<th data-quarto-table-cell-role="th">ID_GAV</th>
<th data-quarto-table-cell-role="th">NB_PL_MT</th>
<th data-quarto-table-cell-role="th">LARGEUR</th>
<th data-quarto-table-cell-role="th">GLOBALID</th>
<th data-quarto-table-cell-role="th">TYPE_MOBIL</th>
<th data-quarto-table-cell-role="th">PROFIL</th>
<th data-quarto-table-cell-role="th">LONGUEUR</th>
<th data-quarto-table-cell-role="th">ETAT_</th>
<th data-quarto-table-cell-role="th">CODE_INSEE</th>
<th data-quarto-table-cell-role="th">NB_PL_VL</th>
<th data-quarto-table-cell-role="th">NB_PLACE</th>
<th data-quarto-table-cell-role="th">NB_ARC_MT</th>
<th data-quarto-table-cell-role="th">geometry</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>0.0</td>
<td>1001</td>
<td>30.0</td>
<td>0.65</td>
<td>{578A7D02-A426-4AA0-99C6-D2C1FBED8814}</td>
<td>4.0</td>
<td>1</td>
<td>21.2</td>
<td>En vigueur</td>
<td>6088</td>
<td>0.0</td>
<td>30.0</td>
<td>0</td>
<td>{"type": "Point", "coordinates": [7.21337219, ...</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>2.0</td>
<td>2010</td>
<td>3.0</td>
<td>2.00</td>
<td>{291C1D1B-2A1C-42B7-9D06-2877D62B2838}</td>
<td>1.0</td>
<td>0</td>
<td>7.5</td>
<td>En vigueur</td>
<td>6088</td>
<td>2.0</td>
<td>5.0</td>
<td>4</td>
<td>{"type": "Point", "coordinates": [7.25311445, ...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>0.0</td>
<td>2015</td>
<td>12.0</td>
<td>2.00</td>
<td>{E002A4DF-3CD8-4F5F-9E87-721004924B1C}</td>
<td>1.0</td>
<td>1</td>
<td>26.0</td>
<td>En vigueur</td>
<td>6088</td>
<td>0.0</td>
<td>12.0</td>
<td>12</td>
<td>{"type": "Point", "coordinates": [7.25608087, ...</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>0.0</td>
<td>2020</td>
<td>3.0</td>
<td>2.00</td>
<td>{DD571B19-C522-4E1F-97E5-0841E6DE59E5}</td>
<td>2.0</td>
<td>0</td>
<td>4.7</td>
<td>En vigueur</td>
<td>6088</td>
<td>1.0</td>
<td>4.0</td>
<td>0</td>
<td>{"type": "Point", "coordinates": [7.25171699, ...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>0.0</td>
<td>2024</td>
<td>7.0</td>
<td>2.00</td>
<td>{1710D778-67BF-45ED-B3F5-399B82088C5A}</td>
<td>2.0</td>
<td>0</td>
<td>12.0</td>
<td>En vigueur</td>
<td>6088</td>
<td>3.0</td>
<td>10.0</td>
<td>0</td>
<td>{"type": "Point", "coordinates": [7.25427638, ...</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</div>
</section>
<section id="exploration-des-données" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="exploration-des-données"><span class="header-section-number">2</span> Exploration des données</h2>
<p>On peut également facilement afficher le nom des colonnes avec l’attribut <code>columns</code>.</p>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb2-1">df.columns</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="2">
<pre><code>Index(['NB_ARC_VL', 'ID_GAV', 'NB_PL_MT', 'LARGEUR', 'GLOBALID', 'TYPE_MOBIL',
       'PROFIL', 'LONGUEUR', 'ETAT_', 'CODE_INSEE', 'NB_PL_VL', 'NB_PLACE',
       'NB_ARC_MT', 'geometry'],
      dtype='object')</code></pre>
</div>
</div>
<p>On peut facilement parcourir l’ensemble des lignes du tableau avec la méthode <code>itertuples()</code>.</p>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> ligne <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> df.itertuples():</span>
<span id="cb4-2">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(ligne)</span>
<span id="cb4-3">    </span>
<span id="cb4-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># On s'arrête à la troisième ligne pour pas encombrer le cours</span></span>
<span id="cb4-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Commenter ces deux lignes pour parcourir l'ensemble du tableau</span></span>
<span id="cb4-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> ligne.Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:</span>
<span id="cb4-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">break</span></span></code></pre></div>
<p><span class="smallcaps">&gt;&gt;sortie</span></p>
<div class="cell-output cell-output-stdout">
<pre><code>Pandas(Index=0, NB_ARC_VL=0.0, ID_GAV='1001', NB_PL_MT=30.0, LARGEUR=0.65, GLOBALID='{578A7D02-A426-4AA0-99C6-D2C1FBED8814}', TYPE_MOBIL=4.0, PROFIL=1, LONGUEUR=21.2, ETAT_='En vigueur', CODE_INSEE=6088, NB_PL_VL=0.0, NB_PLACE=30.0, NB_ARC_MT=0, geometry='{"type": "Point", "coordinates": [7.21337219, 43.66717783]}')
Pandas(Index=1, NB_ARC_VL=2.0, ID_GAV='2010', NB_PL_MT=3.0, LARGEUR=2.0, GLOBALID='{291C1D1B-2A1C-42B7-9D06-2877D62B2838}', TYPE_MOBIL=1.0, PROFIL=0, LONGUEUR=7.5, ETAT_='En vigueur', CODE_INSEE=6088, NB_PL_VL=2.0, NB_PLACE=5.0, NB_ARC_MT=4, geometry='{"type": "Point", "coordinates": [7.25311445, 43.69461128]}')
Pandas(Index=2, NB_ARC_VL=0.0, ID_GAV='2015', NB_PL_MT=12.0, LARGEUR=2.0, GLOBALID='{E002A4DF-3CD8-4F5F-9E87-721004924B1C}', TYPE_MOBIL=1.0, PROFIL=1, LONGUEUR=26.0, ETAT_='En vigueur', CODE_INSEE=6088, NB_PL_VL=0.0, NB_PLACE=12.0, NB_ARC_MT=12, geometry='{"type": "Point", "coordinates": [7.25608087, 43.6951747]}')
Pandas(Index=3, NB_ARC_VL=0.0, ID_GAV='2020', NB_PL_MT=3.0, LARGEUR=2.0, GLOBALID='{DD571B19-C522-4E1F-97E5-0841E6DE59E5}', TYPE_MOBIL=2.0, PROFIL=0, LONGUEUR=4.7, ETAT_='En vigueur', CODE_INSEE=6088, NB_PL_VL=1.0, NB_PLACE=4.0, NB_ARC_MT=0, geometry='{"type": "Point", "coordinates": [7.25171699, 43.70004002]}')</code></pre>
</div>
</div>
<p>Chaque ligne renvoyée par la méthode <code>itertuples()</code> est un tuple nommé, on peut ainsi aaccéder aux valeurs individuelles de chaque ligne avec la notation pointée <code>ligne.nom_de_la_colonne</code>. Par exemple pour afficher le nombre d’arcs du stationnement.</p>
<div class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> ligne <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> df.itertuples():</span>
<span id="cb6-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># On s'arrête à la troisième ligne pour pas encombrer le cours</span></span>
<span id="cb6-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Commenter ces deux lignes pour parcourir l'ensmble du tableau</span></span>
<span id="cb6-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> ligne.Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:</span>
<span id="cb6-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">break</span></span>
<span id="cb6-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Nombre d'arcs de stationnement pour vélos:"</span>, ligne.NB_ARC_VL)</span></code></pre></div>
<p><span class="smallcaps">&gt;&gt;sortie</span></p>
<div class="cell-output cell-output-stdout">
<pre><code>Nombre d'arcs de stationnement pour vélos: 0.0
Nombre d'arcs de stationnement pour vélos: 2.0
Nombre d'arcs de stationnement pour vélos: 0.0</code></pre>
</div>
</div>
</section>
<section id="sélection-logique-de-données" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="sélection-logique-de-données"><span class="header-section-number">3</span> Sélection logique de données</h2>
<p>Supposons que l’on cherche des stationnements destinés aux vélos.</p>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> ligne <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> df.itertuples():</span>
<span id="cb8-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># On s'arrête à la troisième ligne pour pas encombrer le cours</span></span>
<span id="cb8-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Commenter ces deux lignes pour parcourir l'ensmble du tableau</span></span>
<span id="cb8-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> ligne.Index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:</span>
<span id="cb8-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">break</span></span>
<span id="cb8-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> ligne.NB_ARC_VL <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb8-7">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(ligne.Index, ligne.NB_ARC_VL)</span></code></pre></div>
<p><span class="smallcaps">&gt;&gt;sortie</span></p>
<div class="cell-output cell-output-stdout">
<pre><code>1 2.0</code></pre>
</div>
</div>
<p>Effectivement parmi les trois premières lignes seul la ligne d’index 1(la deuxième) présente des arcs de stationnement pour vélos.</p>
<p>Pour explorer davantage cette table de données, passez aux <a href="./exo">exercices</a>.</p>
</section>
<section id="liens" class="level2" data-number="4">
<h2 data-number="4" class="anchored" data-anchor-id="liens"><span class="header-section-number">4</span> Liens</h2>
<p>La librairie <code>pandas</code> est extrêmement riche et seul son utilisation sur des cas concrets permet d’en comprendre les rouages.</p>
<p>Pour plus d’informations, vous pouvez consulter:</p>
<ul>
<li>la <a href="https://pandas.pydata.org/pandas-docs/stable/">documentation</a></li>
<li>la fiche de <a href="https://github.com/pandas-dev/pandas/blob/master/doc/cheatsheet/Pandas_Cheat_Sheet.pdf">rappels</a>,</li>
<li>ou encore voir ce qu’arrive à faire les kagglers avec les données en consultant des <a href="https://www.kaggle.com/kernels?sortBy=relevance&amp;group=everyone&amp;search=pandas&amp;page=1&amp;pageSize=20">exemples de notebooks</a> sur le site <a href="https://kaggle.com" class="uri">https://kaggle.com</a>.</li>
</ul>


</section>

 ]]></description>
  <category>1NSI</category>
  <guid>https://www.lyceum.fr/2023-2024/1g/nsi/4-traitement-de-donnees-en-tables/2-utilisation-de-la-librairie-pandas/</guid>
  <pubDate>Thu, 16 May 2024 13:21:00 GMT</pubDate>
</item>
<item>
  <title>Chapitre 1: Généralités sur le web</title>
  <link>https://www.lyceum.fr/2023-2024/1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/1-generalites-sur-le-web/</link>
  <description><![CDATA[ 




<div class="programme">
<div class="callout callout-style-simple callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Programme
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="programme">
<p>Lors de la navigation sur le Web, les internautes interagissent avec leur machine par le biais des pages Web.</p>
<p>La compréhension du dialogue client-serveur déjà abordé en classe de seconde est consolidée, sur des exemples simples, en identifiant les requêtes du client, les calculs puis les réponses du serveur traitées par le client.</p>
</div>
</div>
</div>
</div>
</div>
<div>

</div>
<div class="intro quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p>On confond souvent Internet et le Web (ou « toile » en français). On trouve des choses sur Internet, on surfe sur le Web. Mais où est la différence ? <a href="https://interstices.info/idee-recue-web-et-internet-cest-la-meme-chose/" class="cite-source">Article de Laurent Viennot sur le site interstices.fr</a></p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p></p><figure class="wikimage figure"><img src="https://upload.wikimedia.org/wikipedia/commons/5/5e/W3C_icon.svg" class="img-fluid figure-img" alt="Le world wide web est une organisation à but non lucratif qui permet de normaliser le web afin qu'il soit accessible au plus grand nombre dans les mêmes conditions."><figcaption id="caption">Le world wide web est une organisation à but non lucratif qui permet de normaliser le web afin qu'il soit accessible au plus grand nombre dans les mêmes conditions.</figcaption><figcaption id="credit">&nbsp;Public domain&nbsp;<a id="image-description" href="//commons.wikimedia.org/wiki/File:W3C_icon.svg">via Wikimedia Commons</a></figcaption></figure><p></p>
</div>
</div>
</div>
<ul>
<li>Le <strong>Web</strong> ou <em>toile</em> en français est un ensemble d’informations reliées entre elles par des <a href="https://fr.wikipedia.org/wiki/Hyperlien">liens hypertextes</a>.</li>
<li>L’<strong>internet</strong> est le réseau physique des ordinateurs reliés entre eux physiquement par des câbles, fibres optiques, ondes…</li>
</ul>
<p>Le Web n’est qu’un service parmi d’autres utilisant internet: mail, news, ftp…</p>
<section id="la-naissance-du-web" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="la-naissance-du-web"><span class="header-section-number">1</span> La naissance du Web</h2>
<p>Le web fut inventé en 1989 par Tim Berners-Lee et une équipe de recherches au CERN (Centre européen pour la Recherche Nucléaire).</p>
<p>C’est un système hypertexte qui permet de lier des documents par des hyperliens.</p>
<iframe class="center" src="https://player.vimeo.com/video/207612470" title="L’histoire de Tim Berners-Lee ou presque… Par isabelle Christment 6’24" webkitallowfullscreen="" mozallowfullscreen="" allowfullscreen="" width="550" height="309" frameborder="0">
</iframe>
<p>Lien vers la page de <a href="https://pixees.fr/assistez-a-la-naissance-du-web-2/">Class Code</a>.</p>
<p><em>Note: les vidéos des cours d’OpenClassrooms comme toutes les ressources de Class´Code sont librement accessibles, sous licence Creative-Commons.</em></p>
</section>
<section id="larchitecture-du-web" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="larchitecture-du-web"><span class="header-section-number">2</span> L’architecture du web</h2>
<div>

</div>
<div class="quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="stub quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p>Le web est possible grâce au <strong>réseau internet</strong> qui relie entre eux les ordinateurs.</p>
<p>Certains ordinateurs hébergent des pages web: <strong>les serveurs</strong>, chaque page web a une adresse URL(Uniform Resource Locator).</p>
<p>Chez vous, votre ordinateur: <strong>le client</strong> peut demander qu’on lui transmette des pages web à partir de leur URL grâce au protocole HTTP(HyperText Transfer Protocol).</p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p></p><figure class="wikimage figure"><picture>
			  <source type="image/webp" srcset="/img/SKqd0pgz3J-300.webp 300w, /img/SKqd0pgz3J-476.webp 476w, /img/SKqd0pgz3J-600.webp 600w" sizes="100vw">
  <source type="image/svg+xml" srcset="/img/SKqd0pgz3J-476.svg 476w" sizes="100vw">
				<img class="img-fluid figure-img" src="https://www.lyceum.fr/2023-2024/img/SKqd0pgz3J-300.webp" width="600" height="255" alt="L'architecture client serveur est la plus répandue actuellement." loading="lazy" decoding="async">
			</picture>
<figcaption id="caption">L'architecture client serveur est la plus répandue actuellement.</figcaption><figcaption id="credit">©&nbsp;&nbsp;LGPL&nbsp;<a id="image-description" href="//commons.wikimedia.org/wiki/File:Modèle-client-serveur.svg">via Wikimedia Commons</a></figcaption></figure><p></p>
</div>
</div>
</div>
</section>
<section id="les-langages-du-web" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="les-langages-du-web"><span class="header-section-number">3</span> Les langages du web</h2>
<section id="côté-client" class="level3" data-number="3.1">
<h3 data-number="3.1" class="anchored" data-anchor-id="côté-client"><span class="header-section-number">3.1</span> Côté client</h3>
<p>Tous les navigateurs web(<em>clients</em>) utilisent trois langages:</p>
<ul>
<li><code>html</code>(<em>HyperText Markup Language</em>): Il contient le texte de la page et décrit ce texte afin qu’il puisse être compris par des programmes informatiques(navigateur web ou robots des moteurs de recherche).</li>
<li><code>css</code>(<em>Cascading StyleSheet</em>): permet de mettre en forme la page web en modifiant les couleurs, polices…</li>
<li><code>js</code>:(<em>JavaScript</em>): permet de rendre les pages web <em>interactives</em>, pour par exemple récupérer les données d’un utilisateur entrées dans un formulaire.</li>
</ul>
<p>Leurs syntaxes et leurs possibilités ne cessent d’augmenter au fur et à mesure que nos usages d’internet évoluent.</p>
<p>La fondation <a href="https://www.w3.org/">W3C</a> a pour rôle de définir toutes les règles de ces langages(et d’autres) afin de maintenir le web accessible à tous et ouvert.</p>
</section>
<section id="côté-serveur" class="level3" data-number="3.2">
<h3 data-number="3.2" class="anchored" data-anchor-id="côté-serveur"><span class="header-section-number">3.2</span> Côté serveur</h3>
<p>Le navigateur du client peut envoyer des informations particulières au serveur par le biais du protocole <code>HTTP</code>.</p>
<p>Le serveur peut adapter la page envoyée à ses paramètres grâce à un langage de programmation côté serveur. Principalement <code>PHP</code>(hypertext processor) aujourd’hui, mais tout langage peut-être utilise(Python, Ruby, NodeJS…)</p>
</section>
</section>
<section id="rôle-du-navigateur" class="level2" data-number="4">
<h2 data-number="4" class="anchored" data-anchor-id="rôle-du-navigateur"><span class="header-section-number">4</span> Rôle du navigateur</h2>
<p>Le navigateur permet de traduire toutes les informations contenues dans les fichiers <code>html</code>, <code>css</code> et <code>js</code>, en un rendu qui s’affiche à l’écran avec lequel l’utilisateur peut interagir. Pour afficher le code source d’une page, il suffit d’utiliser la combinaison <kbd>CTRL</kbd>+<kbd>U</kbd>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><picture>
			  <source type="image/webp" srcset="/img/EllJpK1Dpf-300.webp 300w, /img/EllJpK1Dpf-600.webp 600w, /img/EllJpK1Dpf-1919.webp 1919w" sizes="100vw">
  <source type="image/png" srcset="/img/EllJpK1Dpf-300.png 300w, /img/EllJpK1Dpf-600.png 600w, /img/EllJpK1Dpf-1919.png 1919w" sizes="100vw">
				<img class="img-fluid figure-img" src="https://www.lyceum.fr/2023-2024/img/EllJpK1Dpf-300.webp" width="1919" height="878" alt="" loading="lazy" decoding="async">
			</picture>
</p>
<figcaption>Rendu du html par le navigateur</figcaption>
</figure>
</div>
</section>
<section id="le-développement-dune-page-web" class="level2" data-number="5">
<h2 data-number="5" class="anchored" data-anchor-id="le-développement-dune-page-web"><span class="header-section-number">5</span> Le développement d’une page Web</h2>
<p>Avant de publier le site sur internet, on commence par le développer localement sur son ordinateur avec <strong>deux logiciels</strong>:</p>
<section id="un-éditeur-de-code" class="level3" data-number="5.1">
<h3 data-number="5.1" class="anchored" data-anchor-id="un-éditeur-de-code"><span class="header-section-number">5.1</span> Un éditeur de code</h3>
<p>Un simple éditeur de texte qui permet d’écrire le code <code>html</code>, <code>css</code> et <code>js</code>.</p>
<p>Bien qu’un simple éditeur de texte suffise, on utilise plutôt des éditeurs de code qui sont dédiés à cet usage et qui permettent de colorer le code, l’indenter, le vérifier, l’auto compléter…</p>
<div class="examples">
<ul>
<li><a href="https://notepad%7C-plus%7C-plus.org/fr/">Notepad ++</a></li>
<li><a href="https://atom.io/">Atom</a></li>
<li><a href="https://code.visualstudio.com/">Visual Studio Code</a></li>
<li><a href="http://brackets.io/">Brackets</a></li>
</ul>
</div>
</section>
<section id="un-navigateur-web" class="level3" data-number="5.2">
<h3 data-number="5.2" class="anchored" data-anchor-id="un-navigateur-web"><span class="header-section-number">5.2</span> Un navigateur web</h3>
<p>Un navigateur qui permet de visualiser le rendu du code, ce navigateur doit être récent pour pouvoir développer ce site en utilisant les dernières mises à jour des langages.</p>
<div class="examples">
<ul>
<li><a href="https://www.mozilla.org/fr/firefox/new/">Mozilla Firefox</a></li>
<li><a href="https://www.google.fr/chrome/browser/desktop/index.html">Google Chrome</a></li>
<li><a href="https://www.microsoft.com/fr-fr/windows/microsoft-edge">Microsoft Edge</a></li>
</ul>
</div>
<div class="plus">
<div class="callout callout-style-simple callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-2-contents" aria-controls="callout-2" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
En plus: Comment appliquer des changements rapidement?
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-2" class="callout-2-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="plus" data-titre="Comment appliquer des changements rapidement?">
<p>Quand vous avez modifié le code source dans l’éditeur, et que vous voulez vérifier le nouveau rendu par le navigateur :</p>
<ol type="1">
<li>Enregistrez le fichier dans l’éditeur: <kbd>CTRL</kbd>+<kbd>S</kbd>.</li>
<li>Rafraîchissez l’affichage du navigateur. <kbd>CTRL</kbd>+<kbd>R</kbd>.</li>
</ol>
<p>Vous pouvez placer les deux écrans côte à côte si vous avez un écran large, ou passer d’une fenêtre à une autre avec le raccourci: <kbd>ALT</kbd>+<kbd>TAB</kbd>.</p>
</div>
</div>
</div>
</div>
</div>
<div class="plus">
<div class="callout callout-style-simple callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-3-contents" aria-controls="callout-3" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
En plus: Comment déboguer votre page web ?
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-3" class="callout-3-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="plus" data-titre="Comment déboguer votre page web ?">
<p>Tous les navigateurs disposent d’outils puissants de débogage, à commencer par le simple afficheur de code source(<kbd>ALT</kbd>+<kbd>TAB</kbd>), ou pour des outils plus puissants vous pouvez ouvrir les <code>Outils de développement</code>: <kbd>CTRL</kbd>+<kbd>MAJ</kbd>+<kbd>I</kbd></p>
</div>
</div>
</div>
</div>
</div>


</section>
</section>

 ]]></description>
  <category>1NSI</category>
  <guid>https://www.lyceum.fr/2023-2024/1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/1-generalites-sur-le-web/</guid>
  <pubDate>Thu, 16 May 2024 13:21:00 GMT</pubDate>
</item>
<item>
  <title>Chapitre 2: Ecriture d’une page HTML</title>
  <link>https://www.lyceum.fr/2023-2024/1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/2-ecriture-dune-page-html/</link>
  <description><![CDATA[ 




<div class="programme">
<div class="callout callout-style-simple callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Programme
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="programme">
<table class="table table-bordered table-hover">
<thead class="table-warning">
<tr class="header">
<th>Contenus</th>
<th>Capacités attendues</th>
<th>Commentaires</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><p>Modalités de l’interaction entre l’homme et la machine</p>
<p>Événements</p></td>
<td><p>Identifier les différents composants graphiques permettant d’interagir avec une application Web</p>
<p>Identifier les événements que les fonctions associées aux différents composants graphiques sont capables de traiter</p></td>
<td>Il s’agit d’examiner le code HTML d’une page comprenant des composants graphiques et de distinguer ce qui relève de la description des composants graphiques en HTML de leur comportement (réaction aux événements) programmé par exemple en JavaScript.</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<div>

</div>
<div class="intro quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p>Dans ce chapitre nous allons approfondir nos connaissances sur le langage <code>html</code> déjà étudié en seconde. Pour rappel, le W3C a défini deux langages afin de bien séparer <em>le fond et la forme</em>. Le <code>html</code> vu dans ce chapitre décrit le contenu du document: le <em>fond</em> et le <code>css</code> que l’on étudiera dans le prochain chapitre décrit sa <em>forme</em>.</p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p></p><figure class="wikimage figure"><img src="https://upload.wikimedia.org/wikipedia/commons/6/61/HTML5_logo_and_wordmark.svg" class="img-fluid figure-img" alt="Le html 5 est la dernière version du langage normalisée par le W3C."><figcaption id="caption">Le html 5 est la dernière version du langage normalisée par le W3C.</figcaption><figcaption id="credit">©&nbsp;<a rel="nofollow" class="external text" href="https://www.w3.org/html/logo/index.html">W3C</a>&nbsp;CC BY 3.0&nbsp;<a id="image-description" href="//commons.wikimedia.org/wiki/File:HTML5_logo_and_wordmark.svg">via Wikimedia Commons</a></figcaption></figure><p></p>
</div>
</div>
</div>
<p>Le <code>html</code> est un langage qui utilise des balises entre chevrons(<code>&lt;balise&gt;</code>) pour structurer les pages web et leur donner un sens.</p>
<section id="structure-dune-page-html" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="structure-dune-page-html"><span class="header-section-number">1</span> Structure d’une page <code>html</code></h2>
<section id="doctype-html-head-et-body" class="level3" data-number="1.1">
<h3 data-number="1.1" class="anchored" data-anchor-id="doctype-html-head-et-body"><span class="header-section-number">1.1</span> <code>&lt;!doctype html&gt;</code>, <code>&lt;head&gt;</code> et <code>&lt;body&gt;</code></h3>
<p>Une page <code>html</code> commence toujours par indiquer le <code>doctype</code>. Depuis <code>html5</code> c’est très simple:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource html number-lines code-with-copy"><code class="sourceCode html"><span id="cb1-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;!doctype</span> html<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
<p><em>C’est quand même mieux que son ancêtre en html4:</em></p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource html number-lines code-with-copy"><code class="sourceCode html"><span id="cb2-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;!DOCTYPE</span> HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
<p>Le document est séparé en deux grandes parties:</p>
<ul>
<li>le <code>head</code>: qui contient des informations utiles au navigateur et aux robots qui consultent votre page.</li>
<li>le <code>body</code>: qui contient les informations qui seront effectivement affichées à l’écran.</li>
</ul>
</section>
<section id="structure-modèle" class="level3" data-number="1.2">
<h3 data-number="1.2" class="anchored" data-anchor-id="structure-modèle"><span class="header-section-number">1.2</span> Structure modèle</h3>
<p>Voici une structure qui peut vous servir quand vous commencez une nouvelle page web.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource html number-lines code-with-copy"><code class="sourceCode html"><span id="cb3-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;!doctype</span> html<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">html</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> lang</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fr"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-3">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">head</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-4">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">meta</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> charset</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"utf-8"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> </span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">/&gt;</span></span>
<span id="cb3-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">title</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>Un document minuscule<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">title</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-6">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">head</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-7">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">body</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-8">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">h1</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>Titre principal de mon document<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">h1</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;!-- Ceci est un commentaire --&gt;</span></span>
<span id="cb3-10">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">p</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-11">      Regarde maman, je suis en train de coder en</span>
<span id="cb3-12">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">abbr</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> title</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hyper Text Markup Language"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> lang</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"en"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>HTML<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">abbr</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span> !</span>
<span id="cb3-13">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">p</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-14">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">body</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-15"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">html</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
</section>
</section>
<section id="les-balises" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="les-balises"><span class="header-section-number">2</span> Les balises</h2>
<p>Le langage <code>html</code> utilise des balises pour indiquer le sens sémantique des éléments d’une page. Ces balises permettent de construire une hiérarchie au sein du document appelée DOM(Document Object Model).</p>
<p>Toutes les balises sont référencées sur le site <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element">MDN</a>, en voici quelques-unes.</p>
<section id="exemples-de-balises" class="level3" data-number="2.1">
<h3 data-number="2.1" class="anchored" data-anchor-id="exemples-de-balises"><span class="header-section-number">2.1</span> Exemples de balises</h3>
<table class="table table-bordered table-hover">
<thead class="table-warning">
<tr class="header">
<th>balise</th>
<th>rôle</th>
<th>exemple</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>&lt;h1&gt;</code>, <code>&lt;h2&gt;</code>, …<code>&lt;h6&gt;</code></td>
<td>Titres et sous-titres</td>
<td><code>&lt;h1&gt;Titre principal de mon document&lt;/h1&gt;</code></td>
</tr>
<tr class="even">
<td><code>&lt;p&gt;</code></td>
<td>Paragraphe</td>
<td><code>&lt;p&gt;Comme je descendais des Fleuves impassibles.&lt;/p&gt;</code></td>
</tr>
<tr class="odd">
<td><code>&lt;strong&gt;</code></td>
<td>texte important(en gras par défaut)</td>
<td><code>&lt;p&gt;Comme je &lt;strong&gt;descendais&lt;/strong&gt; des Fleuves impassibles.&lt;/p&gt;</code></td>
</tr>
<tr class="even">
<td><code>&lt;em&gt;</code></td>
<td>texte en emphase(en italique par défaut)</td>
<td><code>&lt;p&gt;Comme je &lt;em&gt;descendais&lt;/em&gt; des Fleuves impassibles.&lt;/p&gt;</code></td>
</tr>
<tr class="odd">
<td><code>&lt;a href="dest"&gt;</code></td>
<td>Lien vers la page d’URL <code>dest</code></td>
<td><code>&lt;a href="https://www.wikipedia.fr/"&gt;Se rendre sur Wikipedia&lt;/a&gt;</code></td>
</tr>
<tr class="even">
<td><code>&lt;img src="image.png"/&gt;</code></td>
<td>Affichage de l’image d’URI <code>image.png</code></td>
<td><code>&lt;img src="photo.jpg" alt="Photo de mon chat"/&gt;</code></td>
</tr>
<tr class="odd">
<td><p><code>&lt;ul&gt;</code></p>
<p><code>&lt;li&gt;</code></p></td>
<td><p>liste à puce</p>
<p>élément d’une liste</p></td>
<td><div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource html number-lines code-with-copy"><code class="sourceCode html"><span id="cb4-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">ul</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb4-2">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">li</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>1er élément de la liste<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">li</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb4-3">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">li</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>2e élément de la liste<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">li</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb4-4">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">li</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>3e ...<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">li</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb4-5"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">ul</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div></td>
</tr>
</tbody>
</table>
</section>
<section id="règles-décriture" class="level3" data-number="2.2">
<h3 data-number="2.2" class="anchored" data-anchor-id="règles-décriture"><span class="header-section-number">2.2</span> Règles d’écriture</h3>
<p>Lorsqu’une <code>&lt;balise&gt;</code> est ouverte, elle doit être fermée <code>&lt;/balise&gt;</code>.</p>
<div class="prop">
<p>Seul le texte écrit entre les balises ouvrante et fermante s’affiche à l’écran.</p>
</div>
<div class="example">
<p>Le code <code>&lt;p&gt;Ceci est un paragraphe.&lt;/p&gt;</code>html affichera:</p>
<p>
Ceci est un paragraphe.
</p>
</div>
<div class="prop">
<p>Les balises ouvrantes et fermantes doivent toujours être correctement imbriquées, c’est-à-dire que les balises fermantes doivent être écrites dans l’ordre inverse des balises d’ouverture.<a href="https://developer.mozilla.org/fr/docs/Web/Guide/HTML/Introduction#Les_balises" class="cite-source">MDN</a></p>
</div>
<div class="examples">
<p>Voici un exemple de code valide :</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource html number-lines code-with-copy"><code class="sourceCode html"><span id="cb5-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">em</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>Ceci est <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">strong</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>très<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">strong</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span> important<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">em</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>.</span></code></pre></div>
<p>Voici un exemple de code non-valide :</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode numberSource html number-lines code-with-copy"><code class="sourceCode html"><span id="cb6-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">em</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>Ceci est <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">strong</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>très<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">em</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span> important<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">strong</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>.</span></code></pre></div>
</div>
</section>
<section id="attributs-dune-balise" class="level3" data-number="2.3">
<h3 data-number="2.3" class="anchored" data-anchor-id="attributs-dune-balise"><span class="header-section-number">2.3</span> Attributs d’une balise</h3>
<p>Les attributs d’un élément, permettent de modifier son comportement ou de fournir des métadonnées.</p>
<div class="examples">
<ul>
<li><p>L’attribut <code>lang</code>.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource html number-lines code-with-copy"><code class="sourceCode html"><span id="cb7-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">p</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>This paragraph is English, but the language is not specifically defined.<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">p</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb7-2"></span>
<span id="cb7-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">p</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> lang</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"en-GB"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>This paragraph is defined as British English.<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">p</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb7-4"></span>
<span id="cb7-5"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">p</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> lang</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fr"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>Ce paragraphe est défini en français.<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">p</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div></li>
<li><p>Les attributs <code>class</code> et <code>id</code> sont parmi les plus utilisés, on les verra dans les prochains chapitres car ils sont utiles à la mise en forme <code>css</code>et les interactions avec javascript.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode numberSource html number-lines code-with-copy"><code class="sourceCode html"><span id="cb8-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">a</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"special"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> class</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"important"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>Ce lien a l'air important.<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">p</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div></li>
</ul>
</div>
</section>
<section id="balises-orphelines" class="level3" data-number="2.4">
<h3 data-number="2.4" class="anchored" data-anchor-id="balises-orphelines"><span class="header-section-number">2.4</span> Balises orphelines</h3>
<p>Certaines balises ne contiennent pas de texte, elles n’ont donc pas de balises fermantes.</p>
<p>On les appelle des balises <em>orphelines</em>. Elles ont une syntaxe particulière: <code>&lt;balise/&gt;</code>.</p>
<p>Par exemple la balise d’image <code>&lt;img /&gt;</code>.</p>
<pre><code>&lt;img src="logo.png" alt="Logo du site" /&gt;</code></pre>
<p>:::</p>
<div class="prop">
<p>La balise <code>&lt;img /&gt;</code> possède deux attributs obligatoires:</p>
<ul>
<li><code>src</code> pour préciser l’adresse de l’image à afficher</li>
<li><code>alt</code> pour expliquer le contenu de l’image si l’image ne s’affiche pas ou pour décrire l’image aux personnes non-voyantes.</li>
</ul>
</div>
</section>
</section>
<section id="quelques-petits-plus" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="quelques-petits-plus"><span class="header-section-number">3</span> Quelques petits plus</h2>
<ul>
<li>Les commentaires sont écrits <code>&lt;!-- Ceci est un commentaire --&gt;</code></li>
<li>On écrit en général les balises en minuscules.</li>
<li>L’indentation n’est pas obligatoire, mais elle rend le fichier plus lisible.</li>
<li>Les balises <code>&lt;div&gt;</code>, <code>&lt;header&gt;</code>, <code>&lt;article&gt;</code>, <code>&lt;footer&gt;</code> ont été créé dans la version 5 de <code>html</code> afin de créer des blocs spécifiques dans la page.</li>
</ul>


</section>

 ]]></description>
  <category>1NSI</category>
  <guid>https://www.lyceum.fr/2023-2024/1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/2-ecriture-dune-page-html/</guid>
  <pubDate>Thu, 16 May 2024 13:21:00 GMT</pubDate>
</item>
<item>
  <title>Chapitre 3: Mise en forme avec CSS</title>
  <link>https://www.lyceum.fr/2023-2024/1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/3-mise-en-forme-avec-css/</link>
  <description><![CDATA[ 




<div class="programme">
<div class="callout callout-style-simple callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Programme
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="programme">
<table class="table table-bordered table-hover">
<thead class="table-warning">
<tr class="header">
<th>Contenus</th>
<th>Capacités attendues</th>
<th>Commentaires</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><p>Modalités de l’interaction entre l’homme et la machine</p>
<p>Événements</p></td>
<td><p>Identifier les différents composants graphiques permettant d’interagir avec une application Web</p>
<p>Identifier les événements que les fonctions associées aux différents composants graphiques sont capables de traiter</p></td>
<td>Il s’agit d’examiner le code HTML d’une page comprenant des composants graphiques et de distinguer ce qui relève de la description des composants graphiques en HTML de leur comportement (réaction aux événements) programmé par exemple en JavaScript.</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<div>

</div>
<div class="intro quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p>Le W3C a défini deux langages afin de bien séparer <em>le fond et la forme</em>. Le <code>html</code> décrit le contenu du document: le <em>fond</em>, et le <code>css</code> décrit sa <em>forme</em>. Le <code>css</code> permet de mettre en forme notre page web pour personnaliser son aspect. Comme nous allons le voir le <code>CSS</code> pour <em>Cascading Style Sheet</em> (Feuille de styles en cascade) est basé sur la sélection d’éléments d’un page <code>html</code> afin de leur appliquer des styles spécifiques.</p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p></p><figure class="wikimage figure"><picture>
			  <source type="image/webp" srcset="/img/0UpmkHCkON-300.webp 300w, /img/0UpmkHCkON-495.webp 495w" sizes="100vw">
  <source type="image/jpeg" srcset="/img/0UpmkHCkON-300.jpeg 300w, /img/0UpmkHCkON-495.jpeg 495w" sizes="100vw">
				<img class="img-fluid figure-img" src="https://www.lyceum.fr/2023-2024/img/0UpmkHCkON-300.webp" width="495" height="370" alt="CSS3 Styling" loading="lazy" decoding="async">
			</picture>
<figcaption id="caption"></figcaption><figcaption id="credit">©&nbsp;&nbsp;CC BY 3.0&nbsp;<a id="image-description" href="//commons.wikimedia.org/wiki/File:Class-header-css3.jpg">via Wikimedia Commons</a></figcaption></figure><p></p>
</div>
</div>
</div>
<p>Nous allons d’abord voir comment lier une feuille de styles à notre page <code>html</code>.</p>
<section id="intégration-de-code-css-dans-une-page-html" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="intégration-de-code-css-dans-une-page-html"><span class="header-section-number">1</span> Intégration de code <code>css</code> dans une page <code>html</code></h2>
<p>Il existe <strong>diverses façons</strong> d’appliquer du code <code>css</code> à une page, la méthode recommandée est d’écrire le code <code>css</code> dans un fichier avec l’extension <code>.css</code>, par exemple <code>style.css</code> et le lier dans l’en-tête du document(le <code>&lt;head&gt;</code>).</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource html number-lines code-with-copy"><code class="sourceCode html"><span id="cb1-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">head</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-2">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">link</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> rel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stylesheet"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text/css"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> href</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"style.css"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">head</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
<p><em>C’est la méthode préférée lorsque l’on a un ensemble de pages qui contiennent des styles identiques, cela permet d’alléger l’écriture du code et les requêtes vers le serveur de documents.</em></p>
<div class="plus">
<div class="callout callout-style-simple callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-2-contents" aria-controls="callout-2" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
En plus: autres méthodes
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-2" class="callout-2-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="plus" data-titre="autres méthodes">
<ol type="1">
<li>Utilisation d’une feuille de style interne</li>
</ol>
<p>On intègre le code <code>css</code> au sein de balises <code>&lt;style&gt;</code> dans l’entête du document(le <code>&lt;head&gt;</code>).</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource html number-lines code-with-copy"><code class="sourceCode html"><span id="cb2-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">head</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-2">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">style</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-3">        body {</span>
<span id="cb2-4">              <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">background-color</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">linen</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-5">             }</span>
<span id="cb2-6">        h1 {</span>
<span id="cb2-7">            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">color</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">maroon</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-8">            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">margin-left</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">px</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-9">            }</span>
<span id="cb2-10">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">style</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-11"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">head</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
<p><em>Méthode pratique lorsque l’on a des documents <code>html</code> d’une seule page ou avec des styles spécifiques.</em></p>
<ol start="2" type="1">
<li>Insertion directe dans les balises <code>html</code></li>
</ol>
<p>On utilise alors l’attribut style au sein de la balise ouvrante de l’élément à styler.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource html number-lines code-with-copy"><code class="sourceCode html"><span id="cb3-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">p</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> style</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"color: red; font-weight: bold;"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-2">    Maintenant mon texte est écrit en rouge et en gras.</span>
<span id="cb3-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">p</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
<strong>RENDU</strong>
<p style="color: red; font-weight: bold;">
Maintenant mon texte est écrit en rouge et en gras.
</p>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="syntaxe" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="syntaxe"><span class="header-section-number">2</span> Syntaxe</h2>
<p>Une règle <code>css</code> est constituée d’un sélecteur suivi d’un bloc de déclaration entre accolades. Chaque déclaration se termine par un point-virgule.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource css number-lines code-with-copy"><code class="sourceCode css"><span id="cb4-1">selecteur de balises {</span>
<span id="cb4-2">    attribut-css<span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">valeur</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-3">    attribut-css2<span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">valeur2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-4">    ...</span>
<span id="cb4-5">}</span></code></pre></div>
<p><strong>Remarque:</strong> <em>Les points-virgules sont obligatoires, mais pas l’indentation. Cette dernière est cependant conseillée pour rendre le code plus lisible.</em></p>
<div class="example">
<p>Un code <code>css</code> qui permet d’écrire tous les éléments <code>&lt;strong&gt;</code> en rouge et soulignés.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource css number-lines code-with-copy"><code class="sourceCode css"><span id="cb5-1">strong {</span>
<span id="cb5-2">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">color</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">red</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-3">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">text-decoration</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">underline</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-4">}</span></code></pre></div>
</div>
</section>
<section id="les-sélecteurs" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="les-sélecteurs"><span class="header-section-number">3</span> Les sélecteurs</h2>
<table class="table table-bordered table-hover">
<thead class="table-warning">
<tr class="header">
<th>sélecteur</th>
<th>Éléments visés</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>p {...}</code></td>
<td>Tous les éléments avec la balise <code>&lt;b&gt;</code></td>
</tr>
<tr class="even">
<td><code>p, li{...}</code></td>
<td>Tous les éléments <code>&lt;p&gt;</code> <strong>et</strong> les éléments <code>&lt;p&gt;</code></td>
</tr>
<tr class="odd">
<td><code>div p{...}</code></td>
<td>Tous les éléments <code>&lt;p&gt;</code> <strong>contenus dans</strong>(<em>descendants d’</em>)une balise <code>&lt;div&gt;</code></td>
</tr>
<tr class="even">
<td><code>.centre {...}</code></td>
<td><em>Tous les éléments</em> ayant un attribut <code>class="centre"</code></td>
</tr>
<tr class="odd">
<td><code>#formulaire {...}</code></td>
<td><em>L’élément</em> ayant un attribut <code>id="formulaire"</code></td>
</tr>
<tr class="even">
<td><code>p.centre {...}</code></td>
<td><em>Tous les éléments</em> <code>&lt;p&gt;</code> ayant un attribut <code>class="centre"</code></td>
</tr>
</tbody>
</table>
</section>
<section id="les-propriétés" class="level2" data-number="4">
<h2 data-number="4" class="anchored" data-anchor-id="les-propriétés"><span class="header-section-number">4</span> Les propriétés</h2>
<table class="table table-bordered table-hover">
<thead class="table-warning">
<tr class="header">
<th>propriété</th>
<th>Mise en forme</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>color: ...;</code></td>
<td>Couleur de l’élément.</td>
</tr>
<tr class="even">
<td><code>background-color: ...;</code></td>
<td>Couleur de l’arrière-plan de l’élément.</td>
</tr>
<tr class="odd">
<td><code>text-align: ...;</code></td>
<td>Alignement du texte(gauche, centré, justifié…).</td>
</tr>
<tr class="even">
<td><code>text-decoration: ...;</code></td>
<td>Décoration du texte(souligné, barré…)</td>
</tr>
<tr class="odd">
<td><code>font-size: ...;</code></td>
<td>Taille de la police</td>
</tr>
<tr class="even">
<td><code>font-weight: ...;</code></td>
<td>Graisse de la police(plus ou moins gras)</td>
</tr>
<tr class="odd">
<td><code>margin: ...;</code></td>
<td>Espacement par rapport aux voisins</td>
</tr>
<tr class="even">
<td><code>padding: ...;</code></td>
<td>Espacement par rapport aux bords de sa boite englobante</td>
</tr>
</tbody>
</table>
<p>L’ensemble des propriétés en <code>css</code> est listé sur l’excellent site <a href="https://developer.mozilla.org/fr/docs/Web/CSS/Reference">MDN</a>.</p>
</section>
<section id="positionnement-en-css" class="level2" data-number="5">
<h2 data-number="5" class="anchored" data-anchor-id="positionnement-en-css"><span class="header-section-number">5</span> Positionnement en <code>css</code></h2>
<section id="display-inline-et-displayblock" class="level3" data-number="5.1">
<h3 data-number="5.1" class="anchored" data-anchor-id="display-inline-et-displayblock"><span class="header-section-number">5.1</span> <code>display: inline;</code> et <code>display:block;</code></h3>
<p>Il existe deux propriétés principales de positionnement en <code>css</code>:</p>
<ul>
<li><code>display: block</code>: les éléments se placent les uns au-dessus des autres et occupent toute la largeur disponible. C’est la propriété appliquée par défaut sur les balises de titres <code>&lt;h1&gt;</code> à <code>&lt;h6&gt;</code> ou encore aux paragraphes <code>&lt;p&gt;</code> par exemple.</li>
</ul>
<div class="example">
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode numberSource html number-lines code-with-copy"><code class="sourceCode html"><span id="cb6-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">h1</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> style</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"background-color:yellow;"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>Titre de niveau 1<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">h1</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb6-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">p</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> style</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"background-color:lime;"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span> Un paragraphe avec un fond vert clair pour voir l'espace qu'il occupe à l'écran.<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">p</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
<strong>RENDU</strong>
<h1 style="background-color:yellow;">
Titre de niveau 1
</h1>
<p style="background-color:lime;">
Un paragraphe avec un fond vert clair pour voir l’espace qu’il occupe à l’écran.
</p>
</div>
<ul>
<li><code>display: inline</code>: les éléments se placent les uns à côté des autres, et occupent exactement la place dont ils ont besoin. C’est la propriété appliquée par défaut sur les balises <code>&lt;strong&gt;</code> ou <code>&lt;span&gt;</code>.</li>
</ul>
<div class="example">
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource html number-lines code-with-copy"><code class="sourceCode html"><span id="cb7-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">p</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> style</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"background-color:lime;"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span> Un paragraphe avec un fond vert clair et des éléments inline <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">strong</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>strong<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">strong</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span> et  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">span</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> style</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"background-color=ligthblue;"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>span<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">span</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span> pour voir le positionnement à l'écran.<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">p</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
<strong>RENDU</strong>
<p style="background-color:lime;">
Un paragraphe avec un fond vert clair et des éléments inline <strong>strong</strong> et <span style="background-color:lightblue;">span</span> pour voir leurs positionnement à l’écran.
</p>
</div>
</section>
<section id="des-positionnements-plus-évolués" class="level3" data-number="5.2">
<h3 data-number="5.2" class="anchored" data-anchor-id="des-positionnements-plus-évolués"><span class="header-section-number">5.2</span> Des positionnements plus évolués</h3>
<p>Lorsqu’on laisse les éléments se placer naturellement à l’écran <em>(de haut en bas, ou de droite à gauche)</em>, on dit que les éléments sont <strong>positionnés dans le flux</strong>. Si l’on souhaite les positionner ailleurs, c’est-à-dire les sortir du flux, on utilise principalement les propriétés <code>css</code>:</p>
<ul>
<li><a href="https://developer.mozilla.org/fr/docs/Web/CSS/display"><code>display</code></a>: avec notamment les valeurs <a href="http://fr.learnlayout.com/flexbox.html"><code>flex</code></a> pour le positionnement 1D et <code>grid</code> pour le positionnement 2D.</li>
<li><a href="https://developer.mozilla.org/fr/docs/Web/CSS/position"><code>position</code></a>: avec les valeurs <code>relative</code>, <code>absolute</code> ou <code>fixed</code>.</li>
<li><a href="https://developer.mozilla.org/fr/docs/Web/CSS/float"><code>float</code></a> avec les valeurs <code>left</code> ou <code>right</code>.</li>
</ul>
</section>
</section>
<section id="en-plus" class="level2" data-number="6">
<h2 data-number="6" class="anchored" data-anchor-id="en-plus"><span class="header-section-number">6</span> En plus</h2>
<ul>
<li>Les commentaires utilisent la syntaxe suivante: <code>/* Un commentaire */</code></li>
<li>Les attributs <code>id</code> et les <code>class</code> sont souvent ajoutés au <code>html</code> pour pouvoir les sélectionner aisément en <code>css</code>. Attention cependant, plusieurs éléments peuvent avoir la même <code>class</code>e, mais un <code>id</code> est unique.</li>
<li>Inspecteur de styles du navigateur: pour inspecter un élément il suffit de le sélectionner et de faire un clic droit de la souris puis de sélectionner <code>Inspecter l'élément</code>.</li>
</ul>


</section>

 ]]></description>
  <category>1NSI</category>
  <guid>https://www.lyceum.fr/2023-2024/1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/3-mise-en-forme-avec-css/</guid>
  <pubDate>Thu, 16 May 2024 13:21:00 GMT</pubDate>
</item>
<item>
  <title>Chapitre 4: Gestion des événements en javascript</title>
  <link>https://www.lyceum.fr/2023-2024/1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/4-gestion-des-evenements-en-javascript/</link>
  <description><![CDATA[ 




<div class="programme">
<div class="callout callout-style-simple callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Programme
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="programme">
<table class="table table-bordered table-hover">
<thead class="table-warning">
<tr class="header">
<th>Contenus</th>
<th>Capacités attendues</th>
<th>Commentaires</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><p>Modalités de l’interaction entre l’homme et la machine</p>
<p>Événements</p></td>
<td><p>Identifier les différents composants graphiques permettant d’interagir avec une application Web</p>
<p>Identifier les événements que les fonctions associées aux différents composants graphiques sont capables de traiter</p></td>
<td>Il s’agit d’examiner le code HTML d’une page comprenant des composants graphiques et de distinguer ce qui relève de la description des composants graphiques en HTML de leur comportement (réaction aux événements) programmé par exemple en JavaScript.</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<div>

</div>
<div class="intro quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p>Le <code>javascript</code> a été créé en 1995 par Brendan Eich, il est utilisé pour programmer le navigateur côté <em>client</em>. <strong>Attention</strong> à ne pas confondre le <code>javascript</code> et le <code>java</code>, ce sont des langages différents.</p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p></p><figure class="wikimage figure"><img src="https://upload.wikimedia.org/wikipedia/commons/9/99/Unofficial_JavaScript_logo_2.svg" class="img-fluid figure-img" alt="Unofficial JavaScript logo by Chris Williams."><figcaption id="caption"></figcaption><figcaption id="credit">&nbsp;Public domain&nbsp;<a id="image-description" href="//commons.wikimedia.org/wiki/File:Unofficial_JavaScript_logo_2.svg">via Wikimedia Commons</a></figcaption></figure><p></p>
</div>
</div>
</div>
<section id="intégration-de-code-javascript-dans-une-page-html" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="intégration-de-code-javascript-dans-une-page-html"><span class="header-section-number">1</span> Intégration de code <code>javascript</code> dans une page <code>html</code></h2>
<p>Le code <code>javascript</code> peut être intégré à un document <code>html</code> grâce à la balise <code>&lt;script&gt;</code>.</p>
<p>Les fichiers <code>javascript</code> utilisent l’extension <code>.js</code> que l’on importe en précisant son URI grâce à l’attribut <code>src</code>.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource html number-lines code-with-copy"><code class="sourceCode html"><span id="cb1-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">script</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> src</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"script.js"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">script</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
<p><em>Remarque:</em> Bien qu’il soit recommandé de placer la balise <code>&lt;script&gt;</code> dans le <code>&lt;head&gt;</code> du document, il est très fréquent de voir le <code>javascript</code> placé juste avant la balise fermante <code>&lt;body&gt;</code>. Ceci permet d’être sûr que l’ensemble de la page web ait été <em>parsée</em>(analysée) par le navigateur avant de la modifier avec le code <code>javascript</code>.</p>
<div class="plus">
<div class="callout callout-style-simple callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-2-contents" aria-controls="callout-2" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
En plus: Intégrer le `javascript` directement dans la page `html`
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-2" class="callout-2-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="plus" data-titre="Intégrer le `javascript` directement dans la page `html`">
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource html number-lines code-with-copy"><code class="sourceCode html"><span id="cb2-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;!DOCTYPE</span> html<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">html</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> lang</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fr"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-3">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">head</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-4">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">meta</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> charset</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"utf-8"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> </span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">/&gt;</span></span>
<span id="cb2-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">title</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>Un peu de javascript<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">title</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-6">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">head</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-7">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">body</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-8">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">h1</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>Titre principal de mon document<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">h1</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-9">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">p</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-10">      Regarde maman, je suis en train d'ajouter du code `javascript` à ma page.</span>
<span id="cb2-11">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">p</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-12">     <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">script</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> type=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text/javascript"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> charset</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"utf-8"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-13">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Je suis un commentaire javascript!</span></span>
<span id="cb2-14">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Alert crée une fenêtre d'affichage sur l'écran pour l'utilisateur</span></span>
<span id="cb2-15">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">alert</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Hello world !'</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// L'affichage alert est un peu vieillot</span></span>
<span id="cb2-16"></span>
<span id="cb2-17">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// console.log() écrit dans la console du navigateur pour le développeur</span></span>
<span id="cb2-18">      <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">console</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Script Hello world exécuté.'</span>)</span>
<span id="cb2-19">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">script</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-20">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">body</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-21"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">html</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="débogage-du-javascript" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="débogage-du-javascript"><span class="header-section-number">2</span> Débogage du <code>javascript</code></h2>
<p>Pour déboguer du code <code>javascript</code>, on utilise le plus souvent <strong>la console du navigateur</strong>( <kbd>Ctrl</kbd> + <kbd>Maj</kbd> + <kbd>I</kbd>). Puis on y affiche des valeurs de variables depuis le programme <code>javascript</code> avec la fonction <code>console.log()</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><picture>
			  <source type="image/webp" srcset="/img/KtDy4fIYqg-300.webp 300w, /img/KtDy4fIYqg-600.webp 600w, /img/KtDy4fIYqg-963.webp 963w" sizes="100vw">
  <source type="image/png" srcset="/img/KtDy4fIYqg-300.png 300w, /img/KtDy4fIYqg-600.png 600w, /img/KtDy4fIYqg-963.png 963w" sizes="100vw">
				<img class="img-fluid figure-img" src="https://www.lyceum.fr/2023-2024/img/KtDy4fIYqg-300.webp" width="963" height="426" alt="" loading="lazy" decoding="async">
			</picture>
</p>
<figcaption>Copie d’écran de la console du navigateur web firefox</figcaption>
</figure>
</div>
</section>
<section id="syntaxe-du-javascript" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="syntaxe-du-javascript"><span class="header-section-number">3</span> Syntaxe du <code>javascript</code></h2>
<p>Voici quelques bases de sa syntaxe, vous pouvez trouver un comparatif avec Python dans la page <a href="../../7-langages-et-programmation/7-comparaisons-de-langages/">Comparaison des langages</a></p>
<ul>
<li>Les variables doivent être déclarées grâce au mot clé <code>var</code>(ou <code>const</code> et <code>let</code> dans les versions récentes).</li>
<li>Tout comme en python, les <strong>chaînes de caractères</strong> sont entourées de <strong>guillemets</strong> simples ou doubles.</li>
<li>Les instructions simples sont terminées par un <strong>point-virgule</strong>: <code>;</code>(il n’est cependant pas toujours indispensable contrairement au <code>css</code>).</li>
<li>Les <strong>blocs d’instructions</strong> sont entourés d’<strong>accolades</strong>.</li>
<li>Les <strong>commentaires</strong> sont notés précédés de deux barres obliques: <code>//</code>.</li>
<li>Les variables et fonctions sont écrites en <code>camelCase</code>(L’espace est remplacé par une majuscule).</li>
<li>L’indentation des blocs d’instruction n’est pas obligatoire comme en Python, mais souhaitable.</li>
</ul>
<p>La référence la plus complète et à jour est le site Mozilla Developper Network <a href="https://developer.mozilla.org/fr/docs/Web/JavaScript/Guide">MDN</a>.</p>
<p>Le chapitre <a href="../../../../1g/nsi/7-langages-et-programmation/7-comparaisons-de-langages">Comparaison de langages</a> permet de faire le lien entre la syntaxe Python et la syntaxe javascript. <strong>Voir notamment la syntaxe concernant les <a href="../../../../1g/nsi/7-langages-et-programmation/7-comparaisons-de-langages/#fonctions">fonctions</a> qui sont omniprésentes en javascript.</strong></p>
</section>
<section id="interaction-au-sein-dune-page-web-les-événements" class="level2" data-number="4">
<h2 data-number="4" class="anchored" data-anchor-id="interaction-au-sein-dune-page-web-les-événements"><span class="header-section-number">4</span> Interaction au sein d’une page web: les événements</h2>
<p>Pour que la page réagisse aux actions de l’utilisateur, on ajoute des <code>EventHandler</code><em>(gestionnaires d’événements)</em> aux balises <code>html</code> qui doivent exécuter du code <code>javascript</code> en réponse aux événements.</p>
<p>Par exemple, pour exécuter la fonction javascript <code>initFunction</code> lorsque la balise <code>&lt;body&gt;</code> a fini de se charger.</p>
<p>Dans le fichier <code>html</code>:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource html number-lines code-with-copy"><code class="sourceCode html"><span id="cb3-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">body</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> onload</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"initFunction();"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
<p>Dans le fichier <code>js</code>:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource js number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb4-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">initFunction</span>(){</span>
<span id="cb4-2">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> now <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Date</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-3">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">console</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Page ouverte à "</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> now<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getHours</span>() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"h"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> now<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getMinutes</span>() )<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-4">}</span></code></pre></div>
<p>Voici quelques exemples d’événements courants.</p>
<table class="table table-bordered table-hover">
<thead class="table-warning">
<tr class="header">
<th><code>EventHandler</code></th>
<th>Type d’événement géré</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>onclick</code></td>
<td>clic de la souris sur l’élément</td>
</tr>
<tr class="even">
<td><code>ondblclick</code></td>
<td>double-clic de la souris sur l’élément</td>
</tr>
<tr class="odd">
<td><code>onkeypress</code></td>
<td>appuie sur une touche du clavier</td>
</tr>
<tr class="even">
<td><code>onkeyup</code></td>
<td>touche de clavier relâchée</td>
</tr>
<tr class="odd">
<td><code>onselect</code></td>
<td>élément sélectionné</td>
</tr>
</tbody>
</table>
<p>La liste complète des <code>GlobalEventHandlers</code> sur <a href="https://developer.mozilla.org/fr/docs/Web/API/GlobalEventHandlers">MDN</a></p>
</section>
<section id="html-js-comment-récupérer-une-entrée-utilisateur" class="level2" data-number="5">
<h2 data-number="5" class="anchored" data-anchor-id="html-js-comment-récupérer-une-entrée-utilisateur"><span class="header-section-number">5</span> <code>HTML → JS</code>: Comment récupérer une entrée utilisateur ?</h2>
<p>La balise html <code>&lt;input&gt;</code> permet de récupérer les entrées utilisateur, il en existe de divers types:</p>
<ul>
<li><code>&lt;input type="text" ...</code>: Par défaut: entrée de texte.</li>
<li><code>&lt;input type="button" ...</code>: Un bouton(on préfèrera cependant la balise <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button"><code>&lt;button&gt;</code></a>).</li>
<li><code>&lt;input type="checkbox" ...</code>: Case à cocher.</li>
<li><code>&lt;input type="radio" ...</code>: un bouton radio qui permet de sélectionner une seule valeur parmi un groupe de différentes valeurs.</li>
</ul>
<p>Voici un exemple complet qui affiche la valeur tapée par l’utilisateur lorsqu’on clique sur un bouton.</p>
<p>

[Événements en javascript](embedded-codesandbox://evenements-javascript)

</p>
<p>Si on regarde cet exemple, on voit que pour récupérer une entrée:</p>
<ol type="1">
<li><p>Dans le <code>html</code>, on ajoute un <code>id</code> à la balise input que l’on souhaite récupérer:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource html number-lines code-with-copy"><code class="sourceCode html"><span id="cb5-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">input</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mon-input"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> placeholder</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Taper votre texte ici"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> </span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">/&gt;</span></span></code></pre></div></li>
<li><p>Dans le <code>js</code>, on accède à la valeur entrée dans l’élément que l’on affecte à une variable.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode numberSource js number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// On récupère le texte dans la balise input</span></span>
<span id="cb6-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">var</span> texte <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">querySelector</span>(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`#mon-input`</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value</span></span>
<span id="cb6-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// On l'affiche dans la console</span></span>
<span id="cb6-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">console</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(texte)</span></code></pre></div></li>
</ol>
<div class="plus">
<div class="callout callout-style-simple callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-3-contents" aria-controls="callout-3" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
En plus
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-3" class="callout-3-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="plus">
<p>Il est également possible de récupérer une entrée utilisateur avec la fonction <code>prompt()</code></p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource js number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb7-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">var</span> rep <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">prompt</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Voulez-vous accéder à cette page ?"</span>)</span></code></pre></div>
<p>Cependant, cela n’est plus très utilisé de nos jours.</p>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="js-html-comment-afficher-du-texte-dynamiquement-sur-la-page" class="level2" data-number="6">
<h2 data-number="6" class="anchored" data-anchor-id="js-html-comment-afficher-du-texte-dynamiquement-sur-la-page"><span class="header-section-number">6</span> <code>JS → HTML</code>: Comment afficher du texte dynamiquement sur la page?</h2>
<section id="exécution-différée" class="level3" data-number="6.1">
<h3 data-number="6.1" class="anchored" data-anchor-id="exécution-différée"><span class="header-section-number">6.1</span> Exécution différée</h3>
<p>Avant de modifier la page, il convient d’attendre que la page <code>html</code> soit chargée avant d’exécuter le code javascript. De nombreux développeurs placent le code <code>javascript</code> à la fin du corps du document avant la balise fermante <code>&lt;/body&gt;</code>.</p>
<p>Cependant, il est aussi possible et recommandé de lancer le code <code>javascript</code> qu’après le chargement de la fenêtre en plaçant le code dans une fonction qui s’exécute après le chargement de la page:</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode numberSource js number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb8-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">window</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">onload</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>() {</span>
<span id="cb8-2">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// code javascript à exécuter</span></span>
<span id="cb8-3">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// après le chargement de la page</span></span>
<span id="cb8-4">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">console</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'La page est chargée, je peux maintenant la modifier'</span>)</span>
<span id="cb8-5">}</span></code></pre></div>
</section>
<section id="accéder-à-un-élément-html" class="level3" data-number="6.2">
<h3 data-number="6.2" class="anchored" data-anchor-id="accéder-à-un-élément-html"><span class="header-section-number">6.2</span> Accéder à un élément <code>html</code></h3>
<p>Pour accéder à un élément <code>html</code> à partir du <code>javascript</code>, on utilise la fonction <code>document.querySelector()</code>.</p>
<p>C’est une méthode qui permet de sélectionner les éléments comme en <code>css</code>.</p>
<div class="example">
<p>Vous avez un document <code>html</code> qui contient les éléments suivants:</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode numberSource html number-lines code-with-copy"><code class="sourceCode html"><span id="cb9-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">h1</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> class</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grand-titre"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>Titre principal de mon document<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">h1</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb9-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">p</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"premier-paragraphe"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb9-3">  Regarde maman, je suis en train d'ajouter du code `javascript` à ma page.</span>
<span id="cb9-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">p</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb9-5"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">h2</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sous-titre"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>Sous-titre de mon document<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">h2</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
<p>On peut alors en <code>javascript</code> modifier leurs contenus grâce à la propriété <code>innerHTML</code>,</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode numberSource js number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb10-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">querySelector</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#premier-paragraphe'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">innerHTML</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"J'aimais pas l'ancien texte, je l'ai changé."</span></span></code></pre></div>
<p><strong>Attention:</strong> ne pas oublier de placer ce code dans la fonction <code>window.onload = function() { }</code> ou de placer votre balise <code>&lt;script&gt;</code> à la fin du <code>&lt;body&gt;</code>.</p>
</div>
</section>
<section id="modifier-les-styles" class="level3" data-number="6.3">
<h3 data-number="6.3" class="anchored" data-anchor-id="modifier-les-styles"><span class="header-section-number">6.3</span> Modifier les styles</h3>
<p>Vous pouvez en fait modifier toutes les propriétés des éléments à partir de javascript. Voici par exemple comment modifier les styles grâce à la propriété <code>style</code>.</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode numberSource js number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb11-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">querySelector</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'h1.grand-titre'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#FFAA85'</span></span>
<span id="cb11-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">querySelector</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#grand-titre'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#AA00AA'</span></span></code></pre></div>
</section>
</section>
<section id="un-exemple-complet" class="level2" data-number="7">
<h2 data-number="7" class="anchored" data-anchor-id="un-exemple-complet"><span class="header-section-number">7</span> Un exemple complet</h2>
<p>Voici un exemple complet qui commence par récupérer une entrée utilisateur(<code>HTML → JS</code>), puis qui modifie la page en fonction de sa réponse(<code>JS → HTML</code>).</p>
<p>

[Exemple complet de gestion des événements en javascript](embedded-codesandbox://evenements-javascript-complet)

</p>
</section>
<section id="pour-aller-plus-loin" class="level2" data-number="8">
<h2 data-number="8" class="anchored" data-anchor-id="pour-aller-plus-loin"><span class="header-section-number">8</span> Pour aller plus loin</h2>
<p>Le <code>javascript</code> étant un langage très à la mode, les tutoriels, cours et vidéos ne manquent pas. N’hésitez pas à consulter:</p>
<ul>
<li>le cours d’OpenClassroom <a href="https://openclassrooms.com/courses/apprenez-a-coder-avec-javascript">Apprenez à coder avec JavaScript</a></li>
<li><a href="https://www.codecademy.com/fr/learn/learn-javascript">codeacademy</a></li>
</ul>
<p>Ou encore les sites de référence comme:</p>
<ul>
<li><a href="https://developer.mozilla.org/fr/docs/Web/JavaScript">MDN</a></li>
<li><a href="http://www.w3schools.com/js/">w3schools</a></li>
</ul>


</section>

 ]]></description>
  <category>1NSI</category>
  <guid>https://www.lyceum.fr/2023-2024/1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/4-gestion-des-evenements-en-javascript/</guid>
  <pubDate>Thu, 16 May 2024 13:21:00 GMT</pubDate>
</item>
<item>
  <title>Chapitre 5: Formulaire d’une page web</title>
  <link>https://www.lyceum.fr/2023-2024/1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/5-formulaire-dune-page-web/</link>
  <description><![CDATA[ 




<div class="programme">
<div class="callout callout-style-simple callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Programme
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="programme">
<table class="table table-bordered table-hover">
<thead class="table-warning">
<tr class="header">
<th>Contenus</th>
<th>Capacités attendues</th>
<th>Commentaires</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Formulaire d’une page Web</td>
<td><p>Analyser le fonctionnement d’un formulaire simple.</p>
<p>Distinguer les transmissions de paramètres par les requêtes POST ou GET.</p></td>
<td>Discuter les deux types de requêtes selon le type des valeurs à transmettre et/ou leur confidentialité.</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<div>

</div>
<div class="intro quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p>Dans ce chapitre, nous allons voir comment permettre à l’utilisateur d’entrer des données sur une page web grâce à la balise html <code>&lt;form&gt;</code>. Ces données seront ensuite transmises au serveur pour alimenter des bases de données comme nous le verront au chapitre suivant.</p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p></p><figure class="wikimage figure"><picture>
			  <source type="image/webp" srcset="/img/ignCE7S8C7-300.webp 300w, /img/ignCE7S8C7-393.webp 393w" sizes="100vw">
  <source type="image/png" srcset="/img/ignCE7S8C7-300.png 300w, /img/ignCE7S8C7-393.png 393w" sizes="100vw">
				<img class="img-fluid figure-img" src="https://www.lyceum.fr/2023-2024/img/ignCE7S8C7-300.webp" width="393" height="320" alt="Les formulaires web permettent d'utiliser' types d'entrée: texte, nombre, bouton radio, liste déroulante..." loading="lazy" decoding="async">
			</picture>
<figcaption id="caption">Les formulaires web permettent d'utiliser' types d'entrée: texte, nombre, bouton radio, liste déroulante...</figcaption><figcaption id="credit">©&nbsp;<a href="https://en.wikipedia.org/wiki/User:File_Upload_Bot" class="extiw" title="en:User:File Upload Bot">File Upload Bot</a> at the <a href="https://en.wikipedia.org/wiki/" class="extiw" title="w:">English-language Wikipedia</a>&nbsp;CC BY-SA 3.0&nbsp;<a id="image-description" href="//commons.wikimedia.org/wiki/File:Sample_web_form.png">via Wikimedia Commons</a></figcaption></figure><p></p>
</div>
</div>
</div>
<section id="création-du-formulaire-avec-la-balise-form" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="création-du-formulaire-avec-la-balise-form"><span class="header-section-number">1</span> Création du formulaire avec la balise <code>&lt;form&gt;</code></h2>
<p>Les formulaires sont un moyen de récupérer des données à partir du client pour les passer à l’application serveur.</p>
<p>Dans le fichier <code>html</code>, on utilise la balise <code>&lt;form&gt;</code> en y ajoutant l’attribut <code>method</code> qui permet d’indiquer quel est le type de requête HTTP.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource html number-lines code-with-copy"><code class="sourceCode html"><span id="cb1-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">form</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> method</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"get"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-2"></span>
<span id="cb1-3">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">label</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nom"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>Entrez votre nom: <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">label</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-4">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">input</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nom"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> required</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-5">  </span>
<span id="cb1-6">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">label</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"email"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>Entrez votre email: <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">label</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-7">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">input</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"email"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"email"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> required</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-8">  </span>
<span id="cb1-9">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">input</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"submit"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> value</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Enregistrer"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-10">  </span>
<span id="cb1-11"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">form</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
<section id="méthode-http-get" class="level3" data-number="1.1">
<h3 data-number="1.1" class="anchored" data-anchor-id="méthode-http-get"><span class="header-section-number">1.1</span> Méthode <code>HTTP GET</code></h3>
<p>Avec cette méthode, les paramètres du formulaire sont placés dans l’<em>url</em> lors de la soumission.</p>
<div class="example">
<p>Soumission des données par la méthode GET:</p>
<p><a href="http://chemin/fichier.html?nom=James&amp;email=james%40cameron.com" class="uri">http://chemin/fichier.html?nom=James&amp;email=james%40cameron.com</a></p>
<ul>
<li>nom: James</li>
<li>email: james@cameron.com</li>
</ul>
</div>
<div class="plus">
<div class="callout callout-style-simple callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-2-contents" aria-controls="callout-2" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
En plus: Percent-encoding
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-2" class="callout-2-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="plus" data-titre="Percent-encoding">
<p>Dans les URL, les caractères spéciaux tels <code>@</code> sont échappés avec un code par exemple: <code>%40</code> pour <code>@</code>, <code>%20</code> pour l’espace.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><picture>
			  <source type="image/webp" srcset="/img/COjc6sk3lw-300.webp 300w, /img/COjc6sk3lw-600.webp 600w, /img/COjc6sk3lw-1034.webp 1034w" sizes="100vw">
  <source type="image/png" srcset="/img/COjc6sk3lw-300.png 300w, /img/COjc6sk3lw-600.png 600w, /img/COjc6sk3lw-1034.png 1034w" sizes="100vw">
				<img class="img-fluid figure-img" src="https://www.lyceum.fr/2023-2024/img/COjc6sk3lw-300.webp" width="1034" height="96" alt="" loading="lazy" decoding="async">
			</picture>
</p>
<figcaption>Tableau d’exemples issu de wikipedia</figcaption>
</figure>
</div>
<p>Voir l’article <a href="https://fr.wikipedia.org/wiki/Percent-encoding">Wikipedia</a> pour plus de détails.</p>
</div>
</div>
</div>
</div>
</div>
<div class="appli">
<div class="callout callout-style-simple callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-3-contents" aria-controls="callout-3" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Application: Création d'un formulaire avec la méthode GET
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-3" class="callout-3-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="appli" data-titre="Création d'un formulaire avec la méthode GET">
<p>Créer une page <code>index.html</code> dans laquelle vous placerez un formulaire, avec la méthode <code>GET</code>.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource html number-lines code-with-copy"><code class="sourceCode html"><span id="cb2-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;!doctype</span> html<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">html</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> lang</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fr"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-3">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">head</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-4">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">meta</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> charset</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"utf-8"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> </span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">/&gt;</span></span>
<span id="cb2-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">title</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>Un document minuscule<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">title</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-6">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">head</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-7">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">body</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-8">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">h1</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>Les formulaires en html<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">h1</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;!-- Le formulaire ci-dessous --&gt;</span></span>
<span id="cb2-10">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">form</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> method</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GET"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-11">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">input</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nom"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> placeholder</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Entrer votre nom"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-12">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">button</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"submit"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>Envoyer les données<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">button</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-13">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">body</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-14"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">html</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
<p>Enregistrer ce fichier puis l’ouvrir dans le navigateur.</p>
<ol type="1">
<li><p>Entrer une valeur dans le formulaire et appuyer sur le bouton pour le soumettre et observer la barre d’adresse du navigateur.</p></li>
<li><p>Ajouter d’autres types d’entrées avec la balise <code>&lt;input&gt;</code>.</p>
<ul>
<li><code>&lt;input type="text" ...</code>: Par défaut: entrée de texte.</li>
<li><code>&lt;input type="button" ...</code>: Un bouton(on préfèrera cependant la balise <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button"><code>&lt;button&gt;</code></a> cependant).</li>
<li><code>&lt;input type="checkbox" ...</code>: Case à cocher.</li>
<li><code>&lt;input type="radio" ...</code>: un bouton radio qui permet de sélectionner une seule valeur parmi un groupe de différentes valeurs.</li>
</ul>
<p>Assurez-vous que toutes les balises <code>input</code> ont bien un attribut <code>name</code> pour pouvoir être traités.</p>
<p>Observer dans la barre d’adresse comment sont placés les paramètres lors de la soumission du formulaire avec le bouton <code>submit</code>.</p></li>
</ol>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="méthode-http-post" class="level3" data-number="1.2">
<h3 data-number="1.2" class="anchored" data-anchor-id="méthode-http-post"><span class="header-section-number">1.2</span> Méthode <code>HTTP POST</code></h3>
<p>Avec cette méthode les données sont transmises dans le corps de la requête http, sans les encoder dans l’url cette fois-ci.</p>
<p>Le serveur doit accepter les requêtes POST.</p>
<p>Pour observer les paramètres d’une requête <code>POST</code>, il faut ouvrir la console de développement du navigateur, dans l’onglet réseaux.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><picture>
			  <source type="image/webp" srcset="/img/We-pE4Itkq-300.webp 300w, /img/We-pE4Itkq-600.webp 600w, /img/We-pE4Itkq-960.webp 960w" sizes="100vw">
  <source type="image/png" srcset="/img/We-pE4Itkq-300.png 300w, /img/We-pE4Itkq-600.png 600w, /img/We-pE4Itkq-960.png 960w" sizes="100vw">
				<img class="img-fluid figure-img" src="https://www.lyceum.fr/2023-2024/img/We-pE4Itkq-300.webp" width="960" height="220" alt="" loading="lazy" decoding="async">
			</picture>
</p>
<figcaption>console réseau POST firefox</figcaption>
</figure>
</div>
<p>Les paramètres étant «cachés» dans la requête HTML, on les utilisera notamment pour la soumission de formulaires avec des données confidentielles:</p>
<ul>
<li>mot de passe</li>
<li>email</li>
<li><a href="../../../../2gt/snt/4-les-donnees-structurees-et-leur-traitement/1-donnees">données personnelles</a> en général</li>
</ul>
<div class="appli">
<div class="callout callout-style-simple callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-4-contents" aria-controls="callout-4" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Application: Création d'un formulaire avec la méthode POST
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-4" class="callout-4-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="appli" data-titre="Création d'un formulaire avec la méthode POST">
<p>Sur la page web précédente, ajouter un autre formulaire, qui utilisera cette fois-ci la méthode <code>POST</code>.</p>
<p>Pour que le formulaire fonctionne il faut lancer un serveur local, si vous êtes sur Visual Studio Code, je vous conseille d’installer l’extension <a href="https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer">Live Server</a></p>
<p>Vérifier les différences de fonctionnement entre ces deux formulaires en utilisant la console réseau du navigateur.</p>
</div>
</div>
</div>
</div>
</div>
</section>
</section>
<section id="validation-des-données-du-formulaire" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="validation-des-données-du-formulaire"><span class="header-section-number">2</span> Validation des données du formulaire</h2>
<p>A priori, les données sont destinées traitées au niveau du serveur comme nous le verrons dans le prochain chapitre.</p>
<p>Il n’est cependant pas rare de valider les données côté client en <code>javascript</code> avant envoi des données pour ne pas surcharger le serveur.</p>
<div class="example">
<p>Vérification que le nom n’est pas vide.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource html number-lines code-with-copy"><code class="sourceCode html"><span id="cb3-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;!doctype</span> html<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">html</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> lang</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fr"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-3">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">head</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-4">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">meta</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> charset</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"utf-8"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> </span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">/&gt;</span></span>
<span id="cb3-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">title</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>Un document minuscule<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">title</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-6">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">head</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-7">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">body</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-8">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">h1</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>Les formulaires en html<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">h1</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;!-- Le formulaire ci-dessous --&gt;</span></span>
<span id="cb3-10">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">form</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> method</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GET"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> </span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-11">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">input</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nom"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> placeholder</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Entrer votre nom"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-12">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">input</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tel"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"telephone"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> placeholder</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0123456789"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-13">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">button</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"submit"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> onclick</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"validateForm()"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>Envoyer les données<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">button</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-14">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">form</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-15">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">script</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-16">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">validateForm</span>() {</span>
<span id="cb3-17">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> nom <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">querySelector</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"input[name='nom']"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value</span></span>
<span id="cb3-18">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (nom <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">===</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>){</span>
<span id="cb3-19">          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">alert</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Nom ne doit pas être vide"</span>)</span>
<span id="cb3-20">        } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Envoi des données"</span>}</span>
<span id="cb3-21">      }</span>
<span id="cb3-22">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">script</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-23">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">body</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-24"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">html</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
</div>
<div class="appli">
<div class="callout callout-style-simple callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-5-contents" aria-controls="callout-5" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Application
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-5" class="callout-5-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="appli">
<p>Vérifier en <code>javascript</code> qu’on a un numéro de téléphone qui commence par 0 et comporte 10 chiffres.</p>
</div>
</div>
</div>
</div>
</div>


</section>

 ]]></description>
  <category>1NSI</category>
  <guid>https://www.lyceum.fr/2023-2024/1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/5-formulaire-dune-page-web/</guid>
  <pubDate>Thu, 16 May 2024 13:21:00 GMT</pubDate>
</item>
<item>
  <title>Chapitre 6: Interaction client–serveur</title>
  <link>https://www.lyceum.fr/2023-2024/1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/6-interaction-client-serveur/</link>
  <description><![CDATA[ 




<div class="programme">
<div class="callout callout-style-simple callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Programme
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="programme">
<table class="table table-bordered table-hover">
<thead class="table-warning">
<tr class="header">
<th>Contenus</th>
<th>Capacités attendues</th>
<th>Commentaires</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><p>Interaction client- serveur.</p>
<p>Requêtes HTTP, réponses du serveur</p></td>
<td><p>Distinguer ce qui est exécuté sur le client ou sur le serveur et dans quel ordre.</p>
<p>Distinguer ce qui est mémorisé dans le client et retransmis au serveur.</p>
<p>Reconnaître quand et pourquoi la transmission est chiffrée.</p></td>
<td>Il s’agit de faire le lien avec ce qui a été vu en classe de seconde et d’expliquer comment on peut passer des paramètres à un site grâce au protocole HTTP.</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<div class="intro">
<p><a title="Colin Viebrock, CC BY-SA 4.0 <https://creativecommons.org/licenses/by-sa/4.0>, via Wikimedia Commons" href="https://commons.wikimedia.org/wiki/File:PHP-logo.svg"><img class="half right" alt="PHP-logo" src="https://upload.wikimedia.org/wikipedia/commons/thumb/2/27/PHP-logo.svg/512px-PHP-logo.svg.png"></a></p>
<p>Dès la création du <code>html</code> par Tim Berners Lee, celui-ci a également créé le protocole http(<em>hypertext transfer protocol</em>) pour normaliser l’échange des données entre le client(le navigateur) et le serveur qui fournit les pages web.</p>
<p>Aujourd’hui la plupart des applications web utilisent le langage <code>php</code> côté serveur, mais il est possible d’utiliser n’importe quel langage <code>python</code>, <code>javascript</code>…</p>
</div>
<section id="http" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="http"><span class="header-section-number">1</span> HTTP</h2>
<p>Les protocoles HTTP, ou HTTPS pour sa version sécurisée afin de crypter les informations échangées, définissent des en-têtes lors des requêtes du client et des réponses du serveur.</p>
<p>Tous les navigateurs permettent de les afficher en utilisant le <em>moniteur réseau</em> des <strong>outils de développement</strong> du navigateur(<em>Touche F12</em>).</p>
<p>Voici une requête et une réponse de la page d’accueil du site situé à l’adresse: <a href="https://lyceum.fr" class="uri">https://lyceum.fr</a></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><picture>
			  <source type="image/webp" srcset="/img/7-FWTKobHC-300.webp 300w, /img/7-FWTKobHC-600.webp 600w, /img/7-FWTKobHC-1265.webp 1265w" sizes="100vw">
  <source type="image/png" srcset="/img/7-FWTKobHC-300.png 300w, /img/7-FWTKobHC-600.png 600w, /img/7-FWTKobHC-1265.png 1265w" sizes="100vw">
				<img class="img-fluid figure-img" src="https://www.lyceum.fr/2023-2024/img/7-FWTKobHC-300.webp" width="1265" height="1020" alt="" loading="lazy" decoding="async">
			</picture>
</p>
<figcaption>console réseau firefox</figcaption>
</figure>
</div>
<section id="requête-du-client" class="level3" data-number="1.1">
<h3 data-number="1.1" class="anchored" data-anchor-id="requête-du-client"><span class="header-section-number">1.1</span> Requête du client</h3>
<p>Analysons la requête:</p>
<ul>
<li>Méthode: <code>GET</code></li>
</ul>
<p>Ici on veut obtenir la page web, il existe aussi d’autres méthodes <code>POST</code>, <code>PUT</code>, <code>DELETE</code>…</p>
<ul>
<li>URL: <a href="https://lyceum.fr/" class="uri">https://lyceum.fr/</a></li>
</ul>
<p>L’adresse URL de la page ici, c’est la page d’accueil.</p>
<ul>
<li>En-têtes:</li>
</ul>
<p>Des informations sur le client.</p>
<pre><code>Host: lyceum.fr
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:67.0) Gecko/20100101 Firefox/67.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: fr,fr-FR;q=0.8,en-US;q=0.5,en;q=0.3
Accept-Encoding: gzip, deflate, br</code></pre>
</section>
<section id="réponse-du-serveur" class="level3" data-number="1.2">
<h3 data-number="1.2" class="anchored" data-anchor-id="réponse-du-serveur"><span class="header-section-number">1.2</span> Réponse du serveur</h3>
<ul>
<li>En-têtes:</li>
</ul>
<p>Des informations sur la réponse envoyée par le serveur, d’abord la version du protocole: <code>HTTP/1.1</code>. Puis le code de réponse, ici <code>200</code> signifie que la requête a pu être correctement traitée, sinon des codes normalisés existent <code>404</code>: page non trouvée, <code>403</code> accès non autorisé, <code>302</code> redirection…</p>
<p>L’ensemble des codes et leur signification est disponible sur <a href="https://developer.mozilla.org/fr/docs/Web/HTTP/Status">MDN</a>.</p>
<pre><code>HTTP/1.1 200 OK
server: nginx/1.16.0
date: Fri, 14 Jun 2019 07:07:32 GMT
content-type: text/html
content-length: 5369
last-modified: Fri, 14 Jun 2019 07:07:03 GMT
etag: "5d034797-14f9"
accept-ranges: bytes
X-Firefox-Spdy: h2</code></pre>
<ul>
<li>Réponse:</li>
</ul>
<p>Il s’agit tout simplement de la page <code>html</code> renvoyée que je résume ici, c’est en fait la page <code>html</code> complète.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource html number-lines code-with-copy"><code class="sourceCode html"><span id="cb3-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;!DOCTYPE</span> html<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">html</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">head</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">meta</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> charSet</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"utf-8"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">/&gt;</span></span>
<span id="cb3-2">...</span>
<span id="cb3-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">body</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-4">...</span>
<span id="cb3-5"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">body</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
</section>
</section>
<section id="lapplication-côté-serveur" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="lapplication-côté-serveur"><span class="header-section-number">2</span> L’application côté serveur</h2>
<p>Le serveur peut fournir ce que l’on appelle un site dynamique, c’est-à-dire qu’il adapte la page renvoyée aux utilisateurs et aux paramètres de la requête.</p>
<p>Pour cela il faut que le serveur soit muni d’un langage de programmation comme <code>php</code>, <code>python</code>, ou autre pour générer la page grâce à un programme.</p>
<div class="example">
<p>Prenons l’exemple du site Wikipedia qui fonctionne sous <code>php</code>.</p>
<p>Lorsque vous faites une recherche à partir de n’importe quelle page de l’encyclopédie; tapez par exemple: <em>Tim Berners-Lee</em>, en haut à droite de Wikipedia.</p>
<p>Ouvrez votre moniteur réseau, avant de valider la recherche avec entrée ou un click sur les propositions d’articles, vous allez voir les requêtes suivantes qui vont s’effectuer.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><picture>
			  <source type="image/webp" srcset="/img/cNG5tuisvG-300.webp 300w, /img/cNG5tuisvG-600.webp 600w, /img/cNG5tuisvG-990.webp 990w" sizes="100vw">
  <source type="image/png" srcset="/img/cNG5tuisvG-300.png 300w, /img/cNG5tuisvG-600.png 600w, /img/cNG5tuisvG-990.png 990w" sizes="100vw">
				<img class="img-fluid figure-img" src="https://www.lyceum.fr/2023-2024/img/cNG5tuisvG-300.webp" width="990" height="156" alt="" loading="lazy" decoding="async">
			</picture>
</p>
<figcaption>console réseau lors d’une recherche wikipedia</figcaption>
</figure>
</div>
<p>Vous voyez que pour effectuer cette recherche, votre navigateur va renvoyer une requête mais pas vers une simple page <code>html</code> mais vers un script <code>php</code> de Wikipedia en lui ajoutant des paramètres comme s’il s’agissait d’une fonction.</p>
<p><a href="https://fr.wikipedia.org/w/index.php?search=Tim+Berners-Lee&amp;title=Sp%C3%A9cial%3ARecherche" class="uri">https://fr.wikipedia.org/w/index.php?search=Tim+Berners-Lee&amp;title=Sp%C3%A9cial%3ARecherche</a></p>
<p>Le script <code>php</code> situé sur le serveur <code>fr.wikipedia.org</code> au chemin <code>/w/index.php</code> est exécuté avec les paramètres fournis après le signe <code>?</code> et séparés par des <code>&amp;</code>, ici:</p>
<pre><code>search=Tim+Berners-Lee
title=Spécial:Recherche</code></pre>
<p>Après l’exécution du script <code>php</code>, le serveur renvoie un code de redirection <code>302</code> qui va ensuite nous rediriger vers la page recherchée: <a href="https://fr.wikipedia.org/wiki/Tim_Berners-Lee" class="uri">https://fr.wikipedia.org/wiki/Tim_Berners-Lee</a>.</p>
</div>


</section>

 ]]></description>
  <category>1NSI</category>
  <guid>https://www.lyceum.fr/2023-2024/1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/6-interaction-client-serveur/</guid>
  <pubDate>Thu, 16 May 2024 13:21:00 GMT</pubDate>
</item>
<item>
  <title>Chapitre 1: Architecture d’un ordinateur</title>
  <link>https://www.lyceum.fr/2023-2024/1g/nsi/6-architectures-materielles-et-systemes-dexploitation/1-architecture-dun-ordinateur/</link>
  <description><![CDATA[ 




<div class="programme">
<div class="callout callout-style-simple callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Programme
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="programme">
<table class="table table-bordered table-hover">
<thead class="table-warning">
<tr class="header">
<th>Contenus</th>
<th>Capacités attendues</th>
<th>Commentaires</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Modèle d’architecture séquentielle (von Neumann)</td>
<td>Distinguer les rôles et les caractéristiques des différents constituants d’une machine.</td>
<td><p>La présentation se limite aux concepts généraux.</p>
<p>On distingue les architectures monoprocesseur et les architectures multiprocesseur.</p></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<section id="lordinateur-actuel" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="lordinateur-actuel"><span class="header-section-number">1</span> L’ordinateur actuel</h2>
<p>L’<a href="http://www.cea.fr/multimedia/Pages/animations/technologies/fonctionnement-ordinateur.aspx">animation du CEA</a> vous présente le fonctionnement général d’un ordinateur. Si votre appareil ne supporte pas flash, vous pouvez consulter la version vidéo. </p><div class="yt-embend"><div><iframe width="560" height="315" src="https://yewtu.be/embed/cDnvRSIpNUQ" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe><p><a href="https://www.youtube.com/watch?v=cDnvRSIpNUQ">Vidéo</a> servie sans cookie via <a href="https://yewtu.be/">yewtu.be</a></p></div></div><p></p>
<div class="appli">
<div class="callout callout-style-simple callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-2-contents" aria-controls="callout-2" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Application: Vue schématique d'un ordinateur
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-2" class="callout-2-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="appli" data-titre="Vue schématique d'un ordinateur">
<p>Réaliser en <em>grand format</em>, une <em>vue schématique d’un ordinateur</em> en indiquant le nom des diverses parties, leurs connexions et leurs rôles.</p>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="larchitecture-de-von-neumann" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="larchitecture-de-von-neumann"><span class="header-section-number">2</span> L’architecture de von Neumann</h2>
<p>Le premier ordinateur électronique conçu pour être une machine de Turing est l’ENIAC réalisé en 1943.</p>
<p>Son architecture fut décrite par John von Neumann, un mathématicien et physicien américano-hongrois pour la réalisation de l’EDVAC en juin 1945 (le successeur binaire de l’ENIAC qui était décimal).</p>
<p>Cette architecture sert de base, à quelques améliorations près, à l’architecture de tous les ordinateurs depuis.</p>
<dl>
<dt>
Architecture de von Neumann
</dt>
<dd>
<div>
<p>C’est un modèle pour un ordinateur qui utilise une structure de stockage unique pour conserver à la fois les instructions et les données demandées ou produites par le calcul.</p>
</div>
</dd>
</dl>
<p></p><figure class="wikimage figure"><picture>
			  <source type="image/webp" srcset="/img/qg3TcX3NhJ-300.webp 300w, /img/qg3TcX3NhJ-600.webp 600w, /img/qg3TcX3NhJ-631.svg 631w" sizes="100vw">
  <source type="image/svg+xml" srcset="/img/qg3TcX3NhJ-631.svg 631w" sizes="100vw">
				<img class="img-fluid figure-img" src="https://www.lyceum.fr/2023-2024/img/qg3TcX3NhJ-300.webp" width="631" height="360" alt="Le processeur, la mémoire et les périphériques d'entrée et de sortie communiquent entre eux grâce à trois bus de communication: le bus d'adresses, le bus de données et le bus de contrôle." loading="lazy" decoding="async">
			</picture>
<figcaption id="caption">Le processeur, la mémoire et les périphériques d'entrée et de sortie communiquent entre eux grâce à trois bus de communication: le bus d'adresses, le bus de données et le bus de contrôle.</figcaption><figcaption id="credit">&nbsp;CC0&nbsp;<a id="image-description" href="//commons.wikimedia.org/wiki/File:Architecture_de_Von_Neumann_Princeton.svg">via Wikimedia Commons</a></figcaption></figure><p></p>
<p>L’architecture de Von Neumann est centrée autour de deux composants principaux:</p>
<ul>
<li>le <strong>processeur</strong> ou CPU <em>(Central Processing Unit)</em>,</li>
<li>et la <strong>mémoire</strong>.</li>
</ul>
<p>Ces deux circuits sont reliés par des fils appelés <em>bus de communication</em>.</p>
<p>D’autre part, le processeur dispose de <em>bus d’entrée et de sortie</em> qui le relient à d’autres parties de l’ordinateur appelées les <em>périphériques</em> comme le disque dur, l’écran, le clavier…</p>
<p>Le processeur joue le rôle du <em>chef d’orchestre</em>, il donne des ordres aux périphériques et à la mémoire et est responsable de l’exécution du programme de l’ordinateur.</p>
<div class="prop">
<p>Un ordinateur avec cette architecture est un ordinateur à programme enregistré: il enregistre les instructions des programmes qu’il exécute dans sa mémoire vive.</p>
</div>
<div class="plus">
<div class="callout callout-style-simple callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-3-contents" aria-controls="callout-3" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
En plus
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-3" class="callout-3-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="plus">
<p>Au contraire, l’architecture de type Harvard est une conception des processeurs qui sépare physiquement la mémoire de données et la mémoire programme. L’accès à chacune des deux mémoires s’effectue via deux bus distincts.</p>
<p></p><figure class="wikimage figure"><picture>
			  <source type="image/webp" srcset="/img/n8hSByHMsv-300.webp 300w, /img/n8hSByHMsv-319.webp 319w" sizes="100vw">
  <source type="image/png" srcset="/img/n8hSByHMsv-300.png 300w, /img/n8hSByHMsv-319.png 319w" sizes="100vw">
				<img class="img-fluid figure-img" src="https://www.lyceum.fr/2023-2024/img/n8hSByHMsv-300.webp" width="319" height="350" alt="L'architecture de Harvard a été a été mise en pratique pour la première fois avec le Mark I en 1944." loading="lazy" decoding="async">
			</picture>
<figcaption id="caption">L'architecture de Harvard a été a été mise en pratique pour la première fois avec le Mark I en 1944.</figcaption><figcaption id="credit">©&nbsp;&nbsp;CC BY-SA 1.0&nbsp;<a id="image-description" href="//commons.wikimedia.org/wiki/File:Architecture_Harvard.png">via Wikimedia Commons</a></figcaption></figure><p></p>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="les-unités-du-processeur" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="les-unités-du-processeur"><span class="header-section-number">3</span> Les unités du processeur</h2>
<p>Au sein du processeur le traitement des tâches a été séparé en deux:</p>
<ul>
<li>L’<strong>unité de commande</strong> dirige le fonctionnement du processeur. Elle indique à la mémoire de l’ordinateur, à l’unité arithmétique et logique et aux périphériques d’entrée et de sortie comment répondre aux instructions qui ont été envoyées au processeur.</li>
<li>L’<strong>unité arithmétique et logique</strong> est un ensemble de <a href="../../../../1g/nsi/6-architectures-materielles-et-systemes-dexploitation/6-circuits-combinatoires">circuits numériques combinatoires</a> qui effectuent des opérations spécifiques: calculs sur les entiers, sur les flottants calculs logiques en algèbre de Boole….</li>
</ul>
<p>Lorsque l’opération est terminée, l’unité de commande passe à l’instruction suivante du programme. La fréquence d’exécution du processeur est contrôlée par un signal d’horloge: la cadence des processeurs actuels est de <em>l’ordre du GHz</em> à l’heure actuelle.</p>
</section>
<section id="les-divers-types-de-mémoire" class="level2" data-number="4">
<h2 data-number="4" class="anchored" data-anchor-id="les-divers-types-de-mémoire"><span class="header-section-number">4</span> Les divers types de mémoire</h2>
<p>La mémoire désignée dans l’architecture de Von Neumann est ce que l’on appelle aujourd’hui la mémoire vive (<em>RAM</em>). Celle-ci est <em>rapide</em>, mais a besoin d’être alimentée en permanence pour garder les données, ainsi à chaque extinction de l’ordinateur, elle est perdue, on la qualifie de <em>mémoire volatile</em>.</p>
<p>Pour résoudre ce problème on recourt à deux types de mémoires non volatiles:</p>
<ul>
<li><p><strong>La mémoire de masse</strong>: Pour stocker les données et les programmes, on ajoute un périphérique appelé mémoire de masse: le disque dur de vos ordinateurs, ou une mémoire flash dans le cas des tablettes et smartphones. Cette mémoire est capable de stocker une grande quantité de données, mais à l’inconvénient d’être beaucoup moins rapides que la mémoire vive(RAM Random Access Memory), c’est pour cela que lors du lancement d’un programme les données nécessaire à son exécution sont généralement transférées vers la RAM pour une exécution plus rapide.</p></li>
<li><p><strong>La mémoire morte</strong> est une mémoire qui ne peut être que lue(ROM Read Only Memory), elle contient en général le <em>firmware</em> de l’ordinateur (BIOS ou UEFI) qui est le programme qui se charge à chaque allumage de l’ordinateur.</p></li>
<li><p><strong>Les registres du processeur</strong>: Le processeur possède également un très petit nombre de cases mémoires très rapides appelées des <em>registres</em> dont la capacité dépasse rarement quelques dizaines d’octet pour des raisons de coût et de place. <a href="https://fr.wikipedia.org/wiki/Registre_de_processeur">Source Wikipedia</a></p></li>
</ul>
<div class="appli">
<div class="callout callout-style-simple callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-4-contents" aria-controls="callout-4" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Application
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-4" class="callout-4-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="appli">
<p>Classer les diverses mémoires présentes dans un ordinateur par “rapidité”, et expliquer leurs principales caractéristiques.</p>
<ul>
<li>Mémoire vive,</li>
<li>registre du processeur,</li>
<li>mémoire de masse et</li>
<li>mémoire morte.</li>
</ul>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="architectures-multiprocesseurs" class="level2" data-number="5">
<h2 data-number="5" class="anchored" data-anchor-id="architectures-multiprocesseurs"><span class="header-section-number">5</span> Architectures multiprocesseurs</h2>
<p>On utilise aujourd’hui des architectures multiprocesseurs afin d’améliorer la rapidité d’exécution sans augmenter la fréquence d’horloge.</p>
<p></p><figure class="wikimage figure"><picture>
			  <source type="image/webp" srcset="/img/BoiP9HAcw9-300.webp 300w, /img/BoiP9HAcw9-570.webp 570w, /img/BoiP9HAcw9-600.webp 600w" sizes="100vw">
  <source type="image/svg+xml" srcset="/img/BoiP9HAcw9-570.svg 570w" sizes="100vw">
				<img class="img-fluid figure-img" src="https://www.lyceum.fr/2023-2024/img/BoiP9HAcw9-300.webp" width="600" height="401" alt="Dans l'architecture ci-dessus, la mémoire est partagée par tous les processeurs. Un seul processeur ne peut accéder à la mémoire à la fois ce qui peut nécessiter des temps d'attentes pour les autres." loading="lazy" decoding="async">
			</picture>
<figcaption id="caption">Dans l'architecture ci-dessus, la mémoire est partagée par tous les processeurs. Un seul processeur ne peut accéder à la mémoire à la fois ce qui peut nécessiter des temps d'attentes pour les autres.</figcaption><figcaption id="credit">&nbsp;CC0&nbsp;<a id="image-description" href="//commons.wikimedia.org/wiki/File:Architecture_de_Von_Neumann_Princeton_multi_processeurs.svg">via Wikimedia Commons</a></figcaption></figure><p></p>
<div class="plus">
<div class="callout callout-style-simple callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-5-contents" aria-controls="callout-5" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
En plus
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-5" class="callout-5-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="plus">
<p>L’utilisation efficace des architectures multiprocesseurs nécessite de pouvoir traiter les informations de manière simultanée, pour cela il faut des algorithmes spécialisés: on parle de <a href="https://fr.wikipedia.org/wiki/Parall%C3%A9lisme_(informatique)">parallélisme</a>.</p>
</div>
</div>
</div>
</div>
</div>
<div class="ref">
<ul>
<li><a href="http://www.editions-eyrolles.com/Livre/9782212135435/">Informatique et sciences du numérique Spécialité ISN en terminale S - Avec des exercices corrigés et des idées de projets par Gilles Dowek</a></li>
<li><a href="http://www.editions-eyrolles.com/Livre/9782212137002/informatique-pour-tous-en-classes-preparatoires-aux-grandes-ecoles">Informatique pour tous en classes préparatoires aux grandes écoles de Benjamin Wack</a></li>
</ul>
</div>


</section>

 ]]></description>
  <category>1NSI</category>
  <guid>https://www.lyceum.fr/2023-2024/1g/nsi/6-architectures-materielles-et-systemes-dexploitation/1-architecture-dun-ordinateur/</guid>
  <pubDate>Thu, 16 May 2024 13:21:00 GMT</pubDate>
</item>
<item>
  <title>Chapitre 2: Jeu d’instructions du processeur</title>
  <link>https://www.lyceum.fr/2023-2024/1g/nsi/6-architectures-materielles-et-systemes-dexploitation/2-jeu-dinstructions-du-processeur/</link>
  <description><![CDATA[ 




<div class="programme">
<div class="callout callout-style-simple callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Programme
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="programme">
<table class="table table-bordered table-hover">
<thead class="table-warning">
<tr class="header">
<th>Contenus</th>
<th>Capacités attendues</th>
<th>Commentaires</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Modèle d’architecture séquentielle (von Neumann)</td>
<td>Dérouler l’exécution d’une séquence d’instructions simples du type langage machine.</td>
<td>Des activités débranchées sont proposées.</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>
<div class="intro">
<p>Maintenant que nous avons vu quelle était la structure générale d’un ordinateur, nous allons nous intéresser plus précisément au rôle du processeur et de la mémoire(vive), et voir comment peuvent être dictées les instructions à l’unité de contrôle du processeur.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><picture>
			  <source type="image/webp" srcset="/img/PYxxG_Z7sa-300.webp 300w, /img/PYxxG_Z7sa-600.webp 600w, /img/PYxxG_Z7sa-1424.webp 1424w" sizes="100vw">
  <source type="image/png" srcset="/img/PYxxG_Z7sa-300.png 300w, /img/PYxxG_Z7sa-600.png 600w, /img/PYxxG_Z7sa-1424.png 1424w" sizes="100vw">
				<img class="img-fluid figure-img" src="https://www.lyceum.fr/2023-2024/img/PYxxG_Z7sa-300.webp" width="1424" height="733" alt="" loading="lazy" decoding="async">
			</picture>
</p>
<figcaption>Copie d’écran de la simulation de Von Neumann utilisée.</figcaption>
</figure>
</div>
</div>
<section id="les-divers-éléments-de-la-simulation" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="les-divers-éléments-de-la-simulation"><span class="header-section-number">1</span> Les divers éléments de la simulation</h2>
<p>On utilisera dans ce cours une version modifiée de la simulation de Lorenzo Gianni sous licence MIT.</p>
<p><a href="https://apps.lyceum.fr/vnsim" class="uri">https://apps.lyceum.fr/vnsim</a></p>
<p>Outre la RAM, le processeur ne possède qu’un très petit nombre de cases mémoires très rapides appelées des <em>registres</em> dont la capacité dépasse rarement quelques dizaines d’octets pour des raisons de coût et de place. <a href="https://fr.wikipedia.org/wiki/Registre_de_processeur">Source Wikipédia</a></p>
<section id="la-mémoire-ram" class="level3" data-number="1.1">
<h3 data-number="1.1" class="anchored" data-anchor-id="la-mémoire-ram"><span class="header-section-number">1.1</span> La mémoire (RAM)</h3>
<div>

</div>
<div class="quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p>La mémoire vive contient plusieurs milliards de circuits mémoires un bit, qui sont organisés en <em>cases mémoires</em> de huit, seize, trente-deux, soixante-quatre bits. Chaque case a une <em>adresse</em> unique, leur nombre détermine la capacité de la mémoire vive de l’ordinateur.</p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><picture>
			  <source type="image/webp" srcset="/img/VVgVZgp9QA-300.webp 300w, /img/VVgVZgp9QA-411.webp 411w" sizes="100vw">
  <source type="image/png" srcset="/img/VVgVZgp9QA-300.png 300w, /img/VVgVZgp9QA-411.png 411w" sizes="100vw">
				<img class="img-fluid figure-img" src="https://www.lyceum.fr/2023-2024/img/VVgVZgp9QA-300.webp" width="411" height="253" alt="" loading="lazy" decoding="async">
			</picture>
</p>
<figcaption>La mémoire est située à droite est séparée en deux parties: le programme et ses instructions à gauche(adresses 0 à 99) et les variables(adresses 100 et suivantes) avec leurs données à droite.</figcaption>
</figure>
</div>
</div>
</div>
</div>
</section>
<section id="lunité-de-commande-ri-et-cp" class="level3" data-number="1.2">
<h3 data-number="1.2" class="anchored" data-anchor-id="lunité-de-commande-ri-et-cp"><span class="header-section-number">1.2</span> L’unité de commande (RI et CP)</h3>
<div>

</div>
<div class="quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="left quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p>L’unité de commande contient <em>deux registres</em> pour stocker son état d’exécution:</p>
<ul>
<li>Le registre d’instruction (RI) stocke l’instruction du programme provenant de la mémoire programme actuellement exécutée.</li>
<li>Le compteur de programme stocke la ligne du programme actuellement exécutée, après son exécution ce compteur est incrémenté de 1 (sauf en cas de saut: <code>JMP</code>).</li>
</ul>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><picture>
			  <source type="image/webp" srcset="/img/8daivYwJsa-300.webp 300w, /img/8daivYwJsa-589.webp 589w" sizes="100vw">
  <source type="image/png" srcset="/img/8daivYwJsa-300.png 300w, /img/8daivYwJsa-589.png 589w" sizes="100vw">
				<img class="img-fluid figure-img" src="https://www.lyceum.fr/2023-2024/img/8daivYwJsa-300.webp" width="589" height="311" alt="" loading="lazy" decoding="async">
			</picture>
</p>
<figcaption>L’unité de commande possède deux registres: le registre d’instructions et le compteur de programme.</figcaption>
</figure>
</div>
</div>
</div>
</div>
</section>
<section id="lunité-arithmétique-et-logique-ual" class="level3" data-number="1.3">
<h3 data-number="1.3" class="anchored" data-anchor-id="lunité-arithmétique-et-logique-ual"><span class="header-section-number">1.3</span> L’unité arithmétique et logique (UAL)</h3>
<div>

</div>
<div class="quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="left quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p>L’unité arithmétique et logique est composée de transistors assemblés de façon à lui permettre de réaliser un <em>petit nombre d’opérations simples (arithmétique: + -, logique booléenne: &amp; | !), mais à réaliser ces opérations très rapidement</em>.</p>
<p>Le résultat des opérations est stocké dans un <em>registre</em> appelé accumulateur (ACC).</p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><picture>
			  <source type="image/webp" srcset="/img/OLADqSoDt4-300.webp 300w, /img/OLADqSoDt4-400.webp 400w" sizes="100vw">
  <source type="image/png" srcset="/img/OLADqSoDt4-300.png 300w, /img/OLADqSoDt4-400.png 400w" sizes="100vw">
				<img class="img-fluid figure-img" src="https://www.lyceum.fr/2023-2024/img/OLADqSoDt4-300.webp" width="400" height="246" alt="" loading="lazy" decoding="async">
			</picture>
</p>
<figcaption>Le résultat des opérations des circuits calculatoires de l’UAL est stocké dans l’accumulateur pour l’exécution de calculs ultérieurs ou pour être renvoyé vers la mémoire.</figcaption>
</figure>
</div>
</div>
</div>
</div>
</section>
</section>
<section id="programmer-en-assembleur" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="programmer-en-assembleur"><span class="header-section-number">2</span> Programmer en assembleur</h2>
<p>Les cellules mémoire du programme sont stockées sous forme binaire, on les représente cependant sous forme textuelle. Un compilateur les convertit ensuite sous forme binaire pour les stocker dans la mémoire programme. Cette représentation textuelle est appelée le <em>langage assembleur</em>.</p>
<p>Le jeu d’instructions de notre simulateur est résumé ci-dessous.</p>
<table class="table table-bordered table-hover">
<thead class="table-warning">
<tr class="header">
<th colspan="3"> Accès mémoire</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>LOAD var / LOAD #nb</code></td>
<td>Transfère dans l’accumulateur la valeur de la variable <code>var</code> présente dans la mémoire ou directement le nombre <code>nb</code>.</td>
<td></td>
</tr>
<tr class="even">
<td><code>STORE var</code></td>
<td>Transfère le contenu de l’accumulateur dans l’adresse mémoire associée à la variable <code>var</code>.<br>
</td>
<td></td>
</tr>
</tbody>
</table>
<div class="appli">
<div class="callout callout-style-simple callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-2-contents" aria-controls="callout-2" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Application
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-2" class="callout-2-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="appli">
<p>Écrire un programme qui permet de stocker quatre valeurs 2, 3, 5, 7 dans les cases mémoires d’adresse 100(variable X), 101(Y), 102(Z), 103(W).</p>
<p><em>Ne pas oublier d’ajouter l’instruction <code>HALT</code> en fin du programme pour arrêter l’incrémentation du CP.</em></p>
<!--
// Affectation des variables
LOAD #2
STORE X
LOAD #3
STORE Y
LOAD #5
STORE Z
LOAD #7
STORE W
HALT
-->
</div>
</div>
</div>
</div>
</div>
<table class="table table-bordered table-hover">
<thead class="table-warning">
<tr class="header">
<th colspan="2"> Opérations arithmétiques</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>ADD var / ADD #nb</code></td>
<td><em>Additionne</em> au contenu de l’accumulateur la valeur de la variable <code>var</code> de la mémoire ou directement le nombre <code>nb</code> et renvoie dans l’accumulateur le résultat.</td>
</tr>
<tr class="even">
<td><code>SUB var / SUB #nb</code></td>
<td><em>Soustrait</em> au contenu de l’accumulateur la valeur de la variable <code>var</code> de la mémoire ou directement le nombre <code>nb</code> et renvoie dans l’accumulateur le résultat.</td>
</tr>
</tbody>
</table>
<div class="appli">
<div class="callout callout-style-simple callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-3-contents" aria-controls="callout-3" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Application
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-3" class="callout-3-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="appli">
<p>Compléter le programme de l’application précédente pour additionner les quatre nombres contenus dans les cases mémoires X, Y, Z et W et de stocker le résultat de cette addition dans la case mémoire 104(N).</p>
<!-- 
// Addition
LOAD X
ADD Y
ADD Z
ADD W
STORE N
HALT
-->
</div>
</div>
</div>
</div>
</div>
<table class="table table-bordered table-hover">
<thead class="table-warning">
<tr class="header">
<th colspan="3"> Opération logique</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>CMP adr / CMP #nb</code></td>
<td>Compare le contenu de l’accumulateur à la valeur de la variable <code>var</code> de la mémoire ou au nombre <code>nb</code> et renvoie dans l’accumulateur le résultat -1,0 ou 1 selon le résultat de la comparaison: inférieur, égal ou supérieur.</td>
<td></td>
</tr>
</tbody>
</table>
<div class="appli">
<div class="callout callout-style-simple callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-4-contents" aria-controls="callout-4" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Application
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-4" class="callout-4-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="appli">
<p>Compléter le programme de l’application précédente pour comparer le contenu des cases mémoires X et N et de stocker le résultat de cette comparaison dans la case mémoire 6(R).</p>
<!-- 
// Comparaison
LOAD X
CMP N
STORE R
HALT
-->
</div>
</div>
</div>
</div>
</div>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Ajouter des étiquettes aux lignes du programme
</div>
</div>
<div class="callout-body-container callout-body">
<p>Pour pouvoir réaliser des boucles ou sauter des lignes en fonction de conditions, on utilise des instructions de saut <code>JMP</code> qui permettront de se déplacer vers une ligne spécifique du programme ou vers une ligne précédée d’une étiquette <code>inf: LOAD X</code> ici l’étiquette est <code>inf</code> on peut s’y rendre avec <code>JMP inf</code>.</p>
</div>
</div>
<table class="table table-bordered table-hover">
<thead class="table-warning">
<tr class="header">
<th colspan="3"> Contrôle du programme: Conditions, boucles, commentaires…</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>JMP étiquette / JMP n</code></td>
<td>Transfère dans le compteur de programme <em>CP</em> le numéro de ligne <code>n</code> ou le numéro de la ligne avec l’étiquette <code>étiquette</code>.</td>
<td></td>
</tr>
<tr class="even">
<td><code>JMPZ étiquette / JMPZ n</code></td>
<td>Transfère <strong>uniquement si le contenu de l’accumulateur est nul</strong> dans le compteur de programme <em>CP</em> le numéro de ligne <code>n</code> ou le numéro de la ligne avec l’étiquette <code>étiquette</code>.</td>
<td></td>
</tr>
<tr class="odd">
<td><code>JMPN étiquette / JMPN n</code></td>
<td>Transfère <strong>uniquement si le contenu de l’accumulateur est négatif</strong> dans le compteur de programme <em>CP</em> le numéro de ligne <code>n</code> ou le numéro de la ligne avec l’étiquette <code>étiquette</code>.</td>
<td></td>
</tr>
<tr class="even">
<td><code>JMPP étiquette / JMPP n</code></td>
<td>Transfère <strong>uniquement si le contenu de l’accumulateur est positif</strong> dans le compteur de programme <em>CP</em> le numéro de ligne <code>n</code> ou le numéro de la ligne avec l’étiquette <code>étiquette</code>.</td>
<td></td>
</tr>
<tr class="odd">
<td><code>HALT</code></td>
<td>Stoppe l’exécution du programme.</td>
<td></td>
</tr>
<tr class="even">
<td><code>// commentaire</code></td>
<td>Ligne de commentaire non exécutée.</td>
<td></td>
</tr>
<tr class="odd">
<td><code>INSTRUCTION X ; commentaire de ligne</code></td>
<td>On peut ajouter des commentaires de lignes avec un point virgule.</td>
<td></td>
</tr>
</tbody>
</table>
<div class="appli">
<div class="callout callout-style-simple callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-6-contents" aria-controls="callout-6" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Application: Multiplication d'entiers positifs
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-6" class="callout-6-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="appli" data-titre="Multiplication d'entiers positifs">
<p>Stocker deux entiers positifs quelconques dans les variables <code>X</code> et <code>Y</code>, puis sans utiliser l’opérateur <code>MUL</code>, réaliser l’opération <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>×</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">X\times Y</annotation></semantics></math> et stocker le résultat dans la case mémoire 105(variable R).</p>
<p>Pour cela on initialisera une variable <code>R</code> à 0 à laquelle on ajoutera <code>X</code> <code>Y</code> fois grâce à une boucle. A chaque tour de boucle, ajouter <code>X</code> à <code>R</code>, soustraire 1 à <code>Y</code> tant que <code>Y</code> est positif grâce à un <code>JMPP</code>.</p>
<!-- 
// X x Y sans MUL

// initialisation variables
// X = 4
LOAD #4
STO X
// Y = 5
LOAD #5
STO Y
// R = 0
LOAD #0
STO R

// boucle
boucle: LOAD R
// R = R + Y
ADD Y
STO R
// X = X-1
LOAD X
SUB #1
STO X
// boucle tant que X > 0
JMPP boucle
HALT
-->
</div>
</div>
</div>
</div>
</div>
<div class="appli">
<div class="callout callout-style-simple callout-note no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-7-contents" aria-controls="callout-7" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Application: Multiplication d'entiers quelconques
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-7" class="callout-7-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="appli" data-titre="Multiplication d'entiers quelconques">
<p>Adapter l’algorithme précédent grâce à une condition:</p>
<ul>
<li>Si <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">Y &gt; 0</annotation></semantics></math>: reprendre l’algorithme précédent.</li>
<li>Si <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi><mo>&lt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">Y &lt; 0</annotation></semantics></math>: soustraire <code>X</code> <code>Y</code> fois grâce à une boucle.</li>
<li>Si <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">Y = 0</annotation></semantics></math>: terminer le programme et laisser <code>R</code> à 0.</li>
</ul>
<!-- 
// initialisation variables
// X = 4
LOAD #-4
STO X
// Y = 5
LOAD #-5
STO Y

// R = 0
LOAD #0
STO R

// Condition sur X
LOAD X
// X > 0
JMPP boucle
// X < 0
JMPN boucleneg
// X = 0
JMPZ fin

// boucle X > 0
boucle: LOAD R
// R = R + Y
LOAD R
ADD Y
STO R
// X = X-1
LOAD X
SUB #1
STO X
// boucle tant que X > 0
JMPP boucle
JMPZ fin

// boucle X < 0
boucleneg: LOAD R
// R = R + Y
LOAD R
SUB Y
STO R
// X = X + 1
LOAD X
ADD #1
STO X
// boucle tant que X > 0
JMPN boucleneg

fin: HALT
-->
</div>
</div>
</div>
</div>
</div>
<div class="ref">
<ul>
<li><p>Chapitre 1: Au cœur de l’ordinateur <a href="https://www.enseignants.hachette-education.com/livres/numerique-sciences-informatiques-1re-specialite-livre-eleve-ed-2021-9782017866305">NSI Première Hachette 2021 sous la direction de Michel Beaudouin-Lafon</a></p></li>
<li><p>Chapitre 15: L’organisation d’un ordinateur <a href="http://www.editions-eyrolles.com/Livre/9782212135435/">Informatique et sciences du numérique Spécialité ISN en terminale S - Avec des exercices corrigés et des idées de projets par Gilles Dowek</a></p></li>
</ul>
</div>


</section>

 ]]></description>
  <category>1NSI</category>
  <guid>https://www.lyceum.fr/2023-2024/1g/nsi/6-architectures-materielles-et-systemes-dexploitation/2-jeu-dinstructions-du-processeur/</guid>
  <pubDate>Thu, 16 May 2024 13:21:00 GMT</pubDate>
</item>
</channel>
</rss>
