(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{c8L6:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return m})),a.d(t,"default",(function(){return s}));a("E5k/"),a("rzGZ"),a("Dq+y"),a("8npG"),a("Ggvi"),a("q1tI");var n=a("7ljp");function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e}).apply(this,arguments)}var m={tags:["nsi","exercices"]},l={_frontmatter:m};function s(e){var t=e.components,a=function(e,t){if(null==e)return{};var a,n,r={},m=Object.keys(e);for(n=0;n<m.length;n++)a=m[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,["components"]);return Object(n.mdx)("wrapper",r({},l,a,{components:t,mdxType:"MDXLayout"}),Object(n.mdx)("p",null,"On rappelle que l’encodage des flottants s’effectue de la façon suivante:"),Object(n.mdx)("p",null,"$$\ns\\ m \\cdot 2^n\n$$"),Object(n.mdx)("ul",null,Object(n.mdx)("li",{parentName:"ul"},"$s$ est le signe représenté par le bit de poids fort:",Object(n.mdx)("ul",{parentName:"li"},Object(n.mdx)("li",{parentName:"ul"},"$s=0$: signe $+$"),Object(n.mdx)("li",{parentName:"ul"},"$s=1$: signe $-$")))),Object(n.mdx)("ul",null,Object(n.mdx)("li",{parentName:"ul"},Object(n.mdx)("p",{parentName:"li"},"$n$ est l’exposant représenté par un ",Object(n.mdx)("em",{parentName:"p"},"entier relatif décalé")," de $2^{e-1} - 1$ (e représente le nombre de bits de l’exposant)")),Object(n.mdx)("li",{parentName:"ul"},Object(n.mdx)("p",{parentName:"li"},"$m$ est la mantisse qui est un nombre binaire à virgule compris entre 1 inclus et 2 exclus. Le\nseul chiffre avant la virgule étant toujours 1, il n’est pas représenté(on le dit ",Object(n.mdx)("em",{parentName:"p"},"implicite"),"),\net le codage binaire de la mantisse représente donc uniquement les chiffres après la virgule qui\nsont en base 2 des demis, des quarts, des huitièmes…"))),Object(n.mdx)("h2",{id:"ex-1"},"Encodage sur un octet"),Object(n.mdx)("p",null,"On considère des nombres flottants encodés sur un octet avec dans l’ordre:"),Object(n.mdx)("ul",null,Object(n.mdx)("li",{parentName:"ul"},"1 bit de signe,"),Object(n.mdx)("li",{parentName:"ul"},"3 bits d’exposant,"),Object(n.mdx)("li",{parentName:"ul"},"4 bits de mantisse.")),Object(n.mdx)("ol",null,Object(n.mdx)("li",{parentName:"ol"},"Trouver les nombres à virgule représentés par les mots binaires suivants")),Object(n.mdx)("ul",null,Object(n.mdx)("li",{parentName:"ul"},Object(n.mdx)("code",r({parentName:"li"},{className:"language-text"}),"0111 1000")),Object(n.mdx)("li",{parentName:"ul"},Object(n.mdx)("code",r({parentName:"li"},{className:"language-text"}),"1001 0001"))),Object(n.mdx)("ol",{start:2},Object(n.mdx)("li",{parentName:"ol"},"Donner les représentations binaires des nombres flottants suivants:")),Object(n.mdx)("ul",null,Object(n.mdx)("li",{parentName:"ul"},"$2,5$ (qui est égal à $1,25 \\times 2$)."),Object(n.mdx)("li",{parentName:"ul"},"$-1,125$.")),Object(n.mdx)("ol",{start:3},Object(n.mdx)("li",{parentName:"ol"},"Avec cet encodage à 8 bits: ")),Object(n.mdx)("ul",null,Object(n.mdx)("li",{parentName:"ul"},"Quel est le plus grand nombre à virgules que l’on peut représenter?"),Object(n.mdx)("li",{parentName:"ul"},"Quel est le plus petit nombre à virgule, donc négatif?"),Object(n.mdx)("li",{parentName:"ul"},"Quel est le plus petit nombre à virgule strictement positif que l’on peut représenter?")),Object(n.mdx)("h2",{id:"ex-2"},"Encodage double précision: sur 64 bits"),Object(n.mdx)("p",null,"On considère des nombres flottants encodés sur 64 bits avec dans l’ordre:"),Object(n.mdx)("ul",null,Object(n.mdx)("li",{parentName:"ul"},"1 bit de signe,"),Object(n.mdx)("li",{parentName:"ul"},"11 bits d’exposant (-1022 à 1023)"),Object(n.mdx)("li",{parentName:"ul"},"52 bits de mantisse.")),Object(n.mdx)("ol",null,Object(n.mdx)("li",{parentName:"ol"},"Trouver les nombres à virgule représentés par les mots binaires suivants")),Object(n.mdx)("ul",null,Object(n.mdx)("li",{parentName:"ul"},Object(n.mdx)("code",r({parentName:"li"},{className:"language-text"}),"1 10001000110 1001001111000011100000000000000000000000000000000000")),Object(n.mdx)("li",{parentName:"ul"},Object(n.mdx)("code",r({parentName:"li"},{className:"language-text"}),"0 00100000011 1101001110010101100000000000000000000000000000000000"))),Object(n.mdx)("ol",{start:2},Object(n.mdx)("li",{parentName:"ol"},"Donner les représentations binaires des nombres flottants suivants:")),Object(n.mdx)("ul",null,Object(n.mdx)("li",{parentName:"ul"},"$2^{-1022}$ (qui est égal à $2,225 \\times 10^{-308}$)."),Object(n.mdx)("li",{parentName:"ul"},"$7,0$.")),Object(n.mdx)("ol",{start:3},Object(n.mdx)("li",{parentName:"ol"},"Avec cet encodage à 64 bits: ")),Object(n.mdx)("ul",null,Object(n.mdx)("li",{parentName:"ul"},"Quel est le plus grand nombre à virgules que l’on peut représenter?"),Object(n.mdx)("li",{parentName:"ul"},"Quel est le plus petit nombre à virgule, donc négatif?"),Object(n.mdx)("li",{parentName:"ul"},"Quel est le plus petit nombre à virgule strictement positif que l’on peut représenter?")),Object(n.mdx)("h2",{id:"ex-3"},"Exercice Python n°1"),Object(n.mdx)("p",null,"On considère le programme suivant:"),Object(n.mdx)("div",{className:"gatsby-highlight","data-language":"python"},Object(n.mdx)("pre",r({parentName:"div"},{className:"language-python"}),Object(n.mdx)("code",r({parentName:"pre"},{className:"language-python"}),"x ",Object(n.mdx)("span",r({parentName:"code"},{className:"token operator"}),"=")," ",Object(n.mdx)("span",r({parentName:"code"},{className:"token number"}),"1.0"),"\ny ",Object(n.mdx)("span",r({parentName:"code"},{className:"token operator"}),"=")," x ",Object(n.mdx)("span",r({parentName:"code"},{className:"token operator"}),"+")," ",Object(n.mdx)("span",r({parentName:"code"},{className:"token number"}),"1.0"),"\n",Object(n.mdx)("span",r({parentName:"code"},{className:"token keyword"}),"while")," y ",Object(n.mdx)("span",r({parentName:"code"},{className:"token operator"}),"-")," x ",Object(n.mdx)("span",r({parentName:"code"},{className:"token operator"}),"==")," ",Object(n.mdx)("span",r({parentName:"code"},{className:"token number"}),"1.0"),Object(n.mdx)("span",r({parentName:"code"},{className:"token punctuation"}),":"),"\n    x ",Object(n.mdx)("span",r({parentName:"code"},{className:"token operator"}),"=")," x ",Object(n.mdx)("span",r({parentName:"code"},{className:"token operator"}),"*")," ",Object(n.mdx)("span",r({parentName:"code"},{className:"token number"}),"2.0"),"\n    y ",Object(n.mdx)("span",r({parentName:"code"},{className:"token operator"}),"=")," x ",Object(n.mdx)("span",r({parentName:"code"},{className:"token operator"}),"+")," ",Object(n.mdx)("span",r({parentName:"code"},{className:"token number"}),"1.0")))),Object(n.mdx)("ol",null,Object(n.mdx)("li",{parentName:"ol"},Object(n.mdx)("p",{parentName:"li"},"Si l’on calculait sur des nombres rationnels exacts, que se passerait-il lors de l’exécution de ce programme ?")),Object(n.mdx)("li",{parentName:"ol"},Object(n.mdx)("p",{parentName:"li"},"Écrire ce programme et l’exécuter. Que constate-t-on ?")),Object(n.mdx)("li",{parentName:"ol"},Object(n.mdx)("p",{parentName:"li"},"Modifier le programme de façon à déterminer au bout de combien d’exécutions du corps de la boucle il s’arrête, ainsi que la valeur de ",Object(n.mdx)("code",r({parentName:"p"},{className:"language-text"}),"x")," à la fin de cette exécution.")),Object(n.mdx)("li",{parentName:"ol"},Object(n.mdx)("p",{parentName:"li"},"Comment est représentée cette dernière valeur de ",Object(n.mdx)("code",r({parentName:"p"},{className:"language-text"}),"x")," ? Et celle de ",Object(n.mdx)("code",r({parentName:"p"},{className:"language-text"}),"y")," ? "))),Object(n.mdx)("p",null,"On pourra utiliser un convertisseur en ligne comme: ",Object(n.mdx)("a",r({parentName:"p"},{href:"http://www.binaryconvert.com/convert_double.html"}),"http://www.binaryconvert.com/convert_double.html")),Object(n.mdx)("ol",{start:5},Object(n.mdx)("li",{parentName:"ol"},"Proposer une explication de ce comportement.")),Object(n.mdx)("h2",{id:"ex-4"},"Exercice Python n°2"),Object(n.mdx)("p",null,"On considère le programme suivant:"),Object(n.mdx)("div",{className:"gatsby-highlight","data-language":"python"},Object(n.mdx)("pre",r({parentName:"div"},{className:"language-python"}),Object(n.mdx)("code",r({parentName:"pre"},{className:"language-python"}),"a ",Object(n.mdx)("span",r({parentName:"code"},{className:"token operator"}),"=")," ",Object(n.mdx)("span",r({parentName:"code"},{className:"token number"}),"0.0"),"\n",Object(n.mdx)("span",r({parentName:"code"},{className:"token keyword"}),"for")," loop ",Object(n.mdx)("span",r({parentName:"code"},{className:"token keyword"}),"in")," ",Object(n.mdx)("span",r({parentName:"code"},{className:"token builtin"}),"range"),Object(n.mdx)("span",r({parentName:"code"},{className:"token punctuation"}),"("),Object(n.mdx)("span",r({parentName:"code"},{className:"token number"}),"0"),Object(n.mdx)("span",r({parentName:"code"},{className:"token punctuation"}),","),Object(n.mdx)("span",r({parentName:"code"},{className:"token number"}),"10"),Object(n.mdx)("span",r({parentName:"code"},{className:"token punctuation"}),")"),Object(n.mdx)("span",r({parentName:"code"},{className:"token punctuation"}),":"),"\n    a ",Object(n.mdx)("span",r({parentName:"code"},{className:"token operator"}),"=")," a ",Object(n.mdx)("span",r({parentName:"code"},{className:"token operator"}),"+")," ",Object(n.mdx)("span",r({parentName:"code"},{className:"token number"}),"0.1"),"\n    ",Object(n.mdx)("span",r({parentName:"code"},{className:"token keyword"}),"print"),Object(n.mdx)("span",r({parentName:"code"},{className:"token punctuation"}),"("),"a",Object(n.mdx)("span",r({parentName:"code"},{className:"token punctuation"}),")")))),Object(n.mdx)("ol",null,Object(n.mdx)("li",{parentName:"ol"},Object(n.mdx)("p",{parentName:"li"},"Si l’on calculait sur des nombres rationnels exacts, que se passerait-il lors de l’exécution de ce programme ?")),Object(n.mdx)("li",{parentName:"ol"},Object(n.mdx)("p",{parentName:"li"},"Écrire ce programme et l’exécuter. Que constate-t-on ?")),Object(n.mdx)("li",{parentName:"ol"},Object(n.mdx)("p",{parentName:"li"},"Vérifier avec le convertisseur en ligne que la représentation binaire de 0,1 est\n",Object(n.mdx)("code",r({parentName:"p"},{className:"language-text"}),"0_01111111011_1001100110011001100110011001100110011001100110011010"),"."))),Object(n.mdx)("p",null,"Quel nombre décimal cette représentation désigne-t-elle en réalité ?"),Object(n.mdx)("ol",{start:4},Object(n.mdx)("li",{parentName:"ol"},"Expliquer le résultat obtenu.")),Object(n.mdx)("h4",null,"Source"),Object(n.mdx)("p",null,Object(n.mdx)("a",r({parentName:"p"},{href:"http://www.editions-eyrolles.com/Livre/9782212135435/"}),"Informatique et sciences du numérique Spécialité ISN en terminale S - Avec des exercices corrigés et des idées de projets par Gilles Dowek")))}s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-courses-1-g-nsi-2-representation-des-donnees-types-et-valeurs-de-base-5-representation-approximative-des-nombres-reels-exo-mdx-828b24ed274bde3233de.js.map