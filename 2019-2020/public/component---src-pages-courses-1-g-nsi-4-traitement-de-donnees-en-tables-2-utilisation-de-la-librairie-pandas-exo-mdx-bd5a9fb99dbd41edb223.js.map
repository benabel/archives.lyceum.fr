{"version":3,"sources":["webpack:///./src/pages/courses/1g/nsi/4-Traitement de données en tables/2-Utilisation de la librairie pandas/exo.mdx"],"names":["_frontmatter","layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"mdAKO,IAAMA,EAAe,GAOtBC,EAAc,CAClBD,gBAGa,SAASE,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,cALS,UAKT,KAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,gJACA,wBACE,oBAAIC,WAAW,MACb,mBAAGA,WAAW,MAAd,kFAEF,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAd,iGAEF,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAd,2FAEF,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAd,2EAA+F,wBAAMA,WAAW,KAAQ,CACpH,UAAa,kBAD8E,aAA/F,kBAE4C,wBAAMA,WAAW,KAAQ,CACjE,UAAa,kBAD2B,aAF5C,OAMF,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAd,2HAEF,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAd,gMAEN,wBAAMA,WAAW,KAAQ,CACf,UAAa,kBADvB,YAFM,+FAWRJ,EAAWK,gBAAiB","file":"component---src-pages-courses-1-g-nsi-4-traitement-de-donnees-en-tables-2-utilisation-de-la-librairie-pandas-exo-mdx-bd5a9fb99dbd41edb223.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Dans ces exercices vous allez explorer les données étudiées dans le cours sur le stationnement des deux roues à Nice.`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Donner le nom, le type et une description de chacune des colonnes du tableau.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Rechercher dans toute la table les lignes qui possèdent au moins un stationnement pour vélo.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Compter le nombre de stationnements qui possèdent au moins un stationnement pour vélo.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Afficher et comparer le nombre total d’arcs de stationnements pour vélo(`}<code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`NB_ARC_VL`}</code>{`) et pour moto(`}<code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`NB_ARC_MT`}</code>{`).`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Rechercher le stationnement le plus long de la ville, pour savoir dans quel quartier vivre si vous avez un deux roues.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Pour tester la cohérence de la table, rechercher si certains stationnements ont été comptés deux\nfois. Pour cela on utilisera les données de longitude et latitude données dans la colonne\n`}<code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`geometry`}</code>{`. S’il n’y a pas de doublons c’est que la ville de Nice a fourni des données de qualité.`}</p>\n      </li>\n    </ol>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}