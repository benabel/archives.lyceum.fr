{"componentChunkName":"component---src-templates-programme-md-js","path":"/1g/nsi/programme","result":{"data":{"markdownRemark":{"html":"<blockquote>\n<p>Ce document est une retranscription non officielle du programme de Numérique et sciences du\nnumérique de première générale applicable à la rentrée 2019. La version officielle est\nconsultable sur\n<a href=\"http://cache.media.education.gouv.fr/file/CSP/41/2/1e_Numerique_et_sciences_informatiques_Specialite_Voie_G_1025412.pdf\">eduscol</a>.</p>\n</blockquote>\n<h2 id=\"préambule\" style=\"position:relative;\"><a href=\"#pr%C3%A9ambule\" aria-label=\"préambule permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Préambule</h2>\n<p>L'enseignement de spécialité de numérique et sciences informatiques du cycle terminal de la voie\ngénérale vise l'appropriation des fondements de l'informatique pour préparer les élèves à une\npoursuite d'études dans l'enseignement supérieur, en les formant à la pratique d'une démarche\nscientifique et en développant leur appétence pour des activités de recherche.</p>\n<p>L'objectif de cet enseignement, non professionnalisant, est l'appropriation des concepts et des\nméthodes qui fondent l'informatique, dans ses dimensions scientifiques et techniques. Cet\nenseignement s'appuie sur l'universalité de quatre concepts fondamentaux et la variété de leurs\ninteractions:</p>\n<ul>\n<li>Les <strong>données</strong>, qui représentent sous une forme numérique unifiée des informations très\ndiverses : textes, images, sons, mesures physiques, sommes d'argent, etc.</li>\n<li>Les <strong>algorithmes</strong>, qui spécifient de façon abstraite et précise des traitements à effectuer\nsur les données à partir d'opérations élémentaires.</li>\n<li>Les <strong>langages</strong>, qui permettent de traduire les algorithmes abstraits en <strong>programmes</strong>\ntextuels ou graphiques de façon à ce qu'ils soient exécutables par les machines.</li>\n<li>Les <strong>machines</strong>, et leurs systèmes d'exploitation, qui permettent d'exécuter des programmes en\nenchaînant un grand nombre d'instructions simples, assurant la persistance des données par leur\nstockage, et de gérer les communications. On y inclut les <strong>objets connectés</strong> et les\n<strong>réseaux</strong>.</li>\n</ul>\n<p>À ces concepts s'ajoute un élément transversal : les interfaces qui permettent la communication avec\nles humains, la collecte des données et la commande des systèmes.</p>\n<p>Cet enseignement prolonge les enseignements d'informatique dispensés à l'école primaire, au collège\nen mathématiques et en technologie et, en seconde, l'enseignement commun de sciences numériques et\ntechnologie . Il s'appuie aussi sur l'algorithmique pratiquée en mathématiques en seconde. Il permet\nde développer des compétences :</p>\n<ul>\n<li>analyser et modéliser un problème en termes de flux et de traitement d'informations ;</li>\n<li>décomposer un problème en sous-problèmes, reconnaître des situations déjà analysées et\nréutiliser des solutions ;</li>\n<li>concevoir des solutions algorithmiques ;</li>\n<li>traduire un algorithme dans un langage de programmation, en spécifier les interfaces et les\ninteractions, comprendre et réutiliser des codes sources existants, développer des processus de\nmise au point et de validation de programmes ;</li>\n<li>mobiliser les concepts et les technologies utiles pour assurer les fonctions d'acquisition, de\nmémorisation, de traitement et de diffusion des informations ;</li>\n<li>développer des capacités d'abstraction et de généralisation.</li>\n</ul>\n<p>Cet enseignement a vocation à multiplier les occasions de mise en activité des élèves, sous des\n<strong>formes variées</strong> qui permettent de développer des compétences transversales :</p>\n<ul>\n<li>faire preuve d'autonomie, d'initiative et de créativité ;</li>\n<li>présenter un problème ou sa solution, développer une argumentation dans le cadre d'un débat ;</li>\n<li>coopérer au sein d'une équipe dans le cadre d'un projet ;</li>\n<li>rechercher de l'information, partager des ressources ;</li>\n<li>faire un usage responsable et critique de l'informatique.</li>\n</ul>\n<p>La progression peut suivre un rythme annuel construit autour de périodes spécifiques favorisant une\nalternance entre divers types d'activités.</p>\n<p>Cet enseignement contribue à l'acquisition des compétences numériques qui font l'objet d'une\ncertification en fin de cycle terminal.</p>\n<p>Comme tous les enseignements, cette spécialité contribue au développement des compétences orales à\ntravers notamment la pratique de l'argumentation. Celle-ci conduit à préciser sa pensée et à\nexpliciter son raisonnement de manière à convaincre. Elle permet à chacun de faire évoluer sa\npensée, jusqu'à la remettre en cause si nécessaire, pour accéder progressivement à la vérité par la\npreuve. Si ces considérations sont valables pour tous les élèves, elles prennent un relief\nparticulier pour ceux qui choisiront de poursuivre cet enseignement de spéciali té en terminale et\nqui ont à préparer l'épreuve orale terminale du baccalauréat. Il convient que les travaux proposés\naux élèves y contribuent dès la classe de première.</p>\n<h2 id=\"démarche-de-projet\" style=\"position:relative;\"><a href=\"#d%C3%A9marche-de-projet\" aria-label=\"démarche de projet permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Démarche de projet</h2>\n<p>Un enseignement d'informatique ne saurait se réduire à une présentation de concepts ou de méthodes\nsans permettre aux élèves de se les approprier en développant des projets applicatifs.</p>\n<p>Une part de l'horaire de l'enseignement d'au moins un quart du total en classe de première doit être\nréservée à la conception et à l'élaboration de projets conduits par des groupes de deux à quatre\nélèves.</p>\n<p>Les projets réalisés par les élèves, sous la conduite du professeur, constituent un apprentissage\nfondamental tant pour la compréhension de l'informatique que pour l'acquisition de compétences. En\nclasse de première comme en classe terminale, ils peuvent porter sur des problématiques issues\nd'autres disciplines et ont essentiellement pour but d'imaginer des solutions répondant à\nl'expression d'un besoin ; dans la mesure du possible, il convient de laisser le choix du thème du\nprojet aux élèves eux-mêmes. Il peut s'agir d'un approfondissement théorique des concepts étudiés en\ncommun, d'une application à d'autres disciplines telle qu'une simulation d'expérience, d'un travail\nsur des données socioéconomiques, du développement d'un logiciel de lexicographie, d'un projet\nautour d'un objet connecté ou d'un robot, de la conception d'une bibliothèque implémentant une\nstructure de données complexe, d'un problème de traitement d'image ou de son, d'une application\nmobile, par exemple de réalité virtuelle ou augmentée, du développement d'un site Web associé à\nl'utilisation d'une base de données, de la réalisation d'un interprète d'un mini-langage, d 'un\nprogramme de jeu de stratégie, etc.</p>\n<p>La gestion d'un projet inclut des points d'étape pour faire un bilan avec le professeur, valider des\néléments, contrôler l'avancement du projet ou adapter ses objectifs, voire le redéfinir\npartiellement, afin de maintenir la motivation des élèves.</p>\n<p>Les professeurs veillent à ce que les projets restent d'une ambition raisonnable afin de leur\npermettre d'aboutir.</p>\n<h2 id=\"modalités-de-mise-en-œuvre\" style=\"position:relative;\"><a href=\"#modalit%C3%A9s-de-mise-en-%C5%93uvre\" aria-label=\"modalités de mise en œuvre permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Modalités de mise en œuvre</h2>\n<p>Les activités pratiques et la réalisation de projets supposent, pour chaque élève, l'accès à un\néquipement relié à internet.</p>\n<p>Un langage de programmation est nécessaire pour l'écriture des programmes : un langage simple\nd'usage, interprété, concis, libre et gratuit, multiplateforme, largement répandu, riche de\nbibliothèques adaptées et bénéficiant d'une vaste communauté d'auteurs dans le monde éducatif est à\nprivilégier. Au moment de la conception de ce programme, le langage choisi est Python version 3 (ou\nsupérieure). L'expertise dans tel ou tel langage de programmation n'est cependant pas un objectif de\nformation.</p>\n<h2 id=\"éléments-de-programme\" style=\"position:relative;\"><a href=\"#%C3%A9l%C3%A9ments-de-programme\" aria-label=\"éléments de programme permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Éléments de programme</h2>\n<p>Le programme est organisé autour de huit rubriques. Il ne constitue cependant pas un plan de cours.\nIl appartient aux professeurs de choisir leur progression, sans faire de chaque partie un tout\ninsécable et indépendant des autres. Au contraire, les mêmes notions peuvent être développées et\néclairées dans différentes rubriques, en mettant en lumière leurs interactions.</p>\n<h3 id=\"histoire-de-linformatique\" style=\"position:relative;\"><a href=\"#histoire-de-linformatique\" aria-label=\"histoire de linformatique permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Histoire de l'informatique</h3>\n<p>Cette rubrique transversale se décline dans chacune des sept autres.</p>\n<p>Comme toute connaissance scientifique et technique, les concepts de l'informatique ont une histoire\net ont été forgés par des personnes. Les algorithmes sont présents dès l'Antiquité, les machines à\ncalculer apparaissent progressivement au XVII e siècle, les sciences de l'information sont fondées\nau XIX e siècle, mais c'est en 1936 qu'apparaît le concept de machine universelle, capable\nd'exécuter tous les algorithmes, et que les notions de machine, algorithme, langage et information\nsont pensées comme un tout cohérent. Les premiers ordinateurs ont été construits en 1948 et leur\npuissance a ensuite évolué exponentiellement. Parallèlement, les ordinateurs se sont diversifiés\ndans leur taille, leur forme et leur emploi : téléphones, tablettes, montres connectées, ordinateurs\npersonnels, serveurs, fermes de calcul, méga-ordinateurs. Le réseau internet, développé depuis 1969,\nrelie aujourd'hui ordinateurs et objets connectés.</p>\n<div><table class=\"table table-bordered table-hover\"><thead class=\"table-warning\"><tr><th colspan=\"1\" rowspan=\"1\"><p>Contenus</p></th><th colspan=\"1\" rowspan=\"1\"><p>Capacités attendues</p></th><th colspan=\"1\" rowspan=\"1\"><p>Commentaires</p></th></tr></thead><tbody><tr><td colspan=\"1\" rowspan=\"1\"><p>Événements clés de\nl’histoire de\nl’informatique</p></td><td colspan=\"1\" rowspan=\"1\"><p>Situer dans le temps les\nprincipaux événements de\nl’histoire de l’informatique et\nleurs protagonistes.</p></td><td colspan=\"1\" rowspan=\"1\"><p>Ces repères historiques seront\nconstruits au fur et à mesure de la\nprésentation des concepts et\ntechniques.</p></td></tr></tbody></table></div>\n<h3 id=\"représentation-des-données--types-et-valeurs-de-base\" style=\"position:relative;\"><a href=\"#repr%C3%A9sentation-des-donn%C3%A9es--types-et-valeurs-de-base\" aria-label=\"représentation des données  types et valeurs de base permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Représentation des données : types et valeurs de base</h3>\n<p>Toute machine informatique manipule une représentation des données dont l'unité minimale est le bit\n0/1, ce qui permet d'unifier logique et calcul. Les données de base sont représentées selon un\ncodage dépendant de leur nature : entiers, flottants, caractères et chaînes de caractères. Le codage\nconditionne la taille des différentes valeurs en mémoire.</p>\n<div><table class=\"table table-bordered table-hover\"><thead class=\"table-warning\"><tr><th colspan=\"1\" rowspan=\"1\"><p>Contenus</p></th><th colspan=\"1\" rowspan=\"1\"><p>Capacités attendues</p></th><th colspan=\"1\" rowspan=\"1\"><p>Commentaires</p></th></tr></thead><tbody><tr><td colspan=\"1\" rowspan=\"1\"><p>Écriture d’un entier\npositif dans une base\nb ⩾ 2</p></td><td colspan=\"1\" rowspan=\"1\"><p>Passer de la représentation\nd’une base dans une autre.</p></td><td colspan=\"1\" rowspan=\"1\"><p>Les bases 2, 10 et 16 sont\nprivilégiées.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><p>Représentation binaire\nd’un entier relatif</p></td><td colspan=\"1\" rowspan=\"1\"><p>Évaluer le nombre de bits\nnécessaires à l’écriture en\nbase 2 d'un entier, de la\nsomme ou du produit de deux\nnombres entiers.\nUtiliser le complément à 2.</p></td><td colspan=\"1\" rowspan=\"1\"><p>Il s’agit de décrire les tailles\ncourantes des entiers (8, 16, 32\nou 64 bits).\nIl est possible d’évoquer la\nreprésentation des entiers de taille\narbitraire de Python.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><p>Représentation\napproximative des\nnombres réels : notion\nde nombre flottant</p></td><td colspan=\"1\" rowspan=\"1\"><p>Représentation\napproximative des\nnombres réels : notion\nde nombre flottant</p></td><td colspan=\"1\" rowspan=\"1\"><p>0.2 + 0.1 n’est pas égal à 0.3.\nIl faut éviter de tester l’égalité de\ndeux flottants.\nAucune connaissance précise de\nla norme IEEE-754 n’est exigible.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><p>Valeurs booléennes : <code class=\"language-text\">0</code>, <code class=\"language-text\">1</code>.</p><p>Opérateurs booléens :\n<code class=\"language-text\">and</code>, <code class=\"language-text\">or</code>, <code class=\"language-text\">not</code>.</p><p>Expressions booléennes</p></td><td colspan=\"1\" rowspan=\"1\"><p>Dresser la table d’une\nd'une expression booléenne.</p></td><td colspan=\"1\" rowspan=\"1\"><p>Le ou exclusif (<code class=\"language-text\">xor</code>) est évoqué.</p><p>Quelques applications directes\ncomme l’addition binaire sont\nprésentées.</p><p>L’attention des élèves est attirée\nsur le caractère séquentiel de\ncertains opérateurs booléens.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><p>Représentation d’un\ntexte en machine.</p><p>Exemples des\nencodages <code class=\"language-text\">ASCII</code>,\n<code class=\"language-text\">ISO-8859-1</code>, <code class=\"language-text\">Unicode</code></p></td><td colspan=\"1\" rowspan=\"1\"><p>Identifier l'intérêt des différents\nsystèmes d'encodage.</p><p>Convertir un fichier texte dans\ndifférents formats d'encodage.</p></td><td colspan=\"1\" rowspan=\"1\"><p>Aucune connaissance précise des\nnormes d'encodage n'est exigible</p></td></tr></tbody></table></div>\n<h3 id=\"représentation-des-données--types-construits\" style=\"position:relative;\"><a href=\"#repr%C3%A9sentation-des-donn%C3%A9es--types-construits\" aria-label=\"représentation des données  types construits permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Représentation des données : types construits</h3>\n<p>À partir des types de base se constituent des types construits, qui sont introduits au fur et à\nmesure qu'ils sont nécessaires. Il s'agit de présenter tour à tour les p-uplets ( tuples), les\nenregistrements qui collectent des valeurs de types différents dans des champs nommés et les\ntableaux qui permettent un accès calculé direct aux éléments. En pratique, on utilise les\nappellations de Python, qui peuvent être différentes de celles d'autres langages de programmation.</p>\n<div><table class=\"table table-bordered table-hover\"><thead class=\"table-warning\"><tr><th colspan=\"1\" rowspan=\"1\"><p>Contenus</p></th><th colspan=\"1\" rowspan=\"1\"><p>Capacités attendues</p></th><th colspan=\"1\" rowspan=\"1\"><p>Commentaires</p></th></tr></thead><tbody><tr><td colspan=\"1\" rowspan=\"1\"><p>p-uplets.\np-uplets nommés</p></td><td colspan=\"1\" rowspan=\"1\"><p>Écrire une fonction renvoyant\nun p-uplet de valeurs.</p></td><td colspan=\"1\" rowspan=\"1\"></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><p>Tableau indexé, tableau\ndonné en\ncompréhension</p></td><td colspan=\"1\" rowspan=\"1\"><p>Lire et modifier les éléments\nd’un tableau grâce à leurs\nindex.</p><p>Constuire un tableau par\ncompréhension.</p><p>Utiliser des tableaux de\ntableaux pour représenter des\nmatrices, notation <code class=\"language-text\">a[i][j]</code></p><p>Itérer sur les éléments d'un\ntableau.</p></td><td colspan=\"1\" rowspan=\"1\"><p>Seuls les tableaux dont les\néléments sont du même type sont\nprésentés.</p><p>Aucune connaissance des\ntranches (slices) n’est exigible.</p><p>L’aspect dynamique des tableaux\nde Python n’est pas évoqué.</p><p>Python identifie listes et tableaux.</p><p>Il n’est pas fait référence aux\ntableaux de la bibliothèque\nNumPy.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><p>Dictionnaires par clés et\nvaleurs</p></td><td colspan=\"1\" rowspan=\"1\"><p>Construire une entrée de\ndictionnaire</p><p>Itérer sur les éléments d'un\ndictionnaire.</p></td><td colspan=\"1\" rowspan=\"1\"><p>Il est possible de présenter les\ndonnées EXIF d’une image sous\nla forme d’un enregistrement.</p><p>En Python, les p-uplets nommés\nsont implémentés par des\ndictionnaires.</p><p>Utiliser les méthodes <code class=\"language-text\">keys()</code>,\n<code class=\"language-text\">values()</code> et <code class=\"language-text\">items()</code></p></td></tr></tbody></table></div>\n<h3 id=\"traitement-de-données-en-tables\" style=\"position:relative;\"><a href=\"#traitement-de-donn%C3%A9es-en-tables\" aria-label=\"traitement de données en tables permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Traitement de données en tables</h3>\n<p>Les données organisées en table correspondent à une liste de p-uplets nommés qui partagent les mêmes\ndescripteurs. La mobilisation de ce type de structure de données permet de préparer les élèves à\naborder la notion de base de données qui ne sera présentée qu'en classe terminale. Il s'agit\nd'utiliser un tableau doublement indexé ou un tableau de p-uplets, dans un langage de programmation\nordinaire et non dans un système de gestion de bases de données.</p>\n<div><table class=\"table table-bordered table-hover\"><thead class=\"table-warning\"><tr><th colspan=\"1\" rowspan=\"1\"><p>Contenus</p></th><th colspan=\"1\" rowspan=\"1\"><p>Capacités attendues</p></th><th colspan=\"1\" rowspan=\"1\"><p>Commentaires</p></th></tr></thead><tbody><tr><td colspan=\"1\" rowspan=\"1\"><p>Indexation de tables</p></td><td colspan=\"1\" rowspan=\"1\"><p>Importer une table depuis un\nfichier texte tabulé ou un fichier\nCSV.</p></td><td colspan=\"1\" rowspan=\"1\"><p>Est utilisé un tableau doublement\nindexé ou un tableau de p-uplets\nqui partagent les mêmes\ndescripteurs.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><p>Recherche dans une\ntable</p></td><td colspan=\"1\" rowspan=\"1\"><p>Rechercher les lignes d’une\ntable vérifiant des critères\nexprimés en logique\npropositionnelle.</p></td><td colspan=\"1\" rowspan=\"1\"><p>La recherche de doublons, les\ntests de cohérence d’une table\nsont présentés.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><p>Tri d’une table</p></td><td colspan=\"1\" rowspan=\"1\"><p>Trier une table suivant une\ncolonne.</p></td><td colspan=\"1\" rowspan=\"1\"><p>Une fonction de tri intégrée au\nsystème ou à une bibliothèque\npeut être utilisée.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><p>Fusion de tables</p></td><td colspan=\"1\" rowspan=\"1\"><p>Construire une nouvelle table\nen combinant les données de\ndeux tables.</p></td><td colspan=\"1\" rowspan=\"1\"><p>La notion de domaine de valeurs\nest mise en évidence.</p></td></tr></tbody></table></div>\n<h3 id=\"interactions-entre-lhomme-et-la-machine-sur-le-web\" style=\"position:relative;\"><a href=\"#interactions-entre-lhomme-et-la-machine-sur-le-web\" aria-label=\"interactions entre lhomme et la machine sur le web permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Interactions entre l'homme et la machine sur le <em>Web</em></h3>\n<p>Lors de la navigation sur le Web, les internautes interagissent avec leur machine par le biais des\npages Web.</p>\n<p>L'Interface Homme-Machine (IHM) repose sur la gestion d'événements associés à des éléments\ngraphiques munis de méthodes algorithmiques.</p>\n<p>La compréhension du dialogue client-serveur déjà abordé en classe de seconde est consolidée, sur des\nexemples simples, en identifiant les requêtes du client, les calculs puis les réponses du serveur\ntraitées par le client.</p>\n<p>Il ne s'agit pas de décrire exhaustivement les différents éléments disponibles, ni de développer une\nexpertise dans les langages qui permettent de mettre en œuvre le dialogue tels que <code class=\"language-text\">PHP</code> ou\n<code class=\"language-text\">JavaScript</code>.</p>\n<div><table class=\"table table-bordered table-hover\"><thead class=\"table-warning\"><tr><th colspan=\"1\" rowspan=\"1\"><p>Contenus</p></th><th colspan=\"1\" rowspan=\"1\"><p>Capacités attendues</p></th><th colspan=\"1\" rowspan=\"1\"><p>Commentaires</p></th></tr></thead><tbody><tr><td colspan=\"1\" rowspan=\"1\"><p>Modalités de l'interaction\nentre l'homme et la\nmachine</p><p>Événements</p></td><td colspan=\"1\" rowspan=\"1\"><p>Identifier les différents\ncomposants graphiques\npermettant d'interagir avec une\napplication Web</p><p>Identifier les événements que\nles fonctions associées aux\ndifférents composants\ngraphiques sont capables de\ntraiter</p></td><td colspan=\"1\" rowspan=\"1\"><p>Il s’agit d’examiner le code HTML\nd’une page comprenant des\ncomposants graphiques et de\ndistinguer ce qui relève de la\ndescription des composants\ngraphiques en HTML de leur\ncomportement (réaction aux\névénements) programmé par\nexemple en JavaScript.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><p>Interaction avec\nl’utilisateur dans une\npage Web</p></td><td colspan=\"1\" rowspan=\"1\"><p>Analyser et modifier les\nméthodes exécutées lors d’un\nclic sur un bouton d’une page\nWeb.</p></td><td colspan=\"1\" rowspan=\"1\"></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><p>Interaction client-\nserveur.</p><p>Requêtes HTTP,\nréponses du serveur</p></td><td colspan=\"1\" rowspan=\"1\"><p>Distinguer ce qui est exécuté\nsur le client ou sur le serveur et\ndans quel ordre.</p><p>Distinguer ce qui est mémorisé\ndans le client et retransmis au\nserveur.</p><p>Reconnaître quand et pourquoi\nla transmission est chiffrée.</p></td><td colspan=\"1\" rowspan=\"1\"><p>Il s’agit de faire le lien avec ce qui\na été vu en classe de seconde et\nd’expliquer comment on peut\npasser des paramètres à un site\ngrâce au protocole HTTP.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><p>Formulaire d’une page Web</p></td><td colspan=\"1\" rowspan=\"1\"><p>Analyser le fonctionnement d’un\nformulaire simple.</p><p>Distinguer les transmissions de\nparamètres par les requêtes POST ou GET.</p></td><td colspan=\"1\" rowspan=\"1\"><p>Discuter les deux types de requêtes selon\nle type des valeurs à transmettre et/ou\nleur confidentialité.</p></td></tr></tbody></table></div>\n<h3 id=\"architectures-matérielles-et-systèmes-dexploitation\" style=\"position:relative;\"><a href=\"#architectures-mat%C3%A9rielles-et-syst%C3%A8mes-dexploitation\" aria-label=\"architectures matérielles et systèmes dexploitation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Architectures matérielles et systèmes d'exploitation</h3>\n<p>Exprimer un algorithme dans un langage de programmation a pour but de le rendre exécutable par une\nmachine dans un contexte donné. La découverte de l'architecture des machines et de leur système\nd'exploitation constitue une étape importante.</p>\n<p>Les circuits électroniques sont au cœur de toutes les machines informatiques. Les réseaux permettent\nde transmettre l'information entre machines. Les systèmes d'exploitation gèrent et optimisent\nl'ensemble des fonctions de la machine, de l'exécution des programmes aux entrées-sorties et à la\ngestion d'énergie.</p>\n<p>On étudie aussi le rôle des capteurs et actionneurs dans les entrées-sorties clavier, interfaces\ngraphiques et tactiles, dispositifs de mesure physique, commandes de machines, etc.</p>\n<div><table class=\"table table-bordered table-hover\"><thead class=\"table-warning\"><tr><th colspan=\"1\" rowspan=\"1\"><p>Contenus</p></th><th colspan=\"1\" rowspan=\"1\"><p>Capacités attendues</p></th><th colspan=\"1\" rowspan=\"1\"><p>Commentaires</p></th></tr></thead><tbody><tr><td colspan=\"1\" rowspan=\"1\"><p>Modèle d’architecture\nséquentielle\n(von Neumann)</p></td><td colspan=\"1\" rowspan=\"1\"><p>Distinguer les rôles et les\ncaractéristiques des différents\nconstituants d’une machine.</p><p>Dérouler l’exécution d’une\nséquence d’instructions simples\ndu type langage machine.</p></td><td colspan=\"1\" rowspan=\"1\"><p>La présentation se limite aux\nconcepts généraux.</p><p>On distingue les architectures\nmonoprocesseur et les\narchitectures multiprocesseur.</p><p>Des activités débranchées sont\nproposées.</p><p>Les circuits combinatoires\nréalisent des fonctions\nbooléennes.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><p>Transmission de\ndonnées dans un réseau</p><p>Protocoles de\ncommunication</p><p>Architecture d'un réseau</p></td><td colspan=\"1\" rowspan=\"1\"><p>Mettre en évidence l'intérêt du\ndécoupage des données en\npaquets et de leur\nencapsulation.</p><p>Dérouler le fonctionnement d'un\nprotocole simple de\nrécupération de perte de\npaquets(bit alterné).</p><p>Simuler ou mettre en œuvre un\nréseau.</p></td><td colspan=\"1\" rowspan=\"1\"><p>Le protocole peut être expliqué et\nsimulé en mode débranché.</p><p>Le lien est fait avec ce qui a été\nvu en classe de seconde sur le\nprotocole TCP/IP.</p><p>Le rôle des différents constituants\ndu réseau local de l'établissement\nest présenté.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><p>Systèmes d'exploitation</p></td><td colspan=\"1\" rowspan=\"1\"><p>Identifier les fonctions d'un\nsystème d'exploitation.</p><p>Utiliser les commandes de base\nen ligne de commande.</p><p>Gérer les droits et permissions\nd'accès aux fichiers.</p></td><td colspan=\"1\" rowspan=\"1\"><p>Les différences entre systèmes\nd'exploitation libres et\npropriétaires sont évoquées.</p><p>Les élèves utilisent un système\nd'exploitation libre.</p><p>Il ne s'agit pas d'une étude\nthéorique des systèmes\nd'exploitation.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><p>Périphériques d’entrée et\nde sortie</p><p>Interface Homme-\nMachine (IHM)</p></td><td colspan=\"1\" rowspan=\"1\"><p>Identifier le rôle des capteurs et\nactionneurs.</p><p>Réaliser par programmation\nune IHM répondant à un cahier\ndes charges donné.</p></td><td colspan=\"1\" rowspan=\"1\"><p>Les activités peuvent être\ndéveloppées sur des objets\nconnectés, des systèmes\nembarqués ou robots.</p></td></tr></tbody></table></div>\n<h3 id=\"langages-et-programmation\" style=\"position:relative;\"><a href=\"#langages-et-programmation\" aria-label=\"langages et programmation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Langages et programmation</h3>\n<p>Les langages de programmation Turing-complets sont caractérisés par un corpus de « constructions\nélémentaires ». Sans introduire cette terminologie, il s'agit de montrer qu'il existe de nombreux\nlangages de programmation, différents par leur style (impératif, fonctionnel, objet, logique,\névénementiel, etc.), ainsi que des langages formalisés de description ou de requêtes qui ne sont pas\ndes langages de programmation.</p>\n<p>L'importance de la spécification, de la documentation et des tests est à présenter, ainsi que\nl'intérêt de la modularisation qui permet la réutilisation de programmes et la mise à disposition de\nbibliothèques. Pour les programmes simples écrits par les élèves, on peut se contenter d'une\nspécification rapide mais précise.</p>\n<div><table class=\"table table-bordered table-hover\"><thead class=\"table-warning\"><tr><th colspan=\"1\" rowspan=\"1\"><p>Contenus</p></th><th colspan=\"1\" rowspan=\"1\"><p>Capacités attendues</p></th><th colspan=\"1\" rowspan=\"1\"><p>Commentaires</p></th></tr></thead><tbody><tr><td colspan=\"1\" rowspan=\"1\"><p>Constructions\nélémentaires</p></td><td colspan=\"1\" rowspan=\"1\"><p>Mettre en évidence un corpus\nde constructions élémentaires.\nboucles non bornées, appels de\nfonction.</p></td><td colspan=\"1\" rowspan=\"1\"><p>Séquences, affectation,\nconditionnelles, boucles bornées,</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><p>Diversité et unité des\nlangages de\nprogrammation</p></td><td colspan=\"1\" rowspan=\"1\"><p>Repérer, dans un nouveau\nlangage de programmation, les\ntraits communs et les traits\nparticuliers à ce langage.</p></td><td colspan=\"1\" rowspan=\"1\"><p>Les manières dont un même\nprogramme simple s’écrit dans\ndifférents langages sont\ncomparées.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><p>Spécification</p></td><td colspan=\"1\" rowspan=\"1\"><p>Prototyper une fonction.</p><p>Décrire les préconditions sur\nles arguments.</p><p>Décrire des postconditions sur\nles résultats.</p></td><td colspan=\"1\" rowspan=\"1\"><p>Des assertions peuvent être\nutilisées pour garantir des\npréconditions ou des\npostconditions.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><p>Mise au point de\nprogrammes</p></td><td colspan=\"1\" rowspan=\"1\"><p>Utiliser des jeux de tests.</p></td><td colspan=\"1\" rowspan=\"1\"><p>L’importance de la qualité et du\nnombre des tests est mise en\névidence.</p><p>Le succès d’un jeu de tests ne\ngarantit pas la correction d’un\nprogramme.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><p>Utilisation de\nbibliothèques</p></td><td colspan=\"1\" rowspan=\"1\"><p>Utiliser la documentation d’une\nbibliothèque.</p></td><td colspan=\"1\" rowspan=\"1\"><p>Aucune connaissance exhaustive\nd’une bibliothèque particulière\nn’est exigible.</p></td></tr></tbody></table></div>\n<h3 id=\"algorithmique\" style=\"position:relative;\"><a href=\"#algorithmique\" aria-label=\"algorithmique permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Algorithmique</h3>\n<p>Le concept de méthode algorithmique est introduit ; de nouveaux exemples seront vus en terminale.\nQuelques algorithmes classiques sont étudiés. L'étude de leurs coûts respectifs prend tout son sens\ndans le cas de données nombreuses, qui peuvent être préférentiellement des données ouvertes.</p>\n<p>Il est nécessaire de montrer l'intérêt de prouver la correction d'un algorithme pour lequel on\ndispose d'une spécification précise, notamment en mobilisant la notion d'invariant sur des exemples\nsimples. L a nécessité de prouver la terminaison d'un programme est mise en évidence dès qu'on\nutilise une boucle non bornée (ou, en terminale, des fonctions récursives) grâce à la mobilisation\nde la notion de variant sur des exemples simples.</p>\n<div><table class=\"table table-bordered table-hover\"><thead class=\"table-warning\"><tr><th colspan=\"1\" rowspan=\"1\"><p>Contenus</p></th><th colspan=\"1\" rowspan=\"1\"><p>Capacités attendues</p></th><th colspan=\"1\" rowspan=\"1\"><p>Commentaires</p></th></tr></thead><tbody><tr><td colspan=\"1\" rowspan=\"1\"><p>Parcours séquentiel d'un\ntableau</p></td><td colspan=\"1\" rowspan=\"1\"><p>Écrire un algorithme de\nrecherche d'une occurence sur\ndes valeurs de type\nquelconque</p><p>Écrire un algorithme de\nrecherche d'un extremum, de\ncalcul d'une moyenne.</p></td><td colspan=\"1\" rowspan=\"1\"><p>On montre que le coût est linéaire</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><p>Tris par insertion, par\nsélection</p></td><td colspan=\"1\" rowspan=\"1\"><p>Écrire un algorithme de tri.</p><p>Décrire un invariant de boucle\nqui prouve la correction des tris\npar insertion, par sélection.</p></td><td colspan=\"1\" rowspan=\"1\"><p>La terminaison de ces algorithmes\nest à justifier.</p><p>On montre que leur coût est\nquadratique dans le pire cas.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><p>Algorithme des k plus\nproches voisins</p></td><td colspan=\"1\" rowspan=\"1\"><p>Écrire un algorithme qui prédit\nla classe d’un élément en\nfonction de la classe majoritaire\nde ses k plus proches voisins.</p></td><td colspan=\"1\" rowspan=\"1\"><p>Il s’agit d’un exemple d’algorithme\nd’apprentissage.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><p>Recherche dichotomique\ndans un tableau trié</p></td><td colspan=\"1\" rowspan=\"1\"><p>Montrer la terminaison de la\nrecherche dichotomique à l’aide\nd’un variant de boucle.</p></td><td colspan=\"1\" rowspan=\"1\"><p>Des assertions peuvent être\nutilisées.</p><p>La preuve de la correction peut\nêtre présentée par le professeur.</p></td></tr><tr><td colspan=\"1\" rowspan=\"1\"><p>Algorithmes gloutons</p></td><td colspan=\"1\" rowspan=\"1\"><p>Résoudre un problème grâce à\nun algorithme glouton.</p></td><td colspan=\"1\" rowspan=\"1\"><p>Exemples : problèmes du sac à\ndos ou du rendu de monnaie.</p><p>Les algorithmes gloutons\nconstituent une méthode\nalgorithmique parmi d’autres qui\nseront vues en terminale.</p></td></tr></tbody></table></div>","tableOfContents":"<ul>\n<li><a href=\"/2019-2020/1g/nsi/programme/#pr%C3%A9ambule\">Préambule</a></li>\n<li><a href=\"/2019-2020/1g/nsi/programme/#d%C3%A9marche-de-projet\">Démarche de projet</a></li>\n<li><a href=\"/2019-2020/1g/nsi/programme/#modalit%C3%A9s-de-mise-en-%C5%93uvre\">Modalités de mise en œuvre</a></li>\n<li>\n<p><a href=\"/2019-2020/1g/nsi/programme/#%C3%A9l%C3%A9ments-de-programme\">Éléments de programme</a></p>\n<ul>\n<li><a href=\"/2019-2020/1g/nsi/programme/#histoire-de-linformatique\">Histoire de l'informatique</a></li>\n<li><a href=\"/2019-2020/1g/nsi/programme/#repr%C3%A9sentation-des-donn%C3%A9es--types-et-valeurs-de-base\">Représentation des données : types et valeurs de base</a></li>\n<li><a href=\"/2019-2020/1g/nsi/programme/#repr%C3%A9sentation-des-donn%C3%A9es--types-construits\">Représentation des données : types construits</a></li>\n<li><a href=\"/2019-2020/1g/nsi/programme/#traitement-de-donn%C3%A9es-en-tables\">Traitement de données en tables</a></li>\n<li><a href=\"/2019-2020/1g/nsi/programme/#interactions-entre-lhomme-et-la-machine-sur-le-web\">Interactions entre l'homme et la machine sur le <em>Web</em></a></li>\n<li><a href=\"/2019-2020/1g/nsi/programme/#architectures-mat%C3%A9rielles-et-syst%C3%A8mes-dexploitation\">Architectures matérielles et systèmes d'exploitation</a></li>\n<li><a href=\"/2019-2020/1g/nsi/programme/#langages-et-programmation\">Langages et programmation</a></li>\n<li><a href=\"/2019-2020/1g/nsi/programme/#algorithmique\">Algorithmique</a></li>\n</ul>\n</li>\n</ul>","fields":{"classe":"1g","matter":"nsi","slug":"1g/nsi/programme"}}},"pageContext":{"slug":"1g/nsi/programme"}}}