{"componentChunkName":"component---src-templates-cours-md-js","path":"/1g/nsi/8-algorithmique/1-parcours-sequentiel-dun-tableau","result":{"data":{"markdownRemark":{"html":"<details class=\"programme\"><summary>Programme Officiel</summary><div><table class=\"table table-bordered table-hover\"><thead class=\"table-warning\"><tr><th colspan=\"1\" rowspan=\"1\"><p>Contenus</p></th><th colspan=\"1\" rowspan=\"1\"><p>Capacités attendues</p></th><th colspan=\"1\" rowspan=\"1\"><p>Commentaires</p></th></tr></thead><tbody><tr><td colspan=\"1\" rowspan=\"1\"><p>Parcours séquentiel d'un\ntableau</p></td><td colspan=\"1\" rowspan=\"1\"><p>Écrire un algorithme de\nrecherche d'une occurence sur\ndes valeurs de type\nquelconque</p><p>Écrire un algorithme de\nrecherche d'un extremum, de\ncalcul d'une moyenne.</p></td><td colspan=\"1\" rowspan=\"1\"><p>On montre que le coût est linéaire</p></td></tr></tbody></table></div><a class=\"lien-programme\" href=\"../programme/\">Lien vers le programme complet</a></details>\n<p>Dans ce chapitre, nous allons étudier des algorithmes de parcours séquentiel d'un tableau pour:</p>\n<ol>\n<li>Rechercher un élément d'un type donné.</li>\n<li>Rechercher le maximum d'un tableau.</li>\n<li>Calculer la moyenne d'un tableau.</li>\n</ol>\n<p>Ces algorithmes \"séquentiels\" ne sont pas du tout efficace, on les appelle en anglais <em>\"Brute force algorithms\"</em>.</p>\n<h2 id=\"méthodes-de-parcours-séquentiel-dun-tableau\" style=\"position:relative;\"><a href=\"#m%C3%A9thodes-de-parcours-s%C3%A9quentiel-dun-tableau\" aria-label=\"méthodes de parcours séquentiel dun tableau permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Méthodes de parcours séquentiel d'un tableau</h2>\n<h3 id=\"avec-les-indices\" style=\"position:relative;\"><a href=\"#avec-les-indices\" aria-label=\"avec les indices permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>avec les indices</h3>\n<p>On peut parcourir le tableau en utilisant les indices, pour cela on utise la fonction range qui génére des entiers successifs jusqu'à une limite supérieure ici la longueur totale de la liste. </p>\n<hr>\n<div class=\"card text-white bg-gradient-dark\">\n<div class=\"card-header\"><small class=\"text-muted\">Entrée</small></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">L <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">69</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"indice: \"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> <span class=\"token string\">\"valeur: \"</span><span class=\"token punctuation\">,</span> L<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n</div>\n<div class=\"card text-white bg-gradient-light stream-output\">\n<div class=\"card-header\"><small class=\"text-muted\">Sortie</small></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">indice:  0 valeur:  12\nindice:  1 valeur:  24\nindice:  2 valeur:  32\nindice:  3 valeur:  69\nindice:  4 valeur:  45\nindice:  5 valeur:  -12</code></pre></div>\n</div>\n<hr>\n<h3 id=\"avec-le-mot-clé-in\" style=\"position:relative;\"><a href=\"#avec-le-mot-cl%C3%A9-in\" aria-label=\"avec le mot clé in permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>avec le mot-clé <code class=\"language-text\">in</code></h3>\n<p>Python met à disposition le mot-clé <code class=\"language-text\">in</code> pour réaliser aisément des itérations sur les listes.</p>\n<hr>\n<div class=\"card text-white bg-gradient-dark\">\n<div class=\"card-header\"><small class=\"text-muted\">Entrée</small></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> e <span class=\"token keyword\">in</span> L<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"élément: \"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span></code></pre></div>\n</div>\n<div class=\"card text-white bg-gradient-light stream-output\">\n<div class=\"card-header\"><small class=\"text-muted\">Sortie</small></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">élément:  12\nélément:  24\nélément:  32\nélément:  69\nélément:  45\nélément:  -12</code></pre></div>\n</div>\n<hr>\n<h2 id=\"recherche-dun-extrémum\" style=\"position:relative;\"><a href=\"#recherche-dun-extr%C3%A9mum\" aria-label=\"recherche dun extrémum permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recherche d'un extrémum</h2>\n<p>On initialise la valeur au premier élement du tableau puis on parcours le tableau pour vérifier s'il existe un élément soit plus petit soit plus grand.</p>\n<h3 id=\"recherche-du-maximum\" style=\"position:relative;\"><a href=\"#recherche-du-maximum\" aria-label=\"recherche du maximum permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recherche du maximum</h3>\n<hr>\n<div class=\"card text-white bg-gradient-dark\">\n<div class=\"card-header\"><small class=\"text-muted\">Entrée</small></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">maximum <span class=\"token operator\">=</span> L<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> e <span class=\"token keyword\">in</span> L<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> e <span class=\"token operator\">></span> maximum<span class=\"token punctuation\">:</span>\n        maximum <span class=\"token operator\">=</span> e\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Le maximum est: \"</span><span class=\"token punctuation\">,</span> maximum<span class=\"token punctuation\">)</span></code></pre></div>\n</div>\n<div class=\"card text-white bg-gradient-light stream-output\">\n<div class=\"card-header\"><small class=\"text-muted\">Sortie</small></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Le maximum est:  69</code></pre></div>\n</div>\n<hr>\n<h3 id=\"recherche-du-minimum\" style=\"position:relative;\"><a href=\"#recherche-du-minimum\" aria-label=\"recherche du minimum permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recherche du minimum</h3>\n<hr>\n<div class=\"card text-white bg-gradient-dark\">\n<div class=\"card-header\"><small class=\"text-muted\">Entrée</small></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">minimum <span class=\"token operator\">=</span> L<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> e <span class=\"token keyword\">in</span> L<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> e <span class=\"token operator\">&lt;</span> minimum<span class=\"token punctuation\">:</span>\n        minimum <span class=\"token operator\">=</span> e\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Le minimum est: \"</span><span class=\"token punctuation\">,</span> minimum<span class=\"token punctuation\">)</span></code></pre></div>\n</div>\n<div class=\"card text-white bg-gradient-light stream-output\">\n<div class=\"card-header\"><small class=\"text-muted\">Sortie</small></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Le minimum est:  -12</code></pre></div>\n</div>\n<hr>\n<h2 id=\"calculer-la-moyenne-dun-tableau\" style=\"position:relative;\"><a href=\"#calculer-la-moyenne-dun-tableau\" aria-label=\"calculer la moyenne dun tableau permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Calculer la moyenne d'un tableau</h2>\n<p>On initialise une valeur accumulatrice à 0, puis on additionne tous les éléments du tableau. Enfin on divise la somme des éléments par le nombre d'éléments du tableau.</p>\n<hr>\n<div class=\"card text-white bg-gradient-dark\">\n<div class=\"card-header\"><small class=\"text-muted\">Entrée</small></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">somme <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">for</span> e <span class=\"token keyword\">in</span> L<span class=\"token punctuation\">:</span>\n    somme <span class=\"token operator\">=</span> somme <span class=\"token operator\">+</span> e\nmoyenne <span class=\"token operator\">=</span> somme <span class=\"token operator\">/</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"La moyenne est: \"</span><span class=\"token punctuation\">,</span> moyenne<span class=\"token punctuation\">)</span></code></pre></div>\n</div>\n<div class=\"card text-white bg-gradient-light stream-output\">\n<div class=\"card-header\"><small class=\"text-muted\">Sortie</small></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">La moyenne est:  28.333333333333332</code></pre></div>\n</div>\n<hr>\n<h2 id=\"la-recherche-en-table\" style=\"position:relative;\"><a href=\"#la-recherche-en-table\" aria-label=\"la recherche en table permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>La recherche en table</h2>\n<p>Nous allons voir comment chercher une valeur dans un tableau par une méthode de parcours du tableau. Cet algorithme naïf est trsè couteux, et on verra par la suite d'autres algoritmes beaucoup plus efficaces pour rechercher un élément.</p>\n<h3 id=\"commencons-par-créer-une-liste-déléments\" style=\"position:relative;\"><a href=\"#commencons-par-cr%C3%A9er-une-liste-d%C3%A9l%C3%A9ments\" aria-label=\"commencons par créer une liste déléments permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Commencons par créer une liste d'éléments</h3>\n<p>Pour cela nous allons écrire une fonction pour créer facilement des  listes de mots.</p>\n<hr>\n<div class=\"card text-white bg-gradient-dark\">\n<div class=\"card-header\"><small class=\"text-muted\">Entrée</small></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> random\n<span class=\"token keyword\">import</span> string\n\nlettres <span class=\"token operator\">=</span> string<span class=\"token punctuation\">.</span>ascii_lowercase\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">create_liste</span><span class=\"token punctuation\">(</span>N<span class=\"token punctuation\">,</span> l<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"Renvoie une liste de N mots ayant l lettres\"\"\"</span>\n    L <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token comment\"># on rend le générateur prédictible en imposant une graine fixe</span>\n    random<span class=\"token punctuation\">.</span>seed<span class=\"token punctuation\">(</span><span class=\"token number\">1789</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        mot <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>random<span class=\"token punctuation\">.</span>choice<span class=\"token punctuation\">(</span>lettres<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        L<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>mot<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> L\nmots <span class=\"token operator\">=</span> create_liste<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>mots<span class=\"token punctuation\">)</span></code></pre></div>\n</div>\n<div class=\"card text-white bg-gradient-light stream-output\">\n<div class=\"card-header\"><small class=\"text-muted\">Sortie</small></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[&#39;xwt&#39;, &#39;bup&#39;, &#39;bou&#39;, &#39;xbd&#39;, &#39;upd&#39;, &#39;fuz&#39;, &#39;tfb&#39;, &#39;yht&#39;, &#39;ryd&#39;, &#39;twn&#39;]</code></pre></div>\n</div>\n<hr>\n<h3 id=\"algorithme-de-recherche-par-parcours-séquentiel-du-tableau\" style=\"position:relative;\"><a href=\"#algorithme-de-recherche-par-parcours-s%C3%A9quentiel-du-tableau\" aria-label=\"algorithme de recherche par parcours séquentiel du tableau permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Algorithme de recherche par parcours séquentiel du tableau</h3>\n<p>Pour trouver un élément la méthode la plus simple consisterait à parcourir l'ensemble du tableau et de s'arrêter lorsqu'on trouve l'élément.</p>\n<p>On peut par exemple écrire cet algorithme avec une boucle <code class=\"language-text\">while</code>.</p>\n<hr>\n<div class=\"card text-white bg-gradient-dark\">\n<div class=\"card-header\"><small class=\"text-muted\">Entrée</small></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">cherché <span class=\"token operator\">=</span> <span class=\"token string\">'fuz'</span>\ni <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">while</span> i <span class=\"token operator\">&lt;</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>mots<span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> mots<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> cherché<span class=\"token punctuation\">:</span>\n    i <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n    \n<span class=\"token keyword\">if</span> i <span class=\"token operator\">&lt;</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>mots<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Trouvé:\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Non trouvé\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n</div>\n<div class=\"card text-white bg-gradient-light stream-output\">\n<div class=\"card-header\"><small class=\"text-muted\">Sortie</small></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Trouvé: 5</code></pre></div>\n</div>\n<hr>\n<hr>\n<div class=\"card text-white bg-gradient-dark\">\n<div class=\"card-header\"><small class=\"text-muted\">Entrée</small></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">cherché <span class=\"token operator\">=</span> <span class=\"token string\">'ful'</span>\ni <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">while</span> i <span class=\"token operator\">&lt;</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>mots<span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> mots<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> cherché<span class=\"token punctuation\">:</span>\n    i <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">if</span> i <span class=\"token operator\">&lt;</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>mots<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Trouvé:\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Non trouvé\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n</div>\n<div class=\"card text-white bg-gradient-light stream-output\">\n<div class=\"card-header\"><small class=\"text-muted\">Sortie</small></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Non trouvé</code></pre></div>\n</div>\n<hr>\n<h3 id=\"coût-de-lalgorithme-notion-de-complexité\" style=\"position:relative;\"><a href=\"#co%C3%BBt-de-lalgorithme-notion-de-complexit%C3%A9\" aria-label=\"coût de lalgorithme notion de complexité permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Coût de l'algorithme: notion de complexité</h3>\n<p>Cette méthode a l'avantage d'ếtre simple, et fonctionne cependant si le tableau est long l'algorithme devient très long. Il faut dans le pire des cas(si l'élément cherché est à la fin ou n'est pas trouvé) parcourir toute la liste.</p>\n<p>On dit que le coût de l'algorithme est linéaire ou encore que c'est un algorithme de complexité n, n étant la taille des données. En effet, l'algorithme effectue n tours de boucles pour trouver la solution dans le pire des cas.</p>\n<h3 id=\"mesure-du-temps-de-référencebenchmark\" style=\"position:relative;\"><a href=\"#mesure-du-temps-de-r%C3%A9f%C3%A9rencebenchmark\" aria-label=\"mesure du temps de référencebenchmark permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mesure du temps de référence(benchmark)</h3>\n<p>Mesurons le temps pris par cet algorithme sur une liste de 10 millions d'éléments grâce à la fonction magique <code class=\"language-text\">%timeit</code>.</p>\n<p><em>Remarque: on utilise des mots de 5 caractères ce qui permet d'obtenir <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn><msup><mn>6</mn><mn>5</mn></msup></mrow><annotation encoding=\"application/x-tex\">26^5</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\">2</span><span class=\"mord\"><span class=\"mord\">6</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">5</span></span></span></span></span></span></span></span></span></span></span> mots différents(bien que le générateur puisse créer des doublons dans la liste).</em></p>\n<hr>\n<div class=\"card text-white bg-gradient-dark\">\n<div class=\"card-header\"><small class=\"text-muted\">Entrée</small></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">mots <span class=\"token operator\">=</span> create_liste<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">1E7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></code></pre></div>\n</div>\n<hr>\n<div class=\"card text-white bg-gradient-dark\">\n<div class=\"card-header\"><small class=\"text-muted\">Entrée</small></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">%</span><span class=\"token operator\">%</span>timeit\ncherché <span class=\"token operator\">=</span> <span class=\"token string\">'abcde'</span>\ni <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">while</span> i <span class=\"token operator\">&lt;</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>mots<span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> mots<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> cherché<span class=\"token punctuation\">:</span>\n    i <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">if</span> i <span class=\"token operator\">&lt;</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>mots<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Trouvé:\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Non trouvé\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n</div>\n<div class=\"card text-white bg-gradient-light stream-output\">\n<div class=\"card-header\"><small class=\"text-muted\">Sortie</small></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Trouvé: 5929792\nTrouvé: 5929792\nTrouvé: 5929792\nTrouvé: 5929792\nTrouvé: 5929792\nTrouvé: 5929792\nTrouvé: 5929792\nTrouvé: 5929792\n590 ms ± 752 µs per loop (mean ± std. dev. of 7 runs, 1 loop each)</code></pre></div>\n</div>\n<hr>\n<p>On voit qu'en moyenne, l'algorithme a pris environ 600ms pour effectuer cette recherche. On comparera ce temps au temps mis par un algorithme de recherche beaucoup plus efficace dans un chapitre ultérieur: <strong>la recherche dichotomique</strong>.</p>","tableOfContents":"<ul>\n<li>\n<p><a href=\"/2019-2020/1g/nsi/8-algorithmique/1-parcours-sequentiel-dun-tableau/#m%C3%A9thodes-de-parcours-s%C3%A9quentiel-dun-tableau\">Méthodes de parcours séquentiel d'un tableau</a></p>\n<ul>\n<li><a href=\"/2019-2020/1g/nsi/8-algorithmique/1-parcours-sequentiel-dun-tableau/#avec-les-indices\">avec les indices</a></li>\n<li><a href=\"/2019-2020/1g/nsi/8-algorithmique/1-parcours-sequentiel-dun-tableau/#avec-le-mot-cl%C3%A9-in\">avec le mot-clé <code class=\"language-text\">in</code></a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/2019-2020/1g/nsi/8-algorithmique/1-parcours-sequentiel-dun-tableau/#recherche-dun-extr%C3%A9mum\">Recherche d'un extrémum</a></p>\n<ul>\n<li><a href=\"/2019-2020/1g/nsi/8-algorithmique/1-parcours-sequentiel-dun-tableau/#recherche-du-maximum\">Recherche du maximum</a></li>\n<li><a href=\"/2019-2020/1g/nsi/8-algorithmique/1-parcours-sequentiel-dun-tableau/#recherche-du-minimum\">Recherche du minimum</a></li>\n</ul>\n</li>\n<li><a href=\"/2019-2020/1g/nsi/8-algorithmique/1-parcours-sequentiel-dun-tableau/#calculer-la-moyenne-dun-tableau\">Calculer la moyenne d'un tableau</a></li>\n<li>\n<p><a href=\"/2019-2020/1g/nsi/8-algorithmique/1-parcours-sequentiel-dun-tableau/#la-recherche-en-table\">La recherche en table</a></p>\n<ul>\n<li><a href=\"/2019-2020/1g/nsi/8-algorithmique/1-parcours-sequentiel-dun-tableau/#commencons-par-cr%C3%A9er-une-liste-d%C3%A9l%C3%A9ments\">Commencons par créer une liste d'éléments</a></li>\n<li><a href=\"/2019-2020/1g/nsi/8-algorithmique/1-parcours-sequentiel-dun-tableau/#algorithme-de-recherche-par-parcours-s%C3%A9quentiel-du-tableau\">Algorithme de recherche par parcours séquentiel du tableau</a></li>\n<li><a href=\"/2019-2020/1g/nsi/8-algorithmique/1-parcours-sequentiel-dun-tableau/#co%C3%BBt-de-lalgorithme-notion-de-complexit%C3%A9\">Coût de l'algorithme: notion de complexité</a></li>\n<li><a href=\"/2019-2020/1g/nsi/8-algorithmique/1-parcours-sequentiel-dun-tableau/#mesure-du-temps-de-r%C3%A9f%C3%A9rencebenchmark\">Mesure du temps de référence(benchmark)</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"tags":["Python","algorithmique","algorithme de force brute"]},"fields":{"classe":"1g","chapter":"Parcours séquentiel d'un tableau","matter":"nsi","nChapter":"1","part":"Algorithmique","nPart":"8"}}},"pageContext":{"slug":"1g/nsi/8-algorithmique/1-parcours-sequentiel-dun-tableau","chapter":"Parcours séquentiel d'un tableau"}}}