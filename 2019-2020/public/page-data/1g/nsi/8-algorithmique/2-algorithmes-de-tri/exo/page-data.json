{"componentChunkName":"component---src-templates-exo-mdx-js","path":"/1g/nsi/8-algorithmique/2-algorithmes-de-tri/exo","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"ex-1\"\n  }, \"Tri par s\\xE9lection\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Effectuer \\xE0 la main un tri par s\\xE9lection des listes suivantes en pr\\xE9cisant l\\u2019\\xE9tat de la liste \\xE0 chaque tour de boucle:\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[28, 2, 34, 12, 16]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[1, 3, 7, 9, 16]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[51, 12, 6, 5, 3]\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Combien de tours de boucles a-t-il fallu dans chaque cas?\"))), mdx(\"ol\", {\n    \"start\": 2\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"On souhaite ins\\xE9rer dans une liste \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"tab\"), \" d\\xE9j\\xE0 tri\\xE9 un nouvel \\xE9l\\xE9ment \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"e\"), \" de sorte que la nouvelle liste soit \\xE9galement tri\\xE9e.\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Proposer un algorithme qui d\\xE9termine la position \\xE0 laquelle il faut l\\u2019ins\\xE9rer.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Dans quel cas cette op\\xE9ration demandera beaucoup de temps?\")))), mdx(\"h2\", {\n    \"id\": \"ex-2\"\n  }, \"Un autre algorithme de tri: le tri \\xE0 bulles\"), mdx(\"p\", null, \"L\\u2019algorithme de tri \\xE0 bulles consiste \\xE0 trier la liste en n\\u2019autorisant qu\\u2019\\xE0 intervertir deux \\xE9l\\xE9ments cons\\xE9cutifs de la liste. On peut le d\\xE9crire comme ceci:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-text\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"1. Chercher deux \\xE9l\\xE9ments cons\\xE9cutifs dans le d\\xE9sordre.\\n2. Si trouv\\xE9s, les intervertir et recommencer\\n3. Sinon s'arr\\xEAter.\"))), mdx(\"p\", null, \"On peut d\\xE9montrer que cet algorithme permet de trier n\\u2019importe quelle liste;\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Effectuer \\xE0 la main un tri \\xE0 bulles des listes suivantes en pr\\xE9cisant l\\u2019\\xE9tat de la liste \\xE0 chaque tour de boucle:\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[28, 2, 34, 12, 16]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[1, 3, 7, 9, 16]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[51, 12, 6, 5, 3]\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Combien de tours de boucles a-t-il fallu dans chaque cas? Comparer ces r\\xE9sultats avec les r\\xE9sultats obtenus pour le tri par s\\xE9lection.\"))), mdx(\"h2\", {\n    \"id\": \"ex-3\"\n  }, \"Tri par insertion\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Effectuer \\xE0 la main un tri par insertion des listes suivantes en pr\\xE9cisant l\\u2019\\xE9tat de la liste \\xE0 chaque tour de boucle:\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[28, 2, 34, 12, 16]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[1, 3, 7, 9, 16]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[51, 12, 6, 5, 3]\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Combien de tours de boucles a-t-il fallu dans chaque cas? Commenter.\"))));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"classe":"1g","chapter":"Algorithmes de tri","matter":"nsi","nChapter":"2","part":"Algorithmique","nPart":"8","type":"exo"}}},"pageContext":{"slug":"1g/nsi/8-algorithmique/2-algorithmes-de-tri/exo"}}}