{"version":3,"sources":["webpack:///./src/pages/courses/1g/nsi/2-Représentation des données : types et valeurs de base/3-Les booléens/exo.mdx"],"names":["_frontmatter","layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"mdAKO,IAAMA,EAAe,GAOtBC,EAAc,CAClBD,gBAGa,SAASE,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,cALS,UAKT,KAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,mBAAQ,CACN,GAAM,QADR,mCAGA,wBACE,oBAAIC,WAAW,MAAf,kEAEF,wBACE,oBAAIA,WAAW,MAAf,YAAiC,wBAAMA,WAAW,MAAS,CACvD,UAAa,kBADgB,4BAGjC,oBAAIA,WAAW,MAAf,WAAgC,wBAAMA,WAAW,MAAS,CACtD,UAAa,kBADe,2BAGhC,oBAAIA,WAAW,MAAf,WAAgC,wBAAMA,WAAW,MAAS,CACtD,UAAa,kBADe,WAAhC,4DAIF,mBAAQ,CACN,MAAS,GAET,oBAAIA,WAAW,MAAf,wCAEF,wBACE,oBAAIA,WAAW,MAAf,WACA,oBAAIA,WAAW,MAAf,cACA,oBAAIA,WAAW,MAAf,oBACA,oBAAIA,WAAW,MAAf,SACA,oBAAIA,WAAW,MAAf,cACA,oBAAIA,WAAW,MAAf,WACA,oBAAIA,WAAW,MAAf,YACA,oBAAIA,WAAW,MAAf,aAEF,mBAAQ,CACN,GAAM,QADR,4BAGA,uBAAG,wBAAQA,WAAW,KAAnB,iBAAH,8FACA,wBACE,oBAAIA,WAAW,MAAf,+BAEF,wBACE,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAd,6HAGF,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAd,gEAGJ,mBAAQ,CACN,GAAM,QADR,4CAGA,wBACE,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAd,mGAEF,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAd,iDAAqE,wBAAMA,WAAW,KAAQ,CAC1F,UAAa,kBADoD,OAArE,yNAOJ,uBAAG,qBAAGA,WAAW,KAAQ,CACrB,KAAQ,iDADT,wDAGH,mBAAQ,CACN,GAAM,QADR,mDAGA,8EACA,wBACE,oBAAIA,WAAW,MAAf,8BACA,oBAAIA,WAAW,MAAf,mBACA,oBAAIA,WAAW,MAAf,2BACA,oBAAIA,WAAW,MAAf,0CACA,oBAAIA,WAAW,MAAf,mCAMNJ,EAAWK,gBAAiB","file":"component---src-pages-courses-1-g-nsi-2-representation-des-donnees-types-et-valeurs-de-base-3-les-booleens-exo-mdx-fa95f743f65a3fdc19cb.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2 {...{\n      \"id\": \"ex-1\"\n    }}>{`Construire des tables de vérité`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`Produisez les tables de vérité pour les opérations suivantes:`}</li>\n    </ol>\n    <ul>\n      <li parentName=\"ul\">{`$NAND$ : `}<code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`P NAND Q = NON (P ET Q)`}</code></li>\n      <li parentName=\"ul\">{`$NOR$ : `}<code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`P NOR Q = NON (P OU Q)`}</code></li>\n      <li parentName=\"ul\">{`$XOR$ : `}<code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`P XOR Q`}</code>{` est vrai si et UNIQUEMENT si l’un des P ou Q est vrai.`}</li>\n    </ul>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Produire des tables de vérité pour:`}</li>\n    </ol>\n    <ul>\n      <li parentName=\"ul\">{`$P⋅Q⋅R$`}</li>\n      <li parentName=\"ul\">{`$P’⋅Q’⋅R’$`}</li>\n      <li parentName=\"ul\">{`$P⋅Q⋅R + P⋅Q’⋅R$`}</li>\n      <li parentName=\"ul\">{`$P⋅R$`}</li>\n      <li parentName=\"ul\">{`$(P + Q)‘$`}</li>\n      <li parentName=\"ul\">{`$P’⋅Q’$`}</li>\n      <li parentName=\"ul\">{`$(P⋅Q)‘$`}</li>\n      <li parentName=\"ul\">{`$P’+ Q’$`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"ex-2\"\n    }}>{`Expressions équivalentes`}</h2>\n    <p><strong parentName=\"p\">{`Savoir-faire:`}</strong>{` Utiliser une table de vérité pour montrer que deux expressions logiques sont équivalentes`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Montrer que $P+(P’⋅Q)=P+Q$`}</li>\n    </ul>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Utiliser une table de vérité pour démontrer la propriété d’absorption de l’algèbre de Boole:\n$P+P⋅Q=P⋅1+P⋅Q=P⋅(1+Q)=P$.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Montrer que $P + Q⋅R$ est équivalent à $(P + Q) ⋅ (P + R)$`}</p>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"ex-3\"\n    }}>{`Simplifications d’expressions booléennes`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Simplifier l’expression $(P+Q)\\\\cdot(P+Q’)$. vérifier votre résultat avec une table de vérité.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`A partir de la table de vérité de la fonction `}<code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`XOR`}</code>{`, déterminer une expression booléenne à base\nd’opérateurs élémentaires. Pour cela commencer par remarquer que  $0\\\\ xor\\\\ Q\\\\ =\\\\ Q$ et $1\\\\ xor\\\\ Q\\\\\n=\\\\ Q’$. Vérifier votre résultat avec une table de vérité.`}</p>\n      </li>\n    </ul>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"http://info.blaisepascal.fr/nsi-les-booleens\"\n      }}>{`Source l’Informatique c’est Fantastique CC-B6-SA-NC`}</a></p>\n    <h2 {...{\n      \"id\": \"ex-4\"\n    }}>{`Recherche d’expressions équivalentes( Plus dur)`}</h2>\n    <p>{`Exprimer sous forme simplifiée de somme de produit:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`$P⋅Q’⋅R ’+ P⋅Q’⋅R + P⋅Q⋅R$`}</li>\n      <li parentName=\"ul\">{`$P⋅Q ⋅ (R + S)$`}</li>\n      <li parentName=\"ul\">{`$(P + Q) ⋅ (R + S + T)$`}</li>\n      <li parentName=\"ul\">{`$P’⋅R ⋅(P’⋅Q⋅S)’+ P’⋅Q⋅R’⋅S’ + P⋅Q’⋅R$`}</li>\n      <li parentName=\"ul\">{`$(P ’+ Q) ⋅ (P + Q + S) ⋅ S’$`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}