(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{YqBt:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return r})),a.d(t,"default",(function(){return m}));a("E5k/"),a("rzGZ"),a("Dq+y"),a("8npG"),a("Ggvi"),a("q1tI");var l=a("7ljp");function n(){return(n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var l in a)Object.prototype.hasOwnProperty.call(a,l)&&(e[l]=a[l])}return e}).apply(this,arguments)}var r={},i={_frontmatter:r};function m(e){var t=e.components,a=function(e,t){if(null==e)return{};var a,l,n={},r=Object.keys(e);for(l=0;l<r.length;l++)a=r[l],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,["components"]);return Object(l.mdx)("wrapper",n({},i,a,{components:t,mdxType:"MDXLayout"}),Object(l.mdx)("h2",{id:"ex-1"},"Tri par sélection"),Object(l.mdx)("ol",null,Object(l.mdx)("li",{parentName:"ol"},Object(l.mdx)("p",{parentName:"li"},"Effectuer à la main un tri par sélection des listes suivantes en précisant l’état de la liste à chaque tour de boucle:"),Object(l.mdx)("ul",{parentName:"li"},Object(l.mdx)("li",{parentName:"ul"},"[28, 2, 34, 12, 16]"),Object(l.mdx)("li",{parentName:"ul"},"[1, 3, 7, 9, 16]"),Object(l.mdx)("li",{parentName:"ul"},"[51, 12, 6, 5, 3]")),Object(l.mdx)("p",{parentName:"li"},"Combien de tours de boucles a-t-il fallu dans chaque cas?"))),Object(l.mdx)("ol",{start:2},Object(l.mdx)("li",{parentName:"ol"},Object(l.mdx)("p",{parentName:"li"},"On souhaite insérer dans une liste ",Object(l.mdx)("code",n({parentName:"p"},{className:"language-text"}),"tab")," déjà trié un nouvel élément ",Object(l.mdx)("code",n({parentName:"p"},{className:"language-text"}),"e")," de sorte que la nouvelle liste soit également triée."),Object(l.mdx)("ul",{parentName:"li"},Object(l.mdx)("li",{parentName:"ul"},"Proposer un algorithme qui détermine la position à laquelle il faut l’insérer."),Object(l.mdx)("li",{parentName:"ul"},"Dans quel cas cette opération demandera beaucoup de temps?")))),Object(l.mdx)("h2",{id:"ex-2"},"Un autre algorithme de tri: le tri à bulles"),Object(l.mdx)("p",null,"L’algorithme de tri à bulles consiste à trier la liste en n’autorisant qu’à intervertir deux éléments consécutifs de la liste. On peut le décrire comme ceci:"),Object(l.mdx)("div",{className:"gatsby-highlight","data-language":"text"},Object(l.mdx)("pre",n({parentName:"div"},{className:"language-text"}),Object(l.mdx)("code",n({parentName:"pre"},{className:"language-text"}),"1. Chercher deux éléments consécutifs dans le désordre.\n2. Si trouvés, les intervertir et recommencer\n3. Sinon s'arrêter."))),Object(l.mdx)("p",null,"On peut démontrer que cet algorithme permet de trier n’importe quelle liste;"),Object(l.mdx)("ol",null,Object(l.mdx)("li",{parentName:"ol"},Object(l.mdx)("p",{parentName:"li"},"Effectuer à la main un tri à bulles des listes suivantes en précisant l’état de la liste à chaque tour de boucle:"),Object(l.mdx)("ul",{parentName:"li"},Object(l.mdx)("li",{parentName:"ul"},"[28, 2, 34, 12, 16]"),Object(l.mdx)("li",{parentName:"ul"},"[1, 3, 7, 9, 16]"),Object(l.mdx)("li",{parentName:"ul"},"[51, 12, 6, 5, 3]"))),Object(l.mdx)("li",{parentName:"ol"},Object(l.mdx)("p",{parentName:"li"},"Combien de tours de boucles a-t-il fallu dans chaque cas? Comparer ces résultats avec les résultats obtenus pour le tri par sélection."))),Object(l.mdx)("h2",{id:"ex-3"},"Tri par insertion"),Object(l.mdx)("ol",null,Object(l.mdx)("li",{parentName:"ol"},Object(l.mdx)("p",{parentName:"li"},"Effectuer à la main un tri par insertion des listes suivantes en précisant l’état de la liste à chaque tour de boucle:"),Object(l.mdx)("ul",{parentName:"li"},Object(l.mdx)("li",{parentName:"ul"},"[28, 2, 34, 12, 16]"),Object(l.mdx)("li",{parentName:"ul"},"[1, 3, 7, 9, 16]"),Object(l.mdx)("li",{parentName:"ul"},"[51, 12, 6, 5, 3]"))),Object(l.mdx)("li",{parentName:"ol"},Object(l.mdx)("p",{parentName:"li"},"Combien de tours de boucles a-t-il fallu dans chaque cas? Commenter."))))}m.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-courses-1-g-nsi-8-algorithmique-2-algorithmes-de-tri-exo-mdx-2820c24008ce7a2947ea.js.map