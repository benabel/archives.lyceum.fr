{"version":3,"sources":["webpack:///./src/pages/courses/1g/nsi/2-Représentation des données : types et valeurs de base/5-Représentation approximative des nombres réels/exo.mdx"],"names":["_frontmatter","layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"mdAKO,IAAMA,EAAe,CAC1B,KAAQ,CAAC,MAAO,cAQZC,EAAc,CAClBD,gBAGa,SAASE,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,cALS,UAKT,KAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,oGACA,mDAGA,wBACE,oBAAIC,WAAW,MAAf,wDAA6E,oBAAIA,WAAW,MACxF,oBAAIA,WAAW,MAAf,oBACA,oBAAIA,WAAW,MAAf,uBAGN,wBACE,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAd,wCAA4D,oBAAIA,WAAW,KAAf,yBAA5D,qEAEF,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAd,qLAC4E,oBAAIA,WAAW,KAAf,aAD5E,gKAMJ,mBAAQ,CACN,GAAM,QADR,yBAGA,qGACA,wBACE,oBAAIA,WAAW,MAAf,mBACA,oBAAIA,WAAW,MAAf,sBACA,oBAAIA,WAAW,MAAf,wBAEF,wBACE,oBAAIA,WAAW,MAAf,6EAEF,wBACE,oBAAIA,WAAW,MAAK,wBAAMA,WAAW,MAAS,CAC1C,UAAa,kBADG,cAGpB,oBAAIA,WAAW,MAAK,wBAAMA,WAAW,MAAS,CAC1C,UAAa,kBADG,eAItB,mBAAQ,CACN,MAAS,GAET,oBAAIA,WAAW,MAAf,wEAEF,wBACE,oBAAIA,WAAW,MAAf,4CACA,oBAAIA,WAAW,MAAf,cAEF,mBAAQ,CACN,MAAS,GAET,oBAAIA,WAAW,MAAf,iCAEF,wBACE,oBAAIA,WAAW,MAAf,uEACA,oBAAIA,WAAW,MAAf,0DACA,oBAAIA,WAAW,MAAf,2FAEF,mBAAQ,CACN,GAAM,QADR,0CAGA,oGACA,wBACE,oBAAIA,WAAW,MAAf,mBACA,oBAAIA,WAAW,MAAf,qCACA,oBAAIA,WAAW,MAAf,yBAEF,wBACE,oBAAIA,WAAW,MAAf,6EAEF,wBACE,oBAAIA,WAAW,MAAK,wBAAMA,WAAW,MAAS,CAC1C,UAAa,kBADG,uEAGpB,oBAAIA,WAAW,MAAK,wBAAMA,WAAW,MAAS,CAC1C,UAAa,kBADG,wEAItB,mBAAQ,CACN,MAAS,GAET,oBAAIA,WAAW,MAAf,wEAEF,wBACE,oBAAIA,WAAW,MAAf,2DACA,oBAAIA,WAAW,MAAf,WAEF,mBAAQ,CACN,MAAS,GAET,oBAAIA,WAAW,MAAf,kCAEF,wBACE,oBAAIA,WAAW,MAAf,uEACA,oBAAIA,WAAW,MAAf,0DACA,oBAAIA,WAAW,MAAf,2FAEF,mBAAQ,CACN,GAAM,QADR,uBAGA,6DACA,oBAAS,CACP,UAAa,mBACb,gBAAiB,UAChB,uBAAKA,WAAW,OAAU,CACzB,UAAa,oBACZ,wBAAMA,WAAW,OAAU,CAC1B,UAAa,oBADd,KAEQ,wBAAMA,WAAW,QAAW,CACjC,UAAa,mBADR,KAFR,IAIqB,wBAAMA,WAAW,QAAW,CAC9C,UAAa,iBADK,OAJrB,OAOL,wBAAMA,WAAW,QAAW,CACpB,UAAa,mBADrB,KAPK,MASuB,wBAAMA,WAAW,QAAW,CAChD,UAAa,mBADO,KATvB,IAWqB,wBAAMA,WAAW,QAAW,CAC9C,UAAa,iBADK,OAXrB,KAcP,wBAAMA,WAAW,QAAW,CAClB,UAAa,kBADvB,SAdO,MAgB2B,wBAAMA,WAAW,QAAW,CACpD,UAAa,mBADW,KAhB3B,MAkBuB,wBAAMA,WAAW,QAAW,CAChD,UAAa,mBADO,MAlBvB,IAoBsB,wBAAMA,WAAW,QAAW,CAC/C,UAAa,iBADM,OAEJ,wBAAMA,WAAW,QAAW,CAC3C,UAAa,sBADE,KAtBlB,WAyBD,wBAAMA,WAAW,QAAW,CACxB,UAAa,mBADjB,KAzBC,MA2BuB,wBAAMA,WAAW,QAAW,CAChD,UAAa,mBADO,KA3BvB,IA6BqB,wBAAMA,WAAW,QAAW,CAC9C,UAAa,iBADK,OA7BrB,WAgCD,wBAAMA,WAAW,QAAW,CACxB,UAAa,mBADjB,KAhCC,MAkCuB,wBAAMA,WAAW,QAAW,CAChD,UAAa,mBADO,KAlCvB,IAoCqB,wBAAMA,WAAW,QAAW,CAC9C,UAAa,iBADK,UAG1B,wBACE,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAd,mHAEF,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAd,2DAEF,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAd,yIAA6J,wBAAMA,WAAW,KAAQ,CAClL,UAAa,kBAD4I,KAA7J,kCAIF,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAd,oDAAwE,wBAAMA,WAAW,KAAQ,CAC7F,UAAa,kBADuD,KAAxE,kBAEoC,wBAAMA,WAAW,KAAQ,CACzD,UAAa,kBADmB,KAFpC,SAOJ,8EAA2D,qBAAGA,WAAW,KAAQ,CAC7E,KAAQ,qDAD+C,qDAG3D,mBAAQ,CACN,MAAS,GAET,oBAAIA,WAAW,MAAf,iDAEF,mBAAQ,CACN,GAAM,QADR,uBAGA,6DACA,oBAAS,CACP,UAAa,mBACb,gBAAiB,UAChB,uBAAKA,WAAW,OAAU,CACzB,UAAa,oBACZ,wBAAMA,WAAW,OAAU,CAC1B,UAAa,oBADd,KAEQ,wBAAMA,WAAW,QAAW,CACjC,UAAa,mBADR,KAFR,IAIqB,wBAAMA,WAAW,QAAW,CAC9C,UAAa,iBADK,OAJrB,KAOP,wBAAMA,WAAW,QAAW,CAClB,UAAa,kBADvB,OAPO,SAS4B,wBAAMA,WAAW,QAAW,CACrD,UAAa,kBADY,MAT5B,IAWsB,wBAAMA,WAAW,QAAW,CAC/C,UAAa,kBADM,SAEF,wBAAMA,WAAW,QAAW,CAC7C,UAAa,sBADI,KAEJ,wBAAMA,WAAW,QAAW,CACzC,UAAa,iBADA,KAEA,wBAAMA,WAAW,QAAW,CACzC,UAAa,sBADA,KAEA,wBAAMA,WAAW,QAAW,CACzC,UAAa,iBADA,MAEC,wBAAMA,WAAW,QAAW,CAC1C,UAAa,sBADC,KAED,wBAAMA,WAAW,QAAW,CACzC,UAAa,sBADA,KAvBhB,WA0BD,wBAAMA,WAAW,QAAW,CACxB,UAAa,mBADjB,KA1BC,MA4BuB,wBAAMA,WAAW,QAAW,CAChD,UAAa,mBADO,KA5BvB,IA8BqB,wBAAMA,WAAW,QAAW,CAC9C,UAAa,iBADK,OA9BrB,SAiCH,wBAAMA,WAAW,QAAW,CACtB,UAAa,kBADnB,SAEuB,wBAAMA,WAAW,QAAW,CAC7C,UAAa,sBADI,KAnCpB,IAqCqB,wBAAMA,WAAW,QAAW,CAC9C,UAAa,sBADK,QAG1B,wBACE,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAd,mHAEF,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAd,2DAEF,oBAAIA,WAAW,MACb,mBAAGA,WAAW,MAAd,qFACN,wBAAMA,WAAW,KAAQ,CACf,UAAa,kBADvB,sEADM,OAMJ,+FACA,mBAAQ,CACN,MAAS,GAET,oBAAIA,WAAW,MAAf,kCAEF,kCACA,uBAAG,qBAAGA,WAAW,KAAQ,CACrB,KAAQ,0DADT,gJAOPJ,EAAWK,gBAAiB","file":"component---src-pages-courses-1-g-nsi-2-representation-des-donnees-types-et-valeurs-de-base-5-representation-approximative-des-nombres-reels-exo-mdx-828b24ed274bde3233de.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"tags\": [\"nsi\", \"exercices\"]\n};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`On rappelle que l’encodage des flottants s’effectue de la façon suivante:`}</p>\n    <p>{`$$\ns\\\\ m \\\\cdot 2^n\n$$`}</p>\n    <ul>\n      <li parentName=\"ul\">{`$s$ est le signe représenté par le bit de poids fort:`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`$s=0$: signe $+$`}</li>\n          <li parentName=\"ul\">{`$s=1$: signe $-$`}</li>\n        </ul></li>\n    </ul>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`$n$ est l’exposant représenté par un `}<em parentName=\"p\">{`entier relatif décalé`}</em>{` de $2^{e-1} - 1$ (e représente le nombre de bits de l’exposant)`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`$m$ est la mantisse qui est un nombre binaire à virgule compris entre 1 inclus et 2 exclus. Le\nseul chiffre avant la virgule étant toujours 1, il n’est pas représenté(on le dit `}<em parentName=\"p\">{`implicite`}</em>{`),\net le codage binaire de la mantisse représente donc uniquement les chiffres après la virgule qui\nsont en base 2 des demis, des quarts, des huitièmes…`}</p>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"ex-1\"\n    }}>{`Encodage sur un octet`}</h2>\n    <p>{`On considère des nombres flottants encodés sur un octet avec dans l’ordre:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`1 bit de signe,`}</li>\n      <li parentName=\"ul\">{`3 bits d’exposant,`}</li>\n      <li parentName=\"ul\">{`4 bits de mantisse.`}</li>\n    </ul>\n    <ol>\n      <li parentName=\"ol\">{`Trouver les nombres à virgule représentés par les mots binaires suivants`}</li>\n    </ol>\n    <ul>\n      <li parentName=\"ul\"><code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`0111 1000`}</code></li>\n      <li parentName=\"ul\"><code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`1001 0001`}</code></li>\n    </ul>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Donner les représentations binaires des nombres flottants suivants:`}</li>\n    </ol>\n    <ul>\n      <li parentName=\"ul\">{`$2,5$ (qui est égal à $1,25 \\\\times 2$).`}</li>\n      <li parentName=\"ul\">{`$-1,125$.`}</li>\n    </ul>\n    <ol {...{\n      \"start\": 3\n    }}>\n      <li parentName=\"ol\">{`Avec cet encodage à 8 bits: `}</li>\n    </ol>\n    <ul>\n      <li parentName=\"ul\">{`Quel est le plus grand nombre à virgules que l’on peut représenter?`}</li>\n      <li parentName=\"ul\">{`Quel est le plus petit nombre à virgule, donc négatif?`}</li>\n      <li parentName=\"ul\">{`Quel est le plus petit nombre à virgule strictement positif que l’on peut représenter?`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"ex-2\"\n    }}>{`Encodage double précision: sur 64 bits`}</h2>\n    <p>{`On considère des nombres flottants encodés sur 64 bits avec dans l’ordre:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`1 bit de signe,`}</li>\n      <li parentName=\"ul\">{`11 bits d’exposant (-1022 à 1023)`}</li>\n      <li parentName=\"ul\">{`52 bits de mantisse.`}</li>\n    </ul>\n    <ol>\n      <li parentName=\"ol\">{`Trouver les nombres à virgule représentés par les mots binaires suivants`}</li>\n    </ol>\n    <ul>\n      <li parentName=\"ul\"><code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`1 10001000110 1001001111000011100000000000000000000000000000000000`}</code></li>\n      <li parentName=\"ul\"><code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`0 00100000011 1101001110010101100000000000000000000000000000000000`}</code></li>\n    </ul>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Donner les représentations binaires des nombres flottants suivants:`}</li>\n    </ol>\n    <ul>\n      <li parentName=\"ul\">{`$2^{-1022}$ (qui est égal à $2,225 \\\\times 10^{-308}$).`}</li>\n      <li parentName=\"ul\">{`$7,0$.`}</li>\n    </ul>\n    <ol {...{\n      \"start\": 3\n    }}>\n      <li parentName=\"ol\">{`Avec cet encodage à 64 bits: `}</li>\n    </ol>\n    <ul>\n      <li parentName=\"ul\">{`Quel est le plus grand nombre à virgules que l’on peut représenter?`}</li>\n      <li parentName=\"ul\">{`Quel est le plus petit nombre à virgule, donc négatif?`}</li>\n      <li parentName=\"ul\">{`Quel est le plus petit nombre à virgule strictement positif que l’on peut représenter?`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"ex-3\"\n    }}>{`Exercice Python n°1`}</h2>\n    <p>{`On considère le programme suivant:`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"python\"\n    }}><pre parentName=\"div\" {...{\n        \"className\": \"language-python\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-python\"\n        }}>{`x `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`1.0`}</span>{`\ny `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` x `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`+`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`1.0`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`while`}</span>{` y `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`-`}</span>{` x `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`==`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`1.0`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`:`}</span>{`\n    x `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` x `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`*`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`2.0`}</span>{`\n    y `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` x `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`+`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`1.0`}</span></code></pre></div>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Si l’on calculait sur des nombres rationnels exacts, que se passerait-il lors de l’exécution de ce programme ?`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Écrire ce programme et l’exécuter. Que constate-t-on ?`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Modifier le programme de façon à déterminer au bout de combien d’exécutions du corps de la boucle il s’arrête, ainsi que la valeur de `}<code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`x`}</code>{` à la fin de cette exécution.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Comment est représentée cette dernière valeur de `}<code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`x`}</code>{` ? Et celle de `}<code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`y`}</code>{` ? `}</p>\n      </li>\n    </ol>\n    <p>{`On pourra utiliser un convertisseur en ligne comme: `}<a parentName=\"p\" {...{\n        \"href\": \"http://www.binaryconvert.com/convert_double.html\"\n      }}>{`http://www.binaryconvert.com/convert_double.html`}</a></p>\n    <ol {...{\n      \"start\": 5\n    }}>\n      <li parentName=\"ol\">{`Proposer une explication de ce comportement.`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"ex-4\"\n    }}>{`Exercice Python n°2`}</h2>\n    <p>{`On considère le programme suivant:`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"python\"\n    }}><pre parentName=\"div\" {...{\n        \"className\": \"language-python\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-python\"\n        }}>{`a `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`0.0`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`for`}</span>{` loop `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`in`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token builtin\"\n          }}>{`range`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`0`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span><span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`10`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`:`}</span>{`\n    a `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` a `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`+`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`0.1`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`print`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`a`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span></code></pre></div>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Si l’on calculait sur des nombres rationnels exacts, que se passerait-il lors de l’exécution de ce programme ?`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Écrire ce programme et l’exécuter. Que constate-t-on ?`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Vérifier avec le convertisseur en ligne que la représentation binaire de 0,1 est\n`}<code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`0_01111111011_1001100110011001100110011001100110011001100110011010`}</code>{`.`}</p>\n      </li>\n    </ol>\n    <p>{`Quel nombre décimal cette représentation désigne-t-elle en réalité ?`}</p>\n    <ol {...{\n      \"start\": 4\n    }}>\n      <li parentName=\"ol\">{`Expliquer le résultat obtenu.`}</li>\n    </ol>\n    <h4>{`Source`}</h4>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"http://www.editions-eyrolles.com/Livre/9782212135435/\"\n      }}>{`Informatique et sciences du numérique Spécialité ISN en terminale S - Avec des exercices corrigés et des idées de projets par Gilles Dowek`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}