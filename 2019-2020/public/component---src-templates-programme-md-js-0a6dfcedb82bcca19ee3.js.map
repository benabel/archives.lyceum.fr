{"version":3,"sources":["webpack:///./src/templates/programme-md.js"],"names":["data","location","programme","markdownRemark","description","matterNameFromMatter","fields","matter","classeNameFromClasse","classe","title","meta","name","content","type","classeWikidataURIFromClasse","href","node","flattenFileNode","className","tableOfContents","dangerouslySetInnerHTML","__html","html","query"],"mappings":"4FAAA,+IAee,sBAAyB,IAAtBA,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAChBC,EAAYF,EAAKG,eAEjBC,EAAW,yBAA4BC,YAC3CH,EAAUI,OAAOC,QADF,OAETC,YAAqBN,EAAUI,OAAOG,QAE9C,OACE,gBAAC,IAAD,CAAQR,SAAUA,EAAUD,KAAMA,GAChC,gBAAC,IAAD,CACEU,MAAK,GAAKN,EACVO,KAAM,CACJ,CACEC,KAAK,cACLR,YAAgBA,EAAL,0DAEb,CACEQ,KAAK,WACLC,QAAQ,4BACNX,EAAUI,OAAOC,OADZ,KAEFC,YAAqBN,EAAUI,OAAOG,QAFpC,OAMX,0BAAQK,KAAK,uBAAb,4HAIIZ,EAAUI,OAAOC,OAJrB,KAKOC,YAAqBN,EAAUI,OAAOG,QAL7C,iCAMoBL,EANpB,giBAqBqBI,YAAqBN,EAAUO,QArBpD,2BAsBcM,YAA4Bb,EAAUO,QAtBpD,sCAwBYR,EAASe,KAxBrB,uBA4BF,gBAAC,IAAD,CAAeC,KAAMC,YAAgBhB,KACrC,gBAAC,IAAD,KACE,sBAAIiB,UAAU,aAAd,gBAA2Cd,YACzCH,EAAUI,OAAOC,QADnB,OAEQC,YAAqBN,EAAUI,OAAOG,SAC9C,gBAAC,IAAD,CAAKW,gBAAiBlB,EAAUkB,mBAElC,uBAAKC,wBAAyB,CAAEC,OAAQpB,EAAUqB,UAKjD,IAAMC,EAAK,c","file":"component---src-templates-programme-md-js-0a6dfcedb82bcca19ee3.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport { Jumbotron } from 'reactstrap'\nimport { Helmet } from 'react-helmet'\n\nimport Toc from '../components/toc'\nimport Layout from '../components/layout'\nimport BreadcrumbNav from '../components/breadcrumb-nav'\nimport {\n  flattenFileNode,\n  matterNameFromMatter,\n  classeNameFromClasse,\n  classeWikidataURIFromClasse,\n} from '../helpers'\n\nexport default ({ data, location }) => {\n  const programme = data.markdownRemark\n\n  const description = `programme officiel de ${matterNameFromMatter(\n    programme.fields.matter\n  )} en ${classeNameFromClasse(programme.fields.classe)}`\n\n  return (\n    <Layout location={location} data={data}>\n      <Helmet\n        title={`${description}`}\n        meta={[\n          {\n            name: `description`,\n            description: `${description} proposé par lyceum, un site open-source pour le lycée`,\n          },\n          {\n            name: `keywords`,\n            content: `programme, officiel, BO, ${\n              programme.fields.matter\n            }, ${classeNameFromClasse(programme.fields.classe)},`,\n          },\n        ]}\n      >\n        <script type=\"application/ld+json\">{`\n         {\"@context\": \"http://schema.org/\",\n          \"@type\": \"Programme\",\n          \"name\": \"Programme officiel de ${\n            programme.fields.matter\n          }, ${classeNameFromClasse(programme.fields.classe)}\",\n          \"description\": \"${description}\",\n          \"learningResourceType\": [\n            \"programme\"    ],\n          \"provider\": {\n            \"@type\": \"schema:EducationalOrganization\",\n            \"name\": \"lyceum.fr\"\n          },\n          \"audience\": {\n            \"@type\": \"EducationalAudience\",\n            \"educationalRole\": \"teacher\"\n          },\n          \"educationalAlignment\": {\n            \"@type\": \"AlignmentObject\",\n            \"alignmentType\": \"educationalLevel\",\n            \"educationalFramework\": \"French Grade Levels\",\n            \"targetName\": \"${classeNameFromClasse(programme.classe)}\",\n            \"@id\": \"${classeWikidataURIFromClasse(programme.classe)}\"\n          },\n          \"url\": \"${location.href}\"\n        }\n    `}</script>\n      </Helmet>\n      <BreadcrumbNav node={flattenFileNode(programme)} />\n      <Jumbotron>\n        <h1 className=\"display-1\">{`Programme de ${matterNameFromMatter(\n          programme.fields.matter\n        )} en ${classeNameFromClasse(programme.fields.classe)}`}</h1>\n        <Toc tableOfContents={programme.tableOfContents} />\n      </Jumbotron>\n      <div dangerouslySetInnerHTML={{ __html: programme.html }} />\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query MDProgrammeQuery($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      tableOfContents\n      fields {\n        classe\n        matter\n        slug\n      }\n    }\n  }\n`\n"],"sourceRoot":""}