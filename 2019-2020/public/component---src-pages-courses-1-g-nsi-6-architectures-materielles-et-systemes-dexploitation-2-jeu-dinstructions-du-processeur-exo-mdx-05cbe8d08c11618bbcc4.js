(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{"2Wge":function(e,a,t){"use strict";t.r(a),t.d(a,"_frontmatter",(function(){return r})),t.d(a,"default",(function(){return s}));t("E5k/"),t("rzGZ"),t("Dq+y"),t("8npG"),t("Ggvi"),t("q1tI");var l=t("7ljp");function n(){return(n=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var l in t)Object.prototype.hasOwnProperty.call(t,l)&&(e[l]=t[l])}return e}).apply(this,arguments)}var r={tags:["nsi","exercices"]},m={_frontmatter:r};function s(e){var a=e.components,t=function(e,a){if(null==e)return{};var t,l,n={},r=Object.keys(e);for(l=0;l<r.length;l++)t=r[l],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,["components"]);return Object(l.mdx)("wrapper",n({},m,t,{components:a,mdxType:"MDXLayout"}),Object(l.mdx)("h2",{id:"ex-1"},"Ecrire de l’assembleur sur un simulateur"),Object(l.mdx)("p",null,"La page suivante propose d’écrire quelques programmes en assembleur."),Object(l.mdx)("p",null,Object(l.mdx)("a",n({parentName:"p"},{href:"https://pixees.fr/informatiquelycee/n_site/nsi_prem_sim_cpu.html"}),"https://pixees.fr/informatiquelycee/n_site/nsi_prem_sim_cpu.html")),Object(l.mdx)("p",null,"Elle utilise la simulation de Peter Higginson qui simule le langage assembleur AQA."),Object(l.mdx)("p",null,Object(l.mdx)("a",n({parentName:"p"},{href:"http://www.peterhigginson.co.uk/AQA/"}),"http://www.peterhigginson.co.uk/AQA/")),Object(l.mdx)("h2",{id:"ex-2"},"De python à l’assembleur"),Object(l.mdx)("p",null," Voici un programme Python très simple :"),Object(l.mdx)("div",{className:"gatsby-highlight","data-language":"text"},Object(l.mdx)("pre",n({parentName:"div"},{className:"language-text"}),Object(l.mdx)("code",n({parentName:"pre"},{className:"language-text"}),"x = 4\ny = 8\nif x == 10:\n\ty = 9\nelse :\n\tx=x+1\nz=6"))),Object(l.mdx)("p",null,"et voici maintenant voici son équivalent en assembleur :"),Object(l.mdx)("div",{className:"gatsby-highlight","data-language":"asm"},Object(l.mdx)("pre",n({parentName:"div"},{className:"language-asm"}),Object(l.mdx)("code",n({parentName:"pre"},{className:"language-asm"}),"   MOV R0, #4\n   STR R0,30\n   MOV R0, #8\n   STR R0,75\n   LDR R0,30\n   CMP R0, #10\n   BNE else\n   MOV R0, #9\n   STR R0,75\n   B endif\nelse:\n   LDR R0,30\n   ADD R0, R0, #1\n   STR R0,30\nendif:\n   MOV R0, #6\n   STR R0,23\n   HALT"))),Object(l.mdx)("p",null,"Après avoir analysé très attentivement le programme en assembleur ci-dessus, vous essaierez\nd’établir une correspondance entre les lignes du programme en Python et les lignes du programme en\nassembleur. À quoi sert la ligne “B endif” ? À quoi correspondent les adresses mémoires 23, 75 et\n30 ?"),Object(l.mdx)("p",null,"Source: pixees.fr CC-BY-SA"),Object(l.mdx)("h4",null,"AIDE: L’ensemble d’instructions AQA"),Object(l.mdx)("p",null,"Voici une traduction de la documentation proposée à partir du bouton ",Object(l.mdx)("a",n({parentName:"p"},{href:"http://www.peterhigginson.co.uk/AQA/info.html"}),"INFO")),Object(l.mdx)("p",null,"Les registres sont numérotés de ",Object(l.mdx)("code",n({parentName:"p"},{className:"language-text"}),"R0")," à ",Object(l.mdx)("code",n({parentName:"p"},{className:"language-text"}),"R12"),"."),Object(l.mdx)("p",null,"Les opérations peuvent être effectuées sur deux types de valeurs (notées ",Object(l.mdx)("code",n({parentName:"p"},{className:"language-text"}),"<opérande2>")," dans la suite):"),Object(l.mdx)("ul",null,Object(l.mdx)("li",{parentName:"ul"},"une constante notée ",Object(l.mdx)("code",n({parentName:"li"},{className:"language-text"}),"#nnn"),". Ex: ",Object(l.mdx)("code",n({parentName:"li"},{className:"language-text"}),"#12"),": la valeur décimale 12."),Object(l.mdx)("li",{parentName:"ul"},"le contenu du régistre n ",Object(l.mdx)("code",n({parentName:"li"},{className:"language-text"}),"Rn"),". Ex: ",Object(l.mdx)("code",n({parentName:"li"},{className:"language-text"}),"R1"),": la valeur contenie dans le registre 1.")),Object(l.mdx)("p",null,"On peut ajouter des étiquettes dans le programme (notées ",Object(l.mdx)("code",n({parentName:"p"},{className:"language-text"}),"<label>"),"); il suffit de noter le nom de\nl’étiquette de son choix et de le faire suivre de deux points. "),Object(l.mdx)("p",null,"exemple:"),Object(l.mdx)("p",null,Object(l.mdx)("code",n({parentName:"p"},{className:"language-text"}),"asm test: ")),Object(l.mdx)("p",null,"Toute référence à cette étiquette fera “sauter” le programme à la case mémoire de\nl’étiquette et exécutera donc les instructions qui suivent."),Object(l.mdx)("p",null,"les commentaires commencent par au moins un ",Object(l.mdx)("code",n({parentName:"p"},{className:"language-text"}),"/"),"."),Object(l.mdx)("h5",null,"Affectations"),Object(l.mdx)("ul",null,Object(l.mdx)("li",{parentName:"ul"},Object(l.mdx)("code",n({parentName:"li"},{className:"language-text"}),"LDR Rd, <adresse mémoire>"))),Object(l.mdx)("p",null,"Charge la valeur stockée dans l’emplacement de mémoire spécifié par ",Object(l.mdx)("code",n({parentName:"p"},{className:"language-text"}),"<adresse mémoire>")," dans le\nregistre d."),Object(l.mdx)("ul",null,Object(l.mdx)("li",{parentName:"ul"},Object(l.mdx)("code",n({parentName:"li"},{className:"language-text"}),"STR Rd, <adresse mémoire>"))),Object(l.mdx)("p",null,"Stocke la valeur qui se trouve dans le registre d dans l’emplacement de mémoire spécifié par\n",Object(l.mdx)("code",n({parentName:"p"},{className:"language-text"}),"<adresse mémoire>"),"."),Object(l.mdx)("ul",null,Object(l.mdx)("li",{parentName:"ul"},Object(l.mdx)("code",n({parentName:"li"},{className:"language-text"}),"MOV Rd, <opérande2>"))),Object(l.mdx)("p",null,"Copiez la valeur spécifiée par ",Object(l.mdx)("code",n({parentName:"p"},{className:"language-text"}),"<opérande 2>"),"dans le registre d."),Object(l.mdx)("h5",null,"Opérations"),Object(l.mdx)("ul",null,Object(l.mdx)("li",{parentName:"ul"},Object(l.mdx)("code",n({parentName:"li"},{className:"language-text"}),"ADD Rd, Rn, <opérande2>"))),Object(l.mdx)("p",null,"Ajouter la valeur spécifiée dans ",Object(l.mdx)("code",n({parentName:"p"},{className:"language-text"}),"<opérande 2>"),"à la valeur du registre\nn et stocker le résultat dans le registre d."),Object(l.mdx)("ul",null,Object(l.mdx)("li",{parentName:"ul"},Object(l.mdx)("code",n({parentName:"li"},{className:"language-text"}),"SUB Rd, Rn, <opérande2>"))),Object(l.mdx)("p",null,"Soustrayez la valeur spécifiée par ",Object(l.mdx)("code",n({parentName:"p"},{className:"language-text"}),"<opérande 2>"),"de la valeur du\nregistre n et stockez le résultat dans le registre d."),Object(l.mdx)("h5",null,"Comparaisons"),Object(l.mdx)("ul",null,Object(l.mdx)("li",{parentName:"ul"},Object(l.mdx)("code",n({parentName:"li"},{className:"language-text"}),"CMP Rn, <opérande2>"))),Object(l.mdx)("p",null,"Comparez la valeur stockée dans le registre n avec la valeur spécifiée\npar ",Object(l.mdx)("code",n({parentName:"p"},{className:"language-text"}),"<opérande 2>")),Object(l.mdx)("ul",null,Object(l.mdx)("li",{parentName:"ul"},Object(l.mdx)("code",n({parentName:"li"},{className:"language-text"}),"B <condition> <label>"))),Object(l.mdx)("p",null,"Connectez conditionnellement l’instruction à la position ",Object(l.mdx)("code",n({parentName:"p"},{className:"language-text"}),"<label>")," dans\nle programme si la dernière comparaison a répondu aux critères spécifiés par la ",Object(l.mdx)("code",n({parentName:"p"},{className:"language-text"}),"<condition>"),". Les\nvaleurs possibles pour ",Object(l.mdx)("code",n({parentName:"p"},{className:"language-text"}),"<condition>")," et leur signification sont les suivantes:"),Object(l.mdx)("ul",null,Object(l.mdx)("li",{parentName:"ul"},Object(l.mdx)("code",n({parentName:"li"},{className:"language-text"}),"EQ"),": égal à,"),Object(l.mdx)("li",{parentName:"ul"},Object(l.mdx)("code",n({parentName:"li"},{className:"language-text"}),"NE"),": différent de,"),Object(l.mdx)("li",{parentName:"ul"},Object(l.mdx)("code",n({parentName:"li"},{className:"language-text"}),"GT"),": supérieur à,"),Object(l.mdx)("li",{parentName:"ul"},Object(l.mdx)("code",n({parentName:"li"},{className:"language-text"}),"LT"),": inférieur à. ")),Object(l.mdx)("h5",null,"Sauts(JUMP)"),Object(l.mdx)("ul",null,Object(l.mdx)("li",{parentName:"ul"},Object(l.mdx)("code",n({parentName:"li"},{className:"language-text"}),"B <label>"))),Object(l.mdx)("p",null,"Toujours relier l’instruction à la position ",Object(l.mdx)("code",n({parentName:"p"},{className:"language-text"}),"<label>")," dans le programme."),Object(l.mdx)("h5",null,"Fin du programme"),Object(l.mdx)("ul",null,Object(l.mdx)("li",{parentName:"ul"},Object(l.mdx)("code",n({parentName:"li"},{className:"language-text"}),"HALT"),": Arrête l’exécution du programme.")),Object(l.mdx)("h5",null,"Non utilisées dans ce TD"),Object(l.mdx)("ul",null,Object(l.mdx)("li",{parentName:"ul"},Object(l.mdx)("code",n({parentName:"li"},{className:"language-text"}),"AND Rd, Rn, <opérande2>"),":")),Object(l.mdx)("p",null,"Effectue une opération ET logique au niveau du bit entre la valeur du\nregistre n et la valeur spécifiée par ",Object(l.mdx)("code",n({parentName:"p"},{className:"language-text"}),"<opérande 2>")," et stocke le résultat dans le registre d."),Object(l.mdx)("ul",null,Object(l.mdx)("li",{parentName:"ul"},Object(l.mdx)("code",n({parentName:"li"},{className:"language-text"}),"ORR Rd, Rn, <opérande2>"),":")),Object(l.mdx)("p",null,"Effectue une opération OU logique au niveau des bits entre la\nvaleur du registre n et la valeur spécifiée par ",Object(l.mdx)("code",n({parentName:"p"},{className:"language-text"}),"<opérande 2>"),"et stocke le résultat dans le registre\nd."),Object(l.mdx)("ul",null,Object(l.mdx)("li",{parentName:"ul"},Object(l.mdx)("code",n({parentName:"li"},{className:"language-text"}),"EOR Rd, Rn, <opérande2>"),":")),Object(l.mdx)("p",null,"Effectue une opération logique ou binaire exclusive au sens des bits\nentre la valeur du registre n et la valeur spécifiée par ",Object(l.mdx)("code",n({parentName:"p"},{className:"language-text"}),"<opérande 2>"),"et stocke le résultat dans le\nregistre d."),Object(l.mdx)("ul",null,Object(l.mdx)("li",{parentName:"ul"},Object(l.mdx)("code",n({parentName:"li"},{className:"language-text"}),"MVN Rd, <opérande2>"),":")),Object(l.mdx)("p",null,"Exécutez une opération NOT logique au niveau des bits sur la valeur\nspécifiée par ",Object(l.mdx)("code",n({parentName:"p"},{className:"language-text"}),"<opérande 2>"),"et stockez le résultat dans le registre d."),Object(l.mdx)("ul",null,Object(l.mdx)("li",{parentName:"ul"},Object(l.mdx)("code",n({parentName:"li"},{className:"language-text"}),"LSL Rd, Rn, <opérande2>"),":")),Object(l.mdx)("p",null,"Décalez logiquement vers la gauche la valeur stockée dans le registre\nn du nombre de bits spécifié par ",Object(l.mdx)("code",n({parentName:"p"},{className:"language-text"}),"<opérande 2>")," et stockez le résultat dans le registre d."),Object(l.mdx)("ul",null,Object(l.mdx)("li",{parentName:"ul"},Object(l.mdx)("code",n({parentName:"li"},{className:"language-text"}),"LSR Rd, Rn, <opérande2>"),":")),Object(l.mdx)("p",null,"Décalez logiquement à droite la valeur stockée dans le registre n du\nnombre de bits spécifié par ",Object(l.mdx)("code",n({parentName:"p"},{className:"language-text"}),"<opérande 2>")," et stockez le résultat dans le registre d."),Object(l.mdx)("h4",null,"Sources"),Object(l.mdx)("ul",null,Object(l.mdx)("li",{parentName:"ul"},Object(l.mdx)("a",n({parentName:"li"},{href:"https://pixees.fr/informatiquelycee/n_site/nsi_prem_sim_cpu.html"}),"https://pixees.fr/informatiquelycee/n_site/nsi_prem_sim_cpu.html")),Object(l.mdx)("li",{parentName:"ul"},Object(l.mdx)("a",n({parentName:"li"},{href:"http://www.lyceerotroudreux.com/images/NSI/Langage_Assembleur.pdf"}),"http://www.lyceerotroudreux.com/images/NSI/Langage_Assembleur.pdf")),Object(l.mdx)("li",{parentName:"ul"},Object(l.mdx)("a",n({parentName:"li"},{href:"http://www.peterhigginson.co.uk/AQA/info.html"}),"http://www.peterhigginson.co.uk/AQA/info.html"))))}s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-courses-1-g-nsi-6-architectures-materielles-et-systemes-dexploitation-2-jeu-dinstructions-du-processeur-exo-mdx-05cbe8d08c11618bbcc4.js.map