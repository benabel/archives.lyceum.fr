{"version":3,"sources":["webpack:///./src/templates/blog-md.js"],"names":["data","location","blog","markdownRemark","title","frontmatter","description","author","meta","name","content","className","tableOfContents","dangerouslySetInnerHTML","__html","html","query"],"mappings":"4FAAA,iIASe,sBAAyB,IAAtBA,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAChBC,EAAOF,EAAKG,eAEZC,EAAK,oBAAuBF,EAAKG,YAAYD,MAC7CE,EAAW,iBAAoBJ,EAAKG,YAAYE,OAArC,eAA0DL,EAAKG,YAAYD,MAA3E,+DAEjB,OACE,gBAAC,IAAD,CAAQH,SAAUA,EAAUD,KAAMA,GAChC,gBAAC,IAAD,CACEI,MAAK,GAAKA,EACVI,KAAM,CACJ,CACEC,KAAK,cACLH,YAAY,GAAIA,GAElB,CACEG,KAAK,WACLC,QAAQ,WAId,gBAAC,IAAD,KACE,sBAAIC,UAAU,aAAd,GAA8BT,EAAKG,YAAYD,OAC/C,gBAAC,IAAD,CAAKQ,gBAAiBV,EAAKU,mBAE7B,uBAAKC,wBAAyB,CAAEC,OAAQZ,EAAKa,UAK5C,IAAMC,EAAK,c","file":"component---src-templates-blog-md-js-3754787773cb0d34cd9c.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport { Jumbotron } from 'reactstrap'\nimport { Helmet } from 'react-helmet'\n\nimport Toc from '../components/toc'\nimport Layout from '../components/layout'\nimport BreadcrumbNav from '../components/breadcrumb-nav'\n\nexport default ({ data, location }) => {\n  const blog = data.markdownRemark\n\n  const title = `Blog de lyceum | ${blog.frontmatter.title}`\n  const description = `Un article de ${blog.frontmatter.author} intitulé: «${blog.frontmatter.title}» publié sur le blog de lyceum, un site libre pour le lycée.`\n\n  return (\n    <Layout location={location} data={data}>\n      <Helmet\n        title={`${title}`}\n        meta={[\n          {\n            name: `description`,\n            description: `${description}`,\n          },\n          {\n            name: `keywords`,\n            content: `blog`,\n          },\n        ]}\n      ></Helmet>\n      <Jumbotron>\n        <h1 className=\"display-1\">{`${blog.frontmatter.title}`}</h1>\n        <Toc tableOfContents={blog.tableOfContents} />\n      </Jumbotron>\n      <div dangerouslySetInnerHTML={{ __html: blog.html }} />\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query MDblogQuery($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      tableOfContents(maxDepth: 3)\n      timeToRead\n      fields {\n        slug\n      }\n      frontmatter {\n        author\n        tags\n        title\n        date\n      }\n    }\n  }\n`\n"],"sourceRoot":""}