(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{KGwn:function(e,a,n){"use strict";n.r(a),n.d(a,"default",(function(){return m}));n("E5k/"),n("rzGZ"),n("Dq+y"),n("8npG"),n("Ggvi"),n("q1tI");var t=n("7ljp");function c(){return(c=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var n=arguments[a];for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])}return e}).apply(this,arguments)}var s={};function m(e){var a=e.components,n=function(e,a){if(null==e)return{};var n,t,c={},s=Object.keys(e);for(t=0;t<s.length;t++)n=s[t],a.indexOf(n)>=0||(c[n]=e[n]);return c}(e,["components"]);return Object(t.mdx)("wrapper",c({},s,n,{components:a,mdxType:"MDXLayout"}),Object(t.mdx)("h2",{id:"ex-1"},"Spécification et tests de la division euclidienne"),Object(t.mdx)("p",null,"Copier le code suivant dans un notebook et complétez-le en ajoutant le prototype et les\ncommentaires."),Object(t.mdx)("div",{className:"gatsby-highlight","data-language":"python"},Object(t.mdx)("pre",c({parentName:"div"},{className:"language-python"}),Object(t.mdx)("code",c({parentName:"pre"},{className:"language-python"}),Object(t.mdx)("span",c({parentName:"code"},{className:"token keyword"}),"def")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token function"}),"division_euclidienne"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),"("),"a",Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),",")," b",Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),")"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),":"),"\n    ",Object(t.mdx)("span",c({parentName:"code"},{className:"token triple-quoted-string string"}),'""" Ecrire la spécification de la fonction\n\n    Arguments\n    ---------\n\n\n    Returns\n    -------\n\n    """'),"\n    ",Object(t.mdx)("span",c({parentName:"code"},{className:"token comment"}),"# Ajouter des commentaires pour expliquer "),"\n    ",Object(t.mdx)("span",c({parentName:"code"},{className:"token keyword"}),"if")," b ",Object(t.mdx)("span",c({parentName:"code"},{className:"token operator"}),"<=")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"0")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token keyword"}),"or")," a ",Object(t.mdx)("span",c({parentName:"code"},{className:"token operator"}),"<")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"0")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token keyword"}),"or")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token builtin"}),"type"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),"("),"a",Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),")")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token operator"}),"!=")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token builtin"}),"int")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token keyword"}),"or")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token builtin"}),"type"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),"("),"b",Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),")")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token operator"}),"!=")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token builtin"}),"int"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),":"),"\n        ",Object(t.mdx)("span",c({parentName:"code"},{className:"token keyword"}),"return")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token operator"}),"-"),Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"1"),"\n\n    ",Object(t.mdx)("span",c({parentName:"code"},{className:"token keyword"}),"if")," a ",Object(t.mdx)("span",c({parentName:"code"},{className:"token operator"}),"==")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"0"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),":"),"\n        ",Object(t.mdx)("span",c({parentName:"code"},{className:"token keyword"}),"return")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),"("),Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"0"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),",")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"0"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),")"),"\n    \n    ",Object(t.mdx)("span",c({parentName:"code"},{className:"token comment"}),"# mes commentaires ici sur une ligne"),"\n\n    r ",Object(t.mdx)("span",c({parentName:"code"},{className:"token operator"}),"=")," a\n    q ",Object(t.mdx)("span",c({parentName:"code"},{className:"token operator"}),"=")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"0"),"\n    ",Object(t.mdx)("span",c({parentName:"code"},{className:"token keyword"}),"while")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),"("),"r ",Object(t.mdx)("span",c({parentName:"code"},{className:"token operator"}),">=")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"0"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),")"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),":"),"\n        r ",Object(t.mdx)("span",c({parentName:"code"},{className:"token operator"}),"=")," r ",Object(t.mdx)("span",c({parentName:"code"},{className:"token operator"}),"-")," b\n        q ",Object(t.mdx)("span",c({parentName:"code"},{className:"token operator"}),"=")," q ",Object(t.mdx)("span",c({parentName:"code"},{className:"token operator"}),"+")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"1"),"\n\n    ",Object(t.mdx)("span",c({parentName:"code"},{className:"token keyword"}),"return")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),"("),"q",Object(t.mdx)("span",c({parentName:"code"},{className:"token operator"}),"-"),Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"1"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),",")," r",Object(t.mdx)("span",c({parentName:"code"},{className:"token operator"}),"+"),"b",Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),")"),"\n\n",Object(t.mdx)("span",c({parentName:"code"},{className:"token comment"}),"# Tests"),"\n",Object(t.mdx)("span",c({parentName:"code"},{className:"token keyword"}),"def")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token function"}),"test_division_euclidienne"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),"("),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),")"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),":"),"\n    ",Object(t.mdx)("span",c({parentName:"code"},{className:"token comment"}),"# Ajouter des commentaires pour expliquer"),"\n    ",Object(t.mdx)("span",c({parentName:"code"},{className:"token comment"}),"# quelles sont les vérifications effectuées"),"\n    ",Object(t.mdx)("span",c({parentName:"code"},{className:"token keyword"}),"assert")," division_euclidienne",Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),"("),Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"10"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),",")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"2"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),")")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token operator"}),"==")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),"("),Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"5"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),",")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"0"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),")"),"\n    ",Object(t.mdx)("span",c({parentName:"code"},{className:"token keyword"}),"assert")," division_euclidienne",Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),"("),Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"2"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),",")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"10"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),")")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token operator"}),"==")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),"("),Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"0"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),",")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"2"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),")"),"\n    ",Object(t.mdx)("span",c({parentName:"code"},{className:"token keyword"}),"assert")," division_euclidienne",Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),"("),Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"37"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),",")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"3"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),")")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token operator"}),"==")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),"("),Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"12"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),",")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"1"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),")"),"\n    ",Object(t.mdx)("span",c({parentName:"code"},{className:"token comment"}),"# Verifications d'erreurs"),"\n    ",Object(t.mdx)("span",c({parentName:"code"},{className:"token keyword"}),"assert")," division_euclidienne",Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),"("),Object(t.mdx)("span",c({parentName:"code"},{className:"token operator"}),"-"),Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"10"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),",")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"7"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),")")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token operator"}),"==")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token operator"}),"-"),Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"1"),"\n    ",Object(t.mdx)("span",c({parentName:"code"},{className:"token keyword"}),"assert")," division_euclidienne",Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),"("),Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"10"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),",")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token operator"}),"-"),Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"7"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),")")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token operator"}),"==")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token operator"}),"-"),Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"1"),"\n    ",Object(t.mdx)("span",c({parentName:"code"},{className:"token keyword"}),"assert")," division_euclidienne",Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),"("),Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"10.3"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),",")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"4"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),")")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token operator"}),"==")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token operator"}),"-"),Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"1"),"\n    ",Object(t.mdx)("span",c({parentName:"code"},{className:"token keyword"}),"assert")," division_euclidienne",Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),"("),Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"11"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),",")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"3.5"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),")")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token operator"}),"==")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token operator"}),"-"),Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"1"),"\n    ",Object(t.mdx)("span",c({parentName:"code"},{className:"token keyword"}),"assert")," division_euclidienne",Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),"("),Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"3"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),",")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"0"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),")")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token operator"}),"==")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token operator"}),"-"),Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"1"),"\n    ",Object(t.mdx)("span",c({parentName:"code"},{className:"token comment"}),"# ..."),"\n    ",Object(t.mdx)("span",c({parentName:"code"},{className:"token keyword"}),"assert")," division_euclidienne",Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),"("),Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"0"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),",")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"3"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),")")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token operator"}),"==")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),"("),Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"0"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),",")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"0"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),")"),"\n    ",Object(t.mdx)("span",c({parentName:"code"},{className:"token keyword"}),"assert")," division_euclidienne",Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),"("),Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"0"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),",")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"0"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),")")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token operator"}),"==")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token operator"}),"-"),Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"1"),"\n    \n",Object(t.mdx)("span",c({parentName:"code"},{className:"token comment"}),"# Lancement du test"),"\ntest_division_euclidienne",Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),"("),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),")"),"\n"))),Object(t.mdx)("h2",{id:"ex-2"},"Créer est prototyper une fonction qui satisfait à des tests"),Object(t.mdx)("ol",null,Object(t.mdx)("li",{parentName:"ol"},Object(t.mdx)("p",{parentName:"li"},"Créer et prototyper une fonction ",Object(t.mdx)("code",c({parentName:"p"},{className:"language-text"}),"appartient()")," qui indique si un élément est présent dans une\nliste, et qui passe le jeu de tests suivants:"),Object(t.mdx)("div",c({parentName:"li"},{className:"gatsby-highlight","data-language":"python"}),Object(t.mdx)("pre",c({parentName:"div"},{className:"language-python"}),Object(t.mdx)("code",c({parentName:"pre"},{className:"language-python"}),Object(t.mdx)("span",c({parentName:"code"},{className:"token keyword"}),"def")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token function"}),"test_appartient"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),"("),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),")"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),":"),"\n   ",Object(t.mdx)("span",c({parentName:"code"},{className:"token keyword"}),"assert")," appartient",Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),"("),Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"2"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),",")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),"["),Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"5"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),",")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"4"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),",")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"1"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),",")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"2"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),",")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"3"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),"]"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),")")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token operator"}),"==")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token boolean"}),"True"),"\n   ",Object(t.mdx)("span",c({parentName:"code"},{className:"token keyword"}),"assert")," appartient",Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),"("),Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"6"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),",")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),"["),Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"5"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),",")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"4"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),",")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"1"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),",")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"2"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),",")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token number"}),"3"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),"]"),Object(t.mdx)("span",c({parentName:"code"},{className:"token punctuation"}),")")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token operator"}),"==")," ",Object(t.mdx)("span",c({parentName:"code"},{className:"token boolean"}),"False")))))),Object(t.mdx)("div",{className:"gatsby-highlight","data-language":"text"},Object(t.mdx)("pre",c({parentName:"div"},{className:"language-text"}),Object(t.mdx)("code",c({parentName:"pre"},{className:"language-text"}),"\n2. Compléter le jeu de tests avec des cas limites: liste vide, types de données différents...\n\n## Algorithmes classiques\n\nReprenez les algorithmes classiques du [chapitre 1 de la partie 8](../../8-algorithmique/1-parcours-sequentiel-dun-tableau): et les implémenter sous forme de fonctions\nprototypées et testées:\n\n1. Recherche d'un extremum, au choix: maximum ou minimum d'un tableau.\n2. Calcul d'une moyenne des valeurs d'un tableau.\n\n**Attention: il conviendra d'écrire l'algorithme de parcours du tableau et de ne pas utiliser les\nméthodes prédéfinies dans python `max`, `min`...**\n\n## Recherche dans une documentation\n\n1. Rechercher dans la documentation du module `random` comment créer un dé numérique qui renvoie de\n   façon équiprobable les valeurs entières de 1 à 6. Tester la fonction pour vérifier son\n   fonctionnement.\n\n2. Rechercher dans la documentation du module `math` comment calculer le logarithme en base 2 d'un\n   nombre. Tester la fonction pour vérifier son fonctionnement: p.ex $\\log_2(16) = 4$; $\\log_2(256)\n   = 8$. Expliquer ce que calcule cette fonction.\n\n3. Rechercher dans la documentation de la librairie `pandas` plusieurs méthodes permettant d'itérer\n   sur les valeurs d'une `Dataframe`.\n\n\n\nexport const _frontmatter = {}"))))}m.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-courses-1-g-nsi-7-langages-et-programmation-8-mise-au-point-dun-programme-exo-mdx-9a7493cfd679306ab76f.js.map