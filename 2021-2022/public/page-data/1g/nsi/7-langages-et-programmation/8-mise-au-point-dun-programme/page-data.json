{"componentChunkName":"component---src-templates-cours-md-js","path":"/1g/nsi/7-langages-et-programmation/8-mise-au-point-dun-programme","result":{"data":{"markdownRemark":{"html":"<details class=\"programme\">\n<summary>\nProgramme Officiel\n</summary>\n<table class=\"table table-bordered table-hover\">\n<thead class=\"table-warning\">\n<tr class=\"header\">\n<th>\nContenus\n</th>\n<th>\nCapacités attendues\n</th>\n<th>\nCommentaires\n</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>\nMise au point de programmes\n</td>\n<td>\nUtiliser des jeux de tests.\n</td>\n<td>\n<p>\nL'importance de la qualité et du nombre des tests est mise en évidence.\n</p>\n<p>\nLe succès d'un jeu de tests ne garantit pas la correction d'un\nprogramme.\n</p>\n</td>\n</tr>\n<tr class=\"even\">\n<td>\nUtilisation de bibliothèques\n</td>\n<td>\nUtiliser la documentation d'une bibliothèque.\n</td>\n<td>\nAucune connaissance exhaustive d'une bibliothèque particulière n'est\nexigible.\n</td>\n</tr>\n</tbody>\n</table>\n<a class=\"lien-programme\" href=\"../programme/\">Lien vers le programme\ncomplet</a>\n</details>\n<p>Nous avons déjà vu que parmi des ingrédients des\n<span><a href=\"../1-les-ingredients-dun-algorithme\">programmes</a></span>, il y en\na un qui est particuliérément utile pour rendre les programmes plus\nlisibles et structurés et donc <strong>plus faciles à maintenir</strong>, c'est\nl'<em>utilisation de fonctions</em>.</p>\n<p>Nous avons également vu comment <em>prototyper</em> des\n<span><a href=\"6-fonctions\">fonctions</a></span> afin de pouvoir rendre le code\nplus explicite et que l'on puisse revenir dessus afin de l'améliorer ou\nle corriger plus tard lors du développement du programme.</p>\n<p>Nous étions alors dans la phase descendante de la conception du\nprogramme qui nous a permis d'arriver à <em>implémenter notre programme</em>.\nCe modèle d'organisation de la conception d'un programme est connu sous\nle nom de <em><span><a href=\"https://fr.wikipedia.org/wiki/Cycle_en_V\">cycle en\nV</a></span></em>, et il est un\nstandard utuilisé depuis les années 1980.</p>\n<p><a title=\"Leon Osborne, Jeffrey Brummond, Robert Hart, Mohsen (Moe) Zarean Ph.D., P.E, Steven Conger ; Redrawn by User:Slashme. / Public domain\" href=\"https://commons.wikimedia.org/wiki/File:Systems_Engineering_Process_II.svg\"><img class=\"center\" width=\"512\" alt=\"Systems Engineering Process II\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e8/Systems_Engineering_Process_II.svg/512px-Systems_Engineering_Process_II.svg.png\"></a></p>\n<p>Nous allons voir dans ce chapitre une autre étape du cycle de\ndéveloppement d'applications: <strong>La mise au point du programme grâce à\nl'utilisation de tests</strong>.</p>\n<p>Prenons l'exemple du calcul des racines du trinôme proposé par <em>un\nélève</em>. <strong>Nous allons peu à peu améliorer ce programme pour le rendre\nplus stable, plus facile à utiliser, à maintenir et à améliorer pour le\nfutur</strong>.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">import</span> math\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token triple-quoted-string string\">\"\"\"\n\nProgramme de calcul des racines d'un trinôme\n============================================\n\nax^2 + bx +c\n\"\"\"</span><span class=\"token punctuation\">)</span>\na <span class=\"token operator\">=</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Entrer la valeur de a: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nb <span class=\"token operator\">=</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Entrer la valeur de b: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nc <span class=\"token operator\">=</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Entrer la valeur de c: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Calcul du discriminant</span>\ndelta <span class=\"token operator\">=</span> b <span class=\"token operator\">*</span> b <span class=\"token operator\">-</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> a <span class=\"token operator\">*</span> c<span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># Affichage des solutions</span>\n<span class=\"token keyword\">if</span> delta <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span> \n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Pas de solution\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">elif</span> delta <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Une solution : \"</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span> b <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Deux solutions : \"</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span> b <span class=\"token operator\">-</span> math<span class=\"token punctuation\">.</span>sqrt<span class=\"token punctuation\">(</span>delta<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" et \"</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span> b <span class=\"token operator\">+</span> math<span class=\"token punctuation\">.</span>sqrt<span class=\"token punctuation\">(</span>delta<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"utilisation-dune-approche-fonctionnelle-def\" style=\"position:relative;\"><a href=\"#utilisation-dune-approche-fonctionnelle-def\" aria-label=\"utilisation dune approche fonctionnelle def permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Utilisation d'une approche fonctionnelle: <code class=\"language-text\">def</code></h2>\n<p>Plutôt que de placer les instructions les unes à la suite des autres\nsans réelle organisation, nous allons utiliser une <strong>approche\nfonctionnelle</strong> pour rendre ce programme plus pratique à utiliser et à\ntester.</p>\n<p>La programmation fonctionnelle est un <span><a href=\"https://fr.wikipedia.org/wiki/Paradigme_(programmation)\">paradigme de\nprogrammation</a></span>\ntrès apprécié notamment dans le monde universitaire, et de plus en plus\nutilisé par l'industrie afin d'avoir des programmes dont le\n<em>comportement est plus facile à prédire</em> que dans un programmation\norientée objet par exemple.</p>\n<p>On va placer le code dans une fonction qui prend trois arguments, les\ncoefficients du trinôme et qui affiche les racines à l'écran(<em>il s'agit\npour l'instant d'une procédure</em>).</p>\n<hr>\n<div class=\"card text-white bg-gradient-dark\">\n<div class=\"card-header\">\n<p><small class=\"text-muted\">Entrée</small></p>\n</div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">racines_du_trinome</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">import</span> math\n    <span class=\"token comment\"># Calcul du discriminant</span>\n    delta <span class=\"token operator\">=</span> b <span class=\"token operator\">*</span> b <span class=\"token operator\">-</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> a <span class=\"token operator\">*</span> c\n    <span class=\"token comment\"># Affichage des solutions</span>\n    <span class=\"token keyword\">if</span> delta <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span> \n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Pas de solution\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">elif</span> delta <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Une solution : \"</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span> b <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Deux solutions : \"</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span> b <span class=\"token operator\">-</span> math<span class=\"token punctuation\">.</span>sqrt<span class=\"token punctuation\">(</span>delta<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" et \"</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span> b <span class=\"token operator\">+</span> math<span class=\"token punctuation\">.</span>sqrt<span class=\"token punctuation\">(</span>delta<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nracines_du_trinome<span class=\"token punctuation\">(</span>a<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> b<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> c<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n</div>\n<div class=\"card text-white bg-gradient-light stream-output\">\n<div class=\"card-header\">\n<p><small class=\"text-muted\">Sortie</small></p>\n</div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">Deux solutions : -1.0 et 1.0</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n</div>\n<hr>\n<h2 id=\"renvoi-de-valeurs-return\" style=\"position:relative;\"><a href=\"#renvoi-de-valeurs-return\" aria-label=\"renvoi de valeurs return permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Renvoi de valeurs: <code class=\"language-text\">return</code></h2>\n<p>Nous allons maintenant remplacer les <code class=\"language-text\">print</code> par des <code class=\"language-text\">return</code> pour\nrécupérer les racines en sortie de la fonction.</p>\n<p>En effet tout ce qui se passe à l'intérieur d'une fonction reste à\nl'intérieur de la fonction, mais par contre les <code class=\"language-text\">print()</code> sont des\nfonctions globales qui agissent à l'extérieur de la fonction( On parle\nd'effets de bords).</p>\n<p>En utilisant des return, on pourra récupérer le résultat de l'algorithme\nde notre fonction que lorsqu'on l'appelera, et qu'on assignera\néventuellemnt ces valeurs de retour à des variables(globales ou non).</p>\n<hr>\n<div class=\"card text-white bg-gradient-dark\">\n<div class=\"card-header\">\n<p><small class=\"text-muted\">Entrée</small></p>\n</div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">racines_du_trinome</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">import</span> math\n    <span class=\"token comment\"># Calcul du discriminant</span>\n    delta <span class=\"token operator\">=</span> b <span class=\"token operator\">*</span> b <span class=\"token operator\">-</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> a <span class=\"token operator\">*</span> c\n    <span class=\"token comment\"># Affichage des solutions</span>\n    <span class=\"token keyword\">if</span> delta <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span> \n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">elif</span> delta <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span> b <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        r1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span> b <span class=\"token operator\">-</span> math<span class=\"token punctuation\">.</span>sqrt<span class=\"token punctuation\">(</span>delta<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> a<span class=\"token punctuation\">)</span>\n        r2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span> b <span class=\"token operator\">+</span> math<span class=\"token punctuation\">.</span>sqrt<span class=\"token punctuation\">(</span>delta<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> a<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>r1<span class=\"token punctuation\">,</span> r2<span class=\"token punctuation\">)</span>\nracines_du_trinome<span class=\"token punctuation\">(</span>a<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> b<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> c<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n</div>\n<div class=\"card\">\n<div class=\"card-header\">\n<p><small class=\"text-muted\">Résultat</small></p>\n</div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">(-1.0, 1.0)</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n</div>\n<h2 id=\"prototypage-de-la-fonction\" style=\"position:relative;\"><a href=\"#prototypage-de-la-fonction\" aria-label=\"prototypage de la fonction permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Prototypage de la fonction</h2>\n<p>Pour rendre notre code compréhensible et facile à maintenir, on va\nécrire le prototype de la fonction comme on l'a vu dans le chapitre sur\n<span><a href=\"./6-fonctions\">fonctions</a></span>.</p>\n<p>On appelle cela une\n<span><a href=\"https://numpydoc.readthedocs.io/en/latest/format.html\"><code class=\"language-text\">docstring</code></a></span>\nqui permet de comprendre comment \"fonctionne\" la fonction.</p>\n<p>On la place sur une chaine de caractères multi-line avec trois\nguillemets. Elle se présente généralement en trois parties:</p>\n<ol>\n<li>Une explication</li>\n<li>Paramètres</li>\n<li>Sortie(Returns en anglais)</li>\n</ol>\n<p>Même si Python est un lagage non typé, on précise les type des\nparamètres et sorties de la fonction.</p>\n<p>La docstring peut alors être renvoyée en cas de besoin avec la fonction\nPython <code class=\"language-text\">help(nom_de_la_fonction)</code></p>\n<hr>\n<div class=\"card text-white bg-gradient-dark\">\n<div class=\"card-header\">\n<p><small class=\"text-muted\">Entrée</small></p>\n</div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">racines_du_trinome</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"Renvoie les éventuelles racines d'un trinôme\n    \n    ax**2 + bx + c\n    \n    Parameters\n    ----------\n    a : float\n    b : float\n    c : float\n    \n    Returns\n    -------\n    tuple\n        tuple contenant les 0, 1 ou 2 racines du trinôme suivant le cas\n    \"\"\"</span>\n    <span class=\"token keyword\">import</span> math\n    <span class=\"token comment\"># Calcul du discriminant</span>\n    delta <span class=\"token operator\">=</span> b <span class=\"token operator\">*</span> b <span class=\"token operator\">-</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> a <span class=\"token operator\">*</span> c\n    <span class=\"token comment\"># Affichage des solutions</span>\n    <span class=\"token keyword\">if</span> delta <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span> \n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">elif</span> delta <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span> b <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        r1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span> b <span class=\"token operator\">-</span> math<span class=\"token punctuation\">.</span>sqrt<span class=\"token punctuation\">(</span>delta<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> a<span class=\"token punctuation\">)</span>\n        r2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span> b <span class=\"token operator\">+</span> math<span class=\"token punctuation\">.</span>sqrt<span class=\"token punctuation\">(</span>delta<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> a<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>r1<span class=\"token punctuation\">,</span> r2<span class=\"token punctuation\">)</span>\n<span class=\"token builtin\">help</span><span class=\"token punctuation\">(</span>racines_du_trinome<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n</div>\n<div class=\"card text-white bg-gradient-light stream-output\">\n<div class=\"card-header\">\n<p><small class=\"text-muted\">Sortie</small></p>\n</div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">Help on function racines_du_trinome in module __main__:\n\nracines_du_trinome(a, b, c)\n    Renvoie les éventuelles racines d'un trinôme\n    \n    ax**2 + bx + c\n    \n    Parameters\n    ----------\n    a : float\n    b : float\n    c : float\n    \n    Returns\n    -------\n    tuple\n        tuple contenant les 0, 1 ou 2 racines du trinôme suivant le cas</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n</div>\n<hr>\n<h2 id=\"les-tests-assert\" style=\"position:relative;\"><a href=\"#les-tests-assert\" aria-label=\"les tests assert permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Les tests: <code class=\"language-text\">assert</code></h2>\n<p>L'informatique consiste la plupart du temps à une <strong>chasse aux bugs</strong>,\nil convient donc d'essayer de les repérer le plus tôt possible à l'aide\nde tests.</p>\n<p>On va donc pour effectuer des tests sur les valeurs renvoyées par la\nfonction. Pour cela on utilise des assertions <code class=\"language-text\">assert</code> qui bloquent\nl'éxecution du programme lorsqu'une expression renvoie <code class=\"language-text\">False</code>.</p>\n<p>On va placer ces tests dans une fonction appelée <code class=\"language-text\">run_tests()</code> pour\npouvoir en placer plusieurs au fur et à mesure qu'on y pense ou que l'on\nconstate des bugs.</p>\n<hr>\n<div class=\"card text-white bg-gradient-dark\">\n<div class=\"card-header\">\n<p><small class=\"text-muted\">Entrée</small></p>\n</div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">run_tests</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># deux racines réelles</span>\n    <span class=\"token keyword\">assert</span> racines_du_trinome<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># une racine double</span>\n    <span class=\"token keyword\">assert</span> racines_du_trinome<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># pas de racine</span>\n    <span class=\"token keyword\">assert</span> racines_du_trinome<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token comment\"># si une assertion s'avère fausse la fonction va renvoyer une AssertionError</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Tous les tests ont été passé avec succés\"</span><span class=\"token punctuation\">)</span>\nrun_tests<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n</div>\n<div class=\"card text-white bg-gradient-light stream-output\">\n<div class=\"card-header\">\n<p><small class=\"text-muted\">Sortie</small></p>\n</div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">Tous les tests ont été passé avec succés</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n</div>\n<hr>\n<h2 id=\"les-bibliothèques-import\" style=\"position:relative;\"><a href=\"#les-biblioth%C3%A8ques-import\" aria-label=\"les bibliothèques import permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Les bibliothèques: <code class=\"language-text\">import</code></h2>\n<p>Les bibliothéques ou <code class=\"language-text\">module</code>s permettent de <strong>rassembler et d'organiser\nles diverses fonctionnalités</strong> d'un programme afin de pouvoir les\nimporter ultérieurement.</p>\n<p>Elles constituent un outil important dans la mise au point de programme\ncomplexe en permettant de séparer le code en diveres parties, chacune de\nces parties ayant un rôle bien spécifique et plus facile à tester.</p>\n<p>De nombreuses bibliothéques sont fournies avec Python, comme par exemple\nles modules <code class=\"language-text\">math</code> ou <code class=\"language-text\">random</code>. On les appelle les bibilothèques\nstandards. On en a également utilisé d'autres non fournies avec Python,\nmais facilement installables comme <code class=\"language-text\">pandas</code> pour le traitement de\ndonnées, ou <code class=\"language-text\">matplotlib</code> pour le tracé de graphiques.</p>\n<hr>\n<div class=\"card text-white bg-gradient-dark\">\n<div class=\"card-header\">\n<p><small class=\"text-muted\">Entrée</small></p>\n</div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">import</span> math\n\n<span class=\"token comment\"># racine carré de 4</span>\nmath<span class=\"token punctuation\">.</span>sqrt<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n</div>\n<div class=\"card\">\n<div class=\"card-header\">\n<p><small class=\"text-muted\">Résultat</small></p>\n</div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">2.0</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n</div>\n<hr>\n<div class=\"card text-white bg-gradient-dark\">\n<div class=\"card-header\">\n<p><small class=\"text-muted\">Entrée</small></p>\n</div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">import</span> random\n\n<span class=\"token comment\"># nombre aléatoire entre 0 et 1</span>\nrandom<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n</div>\n<div class=\"card\">\n<div class=\"card-header\">\n<p><small class=\"text-muted\">Résultat</small></p>\n</div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">0.5463364268335839</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n</div>\n<p>On peut accéder à la documentation directement à partir de python avec\nla fonction <code class=\"language-text\">help</code>, mais on préférera tout de même la documentation en\nligne lorsqu'on a accès à internet.</p>\n<ul>\n<li>Doc Python: <a href=\"https://docs.python.org/3/\">https://docs.python.org/3/</a></li>\n<li>Doc javascript: <a href=\"https://developer.mozilla.org/fr/docs/Web/JavaScript\">https://developer.mozilla.org/fr/docs/Web/JavaScript</a></li>\n</ul>\n<hr>\n<div class=\"card text-white bg-gradient-dark\">\n<div class=\"card-header\">\n<p><small class=\"text-muted\">Entrée</small></p>\n</div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token builtin\">help</span><span class=\"token punctuation\">(</span>math<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n</div>\n<div class=\"card text-white bg-gradient-light stream-output\">\n<div class=\"card-header\">\n<p><small class=\"text-muted\">Sortie</small></p>\n</div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">Help on module math:\n\nNAME\n    math\n\nMODULE REFERENCE\n    https://docs.python.org/3.8/library/math\n    \n    The following documentation is automatically generated from the Python\n    source files.  It may be incomplete, incorrect or include features that\n    are considered implementation detail and may vary between Python\n    implementations.  When in doubt, consult the module reference at the\n    location listed above.\n\nDESCRIPTION\n    This module provides access to the mathematical functions\n    defined by the C standard.\n\nFUNCTIONS\n    acos(x, /)\n        Return the arc cosine (measured in radians) of x.\n    \n    acosh(x, /)\n        Return the inverse hyperbolic cosine of x.\n    \n    asin(x, /)\n        Return the arc sine (measured in radians) of x.\n    \n    asinh(x, /)\n        Return the inverse hyperbolic sine of x.\n    \n    atan(x, /)\n        Return the arc tangent (measured in radians) of x.\n    \n    atan2(y, x, /)\n        Return the arc tangent (measured in radians) of y/x.\n        \n        Unlike atan(y/x), the signs of both x and y are considered.\n    \n    atanh(x, /)\n        Return the inverse hyperbolic tangent of x.\n    \n    ceil(x, /)\n        Return the ceiling of x as an Integral.\n        \n        This is the smallest integer >= x.\n    \n    comb(n, k, /)\n        Number of ways to choose k items from n items without repetition and without order.\n        \n        Evaluates to n! / (k! * (n - k)!) when k &lt;= n and evaluates\n        to zero when k > n.\n        \n        Also called the binomial coefficient because it is equivalent\n        to the coefficient of k-th term in polynomial expansion of the\n        expression (1 + x)**n.\n        \n        Raises TypeError if either of the arguments are not integers.\n        Raises ValueError if either of the arguments are negative.\n    \n    copysign(x, y, /)\n        Return a float with the magnitude (absolute value) of x but the sign of y.\n        \n        On platforms that support signed zeros, copysign(1.0, -0.0)\n        returns -1.0.\n    \n    cos(x, /)\n        Return the cosine of x (measured in radians).\n    \n    cosh(x, /)\n        Return the hyperbolic cosine of x.\n    \n    degrees(x, /)\n        Convert angle x from radians to degrees.\n    \n    dist(p, q, /)\n        Return the Euclidean distance between two points p and q.\n        \n        The points should be specified as sequences (or iterables) of\n        coordinates.  Both inputs must have the same dimension.\n        \n        Roughly equivalent to:\n            sqrt(sum((px - qx) ** 2.0 for px, qx in zip(p, q)))\n    \n    erf(x, /)\n        Error function at x.\n    \n    erfc(x, /)\n        Complementary error function at x.\n    \n    exp(x, /)\n        Return e raised to the power of x.\n    \n    expm1(x, /)\n        Return exp(x)-1.\n        \n        This function avoids the loss of precision involved in the direct evaluation of exp(x)-1 for small x.\n    \n    fabs(x, /)\n        Return the absolute value of the float x.\n    \n    factorial(x, /)\n        Find x!.\n        \n        Raise a ValueError if x is negative or non-integral.\n    \n    floor(x, /)\n        Return the floor of x as an Integral.\n        \n        This is the largest integer &lt;= x.\n    \n    fmod(x, y, /)\n        Return fmod(x, y), according to platform C.\n        \n        x % y may differ.\n    \n    frexp(x, /)\n        Return the mantissa and exponent of x, as pair (m, e).\n        \n        m is a float and e is an int, such that x = m * 2.**e.\n        If x is 0, m and e are both 0.  Else 0.5 &lt;= abs(m) &lt; 1.0.\n    \n    fsum(seq, /)\n        Return an accurate floating point sum of values in the iterable seq.\n        \n        Assumes IEEE-754 floating point arithmetic.\n    \n    gamma(x, /)\n        Gamma function at x.\n    \n    gcd(x, y, /)\n        greatest common divisor of x and y\n    \n    hypot(...)\n        hypot(*coordinates) -> value\n        \n        Multidimensional Euclidean distance from the origin to a point.\n        \n        Roughly equivalent to:\n            sqrt(sum(x**2 for x in coordinates))\n        \n        For a two dimensional point (x, y), gives the hypotenuse\n        using the Pythagorean theorem:  sqrt(x*x + y*y).\n        \n        For example, the hypotenuse of a 3/4/5 right triangle is:\n        \n            >>> hypot(3.0, 4.0)\n            5.0\n    \n    isclose(a, b, *, rel_tol=1e-09, abs_tol=0.0)\n        Determine whether two floating point numbers are close in value.\n        \n          rel_tol\n            maximum difference for being considered \"close\", relative to the\n            magnitude of the input values\n          abs_tol\n            maximum difference for being considered \"close\", regardless of the\n            magnitude of the input values\n        \n        Return True if a is close in value to b, and False otherwise.\n        \n        For the values to be considered close, the difference between them\n        must be smaller than at least one of the tolerances.\n        \n        -inf, inf and NaN behave similarly to the IEEE 754 Standard.  That\n        is, NaN is not close to anything, even itself.  inf and -inf are\n        only close to themselves.\n    \n    isfinite(x, /)\n        Return True if x is neither an infinity nor a NaN, and False otherwise.\n    \n    isinf(x, /)\n        Return True if x is a positive or negative infinity, and False otherwise.\n    \n    isnan(x, /)\n        Return True if x is a NaN (not a number), and False otherwise.\n    \n    isqrt(n, /)\n        Return the integer part of the square root of the input.\n    \n    ldexp(x, i, /)\n        Return x * (2**i).\n        \n        This is essentially the inverse of frexp().\n    \n    lgamma(x, /)\n        Natural logarithm of absolute value of Gamma function at x.\n    \n    log(...)\n        log(x, [base=math.e])\n        Return the logarithm of x to the given base.\n        \n        If the base not specified, returns the natural logarithm (base e) of x.\n    \n    log10(x, /)\n        Return the base 10 logarithm of x.\n    \n    log1p(x, /)\n        Return the natural logarithm of 1+x (base e).\n        \n        The result is computed in a way which is accurate for x near zero.\n    \n    log2(x, /)\n        Return the base 2 logarithm of x.\n    \n    modf(x, /)\n        Return the fractional and integer parts of x.\n        \n        Both results carry the sign of x and are floats.\n    \n    perm(n, k=None, /)\n        Number of ways to choose k items from n items without repetition and with order.\n        \n        Evaluates to n! / (n - k)! when k &lt;= n and evaluates\n        to zero when k > n.\n        \n        If k is not specified or is None, then k defaults to n\n        and the function returns n!.\n        \n        Raises TypeError if either of the arguments are not integers.\n        Raises ValueError if either of the arguments are negative.\n    \n    pow(x, y, /)\n        Return x**y (x to the power of y).\n    \n    prod(iterable, /, *, start=1)\n        Calculate the product of all the elements in the input iterable.\n        \n        The default start value for the product is 1.\n        \n        When the iterable is empty, return the start value.  This function is\n        intended specifically for use with numeric values and may reject\n        non-numeric types.\n    \n    radians(x, /)\n        Convert angle x from degrees to radians.\n    \n    remainder(x, y, /)\n        Difference between x and the closest integer multiple of y.\n        \n        Return x - n*y where n*y is the closest integer multiple of y.\n        In the case where x is exactly halfway between two multiples of\n        y, the nearest even value of n is used. The result is always exact.\n    \n    sin(x, /)\n        Return the sine of x (measured in radians).\n    \n    sinh(x, /)\n        Return the hyperbolic sine of x.\n    \n    sqrt(x, /)\n        Return the square root of x.\n    \n    tan(x, /)\n        Return the tangent of x (measured in radians).\n    \n    tanh(x, /)\n        Return the hyperbolic tangent of x.\n    \n    trunc(x, /)\n        Truncates the Real x to the nearest Integral toward 0.\n        \n        Uses the __trunc__ magic method.\n\nDATA\n    e = 2.718281828459045\n    inf = inf\n    nan = nan\n    pi = 3.141592653589793\n    tau = 6.283185307179586\n\nFILE\n    /usr/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n</div>\n<hr>\n<h2 id=\"bibliothèques-tierces\" style=\"position:relative;\"><a href=\"#biblioth%C3%A8ques-tierces\" aria-label=\"bibliothèques tierces permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Bibliothèques tierces</h2>\n<p>Le succés d'un langage viendra souvent des bibliothèques tiers qui\nseront développées autour de lui, on télécharge aujourd'hui les\nbibliotgèques open-source directement sur internet.</p>\n<ul>\n<li>modules Python: <a href=\"https://pypi.org/\">https://pypi.org/</a></li>\n<li>modules javascript: <a href=\"https://www.npmjs.com/\">https://www.npmjs.com/</a></li>\n</ul>\n<p>En effet nous sommes souvent ammenés à réaliser le même type de tâches\npour concevoir notre programme, et il n'est pas nécessaire de repartir\nde zéro à chaque fois.</p>","tableOfContents":"<ul>\n<li><a href=\"#utilisation-dune-approche-fonctionnelle-def\">Utilisation d'une approche fonctionnelle: <code class=\"language-text\">def</code></a></li>\n<li><a href=\"#renvoi-de-valeurs-return\">Renvoi de valeurs: <code class=\"language-text\">return</code></a></li>\n<li><a href=\"#prototypage-de-la-fonction\">Prototypage de la fonction</a></li>\n<li><a href=\"#les-tests-assert\">Les tests: <code class=\"language-text\">assert</code></a></li>\n<li><a href=\"#les-biblioth%C3%A8ques-import\">Les bibliothèques: <code class=\"language-text\">import</code></a></li>\n<li><a href=\"#biblioth%C3%A8ques-tierces\">Bibliothèques tierces</a></li>\n</ul>","frontmatter":{"tags":["python","spécification","tests","modules"]},"fields":{"classe":"1g","chapter":"Mise au point d'un programme","matter":"nsi","nChapter":"8","part":"Langages et programmation","nPart":"7"}}},"pageContext":{"slug":"1g/nsi/7-langages-et-programmation/8-mise-au-point-dun-programme","chapter":"Mise au point d'un programme"}},"staticQueryHashes":["604483588"]}