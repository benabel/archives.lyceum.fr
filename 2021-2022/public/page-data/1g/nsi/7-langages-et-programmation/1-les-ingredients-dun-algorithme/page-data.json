{"componentChunkName":"component---src-templates-cours-md-js","path":"/1g/nsi/7-langages-et-programmation/1-les-ingredients-dun-algorithme","result":{"data":{"markdownRemark":{"html":"<details class=\"programme\">\n<summary>\nProgramme Officiel\n</summary>\n<table class=\"table table-bordered table-hover\">\n<thead class=\"table-warning\">\n<tr class=\"header\">\n<th>\nContenus\n</th>\n<th>\nCapacités attendues\n</th>\n<th>\nCommentaires\n</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>\nConstructions élémentaires\n</td>\n<td>\nMettre en évidence un corpus de constructions élémentaires. boucles non\nbornées, appels de fonction.\n</td>\n<td>\nSéquences, affectation, conditionnelles, boucles bornées,\n</td>\n</tr>\n</tbody>\n</table>\n<a class=\"lien-programme\" href=\"../programme/\">Lien vers le programme\ncomplet</a>\n</details>\n<blockquote>\n<p>Alan Turing a montré que pour que les machines puissent résoudre des\nproblèmes, il fallait traduire ces problèmes en\n<span><a href=\"https://fr.wikipedia.org/wiki/Algorithme\">algorithmes</a></span>.\nDans ce chapitre, nous allons voir <em>quels sont les ingrédients de base\nd'un algorithme</em>, puis comment écrire ces instructions en Python.  \n<a title=\"Par Somepics [CC BY-SA 4.0  (https://creativecommons.org/licenses/by-sa/4.0)], de Wikimedia Commons\" href=\"https://commons.wikimedia.org/wiki/File:Euclid_flowchart.svg\"><img class=\"center\" width=\"256\" alt=\"Euclid flowchart\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/db/Euclid_flowchart.svg/256px-Euclid_flowchart.svg.png\"></a></p>\n</blockquote>\n<h2 id=\"les-ingrédients-des-algorithmes\" style=\"position:relative;\"><a href=\"#les-ingr%C3%A9dients-des-algorithmes\" aria-label=\"les ingrédients des algorithmes permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Les ingrédients des Algorithmes</h2>\n<p>Un algorithme utilise <em>cinq ingrédients de base</em>:</p>\n<ol>\n<li>Un algorithme est un chemin à parcourir pas à pas, une <strong>séquence\nd'instructions</strong>.</li>\n<li>Cependant il ne faut pas forcément effectuer toutes les instructions\nen fonctions de conditions: le <strong>instructions conditionnelles</strong>.</li>\n<li>Nous avons aussi besoin d'une autre construction, la <strong>boucle\nd'instructions</strong> qui permet de faire durer ou répéter une opération\nautant de fois que nécessaire.</li>\n<li>Nous introduisons la <strong>notion de variable</strong> ou de paramètre qui\npermettra de modifier le programme en fonction de ces paramètres.</li>\n<li>La dernière construction, qui consiste à <strong>regrouper un bloc\nd'instructions dans une fonction</strong>, va nous permettre de réutiliser\ndifférentes fonctionnalités, comme les briques d'un jeu de Lego,\npour réaliser une construction logicielle.</li>\n</ol>\n<p><span><a href=\"https://interstices.info/jcms/c_43821/les-ingredients-des-algorithmes\">Source Les ingrédients des algorithmes sur le site\nInterstices</a></span></p>\n<h2 id=\"traduire-des-algorithmes-en-python\" style=\"position:relative;\"><a href=\"#traduire-des-algorithmes-en-python\" aria-label=\"traduire des algorithmes en python permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Traduire des algorithmes en Python</h2>\n<p>Pour que les ordinateurs réalisent nos algorithmes, nous devons écrire\nles séquences d'instructions dans un langage de programmation, dans\nnotre cas Python.</p>\n<h3 id=\"séquence-dinstructions\" style=\"position:relative;\"><a href=\"#s%C3%A9quence-dinstructions\" aria-label=\"séquence dinstructions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Séquence d'instructions</h3>\n<p>En Python, les lignes du programme sont exécutées de <strong>haut en bas</strong>, à\nl'exception:</p>\n<ul>\n<li>des lignes de <strong>commentaires</strong> qui commencent <code class=\"language-text\">#</code>.</li>\n</ul>\n<div class=\"example\">\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># print(\"World\") </span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>N'affichera que <code class=\"language-text\">\"Hello\"</code> en sortie car la deuxième ligne est commentée\ndonc non exécutée.</p>\n</div>\n<ul>\n<li>des lignes de bloc qui sont <strong>indentées</strong> par rapport à la colonne\nde gauche.</li>\n</ul>\n<div class=\"example\">\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"World\"</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>Renvoie une erreur <code class=\"language-text\">IndentationError</code>{.danger} car la deuxième ligne est\nindentée et ne devrait pas l'être.</p>\n</div>\n<h3 id=\"instructions-conditionnelles\" style=\"position:relative;\"><a href=\"#instructions-conditionnelles\" aria-label=\"instructions conditionnelles permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Instructions conditionnelles</h3>\n<p>Il s'agit de blocs d'instructions exécutés en fonction de certaines\nconditions, nous voyons ici:</p>\n<ul>\n<li><code class=\"language-text\">if</code>(<em>si</em> en français), qui peut être complété par un</li>\n<li><code class=\"language-text\">else</code>(<em>sinon</em> en français).</li>\n</ul>\n<div class=\"example\">\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">age <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Quel âge avez-vous?\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> age <span class=\"token operator\">></span> <span class=\"token number\">14</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"OK\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"not OK\"</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n</div>\n<details class=\"plus\">\n<summary>\nelif en Python\n</summary>\n<p>Il existe également le mot-clé , <code class=\"language-text\">elif</code>(<em>sinon si</em> en français) en\nPython. Qui permet de tester plusieurs conditions.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">age <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Quel âge avez-vous?\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> age <span class=\"token operator\">></span> <span class=\"token number\">14</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"OK\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">elif</span> age <span class=\"token operator\">></span> <span class=\"token number\">18</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Vous ne dervriez plus être en lycée!\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"not OK\"</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n</details>\n<h3 id=\"boucle-dinstructions\" style=\"position:relative;\"><a href=\"#boucle-dinstructions\" aria-label=\"boucle dinstructions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Boucle d'instructions</h3>\n<p>Pour effectuer des répétitions en boucle, on utilise les instructions:</p>\n<ul>\n<li><code class=\"language-text\">for</code>: <em>pour</em> en français.</li>\n<li><code class=\"language-text\">while</code>: <em>tant que</em> en français.</li>\n</ul>\n<p>Les deux types de boucles sont interchangeables, on préfère cependant\nutiliser:</p>\n<ul>\n<li><code class=\"language-text\">for</code> si le nombre d'itérations est connu à l'avance.</li>\n<li><code class=\"language-text\">while</code> si l'arrêt s'effectue à une condition.</li>\n</ul>\n<div class=\"example\">\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n</div>\n<div class=\"example\">\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">i <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token comment\"># initialisation</span>\n<span class=\"token keyword\">while</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># condition d'arrêt</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n    i <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token comment\"># incrémentation de l'indice</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n</div>\n<h3 id=\"les-variables\" style=\"position:relative;\"><a href=\"#les-variables\" aria-label=\"les variables permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Les variables</h3>\n<p>C'est un moyen de donner un nom à des valeurs afin de pouvoir les\nréutiliser aisément par la suite.</p>\n<div class=\"example\">\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">PI <span class=\"token operator\">=</span> <span class=\"token number\">3.141592653589793</span>\nR <span class=\"token operator\">=</span> <span class=\"token number\">1</span> \n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Le périmètre est:\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token operator\">*</span>PI<span class=\"token operator\">*</span>R<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"La surface est:\"</span><span class=\"token punctuation\">,</span> PI<span class=\"token operator\">*</span>R<span class=\"token operator\">**</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>```\nNous avons ici affecté deux variables `PI` et `R` dont nous pouvons nous servir tout au <span class=\"token builtin\">long</span> du programme par la suite<span class=\"token punctuation\">.</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n</div>\n<h3 id=\"les-fonctions\" style=\"position:relative;\"><a href=\"#les-fonctions\" aria-label=\"les fonctions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Les fonctions</h3>\n<p>Il s'agit de blocs d'instructions exécutés à la demande, on les définit\npar le mot-clef <code class=\"language-text\">def</code>.</p>\n<div class=\"example\">\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">dit_bonjour</span><span class=\"token punctuation\">(</span>prenom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Bonjour \"</span> <span class=\"token operator\">+</span> prenom<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>Nous venons de définir la fonction, mais pour l'instant, il ne se passe\nrien.</p>\n<p>Pour exécuter le code de la fonction, il faut maintenant appeler la\nfonction avec une valeur pour l'exécuter.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># on appelle la fonction avec l'argument Ada</span>\ndit_bonjour<span class=\"token punctuation\">(</span><span class=\"token string\">\"Ada\"</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>Affichera <code class=\"language-text\">\"Bonjour Ada\"</code>.</p>\n</div>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#les-ingr%C3%A9dients-des-algorithmes\">Les ingrédients des Algorithmes</a></p>\n</li>\n<li>\n<p><a href=\"#traduire-des-algorithmes-en-python\">Traduire des algorithmes en Python</a></p>\n<ul>\n<li><a href=\"#s%C3%A9quence-dinstructions\">Séquence d'instructions</a></li>\n<li><a href=\"#instructions-conditionnelles\">Instructions conditionnelles</a></li>\n<li><a href=\"#boucle-dinstructions\">Boucle d'instructions</a></li>\n<li><a href=\"#les-variables\">Les variables</a></li>\n<li><a href=\"#les-fonctions\">Les fonctions</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"tags":["algorithme","conditions","boucles","variables","fonctions"]},"fields":{"classe":"1g","chapter":"Les ingrédients d'un algorithme","matter":"nsi","nChapter":"1","part":"Langages et programmation","nPart":"7"}}},"pageContext":{"slug":"1g/nsi/7-langages-et-programmation/1-les-ingredients-dun-algorithme","chapter":"Les ingrédients d'un algorithme"}},"staticQueryHashes":["604483588"]}