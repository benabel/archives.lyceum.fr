{"componentChunkName":"component---src-templates-cours-md-js","path":"/1g/nsi/7-langages-et-programmation/6-fonctions","result":{"data":{"markdownRemark":{"html":"<details class=\"programme\">\n<summary>\nProgramme Officiel\n</summary>\n<table class=\"table table-bordered table-hover\">\n<thead class=\"table-warning\">\n<tr class=\"header\">\n<th>\nContenus\n</th>\n<th>\nCapacités attendues\n</th>\n<th>\nCommentaires\n</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>\nSpécification\n</td>\n<td>\n<p>\nPrototyper une fonction.\n</p>\n<p>\nDécrire les préconditions sur les arguments.\n</p>\n<p>\nDécrire des postconditions sur les résultats.\n</p>\n</td>\n<td>\nDes assertions peuvent être utilisées pour garantir des préconditions ou\ndes postconditions.\n</td>\n</tr>\n</tbody>\n</table>\n<a class=\"lien-programme\" href=\"../programme/\">Lien vers le programme\ncomplet</a>\n</details>\n<p>Si on écrit un programme qui nécessite souvent de réaliser <em>les mêmes\nsuites d'instructions</em>, on peut alors <strong>définir une fonction</strong> qui\névitera de réécrire constamment les mêmes instructions et de <strong>rendre le\nprogramme plus lisible</strong>.</p>\n<h2 id=\"définition-dune-fonction\" style=\"position:relative;\"><a href=\"#d%C3%A9finition-dune-fonction\" aria-label=\"définition dune fonction permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Définition d'une fonction</h2>\n<p>Une fonction possède un nom pour pouvoir être appelée et il est possible\nde lui communiquer des arguments.</p>\n<p>En python la syntaxe de définition d'une fonction est la suivante:</p>\n<p><strong>Syntaxe (ATTENTION À L'INDENTATION)</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">nom_de_ma_fonction</span><span class=\"token punctuation\">(</span>paramètres séparés par des virgules<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    instruction <span class=\"token number\">1</span>\n    instruction <span class=\"token number\">2</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">return</span> objet_renvoyé_par_ma_fonction</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Pour appeler la fonction, il suffit de taper son nom avec les arguments\nentre parenthèse.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">nom_de_ma_fonction<span class=\"token punctuation\">(</span>arg1<span class=\"token punctuation\">,</span> arg2<span class=\"token punctuation\">,</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<details class=\"plus\">\n<summary>\nConventions de noms en Python\n</summary>\n<p>En python, la convention PEP8 donne l'habitude de nommer les fonctions\net variables avec des lettres minuscules et des tirets bas <code class=\"language-text\">_</code> pour\nremplacer les espaces.</p>\n</details>\n<div class=\"example\">\n<p>fonction <code class=\"language-text\">energie_cinetique()</code></p>\n<p>Nous prendrons comme exemple le calcul de l'énergie cinétique d'un\nvéhicule afin d'illustrer quelques notions utiles sur l'utilisation des\nfonctions en <code class=\"language-text\">python</code>.</p>\n<p>L'énergie cinétique d'un objet de masse m se déplaçant à la vitesse v\nest:</p>\n<div class=\"math math-display\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>E</mi><mi>c</mi><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mi>m</mi><msup><mi>v</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">Ec = \\frac{1}{2} m  v^{2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.0074em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord mathnormal\">m</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></span></span></div>\n<p>Nous allons créer une fonction <code class=\"language-text\">energie_cinetique</code> qui calcule sa valeur\nà partir des paramètres masse et vitesse.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># On définit la fonction</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">energie_cinetique</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0.5</span><span class=\"token operator\">*</span>m<span class=\"token operator\">*</span>v<span class=\"token operator\">**</span><span class=\"token number\">2</span>\n\n<span class=\"token comment\"># On appelle la fonction pour un objet de 2kg ayant une vitesse de 3m/s</span>\nenergie_cinetique<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> </code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Sortie:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">9.0</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n</div>\n<details class=\"plus\">\n<summary>\nLes procédures\n</summary>\n<p>Il est possible de définir des fonctions qui ne renvoient pas de valeur,\non les nomme alors parfois procédure.</p>\n<p>Ce type de fonction n'utilise pas l'instruction <code class=\"language-text\">return</code>. On peut s'en\nservir par exemple pour faire des affichages.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">affiche_ec</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    ec <span class=\"token operator\">=</span> <span class=\"token number\">0.5</span><span class=\"token operator\">*</span>m<span class=\"token operator\">*</span>v<span class=\"token operator\">**</span><span class=\"token number\">2</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"L'énergie cinétique est:\"</span><span class=\"token punctuation\">,</span> ec<span class=\"token punctuation\">,</span> <span class=\"token string\">\"J\"</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>L'affichage s'effectue lors de l'appel de la procédure:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">affiche_ec<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>Sortie:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">L'énergie cinétique est: 50.0 J</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n</details>\n<h2 id=\"prototyper-une-fonction\" style=\"position:relative;\"><a href=\"#prototyper-une-fonction\" aria-label=\"prototyper une fonction permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Prototyper une fonction</h2>\n<p>Pour expliquer le fonctionnement d'une fonction, on lui ajoute un\n<strong>prototype</strong> juste sous la ligne de définition. En Python les\nprototypes sont appelés <em>docstrings</em>. On peut y accéder dans le code\nsource ou simplement en utilisant la fonction <code class=\"language-text\">help()</code>.</p>\n<p>Le prototype doit décrire le <strong>rôle de la fonction</strong>, le <strong>type des\nparamètres</strong> et <strong>le type de la valeur de retour</strong>.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">somme</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"La somme de deux nombres.\n\n    Renvoie la somme des deux nombres donnés en argument\n\n    Parameters\n    ----------\n    a : int ou float\n        première valeur à ajouter\n    b : int ou float\n        deuxième valeur à ajouter\n\n    Returns\n    -------\n    int or float\n        La somme des deux arguments de la fonction\n    \"\"\"</span>\n    <span class=\"token keyword\">return</span> a <span class=\"token operator\">+</span> b</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Maintenant, en tapant <code class=\"language-text\">help(somme)</code>, vous aurez toutes les informations\nutilise pour utiliser la fonction.</p>\n<h2 id=\"réaliser-des-tests-sur-les-sorties-des-fonctions\" style=\"position:relative;\"><a href=\"#r%C3%A9aliser-des-tests-sur-les-sorties-des-fonctions\" aria-label=\"réaliser des tests sur les sorties des fonctions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Réaliser des tests sur les sorties des fonctions</h2>\n<p>Pour être sûr que notre fonction donne les bons résultats, on utilise\ndes tests d'<code class=\"language-text\">assert</code>ion <em>(affirmation en anglais)</em> qui renvoient une\n<code class=\"language-text\">AssertionError</code> en cas d'erreur.</p>\n<p>On pourrait tester notre fonction somme sur des cas simples:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">assert</span><span class=\"token punctuation\">(</span>somme<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">assert</span><span class=\"token punctuation\">(</span>somme<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">assert</span><span class=\"token punctuation\">(</span>somme<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Tests passés avec succés:)\"</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p>En cas d'erreur <em>(souvent en raison d'interventions humaines sur le\ncode!)</em>, le programme est bloqué ce qui évite de le laisser tourner en\nfaisant des erreurs qui pourraient être très dommageables dans certaines\nsituations(banque, commerce, circulation...).</p>\n<p>Par exemple, cette suite de test:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">assert</span><span class=\"token punctuation\">(</span>somme<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">assert</span><span class=\"token punctuation\">(</span>somme<span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">assert</span><span class=\"token punctuation\">(</span>somme<span class=\"token punctuation\">(</span><span class=\"token number\">10.0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">2.0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">8.0</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Tests passés avec succés:)\"</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Renverrait:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">Traceback (most recent call last):\n  File \"&lt;stdin>\", line 1, in &lt;module>\nAssertionError</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>Si vous ne voyez pas pourquoi, revoyez le chapitre sur l'<span><a href=\"/2021-2022/1g/nsi/2-representation-des-donnees-types-et-valeurs-de-base/3-representation-des-nombres-a-virgule\">encodage\ndes nombres à\nvirgule</a></span>.</p>\n<h2 id=\"en-plus-nommer-les-arguments-de-la-fonction-lors-de-lappel\" style=\"position:relative;\"><a href=\"#en-plus-nommer-les-arguments-de-la-fonction-lors-de-lappel\" aria-label=\"en plus nommer les arguments de la fonction lors de lappel permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>En plus: Nommer les arguments de la fonction lors de l'appel</h2>\n<p>On peut préciser le nom des arguments dans l'appel de la fonction pour\nêtre plus explicite, on parle alors de <code class=\"language-text\">keyword arguments</code>:\"arguments\nnommés\".</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># On définit la fonction</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">energie_cinetique</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0.5</span><span class=\"token operator\">*</span>m<span class=\"token operator\">*</span>v<span class=\"token operator\">**</span><span class=\"token number\">2</span>\n<span class=\"token comment\"># On appelle la fonction pour un objet de 2kg ayant une vitesse de 3m/s</span>\nenergie_cinetique<span class=\"token punctuation\">(</span>m<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> v<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Sortie:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">L'énergie cinétique est: 50.0 J</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>L'avantage est qu'en plus d'être plus explicite, on peut alors appeler\nles arguments dans un ordre quelconque ce qui n'est pas le cas lorsque\nl'on ne nomme pas les arguments(ce type d'arguments est appelé\n<code class=\"language-text\">positionnal argument</code>: \"argument positionnel\")</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">energie_cinetique<span class=\"token punctuation\">(</span>v<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> m<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>Sortie:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">L'énergie cinétique est: 50.0 J</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h2 id=\"en-plus-portée-des-variables\" style=\"position:relative;\"><a href=\"#en-plus-port%C3%A9e-des-variables\" aria-label=\"en plus portée des variables permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>En plus: portée des variables</h2>\n<p>Les variables définies dans les fonctions, ses paramètres ou autres,\nsont appelés des <strong>variables locales</strong>, par opposition aux <strong>variables\nglobales</strong>, qui sont définies dans flot d'exécution du programme.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># Je défini une variable globale x</span>\nx <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\n<span class=\"token comment\"># Je défini une fonction avec comme paramètre x</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">double</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token comment\"># Il s'agit d'une nouvelle variable locale x non liée à la variable globale x</span>\n  <span class=\"token keyword\">return</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> x\n\n<span class=\"token comment\"># J'appelle la fonction double avec x = 2</span>\ndouble<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">Sortie:</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>4</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">La variable globale `x` reste inchangée :\n\n```python\nprint(x)</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Sortie:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">3</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>","tableOfContents":"<ul>\n<li><a href=\"#d%C3%A9finition-dune-fonction\">Définition d'une fonction</a></li>\n<li><a href=\"#prototyper-une-fonction\">Prototyper une fonction</a></li>\n<li><a href=\"#r%C3%A9aliser-des-tests-sur-les-sorties-des-fonctions\">Réaliser des tests sur les sorties des fonctions</a></li>\n<li><a href=\"#en-plus-nommer-les-arguments-de-la-fonction-lors-de-lappel\">En plus: Nommer les arguments de la fonction lors de l'appel</a></li>\n<li><a href=\"#en-plus-port%C3%A9e-des-variables\">En plus: portée des variables</a></li>\n</ul>","frontmatter":{"tags":["python","fonctions","procédures"]},"fields":{"classe":"1g","chapter":"Fonctions","matter":"nsi","nChapter":"6","part":"Langages et programmation","nPart":"7"}}},"pageContext":{"slug":"1g/nsi/7-langages-et-programmation/6-fonctions","chapter":"Fonctions"}},"staticQueryHashes":["604483588"]}