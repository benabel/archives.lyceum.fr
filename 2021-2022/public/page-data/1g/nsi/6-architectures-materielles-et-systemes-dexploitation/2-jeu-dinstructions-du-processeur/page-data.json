{"componentChunkName":"component---src-templates-cours-md-js","path":"/1g/nsi/6-architectures-materielles-et-systemes-dexploitation/2-jeu-dinstructions-du-processeur","result":{"data":{"markdownRemark":{"html":"<details class=\"programme\">\n<summary>\nProgramme Officiel\n</summary>\n<table class=\"table table-bordered table-hover\">\n<thead class=\"table-warning\">\n<tr class=\"header\">\n<th>\nContenus\n</th>\n<th>\nCapacités attendues\n</th>\n<th>\nCommentaires\n</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>\nModèle d'architecture séquentielle (von Neumann)\n</td>\n<td>\nDérouler l'exécution d'une séquence d'instructions simples du type\nlangage machine.\n</td>\n<td>\nDes activités débranchées sont proposées.\n</td>\n</tr>\n</tbody>\n</table>\n<a class=\"lien-programme\" href=\"../programme/\">Lien vers le programme\ncomplet</a>\n</details>\n<p>Maintenant que nous avons vu quelle était la structure générale d'un\nordinateur, nous allons nous intéresser plus précisément au rôle du\nprocesseur et de la mémoire(vive), et voir comment peuvent être dictées\nles instructions à l'unité de contrôle du processeur.</p>\n<p><a title=\"JIDEVE, CC0, via Wikimedia Commons\" href=\"https://commons.wikimedia.org/wiki/File:Architecture_de_Von_Neumann_Princeton.svg\"><img width=\"100%\" alt=\"Architecture de Von Neumann Princeton\" src=\"https://upload.wikimedia.org/wikipedia/commons/7/73/Architecture_de_Von_Neumann_Princeton.svg\"></a></p>\n<h2 id=\"communication-entre-le-processeur-et-la-mémoire\" style=\"position:relative;\"><a href=\"#communication-entre-le-processeur-et-la-m%C3%A9moire\" aria-label=\"communication entre le processeur et la mémoire permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Communication entre le processeur et la mémoire</h2>\n<p>La mémoire contient plusieurs milliards de circuits mémoires un bit, qui\nsont organisés en <em>cases mémoires</em> de huit, seize, trente-deux,\nsoixante-quatre bits. Chaque case a une <em>adresse</em> unique, leur nombre\ndétermine la capacité de la mémoire vive de l'ordinateur.</p>\n<p>Le processeur ne possède qu'un très petit nombre de cases mémoires très\nrapides appelées des <em>registres</em> dont la capacité dépasse rarement\nquelques dizaines d'octet pour des raisons de coût et de place.\n<span><a href=\"https://fr.wikipedia.org/wiki/Registre_de_processeur\">Source\nWikipedia</a></span></p>\n<p>Ces registres peuvent stocker des données et des adresses de la mémoire.</p>\n<p>Le processeur est composé de transistors assemblés de façon à lui\npermettre de réaliser un <em>petit nombre d'opérations simples, mais à\nréaliser ces opérations très rapidement</em>.</p>\n<p>Par exemple pour échanger des données avec la mémoire, le processeur\nutilise deux instructions permettant de:</p>\n<ul>\n<li>Transférer l'état d'un registre dans une case mémoire: le\n<strong>Stockage</strong> (STORE);</li>\n<li>transférer l'état d'une case mémoire dans un registre: le\n<strong>Chargement</strong>(LOAD).</li>\n</ul>\n<h2 id=\"jeu-dinstructions-simplifié-du-processeur\" style=\"position:relative;\"><a href=\"#jeu-dinstructions-simplifi%C3%A9-du-processeur\" aria-label=\"jeu dinstructions simplifié du processeur permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Jeu d'instructions simplifié du processeur</h2>\n<p>Nous allons étudier un processeur simplifié avec <strong>deux registres</strong>\ndisposant d'un jeu d'instructions restreints:</p>\n<ul>\n<li><strong>STX x</strong>: stocke l'état du registre X dans la case mémoire\nd'adresse x.</li>\n<li><strong>LDX x</strong>: charge l'état de la case mémoire d'adresse x dans le\nregistre X.</li>\n<li><strong>ADD X</strong>: additionne le contenu des registres et le stocke dans le\nregistre X.</li>\n<li><strong>DEC X</strong>: décrémente la valeur contenue dans le registre X, c'est à\ndire soustrait 1.</li>\n</ul>\n<p>::: {.appli titre=\" Écrire des suites d'instructions pour le processeur\n\"} 1. Supposons que notre mémoire contienne quatre valeurs 2, 3, 5, 7\ndans les cases mémoires d'adresse 1, 2, 3, 4. Écrire la suite\nd'instructions qui permettra d'additionner ces quatre nombres et de\nstocker le résultat de cette addition dans la case mémoire 5. 2. Écrire\nune séquence d'instructions qui multiplie par 3 le nombre contenu dans\nla case mémoire d'adresse 5 et stocke le résultat dans la case mémoire\nd'adresse 6. :::</p>\n<h2 id=\"langage-machine\" style=\"position:relative;\"><a href=\"#langage-machine\" aria-label=\"langage machine permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Langage machine</h2>\n<p>Dans les premières machines, les opérations à effectuer étaient écrites\nsur des bandes perforées qui en défilant indiquaient au processeur la\nsuite d'opérations à réaliser.</p>\n<p>\n<a href=\"https://commons.wikimedia.org/wiki/File:DrehorgelLochkarte.jpg#mediaviewer/File:DrehorgelLochkarte.jpg\"><img class=\"center\" alt=\"DrehorgelLochkarte.jpg\" src=\"https://upload.wikimedia.org/wikipedia/commons/d/d8/DrehorgelLochkarte.jpg\" width=\"521\" height=\"794\"></a><br>\"<a href=\"https://commons.wikimedia.org/wiki/File:DrehorgelLochkarte.jpg#mediaviewer/File:DrehorgelLochkarte.jpg\">DrehorgelLochkarte</a>\".\nLicensed under Public Domain via\n<a href=\"//commons.wikimedia.org/wiki/\">Wikimedia Commons</a>.\n</p>\n<p>Puis cette idée a été abandonnée au profit d'une autre: celle\nd'enregistrer le programme dans la mémoire avec les données. Il convient\nalors de stocker les instructions du programme sous forme électrique\ndans la mémoire, on parle alors de langage machine.</p>\n<p>Par exemple, on va utiliser le codage suivant pour les instructions:</p>\n<table class=\"table table-bordered table-hover\">\n<thead class=\"table-warning\">\n<tr class=\"header\">\n<th>\ninstruction\n</th>\n<th>\ncodage\n</th>\n<th>\nsignification\n</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>\nLDA\n</td>\n<td>\n0\n</td>\n<td>\nCharge l'état de la <em>case mémoire donnée en argument</em> dans le\n<strong>registre A</strong>.\n</td>\n</tr>\n<tr class=\"even\">\n<td>\nLDB\n</td>\n<td>\n1\n</td>\n<td>\nCharge l'état de la <em>case mémoire donnée en argument</em> dans le\n<strong>registre B</strong>.\n</td>\n</tr>\n<tr class=\"odd\">\n<td>\nSTA\n</td>\n<td>\n2\n</td>\n<td>\nStocke l'état du <strong>registre A</strong> dans la <em>case mémoire\ndonnée en argument</em>.\n</td>\n</tr>\n<tr class=\"even\">\n<td>\nSTB\n</td>\n<td>\n3\n</td>\n<td>\nStocke l'état du <strong>registre B</strong> dans la <em>case mémoire\ndonnée en argument</em>.\n</td>\n</tr>\n<tr class=\"odd\">\n<td>\nADD\n</td>\n<td>\n4\n</td>\n<td>\nAdditionne le contenu des registres et le stocke <em>dans le registre\ndonné en argument</em>.\n</td>\n</tr>\n<tr class=\"even\">\n<td>\nDEC\n</td>\n<td>\n5\n</td>\n<td>\nDécrémente la valeur contenue <em>dans le registre donné en\nargument</em>, c'est à dire soustrait 1.\n</td>\n</tr>\n</tbody>\n</table>\n<p>En ce qui concerne les <strong>arguments</strong> des instructions:</p>\n<ul>\n<li>Les cases mémoires sont codées par leur adresse numérique,</li>\n<li>et les registres A et B sont codés par 0 et 1.</li>\n</ul>\n<p>Si on désire additionner le contenu des valeurs contenues dans les cases\nmémoires 5 et 6, et les stocker dans la case mémoire 7, on réalise la\nsuite d'instructions suivantes:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">LDA 5,LDB 6,ADD A,STA 7</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>soit:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">    0 5,1 6,4 0,2 7</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>Il suffit maintenant d'ajouter au processeur un nouveau registre qui\ndébute à 100, le <em>compteur de programme</em> ou <em>PC</em> (program counter), sur\nlequel on va stocker le programme à exécuter, et à chaque étape, le\nprocesseur :</p>\n<ul>\n<li>Charge le contenu des cases mémoires d'adresses PC et PC + 1,</li>\n<li>décode le premier de ces nombres en une instruction (0 devient LDA ,\n1 LDB , etc.),</li>\n<li>décode le deuxième de ces nombres comme un argument à\nl'instruction(p.ex: une adresse mémoire dans le cas des <code class=\"language-text\">LOAD</code>),</li>\n<li>exécute l'instruction en question,</li>\n<li>et ajoute 2 au registre PC pour passer à l'instruction suivante.</li>\n</ul>\n<p>::: {.appli titre=\" Écrire un programme en langage machine\"} 1. Traduire\nles suites d'instructions des applications de la partie précédente en\nlangage machine. 2. Écrire ces programmes en binaire avec des mots de 4\nbits. :::</p>\n<h2 id=\"vers-des-instructions-plus-évoluées\" style=\"position:relative;\"><a href=\"#vers-des-instructions-plus-%C3%A9volu%C3%A9es\" aria-label=\"vers des instructions plus évoluées permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vers des instructions plus évoluées</h2>\n<p>Si on désire réaliser des boucles et des tests, on ajoute trois\ninstructions au processeur qui seront codées ainsi:</p>\n<table class=\"table table-bordered table-hover\">\n<thead class=\"table-warning\">\n<tr class=\"header\">\n<th>\ninstruction\n</th>\n<th>\ncodage\n</th>\n<th>\nsignification\n</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>\nJMP\n</td>\n<td>\n6\n</td>\n<td>\nFait \"sauter\"(JUMP) le programme vers une ligne donnée en argument\n</td>\n</tr>\n<tr class=\"even\">\n<td>\nJMPZ\n</td>\n<td>\n7\n</td>\n<td>\nComme JUMP, mais <em>uniquement si le registre A est 0</em>.\n</td>\n</tr>\n<tr class=\"odd\">\n<td>\nEND\n</td>\n<td>\n8\n</td>\n<td>\nTermine le programme\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"example\">\n<p><strong>Comment écrire une boucle?</strong></p>\n<p><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span></span> et <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span></span> sont deux entiers positifs par exemple: 5 et 3.</p>\n<p>Expliquer ce que fait ce programme et indiquer ce que contiennent les\ncases mémoires 10 et 11 en fin d'exécution.</p>\n<table class=\"table table-bordered table-hover\">\n<thead class=\"table-warning\">\n<tr class=\"header\">\n<th>\nadresse\n</th>\n<th>\nvaleur\n</th>\n<th>\nsignification\n</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n</td>\n</tr>\n<tr class=\"even\">\n<td>\n10\n</td>\n<td>\nx\n</td>\n<td>\ncase mémoire\n</td>\n</tr>\n<tr class=\"odd\">\n<td>\n11\n</td>\n<td>\ny\n</td>\n<td>\ncase mémoire\n</td>\n</tr>\n<tr class=\"even\">\n<td>\n...\n</td>\n<td>\n</td>\n<td>\n</td>\n</tr>\n<tr class=\"odd\">\n<td>\n100\n</td>\n<td>\n0\n</td>\n<td>\nLDA\n</td>\n</tr>\n<tr class=\"even\">\n<td>\n101\n</td>\n<td>\n10\n</td>\n<td>\ncase mémoire\n</td>\n</tr>\n<tr class=\"odd\">\n<td>\n102\n</td>\n<td>\n1\n</td>\n<td>\nLDB\n</td>\n</tr>\n<tr class=\"even\">\n<td>\n103\n</td>\n<td>\n10\n</td>\n<td>\ncase mémoire\n</td>\n</tr>\n<tr class=\"odd\">\n<td>\n104\n</td>\n<td>\n7\n</td>\n<td>\nJMPZ\n</td>\n</tr>\n<tr class=\"even\">\n<td>\n105\n</td>\n<td>\n112\n</td>\n<td>\n112\n</td>\n</tr>\n<tr class=\"odd\">\n<td>\n106\n</td>\n<td>\n5\n</td>\n<td>\nDEC\n</td>\n</tr>\n<tr class=\"even\">\n<td>\n107\n</td>\n<td>\n0\n</td>\n<td>\nA\n</td>\n</tr>\n<tr class=\"odd\">\n<td>\n108\n</td>\n<td>\n4\n</td>\n<td>\nADD\n</td>\n</tr>\n<tr class=\"even\">\n<td>\n109\n</td>\n<td>\n1\n</td>\n<td>\nB\n</td>\n</tr>\n<tr class=\"odd\">\n<td>\n110\n</td>\n<td>\n6\n</td>\n<td>\nJMP\n</td>\n</tr>\n<tr class=\"even\">\n<td>\n111\n</td>\n<td>\n104\n</td>\n<td>\n104\n</td>\n</tr>\n<tr class=\"odd\">\n<td>\n112\n</td>\n<td>\n3\n</td>\n<td>\nSTB\n</td>\n</tr>\n<tr class=\"even\">\n<td>\n113\n</td>\n<td>\n11\n</td>\n<td>\ncase mémoire\n</td>\n</tr>\n<tr class=\"odd\">\n<td>\n114\n</td>\n<td>\n8\n</td>\n<td>\nEND\n</td>\n</tr>\n<tr class=\"even\">\n<td>\n...\n</td>\n<td>\n</td>\n<td>\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"example\">\n<p><strong>Comment écrire une instruction conditionnelle?</strong></p>\n<p>Pa exemple, on veut vérifier si deux valeurs sont égales:</p>\n<ul>\n<li>si oui stocker <code class=\"language-text\">079</code>, la lettre «O» en ASCII dans la case mémoire\n<code class=\"language-text\">10</code>.</li>\n<li>si oui stocker <code class=\"language-text\">078</code>, la lettre «N» ASCII dans la case mémoire <code class=\"language-text\">10</code>.</li>\n</ul>\n<p><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span></span> et <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span></span> sont deux entiers positifs stockés initialement dans les\ncases mémoires 10 et 11.</p>\n<table class=\"table table-bordered table-hover\">\n<thead class=\"table-warning\">\n<tr class=\"header\">\n<th>\nadresse\n</th>\n<th>\nvaleur\n</th>\n<th>\nsignification\n</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n</td>\n</tr>\n<tr class=\"even\">\n<td>\n10\n</td>\n<td>\nx\n</td>\n<td>\ncase mémoire\n</td>\n</tr>\n<tr class=\"odd\">\n<td>\n11\n</td>\n<td>\ny\n</td>\n<td>\ncase mémoire\n</td>\n</tr>\n<tr class=\"even\">\n<td>\n12\n</td>\n<td>\n78\n</td>\n<td>\ncase mémoire\n</td>\n</tr>\n<tr class=\"odd\">\n<td>\n13\n</td>\n<td>\n79\n</td>\n<td>\ncase mémoire\n</td>\n</tr>\n<tr class=\"even\">\n<td>\n...\n</td>\n<td>\n</td>\n<td>\n</td>\n</tr>\n<tr class=\"odd\">\n<td>\n100\n</td>\n<td>\n0\n</td>\n<td>\nLDA\n</td>\n</tr>\n<tr class=\"even\">\n<td>\n101\n</td>\n<td>\n10\n</td>\n<td>\nx\n</td>\n</tr>\n<tr class=\"odd\">\n<td>\n102\n</td>\n<td>\n1\n</td>\n<td>\nLDB\n</td>\n</tr>\n<tr class=\"even\">\n<td>\n103\n</td>\n<td>\n11\n</td>\n<td>\ny\n</td>\n</tr>\n<tr class=\"odd\">\n<td>\n104\n</td>\n<td>\n7\n</td>\n<td>\nJMPZ\n</td>\n</tr>\n<tr class=\"even\">\n<td>\n105\n</td>\n<td>\n112\n</td>\n<td>\n112\n</td>\n</tr>\n<tr class=\"odd\">\n<td>\n106\n</td>\n<td>\n5\n</td>\n<td>\nDEC\n</td>\n</tr>\n<tr class=\"even\">\n<td>\n107\n</td>\n<td>\n0\n</td>\n<td>\nA\n</td>\n</tr>\n<tr class=\"odd\">\n<td>\n108\n</td>\n<td>\n5\n</td>\n<td>\nDEC\n</td>\n</tr>\n<tr class=\"even\">\n<td>\n109\n</td>\n<td>\n1\n</td>\n<td>\nB\n</td>\n</tr>\n<tr class=\"odd\">\n<td>\n110\n</td>\n<td>\n6\n</td>\n<td>\nJMP\n</td>\n</tr>\n<tr class=\"even\">\n<td>\n111\n</td>\n<td>\n104\n</td>\n<td>\n104\n</td>\n</tr>\n<tr class=\"odd\">\n<td>\n112\n</td>\n<td>\n3\n</td>\n<td>\nSTB\n</td>\n</tr>\n<tr class=\"even\">\n<td>\n113\n</td>\n<td>\n11\n</td>\n<td>\n11\n</td>\n</tr>\n<tr class=\"odd\">\n<td>\n114\n</td>\n<td>\n0\n</td>\n<td>\nLDA\n</td>\n</tr>\n<tr class=\"even\">\n<td>\n115\n</td>\n<td>\n11\n</td>\n<td>\n11\n</td>\n</tr>\n<tr class=\"odd\">\n<td>\n116\n</td>\n<td>\n7\n</td>\n<td>\nJMPZ\n</td>\n</tr>\n<tr class=\"even\">\n<td>\n117\n</td>\n<td>\n122\n</td>\n<td>\n122\n</td>\n</tr>\n<tr class=\"odd\">\n<td>\n118\n</td>\n<td>\n0\n</td>\n<td>\nLDA\n</td>\n</tr>\n<tr class=\"even\">\n<td>\n119\n</td>\n<td>\n12\n</td>\n<td>\n78\n</td>\n</tr>\n<tr class=\"odd\">\n<td>\n120\n</td>\n<td>\n6\n</td>\n<td>\nJMP\n</td>\n</tr>\n<tr class=\"even\">\n<td>\n121\n</td>\n<td>\n124\n</td>\n<td>\n124\n</td>\n</tr>\n<tr class=\"odd\">\n<td>\n122\n</td>\n<td>\n0\n</td>\n<td>\nLDA\n</td>\n</tr>\n<tr class=\"even\">\n<td>\n123\n</td>\n<td>\n13\n</td>\n<td>\n79\n</td>\n</tr>\n<tr class=\"odd\">\n<td>\n124\n</td>\n<td>\n2\n</td>\n<td>\nSTA\n</td>\n</tr>\n<tr class=\"even\">\n<td>\n125\n</td>\n<td>\n10\n</td>\n<td>\n10\n</td>\n</tr>\n<tr class=\"odd\">\n<td>\n126\n</td>\n<td>\n8\n</td>\n<td>\nEND\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"ref\">\n<ul>\n<li>Chapitre 15: L'organisation d'un ordinateur <span><a href=\"http://www.editions-eyrolles.com/Livre/9782212135435/\">Informatique et\nsciences du numérique Spécialité ISN en terminale S - Avec des\nexercices corrigés et des idées de projets par Gilles\nDowek</a></span></li>\n</ul>\n</div>","tableOfContents":"<ul>\n<li><a href=\"#communication-entre-le-processeur-et-la-m%C3%A9moire\">Communication entre le processeur et la mémoire</a></li>\n<li><a href=\"#jeu-dinstructions-simplifi%C3%A9-du-processeur\">Jeu d'instructions simplifié du processeur</a></li>\n<li><a href=\"#langage-machine\">Langage machine</a></li>\n<li><a href=\"#vers-des-instructions-plus-%C3%A9volu%C3%A9es\">Vers des instructions plus évoluées</a></li>\n</ul>","frontmatter":{"tags":["langage machine","jeu d'instructions"]},"fields":{"classe":"1g","chapter":"Jeu d'instructions du processeur","matter":"nsi","nChapter":"2","part":"Architectures matérielles et systèmes d'exploitation","nPart":"6"}}},"pageContext":{"slug":"1g/nsi/6-architectures-materielles-et-systemes-dexploitation/2-jeu-dinstructions-du-processeur","chapter":"Jeu d'instructions du processeur"}},"staticQueryHashes":["604483588"]}