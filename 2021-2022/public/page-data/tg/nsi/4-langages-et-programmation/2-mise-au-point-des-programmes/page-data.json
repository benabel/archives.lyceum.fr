{"componentChunkName":"component---src-templates-cours-md-js","path":"/tg/nsi/4-langages-et-programmation/2-mise-au-point-des-programmes","result":{"data":{"markdownRemark":{"html":"<details class=\"programme\">\n<summary>\nProgramme Officiel\n</summary>\n<table class=\"table table-bordered table-hover\">\n<thead class=\"table-warning\">\n<tr class=\"header\">\n<th>\nContenus\n</th>\n<th>\nCapacités attendues\n</th>\n<th>\nCommentaires\n</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>\n<p>\nMise au point des programmes.\n</p>\n<p>\nGestion des bugs.\n</p>\n</td>\n<td>\nDans la pratique de la programmation, savoir répondre aux causes\ntypiques de bugs : problèmes liés au typage, effets de bord non désirés,\ndébordements dans les tableaux, instruction conditionnelle non\nexhaustive, choix des inégalités, comparaisons et calculs entre\nflottants, mauvais nommage des variables, etc.\n</td>\n<td>\n<p>\nOn prolonge le travail entrepris en classe de première sur l'utilisation\nde la spécification, des assertions, de la documentation des programmes\net de la construction de jeux de tests.\n</p>\n<p>\nLes élèves apprennent progressivement à anticiper leurs erreurs.\n</p>\n</td>\n</tr>\n</tbody>\n</table>\n<a class=\"lien-programme\" href=\"../programme/\">Lien vers le programme\ncomplet</a>\n</details>\n<blockquote>\n<p>La mise au point du programme doit permettre au programme de répondre\nà une spécification, durant cette phase, le programmeur se doit de\nsavoir répondre aux causes typiques de bugs.</p>\n</blockquote>\n<h2 id=\"spécification-et-tests\" style=\"position:relative;\"><a href=\"#sp%C3%A9cification-et-tests\" aria-label=\"spécification et tests permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Spécification et tests</h2>\n<p>Durant la phase de conception d'un programme, on commence par écrire la\nspécification du programme et écrire des jeux de tests pour valider le\nfonctionnement du programme.</p>\n<p>La spécification décrit les entrées et sorties du programme, ainsi que\nleurs types, ce que l'on appelle en anglais l'API_(Application\nProgramming Interface)_ ou interface de programmation applicative en\nfrançais(peu courant).</p>\n<p>Les tests vérifient que les sorties du programme sont conformes à ce que\nl'on attend.</p>\n<div class=\"example\">\n<p>Voici une fonction avec sa spécification.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">est_pair</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"Indique si un nombre est pair ou non\n\n    Paramètres\n    ----------\n    n: int\n\n    Returns\n    -------\n    bool\n        True si n est pair, False sinon\n    \"\"\"</span>\n    <span class=\"token keyword\">if</span> n <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Ou plus succinctement avec les annotations de type:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">est_pair</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">:</span>\n    <span class=\"token string\">\"Indique si un nombre est pair ou non\"</span>\n    <span class=\"token keyword\">if</span> n <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Maintenant un ensemble de tests:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">assert</span> est_pair<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">is</span> <span class=\"token boolean\">True</span>\n<span class=\"token keyword\">assert</span> est_pair<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">is</span> <span class=\"token boolean\">False</span>\n<span class=\"token keyword\">assert</span> est_pair<span class=\"token punctuation\">(</span><span class=\"token number\">1381635162</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">is</span> <span class=\"token boolean\">True</span>\n<span class=\"token keyword\">assert</span> est_pair<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">3565454165461</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">is</span> <span class=\"token boolean\">False</span>\n<span class=\"token comment\"># le is True est redondant</span>\n<span class=\"token keyword\">assert</span> est_pair<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># le is False peut être écrit</span>\n<span class=\"token keyword\">assert</span> <span class=\"token keyword\">not</span> est_pair<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>On peut également ajouter un message en cas d'erreur sur un test en le\nséparant par une virgule.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">assert</span> est_pair<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">is</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Le nombre deux n'a pas été reconnu comme pair\"</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>Ainsi si la fonction présentait un jour une erreur, le programme\ns'arrêterait en levant l'exception avec le message d'explication.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">Traceback (most recent call last):\n  File \"&lt;stdin>\", line 1, in &lt;module>\nAssertionError: Le nombre deux n'a pas été reconnu comme pair</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n</div>\n<h2 id=\"gestion-des-bugs\" style=\"position:relative;\"><a href=\"#gestion-des-bugs\" aria-label=\"gestion des bugs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gestion des bugs</h2>\n<p>Lors de l'écriture de code Python, vous ferez fréquemment des erreurs,\nqui vous serons «gentiment» rappelées par l'interpréteur Python à\nl'exécution du code.</p>\n<h3 id=\"erreurs-les-plus-courantes-en-python\" style=\"position:relative;\"><a href=\"#erreurs-les-plus-courantes-en-python\" aria-label=\"erreurs les plus courantes en python permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Erreurs les plus courantes en Python</h3>\n<p>En fonction des erreurs rencontrées, Python affiche des erreurs\nspécifiques qui vous aident à comprendre quel est le problème dans votre\nprogramme.</p>\n<p>Voici quelques erreurs courantes que vous devez apprendre à reconnaitre\nparmi les <span><a href=\"https://docs.python.org/fr/3/library/exceptions.html#exception-hierarchy\">nombreuses\nexceptions</a></span>\nde Python.</p>\n<table class=\"table table-bordered table-hover\">\n<thead class=\"table-warning\">\n<tr class=\"header\">\n<th>\nType d'erreur\n</th>\n<th>\nObjet Python\n</th>\n<th>\nErreurs courantes\n</th>\n<th>\nExemple\n</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>\nErreur de syntaxe\n</td>\n<td>\n<code>SyntaxError</code>\n</td>\n<td>\nErreur de parenthèse, <code>:</code> manquant avant un bloc\nd'instruction....\n</td>\n<td>\n<code>len(\\[1,2,3))</code>\n</td>\n</tr>\n<tr class=\"even\">\n<td>\nErreurs d'indexation\n</td>\n<td>\n<code>IndexError</code>\n</td>\n<td>\nAccès à un index non présent dans une liste. Accès à un index non\nprésent dans une liste, ou un tuple, str...\n</td>\n<td>\n<code>\\[12,15,14\\]\\[4\\]</code>\n</td>\n</tr>\n<tr class=\"odd\">\n<td>\nErreurs de nom\n</td>\n<td>\n<code>NameError</code>\n</td>\n<td>\nNom de fonction ou de variable mal orthographié.\n</td>\n<td>\n<code>print(Bonjour)</code> ou <code>prout(\"Bonjour\")</code>\n</td>\n</tr>\n<tr class=\"even\">\n<td>\nErreurs d'indentation\n</td>\n<td>\n<code>IndentationError</code>\n</td>\n<td>\nIndentation oubliée, ou trop grande, les blocs sont alors mal délimités.\n</td>\n<td>\n</td>\n</tr>\n<tr class=\"odd\">\n<td>\nErreurs de type\n</td>\n<td>\n<code>TypeError</code>\n</td>\n<td>\nOpération impossible entre deux types(str - int). Conversion de type\nimpossible.\n</td>\n<td>\n<code>\"3\" \\* \"5\"</code>\n</td>\n</tr>\n</tbody>\n</table>\n<p>Parfois ces erreurs nécessitent de modifier le code pour corriger le\n«bug».</p>\n<p>D'autres fois ces erreurs nécessitent d'être gérées sans arrêter\ncomplétement le programme.</p>\n<h3 id=\"gestion-des-exceptions-avec-try--except\" style=\"position:relative;\"><a href=\"#gestion-des-exceptions-avec-try--except\" aria-label=\"gestion des exceptions avec try  except permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gestion des exceptions avec <code class=\"language-text\">try: ... except...</code></h3>\n<p>Prenons l'exemple de la gestion d'une entrée utilisateur. Vous demandez\nl'âge d'une personne et vous attendez un entier pour vérifier son accès.</p>\n<p>Il faut lui reposer la question jusqu'à ce qu'il rentre une valeur\nconforme à nos attentes.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">age <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Quel âge avez-vous? \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> age <span class=\"token operator\">>=</span> <span class=\"token number\">13</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Vous pouvez vous inscrire\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Les réseaux sociaux sont interdits aux moins de 13 ans.\"</span><span class=\"token punctuation\">)</span>  </code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Si l'utilisateur répond <code class=\"language-text\">\"seize ans\"</code>, vous obtenez le message d'erreur\nsuivant:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">ValueError: invalid literal for int() with base 10: 'seize ans'</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>On va gérer cette erreur avec un <code class=\"language-text\">try</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n  age <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Quel âge avez-vous? \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> ValueError<span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Veuillez entrer votre âge sous forme de chiffres\"</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Le programme ne renvoie plus d'erreurs et ne s'arrête pas. On peut\ncontinuer à demander l'âge sans relancer le programme.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">Quel âge avez-vous? treize ans\nVeuillez entrer votre âge sous forme de chiffres</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>Un <code class=\"language-text\">while</code> peut permettre de reposer la question en cas de besoin.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">age <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n<span class=\"token keyword\">while</span> <span class=\"token keyword\">not</span> age<span class=\"token punctuation\">:</span> \n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n      age <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Quel âge avez-vous? \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">except</span> ValueError<span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Veuillez entrer votre âge sous forme de chiffres\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># on est sures d'avoir un age entier ici</span>\n<span class=\"token keyword\">if</span> age <span class=\"token operator\">>=</span> <span class=\"token number\">13</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Vous pouvez vous inscrire\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Les réseaux sociaux sont interdits aux moins de 13 ans.\"</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Voici un exemple d'interaction avec ce programme.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">Quel âge avez-vous?  treize ans\nVeuillez entrer votre âge sous forme de chiffres\nQuel âge avez-vous?  13.5\nVeuillez entrer votre âge sous forme de chiffres\nQuel âge avez-vous?  13\nVous pouvez vous inscrire</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<details class=\"plus\">\n<summary>\n \n</summary>\n<p>Attention à gérer les exceptions avec précaution ou vous risquez\nd'introduire des bugs qui n'arrêteront pas le programme et resteront\ndonc «invisibles».</p>\n</details>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#sp%C3%A9cification-et-tests\">Spécification et tests</a></p>\n</li>\n<li>\n<p><a href=\"#gestion-des-bugs\">Gestion des bugs</a></p>\n<ul>\n<li><a href=\"#erreurs-les-plus-courantes-en-python\">Erreurs les plus courantes en Python</a></li>\n<li><a href=\"#gestion-des-exceptions-avec-try--except\">Gestion des exceptions avec <code class=\"language-text\">try: ... except...</code></a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"tags":["bug","débogage"]},"fields":{"classe":"tg","chapter":"Mise au point des programmes","matter":"nsi","nChapter":"2","part":"Langages et programmation","nPart":"4"}}},"pageContext":{"slug":"tg/nsi/4-langages-et-programmation/2-mise-au-point-des-programmes","chapter":"Mise au point des programmes"}},"staticQueryHashes":["604483588"]}