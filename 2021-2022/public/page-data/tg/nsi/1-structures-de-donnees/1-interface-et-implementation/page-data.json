{"componentChunkName":"component---src-templates-cours-md-js","path":"/tg/nsi/1-structures-de-donnees/1-interface-et-implementation","result":{"data":{"markdownRemark":{"html":"<details class=\"programme\">\n<summary>\nProgramme Officiel\n</summary>\n<table class=\"table table-bordered table-hover\">\n<thead class=\"table-warning\">\n<tr class=\"header\">\n<th>\nContenus\n</th>\n<th>\nCapacités attendues\n</th>\n<th>\nCommentaires\n</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>\nStructures de données, interface et implémentation.\n</td>\n<td>\n<p>\nSpécifier une structure de données par son interface.\n</p>\n<p>\nDistinguer interface et implémentation.\n</p>\n<p>\nÉcrire plusieurs implémentations d'une même structure de données.\n</p>\n</td>\n<td>\nL'abstraction des structures de données est introduite après plusieurs\nimplémentations d'une structure simple comme la file (avec un tableau ou\navec deux piles).\n</td>\n</tr>\n<tr class=\"even\">\n<td>\n<p>\nListes, piles, files : structures linéaires.\n</p>\n<p>\nDictionnaires, index et clé.\n</p>\n</td>\n<td>\n<p>\nDistinguer des structures par le jeu des méthodes qui les caractérisent.\n</p>\n<p>\nChoisir une structure de données adaptée à la situation à modéliser.\n</p>\n<p>\nDistinguer la recherche d'une valeur dans une liste et dans un\ndictionnaire.\n</p>\n</td>\n<td>\n\\_\n</td>\n</tr>\n</tbody>\n</table>\n<a class=\"lien-programme\" href=\"../programme/\">Lien vers le programme\ncomplet</a>\n</details>\n<blockquote>\n<p>Cette année, nous allons voir de nouvelles façons d'organiser et de\ntraiter les données, ce que l'on appelle des <strong>structures de\ndonnées</strong>. On rencontrera, notamment des structures linéaires comme la\nliste, la pile et la file, mais également des structures\nrelationnelles telles que les arbres ou les graphes. Dans ce chapitre,\nnous allons commencer par distinguer la structure de données de son\nimplémentation en s'appuyant sur les tableaux et dictionnaires vus en\npremière.</p>\n</blockquote>\n<h2 id=\"les-tableaux-list-en-python\" style=\"position:relative;\"><a href=\"#les-tableaux-list-en-python\" aria-label=\"les tableaux list en python permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Les tableaux: <em>(<code class=\"language-text\">list</code> en python)</em></h2>\n<p>En\n<span><a href=\"/2021-2022/1g/nsi/3-representation-des-donnees-types-construits/2-tableaux\">première</a></span>,\nnous avons déjà rencontré les tableaux(<em>tableaux dynamiques</em> pour être\nplus précis), qui sont des séquences d'éléments ordonnés auxquels on\npeut accéder facilement par leur <em>index</em>.</p>\n<wc-wikimage title=\"Tableau_à_une_dimension.png\" caption=\"Un tableau est une suite de données ordonnées auxquelles on accéde par un index(un entier).\">\n</wc-wikimage>\n<p>En python les tableaux sont implémentés par l'objet <code class=\"language-text\">list</code> dont les\néléments sont séparés par une virgule et entourés de crochets.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># création</span>\nma_liste <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"deux\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3.0</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\"># accès aux élements par index</span>\nma_liste<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># renvoie \"deux\"!</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Les listes étant mutables, on peut ajouter ou supprimer des éléments\naprès création.</p>\n<ul>\n<li>Ajout d'un élément à l'index souhaité :</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># ajout avec la méthode `insert()`</span>\nma_liste<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"zéro\"</span><span class=\"token punctuation\">)</span>\nma_liste <span class=\"token comment\"># renvoie ['zéro', 1, 'deux', 3.0]</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<ul>\n<li>Suppression d'un élément à l'index souhaité :</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># suppression avec la méthode `pop()`</span>\nma_liste<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\nma_liste <span class=\"token comment\"># renvoie ['zéro', 1, 3.0]</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<ul>\n<li>Il est également fréquent de souhaiter connaitre la longueur de la\nliste :</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># longueur avec la fonction `len()`</span>\n<span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>ma_liste<span class=\"token punctuation\">)</span> <span class=\"token comment\"># renvoie 3 puisque ['zéro', 1, 3.0]</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<details class=\"plus\">\n<summary>\nUne liste est-elle vide en Python?\n</summary>\n<p>Python étant un langage à type dynamique, il peut convertir le type\nd'une valeur en un autre suivant la situation. Ainsi si une liste se\nretouve dans une situation ou un booléen est\nattendu(<code class=\"language-text\">if liste: ... while liste:</code>), il convertira:</p>\n<ul>\n<li>la liste vide en: <code class=\"language-text\">False</code></li>\n<li>une liste non vide en: <code class=\"language-text\">True</code></li>\n</ul>\n<p>Donc vérifier si une liste est vide peut-être simplement fait avec\n<code class=\"language-text\">bool(liste)</code>.</p>\n</details>\n<h2 id=\"différence-entre-interface-et-implémentation\" style=\"position:relative;\"><a href=\"#diff%C3%A9rence-entre-interface-et-impl%C3%A9mentation\" aria-label=\"différence entre interface et implémentation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Différence entre interface et implémentation</h2>\n<p>Les quatre méthodes qui ont été définies dans la classe <code class=\"language-text\">list</code> en\nPython: <code class=\"language-text\">len</code>, <code class=\"language-text\">pop</code>, <code class=\"language-text\">insert</code> sont ce que l'on appelle une\n<em>implémentation</em> de la structure de donnée tableau.</p>\n<dl>\n<dt>\nImplémentation\n</dt>\n<dd>\n<div>\n<p>L'implémentation d'une structure de données ou d'un algorithme est une\n<em>mise en œuvre</em> pratique dans un langage de programmation.</p>\n</div>\n</dd>\n</dl>\n<p>Il existe de nombreux langages de programmation qui implémentent le type\nabstrait <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mi>a</mi><mi>b</mi><mi>l</mi><mi>e</mi><mi>a</mi><mi>u</mi></mrow><annotation encoding=\"application/x-tex\">tableau</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">ab</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">u</span></span></span></span></span>, nous avions vu l'<span><a href=\"/2021-2022/1g/nsi/7-langages-et-programmation/7-comparaisons-de-langages\">année\ndernière</a></span>\nles différences d'implémentation entre les <code class=\"language-text\">list</code> de Python et les\n<code class=\"language-text\">Array</code> de javascript.</p>\n<p>Cependant, on retrouve des méthodes similaires qui sont ce que l'on\nappelle l'<em>interface</em> de la structure de données <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mi>a</mi><mi>b</mi><mi>l</mi><mi>e</mi><mi>a</mi><mi>u</mi></mrow><annotation encoding=\"application/x-tex\">tableau</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">ab</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">u</span></span></span></span></span>:</p>\n<ol>\n<li>« Insérer » : ajoute un élément dans le tableau à l'index souhaité.\n<code class=\"language-text\">ajout(index, élément)</code>;</li>\n<li>« Retirer » : retire un élément de le tableau à l'index souhaité.\n<code class=\"language-text\">suppr(index)</code>;</li>\n<li>« Le tableau est-il vide ? » : renvoie « vrai » si le tableau est\nvide, « faux » sinon. <code class=\"language-text\">est_vide()</code>;</li>\n<li>« Nombre d'éléments dans le tableau » : renvoie le nombre d'éléments\ndans le tableau. <code class=\"language-text\">longueur()</code>.</li>\n</ol>\n<p>[<span><a href=\"https://fr.wikipedia.org/wiki/Liste_(informatique)#Primitives\">Article Wikipedia sur les\nlistes</a></span>]{.cite-source}</p>\n<dl>\n<dt>\nInterface\n</dt>\n<dd>\n<div>\n<p>L'interface d'une structure de données est la <em>spécification</em> des\nméthodes pouvant être appliquées sur cette structure de données.</p>\n</div>\n</dd>\n</dl>\n<details class=\"plus\">\n<summary>\nVers le pseudo-langage\n</summary>\n<p>L'intérêt de définir des structures de données avec une interface\ncommune est de pouvoir écrire des algorithmes sur le papier en utilisant\nl'interface définie.</p>\n<p>On utilise alors un pseudo-langage plus ou moins proche de la langue\nnaturelle qui pourra être implémenté dans tous les langages de\nprogrammation ayant défini la structure de données.</p>\n</details>\n<details class=\"appli\">\n<summary>\nImplémentation d'un tableau en python\n</summary>\n<p>Créer une classe <code class=\"language-text\">Tableau</code> qui implémente les quatre méthodes ci-dessus\nen stockant les données du tableau dans un attribut appelé <code class=\"language-text\">data</code> de\ntype <code class=\"language-text\">list</code>e.</p>\n<p>Pour aller plus loin, faire l'<span><a href=\"./exo\">exercice 2</a></span>.</p>\n</details>\n<h2 id=\"les-tableaux-associatifs-dictionnaires-en-python\" style=\"position:relative;\"><a href=\"#les-tableaux-associatifs-dictionnaires-en-python\" aria-label=\"les tableaux associatifs dictionnaires en python permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Les Tableaux associatifs: <em>(<code class=\"language-text\">dict</code>ionnaires en Python)</em></h2>\n<p>Un dictionnaire, est un type de données associant à un ensemble de\n<strong>clés</strong>, un ensemble de <strong>valeurs</strong> correspondantes.</p>\n<wc-wikimage title=\"Associative_array_as_linked_list.svg\" caption=\"Dans tableau associatif, on accéde aux données par une clé(chaîne de caractère), ils ne sont généralement pas ordonnés.\">\n</wc-wikimage>\n<p>Il s'agit de <em>l'implémentation</em> d'une structure de données <em>abstraite</em>\nappelée <strong>tableau associatif</strong>.</p>\n<h3 id=\"interface\" style=\"position:relative;\"><a href=\"#interface\" aria-label=\"interface permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Interface</h3>\n<p>Les opérations usuellement fournies par un tableau associatif sont :</p>\n<ul>\n<li>ajout : association d'une nouvelle valeur à une nouvelle clef ;</li>\n<li>modification : association d'une nouvelle valeur à une ancienne clef\n;</li>\n<li>suppression : suppression d'une clef ;</li>\n<li>recherche : détermination de la valeur associée à une clef, si elle\nexiste.</li>\n</ul>\n<p>[<span><a href=\"https://fr.wikipedia.org/wiki/Tableau_associatif\">Article Wikipedia sur le Tableau\nassociatif</a></span>]{.cite-source}</p>\n<h3 id=\"implémentation-en-python\" style=\"position:relative;\"><a href=\"#impl%C3%A9mentation-en-python\" aria-label=\"implémentation en python permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Implémentation en python</h3>\n<p>Les dictionnaires font partie de la bibliothèque standard de Python\ngrâce à la classe <code class=\"language-text\">dict</code> vue en\n<span><a href=\"/2021-2022/1g/nsi/3-representation-des-donnees-types-construits/3-dictionnaires\">première</a></span>.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># création du dictionnaire</span>\npersonne <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"nom\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Lagaffe\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"prenom\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Gaston\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"age\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">27</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"rigolo\"</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">}</span>\n<span class=\"token comment\"># accès à une valeur</span>\npersonne<span class=\"token punctuation\">[</span><span class=\"token string\">'age'</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># renvoie 27</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Les dictionnaires étant mutables, on peut ajouter supprimer ou modifier\nune valeur à un dictionnaire déjà créé:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># ajout d'une clé</span>\npersonne<span class=\"token punctuation\">[</span><span class=\"token string\">\"dessinateur\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"André Franquin\"</span>\n<span class=\"token comment\"># suppression d'une clé</span>\n<span class=\"token keyword\">del</span> personne<span class=\"token punctuation\">[</span><span class=\"token string\">\"rigolo\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\"># modification d'une clé</span>\npersonne<span class=\"token punctuation\">[</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">28</span>\n<span class=\"token comment\"># accès à une valeur</span>\npersonne<span class=\"token punctuation\">[</span><span class=\"token string\">'age'</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># renvoie 28</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>La recherche d'une valeur d'une valeur est traitée ci-après comme le\npropose le <span><a href=\"../../programme\">programme officiel</a></span>.</p>\n<details class=\"plus\">\n<summary>\nDifférentes implémentations des dictionnaires\n</summary>\n<p>L'article anglais de wikipédia compare diverses implémentations des\ntableaux associatifs.</p>\n<p><a href=\"https://en.wikipedia.org/wiki/Associative_array#Comparison\">https://en.wikipedia.org/wiki/Associative_array#Comparison</a></p>\n<ul>\n<li>table de hachage</li>\n<li>arbres binaires de recherche équilibrés ou non</li>\n<li>liste chaînée...</li>\n</ul>\n<p>En fonction des implémentations utilisées, les opérations de recherche\nou d'ajouts sont plus ou moins couteuses en temps:</p>\n<ul>\n<li>temps fixe: <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span></span></li>\n<li>temps logarithmique <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>log</mi><mo>⁡</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(\\log n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></span></li>\n<li>temps linéaire <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></span></li>\n</ul>\n</details>\n<h2 id=\"recherche-dune-valeur\" style=\"position:relative;\"><a href=\"#recherche-dune-valeur\" aria-label=\"recherche dune valeur permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recherche d'une valeur</h2>\n<p>Les méthodes d'itération diffèrent légèrement entre les <code class=\"language-text\">list</code>es et le\n<code class=\"language-text\">dict</code>ionnaire en Python.</p>\n<h3 id=\"dans-une-liste\" style=\"position:relative;\"><a href=\"#dans-une-liste\" aria-label=\"dans une liste permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Dans une liste</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># on crée une liste vide par compréhension</span>\npaires <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>i <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>paires<span class=\"token punctuation\">)</span> <span class=\"token comment\"># affiche [0, 2, 4, 6, 8, 10, 12, 14, 16, 18]</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">recherche_liste</span><span class=\"token punctuation\">(</span>liste<span class=\"token punctuation\">,</span> élément<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># itération sur les valeurs de la liste</span>\n    <span class=\"token keyword\">for</span> e <span class=\"token keyword\">in</span> liste<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> e <span class=\"token operator\">==</span> élément<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n\n<span class=\"token comment\"># Appels de la fonction</span>\nrecherche_liste<span class=\"token punctuation\">(</span>paires<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># renvoie False</span>\nrecherche_liste<span class=\"token punctuation\">(</span>paires<span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># renvoie True</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<details class=\"plus\">\n<summary>\nAvec le mot-clé in\n</summary>\n<p>On peut utiliser le mot-clé <code class=\"language-text\">in</code> pour tester la présence d'une valeur\ndans la liste:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">8</span> <span class=\"token keyword\">in</span> paires\n<span class=\"token boolean\">True</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">7</span> <span class=\"token keyword\">in</span> paires\n<span class=\"token boolean\">False</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n</details>\n<h3 id=\"dans-un-dictionnaire\" style=\"position:relative;\"><a href=\"#dans-un-dictionnaire\" aria-label=\"dans un dictionnaire permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Dans un dictionnaire</h3>\n<p>Il existe trois méthodes d'itération sur les dictionnaires vues en\n<span><a href=\"/2021-2022/1g/nsi/3-representation-des-donnees-types-construits/3-dictionnaires/#it%C3%A9ration-sur-les-dictionnaires\">première</a></span>:</p>\n<ul>\n<li>Itération sur les clés: <code class=\"language-text\">keys()</code></li>\n<li>Itération sur les valeurs: <code class=\"language-text\">values()</code></li>\n<li>Itération sur les paires clé, valeurs: <code class=\"language-text\">items()</code></li>\n</ul>\n<p>Pour rechercher une valeur, une itération sur les valeurs suffit.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">personne <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'nom'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Lagaffe'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'prenom'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Gaston'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'age'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">28</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'dessinateur'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'André Franquin'</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">recherche_dict</span><span class=\"token punctuation\">(</span>dico<span class=\"token punctuation\">,</span> valeur<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> val <span class=\"token keyword\">in</span> dico<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> val <span class=\"token operator\">==</span> valeur<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n\nrecherche_dict<span class=\"token punctuation\">(</span>personne<span class=\"token punctuation\">,</span> <span class=\"token string\">'André Franquin'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># renvoie True</span>\nrecherche_dict<span class=\"token punctuation\">(</span>personne<span class=\"token punctuation\">,</span> <span class=\"token string\">'Lagafe'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># renvoie False</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<details class=\"plus\">\n<summary>\nAvec le mot-clé in\n</summary>\n<p>Le mot-clé <code class=\"language-text\">in</code> teste l'opérande parmi les <em>clés</em> et non les valeurs.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">'André Franquin'</span> <span class=\"token keyword\">in</span> personne\n<span class=\"token boolean\">False</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">'dessinateur'</span> <span class=\"token keyword\">in</span> personne\n<span class=\"token boolean\">True</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n</details>\n<h2 id=\"complexité-des-opérations\" style=\"position:relative;\"><a href=\"#complexit%C3%A9-des-op%C3%A9rations\" aria-label=\"complexité des opérations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Complexité des opérations</h2>\n<p>Nous avons déjà défini la complexité temporelle d'un algorithme qui\nconsiste à compter le nombre d'opérations élémentaires effectuées par un\nalgorithme pour aboutir au résultat souhaité.</p>\n<p>Nous allons préciser ici ce que l'on entend par opération élémentaire,\ncar parfois lorsque l'on tape une opération celle-ci n'est pas\nélémentaire.</p>\n<div class=\"prop\">\n<p>Une opération est élémentaire si elle a une complexité <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span></span>.</p>\n</div>\n<h3 id=\"cas-des-listes\" style=\"position:relative;\"><a href=\"#cas-des-listes\" aria-label=\"cas des listes permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cas des <code class=\"language-text\">list</code>es</h3>\n<table class=\"table table-bordered table-hover\">\n<thead class=\"table-warning\">\n<tr class=\"header\">\n<th>\nOpération\n</th>\n<th>\nExemple\n</th>\n<th>\nComplexité\n</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>\nAjout à la fin\n</td>\n<td>\n<code>liste.append(e)</code>\n</td>\n<td>\n<math display=\"inline\" xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mrow><mo stretchy=\"true\" form=\"prefix\">(</mo><mn>1</mn><mo stretchy=\"true\" form=\"postfix\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math>\n</td>\n</tr>\n<tr class=\"even\">\n<td>\nInsertion d'un élément\n</td>\n<td>\n<code>liste.insert(i, e)</code>\n</td>\n<td>\n<math display=\"inline\" xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mrow><mo stretchy=\"true\" form=\"prefix\">(</mo><mi>n</mi><mo stretchy=\"true\" form=\"postfix\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math>\n</td>\n</tr>\n<tr class=\"odd\">\n<td>\nSuppression à la fin\n</td>\n<td>\n<code>liste.pop()</code>\n</td>\n<td>\n<math display=\"inline\" xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mrow><mo stretchy=\"true\" form=\"prefix\">(</mo><mn>1</mn><mo stretchy=\"true\" form=\"postfix\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math>\n</td>\n</tr>\n<tr class=\"even\">\n<td>\nSuppression au milieu\n</td>\n<td>\n<code>liste.pop(i)</code>\n</td>\n<td>\n<math display=\"inline\" xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mrow><mo stretchy=\"true\" form=\"prefix\">(</mo><mi>n</mi><mo stretchy=\"true\" form=\"postfix\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math>\n</td>\n</tr>\n<tr class=\"odd\">\n<td>\nAccès à un élément\n</td>\n<td>\n<code>liste\\[i\\]</code>\n</td>\n<td>\n<math display=\"inline\" xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mrow><mo stretchy=\"true\" form=\"prefix\">(</mo><mn>1</mn><mo stretchy=\"true\" form=\"postfix\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math>\n</td>\n</tr>\n<tr class=\"even\">\n<td>\nModification d'un élément\n</td>\n<td>\n<code>liste\\[i\\] = e</code>\n</td>\n<td>\n<math display=\"inline\" xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mrow><mo stretchy=\"true\" form=\"prefix\">(</mo><mn>1</mn><mo stretchy=\"true\" form=\"postfix\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math>\n</td>\n</tr>\n<tr class=\"odd\">\n<td>\nLongueur de la liste\n</td>\n<td>\n<code>len(liste)</code>\n</td>\n<td>\n<math display=\"inline\" xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mrow><mo stretchy=\"true\" form=\"prefix\">(</mo><mn>1</mn><mo stretchy=\"true\" form=\"postfix\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math>\n</td>\n</tr>\n<tr class=\"even\">\n<td>\nRecherche d'un élément\n</td>\n<td>\n<code>e in liste</code>\n</td>\n<td>\n<math display=\"inline\" xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mrow><mo stretchy=\"true\" form=\"prefix\">(</mo><mi>n</mi><mo stretchy=\"true\" form=\"postfix\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math>\n</td>\n</tr>\n</tbody>\n</table>\n<p>[<span><a href=\"https://wiki.python.org/moin/TimeComplexity#list\">Time complexity sur le wiki\nPython</a></span>]{.cite-source}</p>\n<h3 id=\"cas-des-dictionnaires\" style=\"position:relative;\"><a href=\"#cas-des-dictionnaires\" aria-label=\"cas des dictionnaires permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cas des <code class=\"language-text\">dict</code>ionnaires</h3>\n<table class=\"table table-bordered table-hover\">\n<thead class=\"table-warning\">\n<tr class=\"header\">\n<th>\nOpération\n</th>\n<th>\nExemple\n</th>\n<th>\nComplexité\n</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>\nAjout d'un élément\n</td>\n<td>\n<code>dico\\[clé\\] = val</code>\n</td>\n<td>\n<math display=\"inline\" xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mrow><mo stretchy=\"true\" form=\"prefix\">(</mo><mn>1</mn><mo stretchy=\"true\" form=\"postfix\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math>\n</td>\n</tr>\n<tr class=\"even\">\n<td>\nModification d'un élément\n</td>\n<td>\n<code>dico\\[clé\\] = val</code>\n</td>\n<td>\n<math display=\"inline\" xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mrow><mo stretchy=\"true\" form=\"prefix\">(</mo><mn>1</mn><mo stretchy=\"true\" form=\"postfix\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math>\n</td>\n</tr>\n<tr class=\"odd\">\n<td>\nSuppression d'un élément\n</td>\n<td>\n<code>del dico\\[clé\\]</code>\n</td>\n<td>\n<math display=\"inline\" xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mrow><mo stretchy=\"true\" form=\"prefix\">(</mo><mn>1</mn><mo stretchy=\"true\" form=\"postfix\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math>\n</td>\n</tr>\n<tr class=\"even\">\n<td>\nAccès à un élément\n</td>\n<td>\n<code>dico\\[i\\]</code>\n</td>\n<td>\n<math display=\"inline\" xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mrow><mo stretchy=\"true\" form=\"prefix\">(</mo><mn>1</mn><mo stretchy=\"true\" form=\"postfix\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math>\n</td>\n</tr>\n<tr class=\"odd\">\n<td>\nRecherche d'une clé\n</td>\n<td>\n<code>e in dico</code>\n</td>\n<td>\n<math display=\"inline\" xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mrow><mo stretchy=\"true\" form=\"prefix\">(</mo><mn>1</mn><mo stretchy=\"true\" form=\"postfix\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math>\n</td>\n</tr>\n<tr class=\"even\">\n<td>\nRecherche d'un valeur\n</td>\n<td>\n<code>e in dico.values()</code>\n</td>\n<td>\n<math display=\"inline\" xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mrow><mo stretchy=\"true\" form=\"prefix\">(</mo><mi>n</mi><mo stretchy=\"true\" form=\"postfix\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math>\n</td>\n</tr>\n</tbody>\n</table>\n<p><em>Note: les complexités données sont moyennes car dans le pire des cas,\ntoutes ses opérations sont en <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></span>.</em></p>\n<p>[<span><a href=\"https://wiki.python.org/moin/TimeComplexity#dict\">Time complexity sur le wiki\nPython</a></span>]{.cite-source}</p>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#les-tableaux-list-en-python\">Les tableaux: <em>(<code class=\"language-text\">list</code> en python)</em></a></p>\n</li>\n<li>\n<p><a href=\"#diff%C3%A9rence-entre-interface-et-impl%C3%A9mentation\">Différence entre interface et implémentation</a></p>\n</li>\n<li>\n<p><a href=\"#les-tableaux-associatifs-dictionnaires-en-python\">Les Tableaux associatifs: <em>(<code class=\"language-text\">dict</code>ionnaires en Python)</em></a></p>\n<ul>\n<li><a href=\"#interface\">Interface</a></li>\n<li><a href=\"#impl%C3%A9mentation-en-python\">Implémentation en python</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#recherche-dune-valeur\">Recherche d'une valeur</a></p>\n<ul>\n<li><a href=\"#dans-une-liste\">Dans une liste</a></li>\n<li><a href=\"#dans-un-dictionnaire\">Dans un dictionnaire</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#complexit%C3%A9-des-op%C3%A9rations\">Complexité des opérations</a></p>\n<ul>\n<li><a href=\"#cas-des-listes\">Cas des <code class=\"language-text\">list</code>es</a></li>\n<li><a href=\"#cas-des-dictionnaires\">Cas des <code class=\"language-text\">dict</code>ionnaires</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"tags":["cours","terminale","lycée","numérique et sciences informatiques","nsi"]},"fields":{"classe":"tg","chapter":"Interface et implémentation","matter":"nsi","nChapter":"1","part":"Structures de données","nPart":"1"}}},"pageContext":{"slug":"tg/nsi/1-structures-de-donnees/1-interface-et-implementation","chapter":"Interface et implémentation"}},"staticQueryHashes":["604483588"]}