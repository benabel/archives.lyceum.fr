{"componentChunkName":"component---src-templates-exo-md-js","path":"/tg/nsi/1-structures-de-donnees/4-arbres/exo","result":{"data":{"markdownRemark":{"html":"<h2 id=\"questions-de-cours\" style=\"position:relative;\"><a href=\"#questions-de-cours\" aria-label=\"questions de cours permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Questions de cours</h2>\n<ol>\n<li>\n<p>Trouver une situation où la représentation sous forme d'arbre est\nadaptée, et donner un exemple d'arbre dans cette situation avec la\nsignification des nœuds et des arêtes utilisées.</p>\n</li>\n<li>\n<p>La racine d'un arbre en informatique est-elle en haut ou en bas d'un\narbre? Combien de racines un arbre peut-il avoir?</p>\n</li>\n<li>\n<p>Un arbre binaire <em>parfait</em> est un arbre qui est plein à chaque\nniveau de l'arbre, ce qui signifie que toutes les feuilles ont la\nmême profondeur égale à la hauteur de l'arbre.</p>\n<!-- digraph {\n node [color=lightgray fillcolor=lightgray fontcolor=black shape=record style=\"filled, rounded\"]\n 140364689978608 [label=\"<l>|<v> 8|<r>\"]\n 140364689978608:l -> 140364689973520:v\n 140364689978608:r -> 140364689966272:v\n 140364689973520 [label=\"<l>|<v> 10|<r>\"]\n 140364689973520:l -> 140364686130480:v\n 140364689973520:r -> 140364686123424:v\n 140364689966272 [label=\"<l>|<v> 9|<r>\"]\n 140364689966272:l -> 140364686123376:v\n 140364689966272:r -> 140364686124240:v\n 140364686130480 [label=\"<l>|<v> 12|<r>\"]\n 140364686130480:l -> 140364686130144:v\n 140364686130480:r -> 140364686114976:v\n 140364686123424 [label=\"<l>|<v> 14|<r>\"]\n 140364686123424:l -> 140364686123952:v\n 140364686123424:r -> 140364686989856:v\n 140364686123376 [label=\"<l>|<v> 2|<r>\"]\n 140364686123376:l -> 140364686998160:v\n 140364686123376:r -> 140364686995376:v\n 140364686124240 [label=\"<l>|<v> 11|<r>\"]\n 140364686124240:l -> 140364686994704:v\n 140364686124240:r -> 140364686989136:v\n 140364686130144 [label=\"<l>|<v> 5|<r>\"]\n 140364686114976 [label=\"<l>|<v> 13|<r>\"]\n 140364686123952 [label=\"<l>|<v> 7|<r>\"]\n 140364686989856 [label=\"<l>|<v> 1|<r>\"]\n 140364686998160 [label=\"<l>|<v> 0|<r>\"]\n 140364686995376 [label=\"<l>|<v> 4|<r>\"]\n 140364686994704 [label=\"<l>|<v> 6|<r>\"]\n 140364686989136 [label=\"<l>|<v> 3|<r>\"]\n} -->\n<p><span><img src=\"/2021-2022/f5a67c7d92f34122c1ae02ba3cb28267/arbre-parfait.svg\" alt=\"Arbre parfait de hauteur\n4\" title=\"fig:\"></span></p>\n<p>Combien de nœuds y a-t-il dans un arbre binaire <em>parfait</em> de hauteur\n2 ? de hauteur 3 ? de hauteur <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">h</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">h</span></span></span></span></span>?</p>\n</li>\n<li>\n<p>Dans un arbre binaire <em>complet</em>, tous les étages sont remplis à\nl'exception du dernier où les nœuds sont rassemblés à gauche.</p>\n<!-- \ndigraph {\n node [color=lightgray fillcolor=lightgray fontcolor=black shape=record style=\"filled, rounded\"]\n 140364686235520 [label=\"<l>|<v> 7|<r>\"]\n 140364686235520:l -> 140364686121408:v\n 140364686235520:r -> 140364686385088:v\n 140364686121408 [label=\"<l>|<v> 13|<r>\"]\n 140364686121408:l -> 140364686919712:v\n 140364686121408:r -> 140364686927200:v\n 140364686385088 [label=\"<l>|<v> 8|<r>\"]\n 140364686385088:l -> 140364686927440:v\n 140364686385088:r -> 140364686921344:v\n 140364686919712 [label=\"<l>|<v> 9|<r>\"]\n 140364686919712:l -> 140364686918512:v\n 140364686919712:r -> 140364686927392:v\n 140364686927200 [label=\"<l>|<v> 6|<r>\"]\n 140364686927200:l -> 140364686918704:v\n 140364686927440 [label=\"<l>|<v> 10|<r>\"]\n 140364686921344 [label=\"<l>|<v> 12|<r>\"]\n 140364686918512 [label=\"<l>|<v> 11|<r>\"]\n 140364686927392 [label=\"<l>|<v> 1|<r>\"]\n 140364686918704 [label=\"<l>|<v> 4|<r>\"]} -->\n<p><span><img src=\"/2021-2022/cb386111319b9eca51674e04114c256e/arbre-complet.svg\" alt=\"Arbre complet de hauteur\n4\" title=\"fig:\"></span></p>\n<p>Donner un encadrement de la taille d'un arbre complet en fonction de\nsa hauteur <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">h</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">h</span></span></span></span></span>?</p>\n</li>\n<li>\n<p>Quelle est la hauteur minimale d'un arbre de taille 7 ? de taille 77\n? de taille 777 ?</p>\n</li>\n<li>\n<p>Les calculs écrits sur une calculatrice sont transformés en arbres\nbinaires avec des nœuds de deux types: des nœuds d'opérations (+, -,\n* , /), et des nœuds de nombres (0, 1, ...,9). Proposer l'écriture\nd'un arbre pour l'opération suivante: <code class=\"language-text\">5 * 4 + 3 * 2</code>. Écrire les\nnotations préfixe et postfixe de cet arbre.</p>\n</li>\n</ol>\n<h2 id=\"utilisation-de-la-classe-arbrebinaire\" style=\"position:relative;\"><a href=\"#utilisation-de-la-classe-arbrebinaire\" aria-label=\"utilisation de la classe arbrebinaire permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Utilisation de la classe <code class=\"language-text\">ArbreBinaire</code></h2>\n<p>En utilisant la classe <code class=\"language-text\">ArbreBinaire</code> définie dans le cours, construire\nl'arbre binaire suivant:</p>\n<p><span><img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/dc/Sorted_binary_tree_ALL.svg/562px-Sorted_binary_tree_ALL.svg.png\" alt=\"arbre binaire de\nwikimedia\" title=\"fig:\"></span></p>\n<p>Expliquer comment afficher l'étiquette du nœud F en partant de la\nracine?</p>\n<h2 id=\"arbre-binaire\" style=\"position:relative;\"><a href=\"#arbre-binaire\" aria-label=\"arbre binaire permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Arbre binaire</h2>\n<p>En utilisant la classe <code class=\"language-text\">ArbreBinaire</code> définie dans le cours, écrire de\nfaçon <strong>récursive</strong> les fonctions suivantes qui prennent un seul\nparamètre de type <code class=\"language-text\">ArbreBinaire</code>:</p>\n<ul>\n<li><code class=\"language-text\">taille(arbre)</code> renvoie la taille de l'arbre.</li>\n<li><code class=\"language-text\">prefixe(arbre)</code> affiche les éléments lors du parcours de l'arbre en\nprofondeur dans l'ordre préfixe.</li>\n<li><code class=\"language-text\">infixe(arbre)</code> affiche les éléments lors du parcours de l'arbre en\nprofondeur dans l'ordre infixe.</li>\n<li><code class=\"language-text\">postfixe(arbre)</code> affiche les éléments lors du parcours de l'arbre\nen profondeur dans l'ordre postfixe.</li>\n</ul>\n<p><strong>En plus:</strong> Écrivez un algorithme non récursif pour effectuer une\ntraversée dans l'ordre infixe d'un arbre. (AIDE: Votre algorithme aura\nbesoin d'une pile pour que cela fonctionne.)</p>\n<h2 id=\"implémentation-dun-arbre-binaire-avec-des-tuples\" style=\"position:relative;\"><a href=\"#impl%C3%A9mentation-dun-arbre-binaire-avec-des-tuples\" aria-label=\"implémentation dun arbre binaire avec des tuples permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Implémentation d'un arbre binaire avec des tuples</h2>\n<p>Il est possible d'implémenter les arbres binaires avec des <em>tuples (ou\nlistes) imbriqués de longueur 3</em>.</p>\n<p>Un <strong>arbre vide</strong> sera représenté par un tuple vide: <code class=\"language-text\">()</code>.</p>\n<p>Un <strong>nœud non vide</strong> sera représenté ainsi:</p>\n<ul>\n<li>l'index <code class=\"language-text\">0</code> sera l'étiquette,</li>\n<li>l'index <code class=\"language-text\">1</code> sera le sous-arbre gauche: un tuple éventuellement vide,</li>\n<li>l'index <code class=\"language-text\">2</code> sera le sous-arbre droit: un tuple éventuellement vide.</li>\n</ul>\n<p><strong>Questions</strong></p>\n<ol>\n<li>\n<p>Construire l'arbre suivant avec cette représentation:</p>\n<p>\n<p><a href=\"https://commons.wikimedia.org/wiki/File:Binary_search_tree.svg#/media/Fichier:Binary_search_tree.svg\"><img width=\"256px\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/da/Binary_search_tree.svg/1200px-Binary_search_tree.svg.png\" alt=\"Binary search tree.svg\"></a>Domaine\npublic,\n<a href=\"https://commons.wikimedia.org/w/index.php?curid=488330\">Lien</a></p>\n</p>\n<p>Expliquer comment accéder à l'étiquette du nœud 7(en partant de la\nracine) à partir de cette implémentation.</p>\n</li>\n<li>\n<p>Implémenter les fonctions suivantes qui prennent en paramètre un\narbre binaire représenté sous forme de tuples imbriqués:</p>\n<ul>\n<li><code class=\"language-text\">taille(arbre)</code> renvoie la taille de l'arbre.</li>\n<li><code class=\"language-text\">est_vide(arbre)</code> renvoie <code class=\"language-text\">True</code> si l'arbre est vide <code class=\"language-text\">False</code>\nsinon.</li>\n<li><code class=\"language-text\">prefixe(arbre)</code> affiche les éléments lors du parcours de\nl'arbre en profondeur dans l'ordre préfixe.</li>\n<li><code class=\"language-text\">infixe(arbre)</code> affiche les éléments lors du parcours de l'arbre\nen profondeur dans l'ordre infixe.</li>\n<li><code class=\"language-text\">postfixe(arbre)</code> affiche les éléments lors du parcours de\nl'arbre en profondeur dans l'ordre postfixe.</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"parcours-en-largeur\" style=\"position:relative;\"><a href=\"#parcours-en-largeur\" aria-label=\"parcours en largeur permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Parcours en largeur</h2>\n<p><em>On utilise dans cet exercice la classe <code class=\"language-text\">ArbreBinaire</code> vue en cours pour\nreprésenter les arbres.</em></p>\n<p>Écrire une procédure itérative de <code class=\"language-text\">parcours_largeur(arbre)</code> qui affiche\nles éléments d'un arbre donné en argument de haut en bas et de gauche à\ndroite(<span><a href=\"/2021-2022/tg/nsi/1-structures-de-donnees/4-arbres/#parcours-dun-arbre-binaire\">parcours en\nlargeur</a></span>).</p>\n<p>On donne ci-dessous le pseudo-code issu de l'article Wikipédia anglais\nsur le parcours d'arbres <span><a href=\"https://en.wikipedia.org/wiki/Tree_traversal#Breadth-first_search\"><em>Breadth First\nSearch</em></a></span>\nen anglais.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">levelorder(root)\n    q ← empty queue\n    q.enqueue(root)\n    while not q.isEmpty() do\n        node ← q.dequeue()\n        visit(node)\n        if node.left ≠ null then\n            q.enqueue(node.left)\n        if node.right ≠ null then\n            q.enqueue(node.right)</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","fields":{"classe":"tg","chapter":"Arbres","matter":"nsi","nChapter":"4","part":"Structures de données","nPart":"1","type":"exo"}}},"pageContext":{"slug":"tg/nsi/1-structures-de-donnees/4-arbres/exo"}},"staticQueryHashes":["604483588"]}