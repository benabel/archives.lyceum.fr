{"componentChunkName":"component---src-templates-cours-md-js","path":"/tg/nsi/5-algorithmique/4-programmation-dynamique","result":{"data":{"markdownRemark":{"html":"<p><strong>Ce chapitre ne pourra pas faire l'objet d'une évaluation lors de\nl'épreuve terminale écrite et pratique de l'enseignement de\nspécialité.</strong> [<span><a href=\"https://www.education.gouv.fr/bo/21/Hebdo30/MENE2121274N.htm\">BO\nMENE2121274N</a></span>]{.cite-source}</p>\n<details class=\"programme\">\n<summary>\nProgramme Officiel\n</summary>\n<table class=\"table table-bordered table-hover\">\n<thead class=\"table-warning\">\n<tr class=\"header\">\n<th>\nContenus\n</th>\n<th>\nCapacités attendues\n</th>\n<th>\nCommentaires\n</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>\nProgrammation dynamique.\n</td>\n<td>\nUtiliser la programmation dynamique pour écrire un algorithme.\n</td>\n<td>\n<p>\nLes exemples de l'alignement de séquences ou du rendu de monnaie peuvent\nêtre présentés.\n</p>\n<p>\nLa discussion sur le coût en mémoire peut être développée.\n</p>\n</td>\n</tr>\n</tbody>\n</table>\n<a class=\"lien-programme\" href=\"../programme/\">Lien vers le programme\ncomplet</a>\n</details>\n<!-- \n<blockquote>\n<p>Dans ce chapitre, nous allons étudier la <em>programmation dynamique</em>, c'est une technique qui comme\nla méthode \"diviser pour régner décompose un problème en plus petits problèmes plus faciles à\nrésoudre. Cependant, elle y ajoute la technique de <em>mémoïsation</em> qui permet d'éviter d'effectuer\nplusieurs fois le même calcul lorsque les sous-problèmes ne sont pas indépendants.</p>\n</blockquote>\n<h2 id=\"principe\" style=\"position:relative;\"><a href=\"#principe\" aria-label=\"principe permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Principe</h2>\n<p>Nous allons illustrer le principe de la programmation dynamique sur le calcul de la suite de\nFibonacci. La suite de Fibonacci est une suite d'entiers dans laquelle chaque terme est la somme\ndes deux termes qui le précèdent.</p>\n<div class=\"math math-display\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi mathvariant=\"script\">F</mi><mn>0</mn></msub><mo>=</mo><mn>0</mn><mo separator=\"true\">,</mo><mspace width=\"1em\"></mspace><msub><mi mathvariant=\"script\">F</mi><mn>1</mn></msub><mo>=</mo><mn>1</mn><mo separator=\"true\">,</mo><mi>e</mi><mi>t</mi><msub><mi mathvariant=\"script\">F</mi><mi>n</mi></msub><mo>=</mo><msub><mi mathvariant=\"script\">F</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><msub><mi mathvariant=\"script\">F</mi><mrow><mi>n</mi><mo>−</mo><mn>2</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">{\\mathcal {F}}_{0} = 0 , \\quad {\\mathcal {F}}_{1}=1, et\n{\\mathcal {F}}_{n} = {\\mathcal {F}}_{n-1} + {\\mathcal {F}}_{n-2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.09931em;\">F</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">0</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.09931em;\">F</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">t</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.09931em;\">F</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8917em;vertical-align:-0.2083em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.09931em;\">F</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8917em;vertical-align:-0.2083em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.09931em;\">F</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span></span></span></span></span></div>\n<p>::: plus</p>\n<p>Cette suite est liée au nombre d'or, ou proportion divine telle que:</p>\n<div class=\"math math-display\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mfrac><mrow><mi>a</mi><mo>+</mo><mi>b</mi></mrow><mi>a</mi></mfrac><mo>=</mo><mfrac><mi>a</mi><mi>b</mi></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{a+b}{a} = \\frac{a}{b}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.0574em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.7936em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1076em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></div>\n<p>:::</p>\n<p>Si on appliquait simplement la méthode \"diviser pour régner\", l'algorithme s'écrirait:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">FONCTION fibonacci(n)\n   SI n = 0 OU n = 1\n         RETOURNER n\n   SINON\n         RETOURNER fibonacci(n-1) + fibonacci(n-2)</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Cependant cette méthode n'est pas du tout efficace, pour calculer <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"script\">F</mi><mn>5</mn></msub></mrow><annotation encoding=\"application/x-tex\">{\\mathcal {F}}_{5}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.09931em;\">F</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">5</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span>, je dois\ncalculer deux fois <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"script\">F</mi><mn>3</mn></msub></mrow><annotation encoding=\"application/x-tex\">{\\mathcal {F}}_{3}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.09931em;\">F</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">3</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span>, comme le montre le graph de dépendances des sous problème.</p>\n<p><a href=\"https://commons.wikimedia.org/wiki/File:Fibonacci_dynamic_programming.svg#/media/Fichier:Fibonacci_dynamic_programming.svg\"><img width=\"128px\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/06/Fibonacci_dynamic_programming.svg/1200px-Fibonacci_dynamic_programming.svg.png\" alt=\"Fibonacci dynamic programming.svg\"></a><br>Image par <a href=\"https://en.wikipedia.org/wiki/User:Dcoatzee\" class=\"extiw\" title=\"en:User:Dcoatzee\">en:User:Dcoatzee</a>, traced by <a href=\"//commons.wikimedia.org/wiki/User:Stannered\" title=\"User:Stannered\">User:Stannered</a> — <a href=\"https://en.wikipedia.org/wiki/Image:Fibonacci_dynamic_programming.png\" class=\"extiw\" title=\"en:Image:Fibonacci dynamic programming.png\">en:Image:Fibonacci dynamic programming.png</a>, Domaine public, <a href=\"https://commons.wikimedia.org/w/index.php?curid=3325402\">Lien</a></p>\n<p>Ce graph n'est pas un arbre ce qui illustre que les <em>sous-problèmes se chevauchent</em>. Dès que n\ndevient un peu plus grand, ces calculs inutiles à répétition rendent l'algorithme inutilisable.</p>\n<p>Nous allons utiliser la technique de <em>mémoïsation</em> de la programmation dynamique pour stocker les\nrésultats intermédiaires et les utiliser pour éviter les calculs identiques.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">F = []  # Cette liste est utilisée pour stocker les termes de la suite au fur et à mesure\nFONCTION fibonacci(n)\n   SI F[n] n'est pas défini\n      SI n = 0 ou n = 1\n         F[n] := n\n      SINON\n         F[n] := fibonacci(n-1) + fibonacci(n-2)\n   retourner F[n]</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>::: {.plus titre=\"Implémentation en Python\"}</p>\n<p>En mesurant les temps respectifs avec <code class=\"language-text\">timeit</code>, on constate que qu'avec des nombres de quelques\ndizaines seulement, l'algorithme dynamique est déjà 3000 fois plus rapide, et l'écart s'accentue\nplus n est grand.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token operator\">%</span><span class=\"token operator\">%</span>timeit\n<span class=\"token keyword\">def</span> <span class=\"token function\">fibonacci</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> n <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token keyword\">or</span> n <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> n\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> fibonacci<span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> fibonacci<span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">assert</span> fibonacci<span class=\"token punctuation\">(</span><span class=\"token number\">13</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">233</span>\n<span class=\"token keyword\">assert</span> fibonacci<span class=\"token punctuation\">(</span><span class=\"token number\">25</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">75025</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p><code class=\"language-text\">19.7 ms ± 5.79 µs per loop (mean ± std. dev. of 7 runs, 100 loops each)</code></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token operator\">%</span><span class=\"token operator\">%</span>timeit\nF <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">fibonacci_dynamique</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> n <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> n\n    <span class=\"token keyword\">elif</span> n <span class=\"token operator\">&lt;</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>F<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> F<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span>    \n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        fn <span class=\"token operator\">=</span> fibonacci_dynamique<span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> fibonacci_dynamique<span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n        F<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>fn<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> F<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">assert</span> fibonacci_dynamique<span class=\"token punctuation\">(</span><span class=\"token number\">13</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">233</span>\n<span class=\"token keyword\">assert</span> fibonacci_dynamique<span class=\"token punctuation\">(</span><span class=\"token number\">25</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">75025</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p><code class=\"language-text\">6.35 µs ± 11.3 ns per loop (mean ± std. dev. of 7 runs, 100000 loops each)</code></p>\n<p>:::</p>\n<p>Bien sûr l'utilisation de la liste a un coût mémoire, le gain temporel(la complexité temporelle) se\nfait au détriment de l'utilisation de la mémoire(On parle de complexité spatiale en ce qui concerne\nla mémoire).</p>\n<h2 id=\"le-problème-du-sac-à-dos\" style=\"position:relative;\"><a href=\"#le-probl%C3%A8me-du-sac-%C3%A0-dos\" aria-label=\"le problème du sac à dos permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Le problème du sac à dos</h2>\n<p>Nous avions déjà vu le problème en première dans le chapitre sur les <a href=\"../../../1g/nsi/8-algorithmique/5-algorithmes-gloutons/\">algorithmes\ngloutons</a> qui nous avait permis\nd'obtenir une solution assez bonne mais pas forcément optimale par la méthode gloutonne.</p>\n<p><a href=\"https://commons.wikimedia.org/wiki/File:Knapsack.svg#/media/File:Knapsack.svg\"><img width=\"256px\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/f/fd/Knapsack.svg/1200px-Knapsack.svg.png\" alt=\"Knapsack.svg\"></a><br><a href=\"https://creativecommons.org/licenses/by-sa/2.5\" title=\"Creative Commons Attribution-Share Alike 2.5\">CC BY-SA 2.5</a>, <a href=\"https://commons.wikimedia.org/w/index.php?curid=985491\">Link</a></p>\n<p>C'est un problème d'optimisation sous contrainte: Comment maximiser la valeur contenue dans le sac\nsans dépasser la capacité du sac?</p>\n<p>Nous allons appliquer à ce problème la programmation dynamique car il possède une propriété\nparticulière:</p>\n<blockquote>\n<p>Le problème du sac à dos possède la propriété de sous-structure optimale, c'est-à-dire que l'on\npeut construire la solution optimale du problème à <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6595em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span></span> variables à partir du problème à <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">i-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7429em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span></span>\nvariables.</p>\n</blockquote>\n<p><a href=\"https://fr.wikipedia.org/wiki/Probl%C3%A8me_du_sac_%C3%A0_dos#Programmation_dynamique\">Article Wikipedia sur le problème du sac à dos</a>{.cite-source}</p>\n<p>En clair il est possible de trouver la solution pour un sac de capacité <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>W</mi></mrow><annotation encoding=\"application/x-tex\">W</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span></span></span></span></span> si on connait la\nsolution pour tous les sacs de capacité inférieur à <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>W</mi></mrow><annotation encoding=\"application/x-tex\">W</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span></span></span></span></span>.</p>\n<p>On va construire un tableau avec nos solutions optimales pour les sacs allant de 1 à 15kg.</p>\n<p>Pour chaque masse de sac <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span></span>, on a pour chaque objet deux possibilités:</p>\n<ul>\n<li>On prend cet objet de masse <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>m</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">m_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span> et de valeur <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>v</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">v_{i}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span>.</li>\n<li>On ne prend pas cet objet.</li>\n</ul>\n<p>Pour prendre cette décision, il suffit de comparer la valeur du sac si on ne prend pas l'objet à la\nvaleur du sac si on prend cet objet <strong>plus</strong> la plus grande valeur du sac de poids capacité du sac\nmoins masse de l'objet, la solution gardée est:</p>\n<div class=\"math math-display\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>max</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><mi>v</mi><mi>a</mi><mi>l</mi><mi>e</mi><mi>u</mi><mi>r</mi><mo stretchy=\"false\">(</mo><mi>m</mi><mo>−</mo><msub><mi>m</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo><mo>+</mo><msub><mi>v</mi><mi>i</mi></msub><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\max \\left(valeur(m - m_i) + v_{i} \\right)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\">max</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span></span></span></span></span></div>\n<p><em>Ne pas prendre l'objet consiste à prendre un objet de masse nulle et de valeur nulle(voir\nimplémentation).</em></p>\n<p>::: {.plus titre=\"Implémentation en Python\"}</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># adapté de https://dev.to/downey/solving-the-knapsack-problem-with-dynamic-programming-4hce</span>\n\n<span class=\"token comment\"># | objet | masse | valeur |</span>\n<span class=\"token comment\"># |-------|-------|--------|</span>\n<span class=\"token comment\"># | 1     | 1     | 1      |</span>\n<span class=\"token comment\"># | 2     | 1     | 2      |</span>\n<span class=\"token comment\"># | 3     | 2     | 2      |</span>\n<span class=\"token comment\"># | 4     | 4     | 10     |</span>\n<span class=\"token comment\"># | 5     | 12    | 4      |</span>\n\n<span class=\"token comment\"># On a ajouté l'absence d'objet avec les 0</span>\nobjet_masses <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">]</span>\nobjet_valeurs <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n\nn <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>objet_masses<span class=\"token punctuation\">)</span>\nMASSE_MAX <span class=\"token operator\">=</span> <span class=\"token number\">15</span>  <span class=\"token comment\"># Capacité maximale du sac</span>\n\n<span class=\"token comment\"># initialisation de notre liste de valeurs optimales à 0</span>\nsac_optimisés <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>MASSE_MAX <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># Itération sur toutes les masses de 1 à 15kg</span>\n<span class=\"token comment\"># (Approche BOTTOM-UP nécessaire à la mémoïsation)</span>\n<span class=\"token keyword\">for</span> m <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> MASSE_MAX <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    valeur_max_pour_m <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        mi <span class=\"token operator\">=</span> objet_masses<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n        vi <span class=\"token operator\">=</span> objet_valeurs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">if</span> mi <span class=\"token operator\">&lt;=</span> m<span class=\"token punctuation\">:</span>\n            valeur_avec_objet_i <span class=\"token operator\">=</span> sac_optimisés<span class=\"token punctuation\">[</span>m <span class=\"token operator\">-</span> mi<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> vi\n            <span class=\"token keyword\">if</span> valeur_avec_objet_i <span class=\"token operator\">></span> valeur_max_pour_m<span class=\"token punctuation\">:</span>\n                valeur_max_pour_m <span class=\"token operator\">=</span> valeur_avec_objet_i\n    sac_optimisés<span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> valeur_max_pour_m\n\n<span class=\"token comment\"># Results</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Resultat: \"</span><span class=\"token punctuation\">,</span> sac_optimisés<span class=\"token punctuation\">[</span>MASSE_MAX<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"liste des sac_optimisés: \"</span><span class=\"token punctuation\">,</span> sac_optimisés<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>La démonstration de la correction de l'algorithme est donnée <a href=\"eind\">ici</a>.</p>\n<p>La complexité est <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>m</mi><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(mn)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">mn</span><span class=\"mclose\">)</span></span></span></span></span>, puisqu'on fait une itération de tous les objets pour tous les sacs(Force\nBrute).</p>\n<p>:::</p>\n<p>On obtient ce tableau qui permet de voir que la solution optimale est 36€ pour un sac de 15kg.</p>\n<table>\n<thead>\n<tr>\n<th>Capacité du sac(kg)</th>\n<th>0</th>\n<th>1</th>\n<th>2</th>\n<th>3</th>\n<th>4</th>\n<th>5</th>\n<th>6</th>\n<th>7</th>\n<th>8</th>\n<th>9</th>\n<th>10</th>\n<th>11</th>\n<th>12</th>\n<th>13</th>\n<th>14</th>\n<th>15</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Valeur maximale(€)</td>\n<td>0</td>\n<td>2</td>\n<td>4</td>\n<td>6</td>\n<td>10</td>\n<td>12</td>\n<td>14</td>\n<td>16</td>\n<td>20</td>\n<td>22</td>\n<td>24</td>\n<td>26</td>\n<td>30</td>\n<td>32</td>\n<td>34</td>\n<td>36</td>\n</tr>\n</tbody>\n</table>\n<p>Comme vous le voyez cet algorithme nous donne la valeur maximale du sac, mais on ne sait pas quels\nobjets, il faut prendre, on va le modifier pour garder en plus de la valeur maximale les objets\npris.</p>\n<p>Nous allons modifier légérement le code pour garder un trace des sacs optimaux réalisés en\nmodifiant légérement la liste utilisée pour la mémoïsation:</p>\n<p>Au lieu de stocker simplement la valeur du sac, on crée une liste avec:</p>\n<ul>\n<li>la valeur à l'index 0</li>\n<li>le contenu du sac à l'index 1 sous forme de liste</li>\n</ul>\n<p>Le meilleur sac de 14 kg <code class=\"language-text\">[14, [0, 0, 2, 0, 1, 0]]</code> a une valeur de 14€ avec 2 objets de 2kg à 2€\net 1 objet de 4kg à 10€.</p>\n<p>::: {.plus titre=\"Implémentation en Python\"}</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># Pour connaitre le jeu d'objets de la solution optimale</span>\n<span class=\"token comment\"># On va stocker les objets dans une liste </span>\n<span class=\"token comment\"># en plus de la valeur maximale du sac</span>\n\n<span class=\"token comment\"># On a ajouté l'absence d'objet avec les 0</span>\nobjet_masses <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">]</span>\nobjet_valeurs <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n\nn <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>objet_masses<span class=\"token punctuation\">)</span>\nMASSE_MAX <span class=\"token operator\">=</span> <span class=\"token number\">15</span>  <span class=\"token comment\"># Capacité maximale du sac</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">pas_dobjets</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"renvoie une liste vide contenant les objets choisis\n    \n    Fonction utilitaire car les listes sont passées en références\"\"\"</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># initialisation de notre liste de valeurs optimales</span>\nsac_optimisés <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> pas_dobjets<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>MASSE_MAX <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># Itération sur toutes les masses de 1 à 15kg</span>\n<span class=\"token comment\"># (Approche BOTTOM-UP nécessaire à la mémoïsation)</span>\n<span class=\"token keyword\">for</span> m <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> MASSE_MAX <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># On crée une sous liste pour la liste des objets</span>\n    valeur_max_pour_m <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> pas_dobjets<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        mi <span class=\"token operator\">=</span> objet_masses<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n        vi <span class=\"token operator\">=</span> objet_valeurs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">if</span> mi <span class=\"token operator\">&lt;=</span> m<span class=\"token punctuation\">:</span>\n            valeur_avec_objet_i <span class=\"token operator\">=</span> sac_optimisés<span class=\"token punctuation\">[</span>m <span class=\"token operator\">-</span> mi<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> vi\n            <span class=\"token keyword\">if</span> valeur_avec_objet_i <span class=\"token operator\">></span> valeur_max_pour_m<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                valeur_max_pour_m<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> valeur_avec_objet_i\n                valeur_max_pour_m<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> sac_optimisés<span class=\"token punctuation\">[</span>m <span class=\"token operator\">-</span> mi<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                valeur_max_pour_m<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n    sac_optimisés<span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> valeur_max_pour_m\n\n<span class=\"token comment\"># Results</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Resultat: \"</span><span class=\"token punctuation\">,</span> sac_optimisés<span class=\"token punctuation\">[</span>MASSE_MAX<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#print(\"liste des sac_optimisés: \", sac_optimisés)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>:::</p>\n<p>On obtient le tableau suivant:</p>\n<p>+---------------------+--------------------+--------------------+\n| Capacité du sac(kg) | Valeur maximale(€) |   Contenu du sac   |\n+=====================+====================+====================+\n| 0                   | 0                  | [0, 0, 0, 0, 0, 0] |\n| 1                   | 2                  | [0, 0, 1, 0, 0, 0] |\n| 2                   | 4                  | [0, 0, 2, 0, 0, 0] |\n| 3                   | 6                  | [0, 0, 3, 0, 0, 0] |\n| 4                   | 10                 | [0, 0, 0, 0, 1, 0] |\n| 5                   | 12                 | [0, 0, 1, 0, 1, 0] |\n| 6                   | 14                 | [0, 0, 2, 0, 1, 0] |\n| 7                   | 16                 | [0, 0, 3, 0, 1, 0] |\n| 8                   | 20                 | [0, 0, 0, 0, 2, 0] |\n| 9                   | 22                 | [0, 0, 1, 0, 2, 0] |\n| 10                  | 24                 | [0, 0, 2, 0, 2, 0] |\n| 11                  | 26                 | [0, 0, 3, 0, 2, 0] |\n| 12                  | 30                 | [0, 0, 0, 0, 3, 0] |\n| 13                  | 32                 | [0, 0, 1, 0, 3, 0] |\n| 14                  | 34                 | [0, 0, 2, 0, 3, 0] |\n| 15                  | 36                 | [0, 0, 3, 0, 3, 0] |\n+---------------------+--------------------+--------------------+</p>\n<p>On a donc maintenant en plus de la valeur, le contenu du sac. Je vous laisse vérifier que ce sac\nest bien <em>optimal</em>.</p>\n<h2 id=\"conclusion\" style=\"position:relative;\"><a href=\"#conclusion\" aria-label=\"conclusion permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Conclusion</h2>\n<p>Dans ce chapitre nous avons vu comment résoudre des problèmes d'optimisation à l'aide de la\nprogrammation dynamique si la solution du problème peut-être construite à partir de la solution de\nses sous problèmes. Nous avons également vu comment rendre ces algorithmes plus efficaces\n(temporellement) en utilisant la technique des mémoïsation qui consite à stocker les solutions des\nsous-problèmes afin de ne pas les calculer plusieurs fois.</p>\n<p>Même si nous avons vu que deux exemples, les problèmes d'optimisations contraintes sont des\nproblèmes très courants et d'une grande importance pratique:</p>\n<ul>\n<li>Gestion des stocks d'un magasin,</li>\n<li>gestion d'emplois du temps,</li>\n<li>optimisation des ressources d'un ordinateur, d'un réseau, des salles d'un batiment...</li>\n</ul>\n<p>::: ref</p>\n<ul>\n<li><a href=\"https://fr.wikipedia.org/wiki/Programmation_dynamique\">Article Wikipedia sur la programmation dynamique</a></li>\n<li><a href=\"eind\">Lecture 13:The Knapsack Problem University of Eindhoven</a></li>\n</ul>\n<p>::: --></p>","tableOfContents":"","frontmatter":{"tags":["cours","terminale","lycée","numérique et sciences informatiques","nsi"]},"fields":{"classe":"tg","chapter":"Programmation dynamique*","matter":"nsi","nChapter":"4","part":"Algorithmique","nPart":"5"}}},"pageContext":{"slug":"tg/nsi/5-algorithmique/4-programmation-dynamique","chapter":"Programmation dynamique*"}},"staticQueryHashes":["604483588"]}