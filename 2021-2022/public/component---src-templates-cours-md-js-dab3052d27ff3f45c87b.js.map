{"version":3,"file":"component---src-templates-cours-md-js-dab3052d27ff3f45c87b.js","mappings":"kOAkBA,UAEA,UAAmB,KAAEA,EAAF,SAAQC,IACzB,MAAMC,GAASC,EAAAA,EAAAA,IAAgBH,EAAKI,gBAE9BC,EAAS,GAAEH,EAAOI,wBAAuBC,EAAAA,EAAAA,IAC7CL,EAAOM,eACDC,EAAAA,EAAAA,IACNP,EAAOQ,+DAGHC,EAAe,aAAWF,EAAAA,EAAAA,IAC9BP,EAAOQ,eACDH,EAAAA,EAAAA,IAAqBL,EAAOM,sBAAsBN,EAAOI,WAG3DM,EAAoBX,EAASY,SAASC,QAAQ,WAAa,IAUjE,OAJAC,EAAAA,EAAAA,YAAU,KACR,+BACC,IAGD,gBAAC,IAAD,CAAQd,SAAUA,EAAUD,KAAMA,GAChC,gBAAC,IAAD,CACEK,MAAQ,GAAEA,IACVW,KAAM,CACJ,CACEC,KAAO,cACPN,YAAc,GAAEA,KAElB,CAAEM,KAAO,WAAWC,QAAShB,EAAOiB,KAAKC,KAAM,SAGjD,0BAAQC,KAAK,uBAAwB,mGAGxBnB,EAAOoB,UAAUpB,EAAOI,wCACjBK,+hBAeCF,EAAAA,EAAAA,IAAqBP,EAAOQ,mCACnCa,EAAAA,EAAAA,IAA4BrB,EAAOQ,6CAErCT,EAASuB,2BAIvB,gBAAC,IAAD,CAAeC,KAAMvB,IACrB,gBAAC,IAAD,CAAQU,kBAAmBA,EAAmBS,KA9CpC,WA+CV,gBAAC,IAAD,KACE,0BAAM,YAAWnB,EAAOwB,aAAaxB,EAAOI,WAC3CJ,EAAOyB,iBAAmBzB,EAAOyB,gBAAgBC,OAAS,GACzD,gBAAC,IAAD,CAAKD,gBAAiBzB,EAAOyB,mBAGjC,uBAAKE,wBAAyB,CAAEC,OAAQ5B,EAAO6B,QAGpD,C","sources":["webpack://gatsby-lyceum-site/./src/templates/cours-md.js"],"sourcesContent":["import { React, useEffect } from 'react'\nimport { graphql } from 'gatsby'\nimport { Helmet } from 'react-helmet'\n\nimport BreadcrumbNav from '../components/breadcrumb-nav'\nimport TabNav from '../components/tab-nav.js'\nimport Layout from '../components/layout'\nimport MyJumbotron from '../components/jumbotron'\nimport Toc from '../components/toc'\nimport {\n  flattenFileNode,\n  matterNameFromMatter,\n  classeNameFromClasse,\n  classeWikidataURIFromClasse,\n} from '../helpers'\n\nimport 'katex/dist/katex.min.css'\n\nexport default coursPage\n\nfunction coursPage({ data, location }) {\n  const course = flattenFileNode(data.markdownRemark)\n\n  const title = `${course.chapter} un cours de ${matterNameFromMatter(\n    course.matter\n  )} en ${classeNameFromClasse(\n    course.classe\n  )} proposé par lyceum un site open-source pour le lycée`\n\n  const description = `Cours de ${classeNameFromClasse(\n    course.classe\n  )} en ${matterNameFromMatter(course.matter)} intitulé: «${course.chapter}»`\n\n  // supprime le slash final éventuel\n  const currentCoursePath = location.pathname.replace(/^\\/|\\/$/g, ``)\n\n  // type\n  const type = `course`\n\n  // importe le web-component de wikimage\n  useEffect(() => {\n    import(`wc-wikimage`)\n  }, [])\n\n  return (\n    <Layout location={location} data={data}>\n      <Helmet\n        title={`${title}`}\n        meta={[\n          {\n            name: `description`,\n            description: `${description}`,\n          },\n          { name: `keywords`, content: course.tags.join(`, `) },\n        ]}\n      >\n        <script type=\"application/ld+json\">{`\n         {\"@context\": \"http://schema.org/\",\n          \"@type\": \"Course\",\n          \"name\": \"${course.part} | ${course.chapter}\",\n          \"description\": \"${description}\",\n          \"learningResourceType\": [\n            \"lesson\"    ],\n          \"provider\": {\n            \"@type\": \"schema:EducationalOrganization\",\n            \"name\": \"lyceum.fr\"\n          },\n          \"audience\": {\n            \"@type\": \"EducationalAudience\",\n            \"educationalRole\": \"student\"\n          },\n          \"educationalAlignment\": {\n            \"@type\": \"AlignmentObject\",\n            \"alignmentType\": \"educationalLevel\",\n            \"educationalFramework\": \"French Grade Levels\",\n            \"targetName\": \"${classeNameFromClasse(course.classe)}\",\n            \"@id\": \"${classeWikidataURIFromClasse(course.classe)}\"\n          },\n          \"url\": \"${location.href}\"\n        }\n    `}</script>\n      </Helmet>\n      <BreadcrumbNav node={course} />\n      <TabNav currentCoursePath={currentCoursePath} type={type} />\n      <MyJumbotron>\n        <h1>{`Chapitre ${course.nChapter}: ${course.chapter}`}</h1>\n        {course.tableOfContents && course.tableOfContents.length > 0 && (\n          <Toc tableOfContents={course.tableOfContents} />\n        )}\n      </MyJumbotron>\n      <div dangerouslySetInnerHTML={{ __html: course.html }} />\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query MDCourseQuery($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      tableOfContents(maxDepth: 3)\n      frontmatter {\n        tags\n      }\n      fields {\n        classe\n        chapter\n        matter\n        nChapter\n        part\n        nPart\n      }\n    }\n  }\n`\n"],"names":["data","location","course","flattenFileNode","markdownRemark","title","chapter","matterNameFromMatter","matter","classeNameFromClasse","classe","description","currentCoursePath","pathname","replace","useEffect","meta","name","content","tags","join","type","part","classeWikidataURIFromClasse","href","node","nChapter","tableOfContents","length","dangerouslySetInnerHTML","__html","html"],"sourceRoot":""}