{"componentChunkName":"component---src-templates-cours-md-js","path":"/1g/nsi/7-langages-et-programmation/1-les-ingredients-dun-algorithme/","result":{"data":{"markdownRemark":{"html":"<details class=\"programme\"><summary>Programme Officiel</summary>\n<table class=\"table table-bordered table-hover\">\n<thead class=\"table-warning\">\n<tr class=\"header\">\n<th>Contenus</th>\n<th>Capacités attendues</th>\n<th>Commentaires</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>Constructions élémentaires</td>\n<td>Mettre en évidence un corpus de constructions élémentaires. boucles non bornées, appels de fonction.</td>\n<td>Séquences, affectation, conditionnelles, boucles bornées,</td>\n</tr>\n</tbody>\n</table>\n<a class=\"lien-programme\" href=\"../programme/\">Lien vers le programme complet</a></details>\n<div class=\"intro quarto-layout-panel\">\n<div class=\"quarto-layout-row quarto-layout-valign-top\">\n<div class=\"quarto-layout-cell\" style=\"flex-basis: 50.0%;justify-content: center;\">\n<p>Alan Turing a montré que pour que les machines puissent résoudre des problèmes, il fallait traduire ces problèmes en <a href=\"https://fr.wikipedia.org/wiki/Algorithme\">algorithmes</a>. Dans ce chapitre, nous allons voir <em>quels sont les ingrédients de base d’un algorithme</em>, puis comment les écrire en Python.</p>\n</div>\n<div class=\"quarto-layout-cell\" style=\"flex-basis: 50.0%;justify-content: center;\">\n<p><wc-wikimage title=\"1983_CPA_5426.jpg\" caption=\"Le mot algorithme vient d'Al-Khwârizmî (en arabe : الخوارزمي), nom d'un mathématicien persan du IXe siècle.\"></wc-wikimage></p>\n</div>\n</div>\n</div>\n<h2 id=\"les-ingrédients-des-algorithmes\" class=\"anchored\">Les ingrédients des Algorithmes</h2>\n<p>Un algorithme utilise <em>cinq ingrédients de base</em>:</p>\n<ol type=\"1\">\n<li>Un algorithme est un chemin à parcourir pas à pas, une <strong>séquence d’instructions</strong>.</li>\n<li>Cependant, il ne faut pas forcément effectuer toutes les instructions en fonctions de conditions: les <strong>instructions conditionnelles</strong>.</li>\n<li>Nous avons aussi besoin d’une autre construction, la <strong>boucle d’instructions</strong> qui permet de faire durer ou répéter une opération autant de fois que nécessaire.</li>\n<li>Nous introduisons la <strong>notion de variable</strong> ou de paramètre qui permettra de modifier le programme en fonction de ces paramètres.</li>\n<li>La dernière construction, qui consiste à <strong>regrouper un bloc d’instructions dans une fonction</strong>, va nous permettre de réutiliser différentes fonctionnalités, comme les briques d’un jeu de Lego, pour réaliser une construction logicielle.</li>\n</ol>\n<p><a href=\"https://interstices.info/jcms/c_43821/les-ingredients-des-algorithmes\" class=\"cite-source\">Les ingrédients des algorithmes sur le site Interstices</a></p>\n<h2 id=\"traduire-des-algorithmes-en-python\" class=\"anchored\">Traduire des algorithmes en Python</h2>\n<p>Pour que les ordinateurs réalisent nos algorithmes, nous devons écrire les séquences d’instructions dans un langage de programmation, dans notre cas Python.</p>\n<h3 id=\"séquence-dinstructions\" class=\"anchored\">Séquence d’instructions</h3>\n<p>En Python, les lignes du programme sont exécutées de <strong>haut en bas</strong>, à l’exception:</p>\n<ul>\n<li>Des lignes de <strong>commentaires</strong> qui commencent <code>#</code>.</li>\n</ul>\n<div class=\"example\">\n<div class=\"highlight\"><pre><span></span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Hello\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># print(\"World\") </span>\n</pre></div>\n<p>N’affichera que <code>\"Hello\"</code> en sortie, car la deuxième ligne est commentée donc non exécutée.</p>\n</div>\n<ul>\n<li>Des lignes de bloc qui sont <strong>indentées</strong> par rapport à la colonne de gauche.</li>\n</ul>\n<div class=\"example\">\n<div class=\"highlight\"><pre><span></span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Hello\"</span><span class=\"p\">)</span>\n<span class=\"nb\">    print</span><span class=\"p\">(</span><span class=\"s2\">\"World\"</span><span class=\"p\">)</span>\n</pre></div>\n<p>Renvoie une erreur <code>IndentationError</code>, car la deuxième ligne est indentée et ne devrait pas l’être.</p>\n</div>\n<h3 id=\"les-variables\" class=\"anchored\">Les variables</h3>\n<p>C’est un moyen de donner un nom à des valeurs afin de pouvoir les réutiliser aisément par la suite.</p>\n<div class=\"example\">\n<div class=\"cell\" data-execution_count=\"1\">\n<div class=\"highlight\"><pre><span></span><span class=\"n\">PI</span> <span class=\"o\">=</span> <span class=\"mf\">3.141592653589793</span>\n<span class=\"n\">R</span> <span class=\"o\">=</span> <span class=\"mi\">1</span> \n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Le périmètre est:\"</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">PI</span><span class=\"o\">*</span><span class=\"n\">R</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"La surface est:\"</span><span class=\"p\">,</span> <span class=\"n\">PI</span><span class=\"o\">*</span><span class=\"n\">R</span><span class=\"o\">**</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n</pre></div>\n<div class=\"cell-output cell-output-stdout\">\n<div class=\"highlight\"><pre><span></span>Le périmètre est: 6.283185307179586\nLa surface est: 3.141592653589793\n</pre></div>\n</div>\n</div>\n<p>Nous avons ici affecté deux variables <code>PI</code> et <code>R</code> dont nous pouvons nous servir tout au long du programme par la suite.</p>\n</div>\n<h3 id=\"instructions-conditionnelles\" class=\"anchored\">Instructions conditionnelles</h3>\n<p>Il s’agit de blocs d’instructions exécutés en fonction de certaines conditions, nous voyons ici:</p>\n<ul>\n<li><code>if</code>(<em>si</em> en français), qui peut être complété par un</li>\n<li><code>else</code>(<em>sinon</em> en français).</li>\n</ul>\n<div class=\"example\">\n<div class=\"highlight\"><pre><span></span><span class=\"n\">age</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"nb\">input</span><span class=\"p\">(</span><span class=\"s2\">\"Quel âge avez-vous?\"</span><span class=\"p\">)</span>\n<span class=\"k\">if</span> <span class=\"n\">age</span> <span class=\"o\">&gt;</span> <span class=\"mi\">14</span><span class=\"p\">:</span>\n<span class=\"nb\">    print</span><span class=\"p\">(</span><span class=\"s2\">\"OK\"</span><span class=\"p\">)</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n<span class=\"nb\">    print</span><span class=\"p\">(</span><span class=\"s2\">\"not OK\"</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Il existe également le mot-clé, <code>elif</code>(<em>sinon si</em> en français) en Python. Qui permet de tester plusieurs conditions.</p>\n<div class=\"highlight\"><pre><span></span><span class=\"n\">age</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"nb\">input</span><span class=\"p\">(</span><span class=\"s2\">\"Quel âge avez-vous?\"</span><span class=\"p\">)</span>\n<span class=\"k\">if</span> <span class=\"n\">age</span> <span class=\"o\">&gt;</span> <span class=\"mi\">18</span><span class=\"p\">:</span>\n<span class=\"nb\">    print</span><span class=\"p\">(</span><span class=\"s2\">\"Vous ne devriez plus être en lycée!\"</span><span class=\"p\">)</span>\n<span class=\"k\">elif</span> <span class=\"n\">age</span> <span class=\"o\">&gt;</span> <span class=\"mi\">14</span><span class=\"p\">:</span>\n<span class=\"nb\">    print</span><span class=\"p\">(</span><span class=\"s2\">\"OK\"</span><span class=\"p\">)</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n<span class=\"nb\">    print</span><span class=\"p\">(</span><span class=\"s2\">\"not OK\"</span><span class=\"p\">)</span>\n</pre></div>\n<p><strong>Attention à l’ordre des conditions, car le bloc de la première condition vérifiée est le seul exécuté.</strong></p>\n<h3 id=\"boucle-dinstructions\" class=\"anchored\">Boucle d’instructions</h3>\n<p>Pour effectuer des répétitions en boucle, on utilise les instructions:</p>\n<ul>\n<li><code>for</code>: <em>pour</em> en français.</li>\n<li><code>while</code>: <em>tant que</em> en français.</li>\n</ul>\n<p>Les deux types de boucles sont interchangeables, on préfère cependant utiliser:</p>\n<ul>\n<li><code>for</code> si le nombre d’itérations est connu à l’avance.</li>\n<li><code>while</code> si l’arrêt s’effectue à une condition.</li>\n</ul>\n<div class=\"example\">\n<div class=\"cell\" data-execution_count=\"2\">\n<div class=\"highlight\"><pre><span></span><span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">):</span>\n<span class=\"nb\">    print</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span>\n</pre></div>\n<div class=\"cell-output cell-output-stdout\">\n<div class=\"highlight\"><pre><span></span>0\n1\n2\n3\n4\n</pre></div>\n</div>\n</div>\n</div>\n<div class=\"example\">\n<div class=\"cell\" data-execution_count=\"3\">\n<div class=\"highlight\"><pre><span></span><span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span> <span class=\"c1\"># initialisation</span>\n<span class=\"k\">while</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"mi\">5</span><span class=\"p\">:</span> <span class=\"c1\"># condition d'arrêt</span>\n<span class=\"nb\">    print</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span>\n<span class=\"n\">    i</span> <span class=\"o\">=</span> <span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span> <span class=\"c1\"># incrémentation de l'indice</span>\n</pre></div>\n<div class=\"cell-output cell-output-stdout\">\n<div class=\"highlight\"><pre><span></span>0\n1\n2\n3\n4\n</pre></div>\n</div>\n</div>\n</div>\n<h3 id=\"les-fonctions\" class=\"anchored\">Les fonctions</h3>\n<p>Il s’agit de <em>blocs d’instructions</em> exécutés à la demande, on les définit par le mot-clef <code>def</code>.</p>\n<div class=\"example\">\n<div class=\"cell\" data-execution_count=\"4\">\n<div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">dit_bonjour</span><span class=\"p\">(</span><span class=\"n\">prenom</span><span class=\"p\">):</span>\n<span class=\"nb\">    print</span><span class=\"p\">(</span><span class=\"s2\">\"Bonjour \"</span> <span class=\"o\">+</span> <span class=\"n\">prenom</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Nous venons de définir la fonction, mais pour l’instant, il ne se passe rien.</p>\n<p>Pour exécuter le code de la fonction, il faut maintenant appeler la fonction avec une valeur pour l’exécuter.</p>\n<div class=\"cell\" data-execution_count=\"5\">\n<div class=\"highlight\"><pre><span></span><span class=\"c1\"># on appelle la fonction avec l'argument Ada</span>\n<span class=\"n\">dit_bonjour</span><span class=\"p\">(</span><span class=\"s2\">\"Ada\"</span><span class=\"p\">)</span>\n</pre></div>\n<div class=\"cell-output cell-output-stdout\">\n<div class=\"highlight\"><pre><span></span>Bonjour Ada\n</pre></div>\n</div>\n</div>\n</div>\n<div class=\"prop\">\n<p>Une fonction peut prendre zéro ou plusieurs paramètres séparés par des virgules en entrée.</p>\n</div>\n<div class=\"example\">\n<div class=\"cell\" data-execution_count=\"6\">\n<div class=\"highlight\"><pre><span></span><span class=\"c1\"># import du module datetime</span>\n<span class=\"kn\">import</span> <span class=\"nn\">datetime</span>\n<span></span>\n<span class=\"c1\">\n# fonction sans argument</span>\n<span class=\"k\">def</span> <span class=\"nf\">heure</span><span class=\"p\">():</span>\n<span class=\"nb\">    print</span><span class=\"p\">(</span><span class=\"s2\">\"Il est:\"</span><span class=\"p\">,</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">())</span>\n<span></span>\n<span class=\"c1\"># appel de la fonction</span>\n<span class=\"n\">heure</span><span class=\"p\">()</span>\n</pre></div>\n<div class=\"cell-output cell-output-stdout\">\n<div class=\"highlight\"><pre><span></span>Il est: 15:23:32.552473\n</pre></div>\n</div>\n</div>\n</div>\n<div class=\"prop\">\n<p>Une fonction peut renvoyer une valeur grâce au mot-clé <code>return</code>.</p>\n</div>\n<div class=\"example\">\n<div class=\"cell\" data-execution_count=\"7\">\n<div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">aire_rectangle</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"n\">l</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">\"\"\"Fonction qui renvoie l'aire d'un rectangle\"\"\"</span>\n<span class=\"k\">    return</span> <span class=\"n\">L</span> <span class=\"o\">*</span> <span class=\"n\">l</span>\n<span></span>\n<span class=\"c1\"># appel est affectation de la valeur renvoyée à la variable S</span>\n<span class=\"n\">S</span> <span class=\"o\">=</span> <span class=\"n\">aire_rectangle</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span></span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"L'aire est:\"</span><span class=\"p\">,</span> <span class=\"n\">S</span><span class=\"p\">)</span>\n</pre></div>\n<div class=\"cell-output cell-output-stdout\">\n<div class=\"highlight\"><pre><span></span>L'aire est: 15\n</pre></div>\n</div>\n</div>\n</div>","tableOfContents":"","frontmatter":{"tags":["algorithme","conditions","boucles","variables","fonctions"],"tocHTML":"<ul><li><a href=\"#les-ingrédients-des-algorithmes\" data-localhref=\"true\">Les ingrédients des Algorithmes</a></li><li><a href=\"#traduire-des-algorithmes-en-python\" data-localhref=\"true\">Traduire des algorithmes en Python</a></li><ul><li><a href=\"#séquence-dinstructions\" data-localhref=\"true\">Séquence d’instructions</a></li><li><a href=\"#les-variables\" data-localhref=\"true\">Les variables</a></li><li><a href=\"#instructions-conditionnelles\" data-localhref=\"true\">Instructions conditionnelles</a></li><li><a href=\"#boucle-dinstructions\" data-localhref=\"true\">Boucle d’instructions</a></li><li><a href=\"#les-fonctions\" data-localhref=\"true\">Les fonctions</a></li></ul></ul>"},"fields":{"classe":"1g","chapter":"Les ingrédients d’un algorithme","matter":"nsi","nChapter":"1","part":"Langages et programmation","nPart":"7"}}},"pageContext":{"slug":"1g/nsi/7-langages-et-programmation/1-les-ingredients-dun-algorithme","chapter":"Les ingrédients d’un algorithme"}},"staticQueryHashes":["604483588"],"slicesMap":{}}