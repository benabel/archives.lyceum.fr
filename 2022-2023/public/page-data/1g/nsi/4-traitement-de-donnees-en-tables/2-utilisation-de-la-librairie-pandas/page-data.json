{"componentChunkName":"component---src-templates-cours-md-js","path":"/1g/nsi/4-traitement-de-donnees-en-tables/2-utilisation-de-la-librairie-pandas/","result":{"data":{"markdownRemark":{"html":"<details class=\"programme\"><summary>Programme Officiel</summary>\n<table class=\"table table-bordered table-hover\">\n<thead class=\"table-warning\">\n<tr class=\"header\">\n<th>Contenus</th>\n<th>Capacités attendues</th>\n<th>Commentaires</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>Tri d’une table</td>\n<td>Trier une table suivant une colonne.</td>\n<td>Une fonction de tri intégrée au système ou à une bibliothèque peut être utilisée.</td>\n</tr>\n<tr class=\"even\">\n<td>Fusion de tables</td>\n<td>Construire une nouvelle table en combinant les données de deux tables.</td>\n<td>La notion de domaine de valeurs est mise en évidence.</td>\n</tr>\n</tbody>\n</table>\n<a class=\"lien-programme\" href=\"../programme/\">Lien vers le programme complet</a></details>\n<div class=\"intro\">\n<p>L’utilisation des données en table étant très largement répandue, une bibliothèque spécialisée s’est développée et imposée dans le monde de python <a href=\"https://pandas.pydata.org/\"><code>pandas</code></a>. Cette libraire va grandement nous faciliter la lecture et l’utilisation des données.</p>\n<p><wc-wikimage title=\"Pandas_logo.svg\"></wc-wikimage></p>\n</div>\n<h2 id=\"lecture-dun-fichier-csv\" class=\"anchored\">Lecture d’un fichier <code>csv</code></h2>\n<p>La méthode <code>read_csv</code> permet la lecture d’un fichier <code>csv</code>. On utilise ici la <a href=\"https://www.data.gouv.fr/fr/datasets/cartographie-des-stationnements-deux-roues-de-nice/\">Cartographie des stationnements deux roues de Nice</a> mise à disposition sur le site gouvernemental: <a href=\"https://data.gouv.fr\" class=\"uri\">https://data.gouv.fr</a> avec la description suivante:</p>\n<blockquote class=\"blockquote\">\n<p>Vous trouverez ici la cartographie des stationnements deux roues. Table des données SIG relatives aux GAV-GAM et GAV/GAM nb : GAV = Garage à Vélo + GAM = Garage à Moto Code profil 1 = GAM; Code profil 2 = GAV, Code profil 0 = GAV-GAM</p>\n</blockquote>\n<div class=\"cell\" data-execution_count=\"1\">\n<div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n<span></span>\n<span class=\"c1\"># on importe les données dans un variable appelée df pour dataframe(le nom de la variable vous appartient)</span>\n<span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"s2\">\"gav-gam-06-09-2019.csv\"</span><span class=\"p\">,</span> <span class=\"n\">sep</span><span class=\"o\">=</span><span class=\"s2\">\";\"</span><span class=\"p\">)</span>\n<span></span>\n<span class=\"c1\"># on affiche les 5 premières lignes</span>\n<span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">head</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n</pre></div>\n<div class=\"cell-output cell-output-display\" data-execution_count=\"1\">\n<div>\n<style scoped=\"\">\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n<pre><code>.dataframe tbody tr th {\n    vertical-align: top;\n}\n\n.dataframe thead th {\n    text-align: right;\n}\n</code></pre>\n</style>\n<table class=\"table table-bordered table-hover table-sm table-striped\" data-border=\"1\">\n<thead class=\"table-warning\">\n<tr class=\"header\" style=\"text-align: right;\">\n<th></th>\n<th>NB_ARC_VL</th>\n<th>ID_GAV</th>\n<th>NB_PL_MT</th>\n<th>LARGEUR</th>\n<th>GLOBALID</th>\n<th>TYPE_MOBIL</th>\n<th>PROFIL</th>\n<th>LONGUEUR</th>\n<th>ETAT_</th>\n<th>CODE_INSEE</th>\n<th>NB_PL_VL</th>\n<th>NB_PLACE</th>\n<th>NB_ARC_MT</th>\n<th>geometry</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<th>0</th>\n<td>0.0</td>\n<td>1001</td>\n<td>30.0</td>\n<td>0.65</td>\n<td>{578A7D02-A426-4AA0-99C6-D2C1FBED8814}</td>\n<td>4.0</td>\n<td>1</td>\n<td>21.2</td>\n<td>En vigueur</td>\n<td>6088</td>\n<td>0.0</td>\n<td>30.0</td>\n<td>0</td>\n<td>{\"type\": \"Point\", \"coordinates\": [7.21337219, ...</td>\n</tr>\n<tr class=\"even\">\n<th>1</th>\n<td>2.0</td>\n<td>2010</td>\n<td>3.0</td>\n<td>2.00</td>\n<td>{291C1D1B-2A1C-42B7-9D06-2877D62B2838}</td>\n<td>1.0</td>\n<td>0</td>\n<td>7.5</td>\n<td>En vigueur</td>\n<td>6088</td>\n<td>2.0</td>\n<td>5.0</td>\n<td>4</td>\n<td>{\"type\": \"Point\", \"coordinates\": [7.25311445, ...</td>\n</tr>\n<tr class=\"odd\">\n<th>2</th>\n<td>0.0</td>\n<td>2015</td>\n<td>12.0</td>\n<td>2.00</td>\n<td>{E002A4DF-3CD8-4F5F-9E87-721004924B1C}</td>\n<td>1.0</td>\n<td>1</td>\n<td>26.0</td>\n<td>En vigueur</td>\n<td>6088</td>\n<td>0.0</td>\n<td>12.0</td>\n<td>12</td>\n<td>{\"type\": \"Point\", \"coordinates\": [7.25608087, ...</td>\n</tr>\n<tr class=\"even\">\n<th>3</th>\n<td>0.0</td>\n<td>2020</td>\n<td>3.0</td>\n<td>2.00</td>\n<td>{DD571B19-C522-4E1F-97E5-0841E6DE59E5}</td>\n<td>2.0</td>\n<td>0</td>\n<td>4.7</td>\n<td>En vigueur</td>\n<td>6088</td>\n<td>1.0</td>\n<td>4.0</td>\n<td>0</td>\n<td>{\"type\": \"Point\", \"coordinates\": [7.25171699, ...</td>\n</tr>\n<tr class=\"odd\">\n<th>4</th>\n<td>0.0</td>\n<td>2024</td>\n<td>7.0</td>\n<td>2.00</td>\n<td>{1710D778-67BF-45ED-B3F5-399B82088C5A}</td>\n<td>2.0</td>\n<td>0</td>\n<td>12.0</td>\n<td>En vigueur</td>\n<td>6088</td>\n<td>3.0</td>\n<td>10.0</td>\n<td>0</td>\n<td>{\"type\": \"Point\", \"coordinates\": [7.25427638, ...</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n</div>\n<h2 id=\"exploration-des-données\" class=\"anchored\">Exploration des données</h2>\n<p>On peut également facilement afficher le nom des colonnes avec l’attribut <code>columns</code>.</p>\n<div class=\"cell\" data-execution_count=\"2\">\n<div class=\"highlight\"><pre><span></span><span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">columns</span>\n</pre></div>\n<div class=\"cell-output cell-output-display\" data-execution_count=\"2\">\n<div class=\"highlight\"><pre><span></span>Index(['NB_ARC_VL', 'ID_GAV', 'NB_PL_MT', 'LARGEUR', 'GLOBALID', 'TYPE_MOBIL',\n       'PROFIL', 'LONGUEUR', 'ETAT_', 'CODE_INSEE', 'NB_PL_VL', 'NB_PLACE',\n       'NB_ARC_MT', 'geometry'],\n      dtype='object')\n</pre></div>\n</div>\n</div>\n<p>On peut facilement parcourir l’ensemble des lignes du tableau avec la méthode <code>itertuples()</code>.</p>\n<div class=\"cell\" data-execution_count=\"3\">\n<div class=\"highlight\"><pre><span></span><span class=\"k\">for</span> <span class=\"n\">ligne</span> <span class=\"ow\">in</span> <span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">itertuples</span><span class=\"p\">():</span>\n<span class=\"nb\">    print</span><span class=\"p\">(</span><span class=\"n\">ligne</span><span class=\"p\">)</span>\n<span class=\"c1\">    \n    # On s'arrête à la troisième ligne pour pas encombrer le cours</span>\n<span class=\"c1\">    # Commenter ces deux lignes pour parcourir l'ensemble du tableau</span>\n<span class=\"k\">    if</span> <span class=\"n\">ligne</span><span class=\"o\">.</span><span class=\"n\">Index</span> <span class=\"o\">&gt;</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n<span class=\"k\">        break</span>\n</pre></div>\n<div class=\"cell-output cell-output-stdout\">\n<div class=\"highlight\"><pre><span></span>Pandas(Index=0, NB_ARC_VL=0.0, ID_GAV='1001', NB_PL_MT=30.0, LARGEUR=0.65, GLOBALID='{578A7D02-A426-4AA0-99C6-D2C1FBED8814}', TYPE_MOBIL=4.0, PROFIL=1, LONGUEUR=21.2, ETAT_='En vigueur', CODE_INSEE=6088, NB_PL_VL=0.0, NB_PLACE=30.0, NB_ARC_MT=0, geometry='{\"type\": \"Point\", \"coordinates\": [7.21337219, 43.66717783]}')\nPandas(Index=1, NB_ARC_VL=2.0, ID_GAV='2010', NB_PL_MT=3.0, LARGEUR=2.0, GLOBALID='{291C1D1B-2A1C-42B7-9D06-2877D62B2838}', TYPE_MOBIL=1.0, PROFIL=0, LONGUEUR=7.5, ETAT_='En vigueur', CODE_INSEE=6088, NB_PL_VL=2.0, NB_PLACE=5.0, NB_ARC_MT=4, geometry='{\"type\": \"Point\", \"coordinates\": [7.25311445, 43.69461128]}')\nPandas(Index=2, NB_ARC_VL=0.0, ID_GAV='2015', NB_PL_MT=12.0, LARGEUR=2.0, GLOBALID='{E002A4DF-3CD8-4F5F-9E87-721004924B1C}', TYPE_MOBIL=1.0, PROFIL=1, LONGUEUR=26.0, ETAT_='En vigueur', CODE_INSEE=6088, NB_PL_VL=0.0, NB_PLACE=12.0, NB_ARC_MT=12, geometry='{\"type\": \"Point\", \"coordinates\": [7.25608087, 43.6951747]}')\nPandas(Index=3, NB_ARC_VL=0.0, ID_GAV='2020', NB_PL_MT=3.0, LARGEUR=2.0, GLOBALID='{DD571B19-C522-4E1F-97E5-0841E6DE59E5}', TYPE_MOBIL=2.0, PROFIL=0, LONGUEUR=4.7, ETAT_='En vigueur', CODE_INSEE=6088, NB_PL_VL=1.0, NB_PLACE=4.0, NB_ARC_MT=0, geometry='{\"type\": \"Point\", \"coordinates\": [7.25171699, 43.70004002]}')\n</pre></div>\n</div>\n</div>\n<p>Chaque ligne renvoyée par la méthode <code>itertuples()</code> est un tuple nommé, on peut ainsi aaccéder aux valeurs individuelles de chaque ligne avec la notation pointée <code>ligne.nom_de_la_colonne</code>. Par exemple pour afficher le nombre d’arcs du stationnement.</p>\n<div class=\"cell\" data-execution_count=\"4\">\n<div class=\"highlight\"><pre><span></span><span class=\"k\">for</span> <span class=\"n\">ligne</span> <span class=\"ow\">in</span> <span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">itertuples</span><span class=\"p\">():</span>\n<span class=\"c1\">    # On s'arrête à la troisième ligne pour pas encombrer le cours</span>\n<span class=\"c1\">    # Commenter ces deux lignes pour parcourir l'ensmble du tableau</span>\n<span class=\"k\">    if</span> <span class=\"n\">ligne</span><span class=\"o\">.</span><span class=\"n\">Index</span> <span class=\"o\">&gt;</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n<span class=\"k\">        break</span>\n<span class=\"nb\">    print</span><span class=\"p\">(</span><span class=\"s2\">\"Nombre d'arcs de stationnement pour vélos:\"</span><span class=\"p\">,</span> <span class=\"n\">ligne</span><span class=\"o\">.</span><span class=\"n\">NB_ARC_VL</span><span class=\"p\">)</span>\n</pre></div>\n<div class=\"cell-output cell-output-stdout\">\n<div class=\"highlight\"><pre><span></span>Nombre d'arcs de stationnement pour vélos: 0.0\nNombre d'arcs de stationnement pour vélos: 2.0\nNombre d'arcs de stationnement pour vélos: 0.0\n</pre></div>\n</div>\n</div>\n<h2 id=\"sélection-logique-de-données\" class=\"anchored\">Sélection logique de données</h2>\n<p>Supposons que l’on cherche des stationnements destinés aux vélos.</p>\n<div class=\"cell\" data-execution_count=\"5\">\n<div class=\"highlight\"><pre><span></span><span class=\"k\">for</span> <span class=\"n\">ligne</span> <span class=\"ow\">in</span> <span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">itertuples</span><span class=\"p\">():</span>\n<span class=\"c1\">    # On s'arrête à la troisième ligne pour pas encombrer le cours</span>\n<span class=\"c1\">    # Commenter ces deux lignes pour parcourir l'ensmble du tableau</span>\n<span class=\"k\">    if</span> <span class=\"n\">ligne</span><span class=\"o\">.</span><span class=\"n\">Index</span> <span class=\"o\">&gt;</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n<span class=\"k\">        break</span>\n<span class=\"k\">    if</span> <span class=\"n\">ligne</span><span class=\"o\">.</span><span class=\"n\">NB_ARC_VL</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n<span class=\"nb\">        print</span><span class=\"p\">(</span><span class=\"n\">ligne</span><span class=\"o\">.</span><span class=\"n\">Index</span><span class=\"p\">,</span> <span class=\"n\">ligne</span><span class=\"o\">.</span><span class=\"n\">NB_ARC_VL</span><span class=\"p\">)</span>\n</pre></div>\n<div class=\"cell-output cell-output-stdout\">\n<div class=\"highlight\"><pre><span></span>1 2.0\n</pre></div>\n</div>\n</div>\n<p>Effectivement parmi les trois premières lignes seul la ligne d’index 1(la deuxième) présente des arcs de stationnement pour vélos.</p>\n<p>Pour explorer davantage cette table de données, passez aux <a href=\"./exo\">exercices</a>.</p>\n<h2 id=\"liens\" class=\"anchored\">Liens</h2>\n<p>La librairie <code>pandas</code> est extrêmement riche et seul son utilisation sur des cas concrets permet d’en comprendre les rouages.</p>\n<p>Pour plus d’informations, vous pouvez consulter:</p>\n<ul>\n<li>la <a href=\"https://pandas.pydata.org/pandas-docs/stable/\">documentation</a></li>\n<li>la fiche de <a href=\"https://github.com/pandas-dev/pandas/blob/master/doc/cheatsheet/Pandas_Cheat_Sheet.pdf\">rappels</a>,</li>\n<li>ou encore voir ce qu’arrive à faire les kagglers avec les données en consultant des <a href=\"https://www.kaggle.com/kernels?sortBy=relevance&amp;group=everyone&amp;search=pandas&amp;page=1&amp;pageSize=20\">exemples de notebooks</a> sur le site <a href=\"https://kaggle.com\" class=\"uri\">https://kaggle.com</a>.</li>\n</ul>","tableOfContents":"","frontmatter":{"tags":["python","pandas"],"tocHTML":"<ul><li><a href=\"#lecture-dun-fichier-csv\" data-localhref=\"true\">Lecture d’un fichier <code>csv</code></a></li><li><a href=\"#exploration-des-données\" data-localhref=\"true\">Exploration des données</a></li><li><a href=\"#sélection-logique-de-données\" data-localhref=\"true\">Sélection logique de données</a></li><li><a href=\"#liens\" data-localhref=\"true\">Liens</a></li></ul>"},"fields":{"classe":"1g","chapter":"Utilisation de la librairie pandas","matter":"nsi","nChapter":"2","part":"Traitement de données en tables","nPart":"4"}}},"pageContext":{"slug":"1g/nsi/4-traitement-de-donnees-en-tables/2-utilisation-de-la-librairie-pandas","chapter":"Utilisation de la librairie pandas"}},"staticQueryHashes":["604483588"],"slicesMap":{}}