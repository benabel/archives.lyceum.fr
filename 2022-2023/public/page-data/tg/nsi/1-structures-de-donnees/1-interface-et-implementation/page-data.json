{"componentChunkName":"component---src-templates-cours-md-js","path":"/tg/nsi/1-structures-de-donnees/1-interface-et-implementation/","result":{"data":{"markdownRemark":{"html":"<details class=\"programme\"><summary>Programme Officiel</summary>\n<table class=\"table table-bordered table-hover\">\n<thead class=\"table-warning\">\n<tr class=\"header\">\n<th>Contenus</th>\n<th>Capacités attendues</th>\n<th>Commentaires</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>Structures de données, interface et implémentation.</td>\n<td><p>Spécifier une structure de données par son interface.</p>\n<p>Distinguer interface et implémentation.</p>\n<p>Écrire plusieurs implémentations d’une même structure de données.</p></td>\n<td>L’abstraction des structures de données est introduite après plusieurs implémentations d’une structure simple comme la file (avec un tableau ou avec deux piles).</td>\n</tr>\n<tr class=\"even\">\n<td><p>Listes, piles, files : structures linéaires.</p>\n<p>Dictionnaires, index et clé.</p></td>\n<td><p>Distinguer des structures par le jeu des méthodes qui les caractérisent.</p>\n<p>Choisir une structure de données adaptée à la situation à modéliser.</p>\n<p>Distinguer la recherche d’une valeur dans une liste et dans un dictionnaire.</p></td>\n<td>_</td>\n</tr>\n</tbody>\n</table>\n<a class=\"lien-programme\" href=\"../programme/\">Lien vers le programme complet</a></details>\n<blockquote class=\"blockquote\">\n<p>Cette année, nous allons voir de nouvelles façons d’organiser et de traiter les données, ce que l’on appelle des <strong>structures de données</strong>. On rencontrera, notamment des structures linéaires comme la liste, la pile et la file, mais également des structures relationnelles telles que les arbres ou les graphes. Dans ce chapitre, nous allons commencer par distinguer la structure de données de son implémentation en s’appuyant sur les tableaux et dictionnaires vus en première.</p>\n</blockquote>\n<h2 id=\"les-tableaux-list-en-python\" class=\"anchored\">Les tableaux: <em>(<code>list</code> en python)</em></h2>\n<p>En <a href=\"/1g/nsi/3-representation-des-donnees-types-construits/1-tableaux\">première</a>, nous avons déjà rencontré les tableaux(<em>tableaux dynamiques</em> pour être plus précis), qui sont des séquences d’éléments ordonnés auxquels on peut accéder facilement par leur <em>index</em>.</p>\n<p><wc-wikimage title=\"Tableau_à_une_dimension.png\" caption=\"Un tableau est une suite de données ordonnées auxquelles on accéde par un index(un entier).\"> </wc-wikimage></p>\n<p>En python les tableaux sont implémentés par l’objet <code>list</code> dont les éléments sont séparés par une virgule et entourés de crochets.</p>\n<div class=\"highlight\"><pre><span></span><span class=\"c1\"># création</span>\n<span class=\"n\">ma_liste</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s2\">\"deux\"</span><span class=\"p\">,</span> <span class=\"mf\">3.0</span><span class=\"p\">]</span>\n<span class=\"c1\"># accès aux élements par index</span>\n<span class=\"n\">ma_liste</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"c1\"># renvoie \"deux\"!</span>\n</pre></div>\n<p>Les listes étant mutables, on peut ajouter ou supprimer des éléments après création.</p>\n<ul>\n<li>Ajout d’un élément à l’index souhaité :</li>\n</ul>\n<div class=\"highlight\"><pre><span></span><span class=\"c1\"># ajout avec la méthode `insert()`</span>\n<span class=\"n\">ma_liste</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">\"zéro\"</span><span class=\"p\">)</span>\n<span class=\"n\">ma_liste</span> <span class=\"c1\"># renvoie ['zéro', 1, 'deux', 3.0]</span>\n</pre></div>\n<ul>\n<li>Suppression d’un élément à l’index souhaité :</li>\n</ul>\n<div class=\"highlight\"><pre><span></span><span class=\"c1\"># suppression avec la méthode `pop()`</span>\n<span class=\"n\">ma_liste</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">ma_liste</span> <span class=\"c1\"># renvoie ['zéro', 1, 3.0]</span>\n</pre></div>\n<ul>\n<li>Il est également fréquent de souhaiter connaitre la longueur de la liste :</li>\n</ul>\n<div class=\"highlight\"><pre><span></span><span class=\"c1\"># longueur avec la fonction `len()`</span>\n<span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">ma_liste</span><span class=\"p\">)</span> <span class=\"c1\"># renvoie 3 puisque ['zéro', 1, 3.0]</span>\n</pre></div>\n<details class=\"plus\"><summary>Une liste est-elle vide en Python?</summary>\n<p>Python étant un langage à type dynamique, il peut convertir le type d’une valeur en un autre suivant la situation. Ainsi si une liste se retouve dans une situation ou un booléen est attendu(<code>if liste: ... while liste:</code>), il convertira:</p>\n<ul>\n<li>la liste vide en: <code>False</code></li>\n<li>une liste non vide en: <code>True</code></li>\n</ul>\n<p>Donc vérifier si une liste est vide peut-être simplement fait avec <code>bool(liste)</code>.</p>\n</details>\n<h2 id=\"différence-entre-interface-et-implémentation\" class=\"anchored\">Différence entre interface et implémentation</h2>\n<p>Les quatre méthodes qui ont été définies dans la classe <code>list</code> en Python: <code>len</code>, <code>pop</code>, <code>insert</code> sont ce que l’on appelle une <em>implémentation</em> de la structure de donnée tableau.</p>\n<dl>\n<dt>\nImplémentation\n</dt>\n<dd>\n<div>\n<p>L’implémentation d’une structure de données ou d’un algorithme est une <em>mise en œuvre</em> pratique dans un langage de programmation.</p>\n</div>\n</dd>\n</dl>\n<p>Il existe de nombreux langages de programmation qui implémentent le type abstrait <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mi>a</mi><mi>b</mi><mi>l</mi><mi>e</mi><mi>a</mi><mi>u</mi></mrow><annotation encoding=\"application/x-tex\">tableau</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">ab</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">u</span></span></span></span>\n, nous avions vu l’<a href=\"/1g/nsi/7-langages-et-programmation/7-comparaisons-de-langages\">année dernière</a> les différences d’implémentation entre les <code>list</code> de Python et les <code>Array</code> de javascript.</p>\n<p>Cependant, on retrouve des méthodes similaires qui sont ce que l’on appelle l’<em>interface</em> de la structure de données <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mi>a</mi><mi>b</mi><mi>l</mi><mi>e</mi><mi>a</mi><mi>u</mi></mrow><annotation encoding=\"application/x-tex\">tableau</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">ab</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">u</span></span></span></span>\n:</p>\n<ol type=\"1\">\n<li>« Insérer » : ajoute un élément dans le tableau à l’index souhaité. <code>ajout(index, élément)</code>;</li>\n<li>« Retirer » : retire un élément de le tableau à l’index souhaité. <code>suppr(index)</code>;</li>\n<li>« Le tableau est-il vide ? » : renvoie « vrai » si le tableau est vide, « faux » sinon. <code>est_vide()</code>;</li>\n<li>« Nombre d’éléments dans le tableau » : renvoie le nombre d’éléments dans le tableau. <code>longueur()</code>.</li>\n</ol>\n<p><a href=\"https://fr.wikipedia.org/wiki/Liste_(informatique)#Primitives\" class=\"cite-source\">Article Wikipedia sur les listes</a></p>\n<dl>\n<dt>\nInterface\n</dt>\n<dd>\n<div>\n<p>L’interface d’une structure de données est la <em>spécification</em> des méthodes pouvant être appliquées sur cette structure de données.</p>\n</div>\n</dd>\n</dl>\n<details class=\"plus\"><summary>Vers le pseudo-langage</summary>\n<p>L’intérêt de définir des structures de données avec une interface commune est de pouvoir écrire des algorithmes sur le papier en utilisant l’interface définie.</p>\n<p>On utilise alors un pseudo-langage plus ou moins proche de la langue naturelle qui pourra être implémenté dans tous les langages de programmation ayant défini la structure de données.</p>\n</details>\n<details class=\"appli\"><summary>Implémentation d'un tableau en python</summary>\n<p>Créer une classe <code>Tableau</code> qui implémente les quatre méthodes ci-dessus en stockant les données du tableau dans un attribut appelé <code>data</code> de type <code>list</code>e.</p>\n<p>Pour aller plus loin, faire l’<a href=\"./exo\">exercice 2</a>.</p>\n</details>\n<h2 id=\"les-tableaux-associatifs-dictionnaires-en-python\" class=\"anchored\">Les Tableaux associatifs: <em>(<code>dict</code>ionnaires en Python)</em></h2>\n<p>Un dictionnaire, est un type de données associant à un ensemble de <strong>clés</strong>, un ensemble de <strong>valeurs</strong> correspondantes.</p>\n<p><wc-wikimage title=\"Associative_array_as_linked_list.svg\" caption=\"Dans tableau associatif, on accéde aux données par une clé(chaîne de caractère), ils ne sont généralement pas ordonnés.\"> </wc-wikimage></p>\n<p>Il s’agit de <em>l’implémentation</em> d’une structure de données <em>abstraite</em> appelée <strong>tableau associatif</strong>.</p>\n<h3 id=\"interface\" class=\"anchored\">Interface</h3>\n<p>Les opérations usuellement fournies par un tableau associatif sont :</p>\n<ul>\n<li>ajout : association d’une nouvelle valeur à une nouvelle clef ;</li>\n<li>modification : association d’une nouvelle valeur à une ancienne clef ;</li>\n<li>suppression : suppression d’une clef ;</li>\n<li>recherche : détermination de la valeur associée à une clef, si elle existe.</li>\n</ul>\n<p><a href=\"https://fr.wikipedia.org/wiki/Tableau_associatif\" class=\"cite-source\">Article Wikipedia sur le Tableau associatif</a></p>\n<h3 id=\"implémentation-en-python\" class=\"anchored\">Implémentation en python</h3>\n<p>Les dictionnaires font partie de la bibliothèque standard de Python grâce à la classe <code>dict</code> vue en <a href=\"/1g/nsi/3-representation-des-donnees-types-construits/3-dictionnaires\">première</a>.</p>\n<div class=\"highlight\"><pre><span></span><span class=\"c1\"># création du dictionnaire</span>\n<span class=\"n\">personne</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"nom\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Lagaffe\"</span><span class=\"p\">,</span> <span class=\"s2\">\"prenom\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Gaston\"</span><span class=\"p\">,</span> <span class=\"s2\">\"age\"</span><span class=\"p\">:</span> <span class=\"mi\">27</span><span class=\"p\">,</span> <span class=\"s2\">\"rigolo\"</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">}</span>\n<span class=\"c1\"># accès à une valeur</span>\n<span class=\"n\">personne</span><span class=\"p\">[</span><span class=\"s1\">'age'</span><span class=\"p\">]</span> <span class=\"c1\"># renvoie 27</span>\n</pre></div>\n<p>Les dictionnaires étant mutables, on peut ajouter supprimer ou modifier une valeur à un dictionnaire déjà créé:</p>\n<div class=\"highlight\"><pre><span></span><span class=\"c1\"># ajout d'une clé</span>\n<span class=\"n\">personne</span><span class=\"p\">[</span><span class=\"s2\">\"dessinateur\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">\"André Franquin\"</span>\n<span class=\"c1\"># suppression d'une clé</span>\n<span class=\"k\">del</span> <span class=\"n\">personne</span><span class=\"p\">[</span><span class=\"s2\">\"rigolo\"</span><span class=\"p\">]</span>\n<span class=\"c1\"># modification d'une clé</span>\n<span class=\"n\">personne</span><span class=\"p\">[</span><span class=\"s2\">\"age\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">28</span>\n<span class=\"c1\"># accès à une valeur</span>\n<span class=\"n\">personne</span><span class=\"p\">[</span><span class=\"s1\">'age'</span><span class=\"p\">]</span> <span class=\"c1\"># renvoie 28</span>\n</pre></div>\n<p>La recherche d’une valeur d’une valeur est traitée ci-après comme le propose le <a href=\"../../programme\">programme officiel</a>.</p>\n<details class=\"plus\"><summary>Différentes implémentations des dictionnaires</summary>\n<p>L’article anglais de wikipédia compare diverses implémentations des tableaux associatifs.</p>\n<p>https://en.wikipedia.org/wiki/Associative_array#Comparison</p>\n<ul>\n<li>table de hachage</li>\n<li>arbres binaires de recherche équilibrés ou non</li>\n<li>liste chaînée…</li>\n</ul>\n<p>En fonction des implémentations utilisées, les opérations de recherche ou d’ajouts sont plus ou moins couteuses en temps:</p>\n<ul>\n<li>temps fixe: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>\n</li>\n<li>temps logarithmique <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>log</mi><mo>⁡</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(\\log n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span>\n</li>\n<li>temps linéaire <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span>\n</li>\n</ul>\n</details>\n<h2 id=\"recherche-dune-valeur\" class=\"anchored\">Recherche d’une valeur</h2>\n<p>Les méthodes d’itération diffèrent légèrement entre les <code>list</code>es et le <code>dict</code>ionnaire en Python.</p>\n<h3 id=\"dans-une-liste\" class=\"anchored\">Dans une liste</h3>\n<div class=\"highlight\"><pre><span></span><span class=\"c1\"># on crée une liste vide par compréhension</span>\n<span class=\"n\">paires</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)]</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">paires</span><span class=\"p\">)</span> <span class=\"c1\"># affiche [0, 2, 4, 6, 8, 10, 12, 14, 16, 18]</span>\n<span></span>\n<span class=\"k\">def</span> <span class=\"nf\">recherche_liste</span><span class=\"p\">(</span><span class=\"n\">liste</span><span class=\"p\">,</span> <span class=\"n\">élément</span><span class=\"p\">):</span>\n<span class=\"c1\">    # itération sur les valeurs de la liste</span>\n<span class=\"k\">    for</span> <span class=\"n\">e</span> <span class=\"ow\">in</span> <span class=\"n\">liste</span><span class=\"p\">:</span>\n<span class=\"k\">        if</span> <span class=\"n\">e</span> <span class=\"o\">==</span> <span class=\"n\">élément</span><span class=\"p\">:</span>\n<span class=\"k\">            return</span> <span class=\"kc\">True</span>\n<span class=\"k\">    return</span> <span class=\"kc\">False</span>\n<span></span>\n<span class=\"c1\"># Appels de la fonction</span>\n<span class=\"n\">recherche_liste</span><span class=\"p\">(</span><span class=\"n\">paires</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"c1\"># renvoie False</span>\n<span class=\"n\">recherche_liste</span><span class=\"p\">(</span><span class=\"n\">paires</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">)</span> <span class=\"c1\"># renvoie True</span>\n</pre></div>\n<details class=\"plus\"><summary>Avec le mot-clé in</summary>\n<p>On peut utiliser le mot-clé <code>in</code> pour tester la présence d’une valeur dans la liste:</p>\n<div class=\"highlight\"><pre><span></span><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"mi\">8</span> <span class=\"ow\">in</span> <span class=\"n\">paires</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"mi\">7</span> <span class=\"ow\">in</span> <span class=\"n\">paires</span>\n<span class=\"kc\">False</span>\n</pre></div>\n</details>\n<h3 id=\"dans-un-dictionnaire\" class=\"anchored\">Dans un dictionnaire</h3>\n<p>Il existe trois méthodes d’itération sur les dictionnaires vues en <a href=\"/1g/nsi/3-representation-des-donnees-types-construits/3-dictionnaires/#itération-sur-les-dictionnaires\">première</a>:</p>\n<ul>\n<li>Itération sur les clés: <code>keys()</code></li>\n<li>Itération sur les valeurs: <code>values()</code></li>\n<li>Itération sur les paires clé, valeurs: <code>items()</code></li>\n</ul>\n<p>Pour rechercher une valeur, une itération sur les valeurs suffit.</p>\n<div class=\"highlight\"><pre><span></span><span class=\"n\">personne</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'nom'</span><span class=\"p\">:</span> <span class=\"s1\">'Lagaffe'</span><span class=\"p\">,</span> <span class=\"s1\">'prenom'</span><span class=\"p\">:</span> <span class=\"s1\">'Gaston'</span><span class=\"p\">,</span> <span class=\"s1\">'age'</span><span class=\"p\">:</span> <span class=\"mi\">28</span><span class=\"p\">,</span> <span class=\"s1\">'dessinateur'</span><span class=\"p\">:</span> <span class=\"s1\">'André Franquin'</span><span class=\"p\">}</span>\n<span></span>\n<span class=\"k\">def</span> <span class=\"nf\">recherche_dict</span><span class=\"p\">(</span><span class=\"n\">dico</span><span class=\"p\">,</span> <span class=\"n\">valeur</span><span class=\"p\">):</span>\n<span class=\"k\">    for</span> <span class=\"n\">val</span> <span class=\"ow\">in</span> <span class=\"n\">dico</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">():</span>\n<span class=\"k\">        if</span> <span class=\"n\">val</span> <span class=\"o\">==</span> <span class=\"n\">valeur</span><span class=\"p\">:</span>\n<span class=\"k\">            return</span> <span class=\"kc\">True</span>\n<span class=\"k\">    return</span> <span class=\"kc\">False</span>\n<span></span>\n<span class=\"n\">recherche_dict</span><span class=\"p\">(</span><span class=\"n\">personne</span><span class=\"p\">,</span> <span class=\"s1\">'André Franquin'</span><span class=\"p\">)</span> <span class=\"c1\"># renvoie True</span>\n<span class=\"n\">recherche_dict</span><span class=\"p\">(</span><span class=\"n\">personne</span><span class=\"p\">,</span> <span class=\"s1\">'Lagafe'</span><span class=\"p\">)</span> <span class=\"c1\"># renvoie False</span>\n</pre></div>\n<details class=\"plus\"><summary>Avec le mot-clé in</summary>\n<p>Le mot-clé <code>in</code> teste l’opérande parmi les <em>clés</em> et non les valeurs.</p>\n<div class=\"highlight\"><pre><span></span><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"s1\">'André Franquin'</span> <span class=\"ow\">in</span> <span class=\"n\">personne</span>\n<span class=\"kc\">False</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"s1\">'dessinateur'</span> <span class=\"ow\">in</span> <span class=\"n\">personne</span>\n<span class=\"kc\">True</span>\n</pre></div>\n</details>\n<h2 id=\"complexité-des-opérations\" class=\"anchored\">Complexité des opérations</h2>\n<p>Nous avons déjà défini la complexité temporelle d’un algorithme qui consiste à compter le nombre d’opérations élémentaires effectuées par un algorithme pour aboutir au résultat souhaité.</p>\n<p>Nous allons préciser ici ce que l’on entend par opération élémentaire, car parfois lorsque l’on tape une opération celle-ci n’est pas élémentaire.</p>\n<div class=\"prop\">\n<p>Une opération est élémentaire si elle a une complexité <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>\n.</p>\n</div>\n<h3 id=\"cas-des-listes\" class=\"anchored\">Cas des <code>list</code>es</h3>\n<table class=\"table table-bordered table-hover\">\n<thead class=\"table-warning\">\n<tr class=\"header\">\n<th><div class=\"highlight\"><pre><span></span>    Opération\n</pre></div>\n</th>\n<th><div class=\"highlight\"><pre><span></span>  Exemple\n</pre></div>\n</th>\n<th>Complexité</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>Ajout à la fin</td>\n<td><code>liste.append(e)</code></td>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>\n</td>\n</tr>\n<tr class=\"even\">\n<td>Insertion d’un élément</td>\n<td><code>liste.insert(i, e)</code></td>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span>\n</td>\n</tr>\n<tr class=\"odd\">\n<td>Suppression à la fin</td>\n<td><code>liste.pop()</code></td>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>\n</td>\n</tr>\n<tr class=\"even\">\n<td>Suppression au milieu</td>\n<td><code>liste.pop(i)</code></td>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span>\n</td>\n</tr>\n<tr class=\"odd\">\n<td>Accès à un élément</td>\n<td><code>liste[i]</code></td>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>\n</td>\n</tr>\n<tr class=\"even\">\n<td>Modification d’un élément</td>\n<td><code>liste[i] = e</code></td>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>\n</td>\n</tr>\n<tr class=\"odd\">\n<td>Longueur de la liste</td>\n<td><code>len(liste)</code></td>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>\n</td>\n</tr>\n<tr class=\"even\">\n<td>Recherche d’un élément</td>\n<td><code>e in liste</code></td>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span>\n</td>\n</tr>\n</tbody>\n</table>\n<p><a href=\"https://wiki.python.org/moin/TimeComplexity#list\" class=\"cite-source\">Time complexity sur le wiki Python</a></p>\n<h3 id=\"cas-des-dictionnaires\" class=\"anchored\">Cas des <code>dict</code>ionnaires</h3>\n<table class=\"table table-bordered table-hover\">\n<thead class=\"table-warning\">\n<tr class=\"header\">\n<th><div class=\"highlight\"><pre><span></span>    Opération\n</pre></div>\n</th>\n<th><div class=\"highlight\"><pre><span></span>  Exemple\n</pre></div>\n</th>\n<th>Complexité</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>Ajout d’un élément</td>\n<td><code>dico[clé] = val</code></td>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>\n</td>\n</tr>\n<tr class=\"even\">\n<td>Modification d’un élément</td>\n<td><code>dico[clé] = val</code></td>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>\n</td>\n</tr>\n<tr class=\"odd\">\n<td>Suppression d’un élément</td>\n<td><code>del dico[clé]</code></td>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>\n</td>\n</tr>\n<tr class=\"even\">\n<td>Accès à un élément</td>\n<td><code>dico[i]</code></td>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>\n</td>\n</tr>\n<tr class=\"odd\">\n<td>Recherche d’une clé</td>\n<td><code>e in dico</code></td>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>\n</td>\n</tr>\n<tr class=\"even\">\n<td>Recherche d’un valeur</td>\n<td><code>e in dico.values()</code></td>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span>\n</td>\n</tr>\n</tbody>\n</table>\n<p><em>Note: les complexités données sont moyennes car dans le pire des cas, toutes ses opérations sont en <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span>\n.</em></p>\n<p><a href=\"https://wiki.python.org/moin/TimeComplexity#dict\" class=\"cite-source\">Time complexity sur le wiki Python</a></p>","tableOfContents":"","frontmatter":{"tags":["cours","terminale","lycée","numérique et sciences informatiques","nsi"],"tocHTML":"<ul><li><a href=\"#les-tableaux-list-en-python\" data-localhref=\"true\">Les tableaux: <em>(<code>list</code> en python)</em></a></li><li><a href=\"#différence-entre-interface-et-implémentation\" data-localhref=\"true\">Différence entre interface et implémentation</a></li><li><a href=\"#les-tableaux-associatifs-dictionnaires-en-python\" data-localhref=\"true\">Les Tableaux associatifs: <em>(<code>dict</code>ionnaires en Python)</em></a></li><ul><li><a href=\"#interface\" data-localhref=\"true\">Interface</a></li><li><a href=\"#implémentation-en-python\" data-localhref=\"true\">Implémentation en python</a></li></ul><li><a href=\"#recherche-dune-valeur\" data-localhref=\"true\">Recherche d’une valeur</a></li><ul><li><a href=\"#dans-une-liste\" data-localhref=\"true\">Dans une liste</a></li><li><a href=\"#dans-un-dictionnaire\" data-localhref=\"true\">Dans un dictionnaire</a></li></ul><li><a href=\"#complexité-des-opérations\" data-localhref=\"true\">Complexité des opérations</a></li><ul><li><a href=\"#cas-des-listes\" data-localhref=\"true\">Cas des <code>list</code>es</a></li><li><a href=\"#cas-des-dictionnaires\" data-localhref=\"true\">Cas des <code>dict</code>ionnaires</a></li></ul></ul>"},"fields":{"classe":"tg","chapter":"Interface et implémentation","matter":"nsi","nChapter":"1","part":"Structures de données","nPart":"1"}}},"pageContext":{"slug":"tg/nsi/1-structures-de-donnees/1-interface-et-implementation","chapter":"Interface et implémentation"}},"staticQueryHashes":["604483588"],"slicesMap":{}}