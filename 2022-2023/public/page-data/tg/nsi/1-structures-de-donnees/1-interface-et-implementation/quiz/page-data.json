{"componentChunkName":"component---src-templates-quiz-js","path":"/tg/nsi/1-structures-de-donnees/1-interface-et-implementation/quiz/","result":{"data":{"markdownRemark":{"rawMarkdownBody":"1. On accède aux données par clef dans un:\n\n   - [ ] tableau(`list` en python) \n   - [x] tableau associatif(`dict` en python)\n\n2. On accède aux données par index dans un:\n\n   - [x] tableau(`list` en python) \n   - [ ] tableau associatif(`dict` en python)\n\n3. Une interface est de nature:\n\n   - [ ] pratique\n   - [x] théorique\n\n4. Une implémentation est de nature:\n\n   - [x] pratique\n   - [ ] théorique\n\n5. Quelle est la sortie du code suivant (`end=\" \"` place un espace entre chaque affichage.):\n   \n   ```python\n   tab = [2, 3, 5, 7, 11]\n   for v in tab:\n      print(v, end=\",\")\n   ```\n\n   - [x] `2 3 5 7 11`\n   - [ ] `1 2 3 4 5`\n   - [ ] `0 1 2 3 4`\n\n6. Quelle est la sortie du code suivant:\n   \n   ```python\n   tab = [2, 3, 5, 7, 11]\n   for i in range(len(tab)):\n      print(v, end=\",\")\n   ```\n\n   - [ ] `2 3 5 7 11`\n   - [ ] `1 2 3 4 5`\n   - [x] `0 1 2 3 4`\n\n7. Quelle est la sortie du code suivant:\n   \n   ```python\n   gaston = {'nom': 'Lagaffe', 'prenom': 'Gaston', 'age': 22, 'expression': \"M'enfin\"}\n   for k in gaston:\n       print(k, end=\" \")\n   ```\n\n   - [ ] `nom Lagaffe prenom Gaston age 22 expression M'enfin`\n   - [x] `nom prenom age expression`\n   - [ ] `('nom', 'Lagaffe') ('prenom', 'Gaston') ('age', 22) ('expression', \"M'enfin\")`\n   - [ ] ` Lagaffe Gaston 22 M'enfin`\n\n8. Quelle est la sortie du code suivant:\n   \n   ```python\n   gaston = {'nom': 'Lagaffe', 'prenom': 'Gaston', 'age': 22, 'expression': \"M'enfin\"}\n   for k in gaston.keys():\n       print(k, end=\" \")\n   ```\n\n   - [ ] `nom Lagaffe prenom Gaston age 22 expression M'enfin`\n   - [x] `nom prenom age expression`\n   - [ ] `('nom', 'Lagaffe') ('prenom', 'Gaston') ('age', 22) ('expression', \"M'enfin\")`\n   - [ ] ` Lagaffe Gaston 22 M'enfin`\n\n9.  Quelle est la sortie du code suivant:\n   \n   ```python\n   gaston = {'nom': 'Lagaffe', 'prenom': 'Gaston', 'age': 22, 'expression': \"M'enfin\"}\n   for k in gaston.values():\n       print(k, end=\" \")\n   ```\n\n   - [ ] `nom Lagaffe prenom Gaston age 22 expression M'enfin`\n   - [ ] `nom prenom age expression`\n   - [ ] `('nom', 'Lagaffe') ('prenom', 'Gaston') ('age', 22) ('expression', \"M'enfin\")`\n   - [x] ` Lagaffe Gaston 22 M'enfin`\n\n11. Quelle est la sortie du code suivant:\n   \n   ```python\n   gaston = {'nom': 'Lagaffe', 'prenom': 'Gaston', 'age': 22, 'expression': \"M'enfin\"}\n   for k in gaston.items():\n       print(k, end=\" \")\n   ```\n\n   - [ ] `nom Lagaffe prenom Gaston age 22 expression M'enfin`\n   - [ ] `nom prenom age expression`\n   - [x] `('nom', 'Lagaffe') ('prenom', 'Gaston') ('age', 22) ('expression', \"M'enfin\")`\n   - [ ] ` Lagaffe Gaston 22 M'enfin`\n\n12. Quelle est la sortie du code suivant:\n   \n   ```python\n   gaston = {'nom': 'Lagaffe', 'prenom': 'Gaston', 'age': 22, 'expression': \"M'enfin\"}\n   for k, v in gaston.items():\n       print(k, v, end=\" \")\n   ```\n\n   - [ ] `nom Lagaffe prenom Gaston age 22 expression M'enfin`\n   - [ ] `nom prenom age expression`\n   - [ ] `('nom', 'Lagaffe') ('prenom', 'Gaston') ('age', 22) ('expression', \"M'enfin\")`\n   - [x] ` Lagaffe Gaston 22 M'enfin`\n\n12. Quelle opération est faite en un temps constant $O(1)$ (indépendant de la longueur de la liste)\n   sur les `list`es en Python?\n\n   - [ ] Ajouter un élément au début\n   - [ ] Ajouter un élément au milieu\n   - [x] Ajouter un élément à la fin\n\n13. Quelle opération est faite en un temps constant $O(1)$ sur les `list`es en Python?\n\n   - [ ] Supprimer un élément au début\n   - [ ] Supprimer un élément au milieu\n   - [x] Supprimer un élément à la fin\n\n14. L'accès à la valeur d'un élément d'une `list`e en python se fait en temps constant $O(1)$ quelle\n   que soit sa position dans la liste?\n\n   - [x] Vrai\n   - [ ] Faux\n\n11. Quelle opération est faite, en moyenne, en temps linéaire $O(n)$ (proportionnel la longueur du\n   dictionnaire) sur les `dict` en Python:\n\n   - [ ] Ajouter une valeur\n   - [ ] Modifier une valeur\n   - [ ] Supprimer une valeur\n   - [x] Rechercher une valeur\n   - [ ] Rechercher une clé\n\n","fields":{"classe":"tg","chapter":"Interface et implémentation","matter":"nsi","nChapter":"1","part":"Structures de données","nPart":"1","type":"quiz"}}},"pageContext":{"slug":"tg/nsi/1-structures-de-donnees/1-interface-et-implementation/quiz"}},"staticQueryHashes":["604483588"],"slicesMap":{}}