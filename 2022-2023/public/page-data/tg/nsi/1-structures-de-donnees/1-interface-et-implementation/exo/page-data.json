{"componentChunkName":"component---src-templates-exo-md-js","path":"/tg/nsi/1-structures-de-donnees/1-interface-et-implementation/exo/","result":{"data":{"markdownRemark":{"html":"<h2 id=\"choisir-une-structure-de-donnée\" class=\"anchored\">Choisir une structure de donnée</h2>\n<p>Dans chaque cas, indiquer quelle structure de données vous semble la plus adaptée, et donner une exemple de création et d’interaction avec la structure de données.</p>\n<ol type=\"1\">\n<li>Une personne avec son nom, prénom, adresse email.</li>\n<li>Les notes de nsi d’un élève au cours d’un trimestre.</li>\n<li>Les notes de nsi de tous les élèves d’une classe au cours d’un trimestre.</li>\n<li>Une grille de sudoku <wc-wikimage title=\"Sudoku_Puzzle_by_L2G-20050714_standardized_layout.svg\" class=\"half\"></wc-wikimage></li>\n</ol>\n<h2 id=\"implémentation-de-la-classe-tableau\" class=\"anchored\">Implémentation de la classe <code>Tableau</code></h2>\n<ol type=\"1\">\n<li><p>Créer une classe <code>Tableau</code> qui implémente les quatre méthodes ci-dessous en stockant les données du tableau dans un attribut appelé <code>data</code> de type <code>list</code>e.</p>\n<ul>\n<li>« Insérer » : ajoute un élément dans le tableau à l’index souhaité. <code>tableau.ajout(index, élément)</code> ;</li>\n<li>« Retirer » : retire un élément de le tableau à l’index souhaité. <code>tableau.suppr(index)</code> ;</li>\n<li>« Le tableau est-il vide ? » : renvoie « vrai » si le tableau est vide, « faux » sinon. <code>tableau.est_vide()</code></li>\n<li>« Nombre d’éléments dans le tableau » : renvoie le nombre d’éléments dans le tableau. <code>tableau.longueur()</code></li>\n</ul>\n<p>On donne ci-dessous une séquence d’instructions d’initialisation et d’utilisation d’un <code>tableau</code>.</p>\n<div class=\"highlight\"><pre><span></span><span class=\"c1\"># instanciation</span>\n<span class=\"n\">tab</span> <span class=\"o\">=</span> <span class=\"n\">Tableau</span><span class=\"p\">()</span>\n<span></span>\n<span class=\"c1\"># utilisation</span>\n<span class=\"n\">tab</span><span class=\"o\">.</span><span class=\"n\">longueur</span><span class=\"p\">()</span> <span class=\"c1\"># renvoie 0</span>\n<span class=\"n\">tab</span><span class=\"o\">.</span><span class=\"n\">est_vide</span><span class=\"p\">()</span> <span class=\"c1\"># renvoie True</span>\n<span class=\"n\">tab</span><span class=\"o\">.</span><span class=\"n\">ajout</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">\"pomme\"</span><span class=\"p\">)</span>\n<span class=\"n\">tab</span><span class=\"o\">.</span><span class=\"n\">data</span> <span class=\"c1\"># renvoie ['pomme']</span>\n<span class=\"n\">tab</span><span class=\"o\">.</span><span class=\"n\">ajout</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s2\">\"poire\"</span><span class=\"p\">)</span>\n<span class=\"n\">tab</span><span class=\"o\">.</span><span class=\"n\">ajout</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">\"pêche\"</span><span class=\"p\">)</span>\n<span class=\"n\">tab</span><span class=\"o\">.</span><span class=\"n\">data</span> <span class=\"c1\"># ['pêche', 'pomme', 'poire']</span>\n<span class=\"n\">tab</span><span class=\"o\">.</span><span class=\"n\">est_vide</span><span class=\"p\">()</span> <span class=\"c1\"># renvoie False</span>\n<span class=\"n\">tab</span><span class=\"o\">.</span><span class=\"n\">suppr</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">tab</span><span class=\"o\">.</span><span class=\"n\">suppr</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">tab</span><span class=\"o\">.</span><span class=\"n\">data</span> <span class=\"c1\"># renvoie ['pomme']</span>\n</pre></div>\n</li>\n<li><p>Ajoutez ensuite la possibilité d’initialiser (méthode <code>__init__()</code>)les données du tableau en fournissant un paramètre de type <code>list</code>e lors de l’instanciation. Et ajoutez également une méthode d’affichage du tableau (méthode <code>__repr__()</code>) pour afficher les tableaux sous la forme: <code>\"Tableau([e1, e2, ..., en])\"</code>.</p>\n<p>On donne ci-dessous une séquence d’instructions d’initialisation et d’utilisation d’un <code>tableau</code>.</p>\n<div class=\"highlight\"><pre><span></span><span class=\"c1\"># instanciation</span>\n<span class=\"n\">tab1</span> <span class=\"o\">=</span> <span class=\"n\">Tableau</span><span class=\"p\">([</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">])</span>\n<span></span>\n<span class=\"c1\"># utilisation</span>\n<span class=\"n\">tab1</span><span class=\"o\">.</span><span class=\"n\">longueur</span><span class=\"p\">()</span> <span class=\"c1\"># renvoie 3</span>\n<span class=\"n\">tab1</span><span class=\"o\">.</span><span class=\"n\">est_vide</span><span class=\"p\">()</span> <span class=\"c1\"># renvoie False</span>\n<span class=\"n\">tab1</span><span class=\"o\">.</span><span class=\"n\">ajout</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">)</span>\n<span class=\"n\">tab1</span><span class=\"o\">.</span><span class=\"n\">suppr</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">tab1</span><span class=\"p\">)</span> <span class=\"c1\"># renvoie \"Tableau([12, 2, 5])\"</span>\n</pre></div>\n</li>\n<li><p><strong>Pour aller plus loin:</strong> <em>Cacher</em> la structure de liste de l’attribut <code>data</code> en autorisant l’initialisation sans les crochets: <code>tab2 = Tableau(2, 6, 5)</code>, et en modifiant la méthode d’affichage pour que: <code>print(tab2)</code> renvoie: <code>\"Tableau(2, 6, 5)\"</code>.</p>\n<p>Pour cela on utilisera le paramètre spécial <code>*args</code>, et la méthode <code>join</code> des <code>str</code> en Python.</p></li>\n<li><p><strong>Pour aller encore plus loin:</strong> Rendre l’utilisation des tableaux plus aisée en permettant le chaînage des méthodes <code>tableau.méthode1().méthode2().méthode1()...</code></p>\n<p>On donne ci-dessous une séquence d’instructions d’initialisation et d’utilisation d’un <code>tableau</code>.</p>\n<div class=\"highlight\"><pre><span></span><span class=\"c1\"># instanciation</span>\n<span class=\"n\">tab3</span> <span class=\"o\">=</span> <span class=\"n\">Tableau</span><span class=\"p\">()</span>\n<span></span>\n<span class=\"c1\"># utilisation</span>\n<span class=\"n\">tab3</span><span class=\"o\">.</span><span class=\"n\">ajout</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">ajout</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">ajout</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">tab3</span><span class=\"p\">)</span> <span class=\"c1\"># renvoie \"Tableau(9, 12, 13)\"</span>\n<span class=\"n\">tab3</span><span class=\"o\">.</span><span class=\"n\">suppr</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">suppr</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">tab3</span><span class=\"p\">)</span> <span class=\"c1\"># renvoie \"Tableau(12)\"</span>\n<span class=\"n\">tab3</span><span class=\"o\">.</span><span class=\"n\">suppr</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">est_vide</span><span class=\"p\">()</span> <span class=\"c1\"># renvoie True</span>\n</pre></div>\n</li>\n</ol>","frontmatter":{"tocHTML":"<ul><li><a href=\"#choisir-une-structure-de-donnée\" data-localhref=\"true\">Choisir une structure de donnée</a></li><li><a href=\"#implémentation-de-la-classe-tableau\" data-localhref=\"true\">Implémentation de la classe <code>Tableau</code></a></li></ul>"},"fields":{"classe":"tg","chapter":"Interface et implémentation","matter":"nsi","nChapter":"1","part":"Structures de données","nPart":"1","type":"exo"}}},"pageContext":{"slug":"tg/nsi/1-structures-de-donnees/1-interface-et-implementation/exo"}},"staticQueryHashes":["604483588"],"slicesMap":{}}