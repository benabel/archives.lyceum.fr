{"componentChunkName":"component---src-templates-exo-md-js","path":"/tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/4-securisation-des-communications/exo/","result":{"data":{"markdownRemark":{"html":"<p>Pour réaliser ces exercices on peut utiliser le module <code>string</code> de python.</p>\n<div class=\"highlight\"><pre><span></span><span class=\"c1\"># crée une chaîne de caractères avec l'alphabet</span>\n<span></span>\n<span class=\"kn\">from</span> <span class=\"nn\">string</span> <span class=\"kn\">import</span> <span class=\"n\">ascii_uppercase</span> <span class=\"k\">as</span> <span class=\"n\">alphabet</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">alphabet</span><span class=\"p\">)</span>     <span class=\"c1\"># affiche ABCDEFGHIJKLMNOPQRSTUVWXYZ</span>\n<span></span>\n<span class=\"c1\"># accès aux caractères par l'index</span>\n<span class=\"n\">alphabet</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">alphabet</span><span class=\"p\">[</span><span class=\"mi\">25</span><span class=\"p\">]</span>     <span class=\"c1\"># renvoie \"A\", \"Z\"</span>\n<span></span>\n<span class=\"c1\"># recherche d'un caractère</span>\n<span class=\"n\">alphabet</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"s2\">\"A\"</span><span class=\"p\">),</span> <span class=\"n\">alphabet</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"s2\">\"Z\"</span><span class=\"p\">)</span>     <span class=\"c1\"># renvoie 0, 25</span>\n<span></span>\n<span class=\"c1\"># Méthode str.upper pour mettre une chaîne de caractère en majuscules</span>\n<span class=\"s2\">\"Message\"</span><span class=\"o\">.</span><span class=\"n\">upper</span><span class=\"p\">()</span>   <span class=\"c1\"># renvoie \"MESSAGE\"</span>\n</pre></div>\n<h2 id=\"implémenter-des-chiffrements-symétriques-en-python\" class=\"anchored\">Implémenter des chiffrements symétriques en Python</h2>\n<ol type=\"1\">\n<li><p>Implémenter le <strong>chiffrement de César</strong> en créant une fonction <code>cesar</code> qui prend deux paramètres:</p>\n<ul>\n<li><code>message</code> une chaîne de caractères à (dé)coder.</li>\n<li><code>n</code> un entier qui donne le décalage.</li>\n</ul>\n<p>Cette fonction doit convertir le message en majuscule, et décaler toutes les lettres de <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span>\ngrâce au codage César, et laisser tous les autres caractères inchangés(ponctuation).</p>\n<p>Voici une série de tests à passer.</p>\n<div class=\"highlight\"><pre><span></span><span class=\"k\">assert</span> <span class=\"n\">cesar</span><span class=\"p\">(</span><span class=\"s1\">'message'</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"s2\">\"MESSAGE\"</span>\n<span class=\"k\">assert</span> <span class=\"n\">cesar</span><span class=\"p\">(</span><span class=\"s1\">'message'</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"s1\">'NFTTBHF'</span>\n<span class=\"k\">assert</span> <span class=\"n\">cesar</span><span class=\"p\">(</span><span class=\"s1\">'message'</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"s1\">'LDRRZFD'</span>\n<span class=\"k\">assert</span> <span class=\"n\">cesar</span><span class=\"p\">(</span><span class=\"s1\">'message'</span><span class=\"p\">,</span> <span class=\"mi\">26</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"s1\">'MESSAGE'</span>\n<span class=\"k\">assert</span> <span class=\"n\">cesar</span><span class=\"p\">(</span><span class=\"s1\">'message'</span><span class=\"p\">,</span> <span class=\"mi\">53</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"s1\">'NFTTBHF'</span>\n<span class=\"k\">assert</span> <span class=\"n\">cesar</span><span class=\"p\">(</span><span class=\"s1\">'message'</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">27</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"s1\">'LDRRZFD'</span>\n<span></span>\n<span class=\"n\">eluard</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"Sur mes cahiers d’écolier</span>\n<span class=\"s2\">Sur mon pupitre et les arbres</span>\n<span class=\"s2\">Sur le sable sur la neige</span>\n<span class=\"s2\">J’écris ton nom\"\"\"</span>\n<span class=\"k\">assert</span> <span class=\"n\">cesar</span><span class=\"p\">(</span><span class=\"n\">eluard</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"s1\">'FHE ZRF PNUVREF Q’ÉPBYVRE</span><span class=\"se\">\\n</span><span class=\"s1\">FHE ZBA CHCVGER RG YRF NEOERF</span><span class=\"se\">\\n</span><span class=\"s1\">FHE YR FNOYR FHE YN ARVTR</span><span class=\"se\">\\n</span><span class=\"s1\">W’ÉPEVF GBA ABZ'</span>\n<span></span>\n<span class=\"c1\"># vérification du décodage</span>\n<span class=\"k\">assert</span> <span class=\"n\">cesar</span><span class=\"p\">(</span><span class=\"n\">cesar</span><span class=\"p\">(</span><span class=\"n\">eluard</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">),</span> <span class=\"o\">-</span><span class=\"mi\">13</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"n\">eluard</span><span class=\"o\">.</span><span class=\"n\">upper</span><span class=\"p\">()</span>\n</pre></div>\n<!-- \n```python\ndef cesar(message, n):\n m = message.upper()\n codage = \"\"\n for lettre in m:\n     if lettre in alphabet:\n         index = (alphabet.index(lettre) + n) % len(alphabet)\n         codage += alphabet[index]\n     else:\n         codage += lettre\n return codage\n ``` --></li>\n<li><p>Implémenter le <strong>chiffrement par substitution</strong> avec une fonction <code>substitution</code> qui prend deux paramètres:</p>\n<ul>\n<li><code>message</code> une chaîne de caractères à (dé)coder.</li>\n<li><code>clé</code> une chaîne de caractères qui donne les correspondances des caractères. Par exemple: <code>AZERTYUIOPQSDFGHJKLMWXCVBN</code> dans le cours.</li>\n</ul>\n<p>On pourra vérifier son fonctionnement sur l’exemple du cours:</p>\n<div class=\"highlight\"><pre><span></span><span class=\"k\">assert</span> <span class=\"n\">substitution</span><span class=\"p\">(</span><span class=\"s2\">\"SUBSTITUTION\"</span><span class=\"p\">,</span> <span class=\"s2\">\"AZERTYUIOPQSDFGHJKLMWXCVBN\"</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"s2\">\"LWZLMOMWMOGF\"</span>\n</pre></div>\n<p>Comment devra être effectué le décodage à partir du message codé et de la clé?</p></li>\n<li><p>Implémenter le <strong>chiffrement de Vigenère</strong> avec une fonction <code>vigenère</code> qui prend deux paramètres:</p>\n<ul>\n<li><code>message</code> une chaîne de caractères à (dé)coder.</li>\n<li><code>clé</code> une chaîne de caractères qui donne les décalages des caractères. Par exemple: <code>ABC</code> dans le cours.</li>\n</ul>\n<p>On pourra vérifier son fonctionnement sur l’exemple du cours:</p>\n<div class=\"highlight\"><pre><span></span><span class=\"k\">assert</span> <span class=\"n\">vigenère</span><span class=\"p\">(</span><span class=\"s2\">\"SUBSTITUTION\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ABC\"</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"s2\">\"SVDSUKTVVIPP\"</span>\n</pre></div>\n<p>Comment devra être effectué le décodage à partir du message codé et de la clé?</p></li>\n</ol>","frontmatter":{"tocHTML":"<ul><li><a href=\"#implémenter-des-chiffrements-symétriques-en-python\" data-localhref=\"true\">Implémenter des chiffrements symétriques en Python</a></li></ul>"},"fields":{"classe":"tg","chapter":"Sécurisation des communications*","matter":"nsi","nChapter":"4","part":"Architectures matérielles, systèmes d’exploitation et réseaux","nPart":"3","type":"exo"}}},"pageContext":{"slug":"tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/4-securisation-des-communications/exo"}},"staticQueryHashes":["604483588"],"slicesMap":{}}