{"componentChunkName":"component---src-templates-cours-md-js","path":"/ts/isn/1-Introduction-a-Python/7-Boucles","webpackCompilationHash":"41b6f3e30b482131442a","result":{"data":{"site":{"siteMetadata":{"title":"lyceum.fr"}},"markdownRemark":{"html":"<p>Nous allons voir dans ce chapitre comment créer des blocs d'instructions qui se répètent.</p>\n<p>Il existe deux façons de coder des boucles en <code class=\"language-text\">Python</code>:</p>\n<ul>\n<li>\n<p>la boucle <code class=\"language-text\">for</code> en français <em>pour</em>, répète les instructions <strong>pour</strong> des valeurs choisies.</p>\n</li>\n<li>\n<p>la boucle <code class=\"language-text\">while</code> en français <em>tant que</em>, répète les instructions <strong>tant qu'</strong>une condition est vérifiée</p>\n</li>\n</ul>\n<h2 id=\"la-boucle-for\"><a href=\"#la-boucle-for\" aria-label=\"la boucle for permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>La boucle <code class=\"language-text\">for</code></h2>\n<p>La boucle <code class=\"language-text\">for</code> est utilisée lorsque l'<strong>on connaît à l'avance les valeurs pour lesquelles on veut répéter le bloc d'instructions</strong>.</p>\n<p>Si les éléments sur lesquels ont veut réaliser les itérations sont bien connus, on peut faire des boucles sur des listes de valeur.</p>\n<h3 id=\"itérations-sur-des-listes\"><a href=\"#it%C3%A9rations-sur-des-listes\" aria-label=\"itérations sur des listes permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Itérations sur des listes</h3>\n<p>Les <a href=\"https://docs.python.org/fr/3/tutorial/datastructures.html\">list</a>es sont tout simplement un ensemble de valeurs que l'on place entre crochets.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">[</span>valeur0<span class=\"token punctuation\">,</span> valeur1<span class=\"token punctuation\">,</span> valeur2<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> valeurN<span class=\"token punctuation\">]</span> </code></pre></div>\n<p>Pour réaliser une itérations sur tous les éléments de la liste, la syntaxe est:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> element <span class=\"token keyword\">in</span> liste<span class=\"token punctuation\">:</span>\n    instructions utilisant l'élément</code></pre></div>\n<hr>\n<div class=\"card text-white bg-gradient-dark\">\n<div class=\"card-header\"><small class=\"text-muted\">Entrée</small></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">saisons <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'été'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'automne'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'hiver'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'printemps'</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>saisons<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n</div>\n</div>\n<div class=\"card text-white bg-gradient-light stream-output\">\n<div class=\"card-header\"><small class=\"text-muted\">Sortie</small></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;class &#39;list&#39;&gt;</code></pre></div>\n</div>\n</div>\n<hr>\n<hr>\n<div class=\"card text-white bg-gradient-dark\">\n<div class=\"card-header\"><small class=\"text-muted\">Entrée</small></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> saison <span class=\"token keyword\">in</span> saisons<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>saison<span class=\"token punctuation\">)</span></code></pre></div>\n</div>\n</div>\n<div class=\"card text-white bg-gradient-light stream-output\">\n<div class=\"card-header\"><small class=\"text-muted\">Sortie</small></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">été\nautomne\nhiver\nprintemps</code></pre></div>\n</div>\n</div>\n<hr>\n<h3 id=\"utilisation-de-la-fonction-range\"><a href=\"#utilisation-de-la-fonction-range\" aria-label=\"utilisation de la fonction range permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Utilisation de la fonction <code class=\"language-text\">range</code></h3>\n<p>Il est très fréquent de réaliser des iterations  sur des nombres en comptant les tours de boucles.</p>\n<p>La fonction <code class=\"language-text\">range(n)</code> permet de créer une boucle de n tours.</p>\n<hr>\n<div class=\"card text-white bg-gradient-dark\">\n<div class=\"card-header\"><small class=\"text-muted\">Entrée</small></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></code></pre></div>\n</div>\n</div>\n<div class=\"card text-white bg-gradient-light stream-output\">\n<div class=\"card-header\"><small class=\"text-muted\">Sortie</small></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">0\n1\n2\n3\n4\n5\n6</code></pre></div>\n</div>\n</div>\n<hr>\n<p>On peut éventuellement choisir la valeur du compteur au départ.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>début<span class=\"token punctuation\">,</span> fin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre></div>\n<p><strong>Attention:</strong> Dans tous les cas le nombre final n'est pas inclus dans les itérations.</p>\n<hr>\n<div class=\"card text-white bg-gradient-dark\">\n<div class=\"card-header\"><small class=\"text-muted\">Entrée</small></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></code></pre></div>\n</div>\n</div>\n<div class=\"card text-white bg-gradient-light stream-output\">\n<div class=\"card-header\"><small class=\"text-muted\">Sortie</small></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1\n2\n3\n4\n5\n6</code></pre></div>\n</div>\n</div>\n<hr>\n<p>On peut également choisir le pas de l'incrémentation grâce à la syntaxe:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>début<span class=\"token punctuation\">,</span> fin<span class=\"token punctuation\">,</span> pas<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    instruction <span class=\"token number\">1</span>\n    instruction <span class=\"token number\">2</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre></div>\n<hr>\n<div class=\"card text-white bg-gradient-dark\">\n<div class=\"card-header\"><small class=\"text-muted\">Entrée</small></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></code></pre></div>\n</div>\n</div>\n<div class=\"card text-white bg-gradient-light stream-output\">\n<div class=\"card-header\"><small class=\"text-muted\">Sortie</small></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1\n3\n5\n7\n9\n11</code></pre></div>\n</div>\n</div>\n<hr>\n<hr>\n<div class=\"card text-white bg-gradient-dark\">\n<div class=\"card-header\"><small class=\"text-muted\">Entrée</small></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">365</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></code></pre></div>\n</div>\n</div>\n<div class=\"card text-white bg-gradient-light stream-output\">\n<div class=\"card-header\"><small class=\"text-muted\">Sortie</small></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">365\n360\n355\n350\n345\n340\n335\n330\n325\n320\n315\n310\n305</code></pre></div>\n</div>\n</div>\n<hr>\n<p><em>Remarque:</em> par défaut chaque instruction print se termine par un retour à la ligne, mais on peut suprimer ce retour en choisissant une fin de print vide avec l'attribut end.</p>\n<hr>\n<div class=\"card text-white bg-gradient-dark\">\n<div class=\"card-header\"><small class=\"text-muted\">Entrée</small></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" janvier\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n</div>\n</div>\n<div class=\"card text-white bg-gradient-light stream-output\">\n<div class=\"card-header\"><small class=\"text-muted\">Sortie</small></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1 janvier\n2 janvier\n3 janvier\n4 janvier\n5 janvier\n6 janvier\n7 janvier\n8 janvier\n9 janvier\n10 janvier\n11 janvier\n12 janvier\n13 janvier\n14 janvier\n15 janvier\n16 janvier\n17 janvier\n18 janvier\n19 janvier\n20 janvier\n21 janvier\n22 janvier\n23 janvier\n24 janvier\n25 janvier\n26 janvier\n27 janvier\n28 janvier\n29 janvier\n30 janvier\n31 janvier</code></pre></div>\n</div>\n</div>\n<hr>\n<h3 id=\"boucles-imbriquées\"><a href=\"#boucles-imbriqu%C3%A9es\" aria-label=\"boucles imbriquées permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Boucles imbriquées</h3>\n<p>Il est possible d'éxecuter une boucle à l'intérieur d'une autre boucle, elles sont alors dites imbriquées.</p>\n<hr>\n<div class=\"card text-white bg-gradient-dark\">\n<div class=\"card-header\"><small class=\"text-muted\">Entrée</small></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> mois <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> jour <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">31</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>jour<span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>mois<span class=\"token punctuation\">)</span></code></pre></div>\n</div>\n</div>\n<div class=\"card text-white bg-gradient-light stream-output\">\n<div class=\"card-header\"><small class=\"text-muted\">Sortie</small></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1/1\n2/1\n3/1\n4/1\n5/1\n6/1\n7/1\n8/1\n9/1\n10/1\n11/1\n12/1\n13/1\n14/1\n15/1\n16/1\n17/1\n18/1\n19/1\n20/1\n21/1\n22/1\n23/1\n24/1\n25/1\n26/1\n27/1\n28/1\n29/1\n30/1\n1/2\n2/2\n3/2\n4/2\n5/2\n6/2\n7/2\n8/2\n9/2\n10/2\n11/2\n12/2\n13/2\n14/2\n15/2\n16/2\n17/2\n18/2\n19/2\n20/2\n21/2\n22/2\n23/2\n24/2\n25/2\n26/2\n27/2\n28/2\n29/2\n30/2\n1/3\n2/3\n3/3\n4/3\n5/3\n6/3\n7/3\n8/3\n9/3\n10/3\n11/3\n12/3\n13/3\n14/3\n15/3\n16/3\n17/3\n18/3\n19/3\n20/3\n21/3\n22/3\n23/3\n24/3\n25/3\n26/3\n27/3\n28/3\n29/3\n30/3\n1/4\n2/4\n3/4\n4/4\n5/4\n6/4\n7/4\n8/4\n9/4\n10/4\n11/4\n12/4\n13/4\n14/4\n15/4\n16/4\n17/4\n18/4\n19/4\n20/4\n21/4\n22/4\n23/4\n24/4\n25/4\n26/4\n27/4\n28/4\n29/4\n30/4\n1/5\n2/5\n3/5\n4/5\n5/5\n6/5\n7/5\n8/5\n9/5\n10/5\n11/5\n12/5\n13/5\n14/5\n15/5\n16/5\n17/5\n18/5\n19/5\n20/5\n21/5\n22/5\n23/5\n24/5\n25/5\n26/5\n27/5\n28/5\n29/5\n30/5\n1/6\n2/6\n3/6\n4/6\n5/6\n6/6\n7/6\n8/6\n9/6\n10/6\n11/6\n12/6\n13/6\n14/6\n15/6\n16/6\n17/6\n18/6\n19/6\n20/6\n21/6\n22/6\n23/6\n24/6\n25/6\n26/6\n27/6\n28/6\n29/6\n30/6\n1/7\n2/7\n3/7\n4/7\n5/7\n6/7\n7/7\n8/7\n9/7\n10/7\n11/7\n12/7\n13/7\n14/7\n15/7\n16/7\n17/7\n18/7\n19/7\n20/7\n21/7\n22/7\n23/7\n24/7\n25/7\n26/7\n27/7\n28/7\n29/7\n30/7\n1/8\n2/8\n3/8\n4/8\n5/8\n6/8\n7/8\n8/8\n9/8\n10/8\n11/8\n12/8\n13/8\n14/8\n15/8\n16/8\n17/8\n18/8\n19/8\n20/8\n21/8\n22/8\n23/8\n24/8\n25/8\n26/8\n27/8\n28/8\n29/8\n30/8\n1/9\n2/9\n3/9\n4/9\n5/9\n6/9\n7/9\n8/9\n9/9\n10/9\n11/9\n12/9\n13/9\n14/9\n15/9\n16/9\n17/9\n18/9\n19/9\n20/9\n21/9\n22/9\n23/9\n24/9\n25/9\n26/9\n27/9\n28/9\n29/9\n30/9\n1/10\n2/10\n3/10\n4/10\n5/10\n6/10\n7/10\n8/10\n9/10\n10/10\n11/10\n12/10\n13/10\n14/10\n15/10\n16/10\n17/10\n18/10\n19/10\n20/10\n21/10\n22/10\n23/10\n24/10\n25/10\n26/10\n27/10\n28/10\n29/10\n30/10\n1/11\n2/11\n3/11\n4/11\n5/11\n6/11\n7/11\n8/11\n9/11\n10/11\n11/11\n12/11\n13/11\n14/11\n15/11\n16/11\n17/11\n18/11\n19/11\n20/11\n21/11\n22/11\n23/11\n24/11\n25/11\n26/11\n27/11\n28/11\n29/11\n30/11\n1/12\n2/12\n3/12\n4/12\n5/12\n6/12\n7/12\n8/12\n9/12\n10/12\n11/12\n12/12\n13/12\n14/12\n15/12\n16/12\n17/12\n18/12\n19/12\n20/12\n21/12\n22/12\n23/12\n24/12\n25/12\n26/12\n27/12\n28/12\n29/12\n30/12</code></pre></div>\n</div>\n</div>\n<hr>\n<h2 id=\"la-boucle-while\"><a href=\"#la-boucle-while\" aria-label=\"la boucle while permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>La boucle <code class=\"language-text\">while</code></h2>\n<p>La boucle <code class=\"language-text\">while</code> est plus puissante que la boucle <code class=\"language-text\">for</code>, elle permet de créer des répétitions, même si l'on ne connait pas à l'avance le nombre de répétitions.</p>\n<p>Contrairement à la boucle <code class=\"language-text\">for</code>, le nombre d'itérations n'est pas fixé à l'avance, mais il est testé dynamiquement:\navant chaque éxecution du bloc d'instructions de la boucle.</p>\n<p>A chaque tour, on teste une condition, si cette condition est vérifiée, on éxecute le bloc d'instructiuons de la boucle, sinon, l'éxecution de la boucle est arrétée.</p>\n<p>Souvent il faut <strong>initialiser</strong> une variable qui contrôle l'itération avant de commencer la boucle.</p>\n<h3 id=\"contrôle-par-variable-booléenne\"><a href=\"#contr%C3%B4le-par-variable-bool%C3%A9enne\" aria-label=\"contrôle par variable booléenne permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Contrôle par variable booléenne</h3>\n<hr>\n<div class=\"card text-white bg-gradient-dark\">\n<div class=\"card-header\"><small class=\"text-muted\">Entrée</small></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">repeat <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">while</span> repeat<span class=\"token punctuation\">:</span>\n    resultat <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Combien font 2 + 5?  \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> resultat <span class=\"token operator\">==</span> <span class=\"token number\">7</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Bravo vous avez trouvé.\"</span><span class=\"token punctuation\">)</span>\n        repeat <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span></code></pre></div>\n</div>\n</div>\n<div class=\"card text-white bg-gradient-light stream-output\">\n<div class=\"card-header\"><small class=\"text-muted\">Sortie</small></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Combien font 2 + 5?  2\nCombien font 2 + 5?  9\nCombien font 2 + 5?  3\nCombien font 2 + 5?  7\nBravo vous avez trouvé.</code></pre></div>\n</div>\n</div>\n<hr>\n<h3 id=\"contrôle-à-laide-dun-compteur\"><a href=\"#contr%C3%B4le-%C3%A0-laide-dun-compteur\" aria-label=\"contrôle à laide dun compteur permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Contrôle à l'aide d'un compteur</h3>\n<p>Ceci ne peut fonctionner que si on connait à l'avance le nombre de tours de boucles. On préférera alors souvent utiliser un <code class=\"language-text\">for</code>.</p>\n<p>On va cependant détailler cette structure car elle est très commune, et illustre bien le mode de pensée que doit acquérir un programmeur.</p>\n<hr>\n<div class=\"card text-white bg-gradient-dark\">\n<div class=\"card-header\"><small class=\"text-muted\">Entrée</small></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">compteur <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>                 <span class=\"token comment\"># initialisation</span>\n<span class=\"token keyword\">while</span> compteur <span class=\"token operator\">&lt;=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">:</span>          <span class=\"token comment\"># condition</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>compteur<span class=\"token punctuation\">)</span>\n    compteur <span class=\"token operator\">=</span> compteur <span class=\"token operator\">+</span> <span class=\"token number\">1</span>   <span class=\"token comment\"># incrémentation du compteur</span></code></pre></div>\n</div>\n</div>\n<div class=\"card text-white bg-gradient-light stream-output\">\n<div class=\"card-header\"><small class=\"text-muted\">Sortie</small></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1\n2\n3\n4\n5</code></pre></div>\n</div>\n</div>\n<hr>\n<p>On peut découper cette structure de code en trois phases: l'initialisation, la condition et l'incrémentation.</p>\n<ul>\n<li>L'<strong>initialisation</strong> se produit une seule fois, au début de l'exécution.</li>\n<li>La <strong>condition</strong> est évaluée avant chaque tour de boucle. Si elle est vraie, un nouveau tour de boucle est effectué. Sinon, la boucle est terminée.</li>\n<li>L'<strong>étape</strong> ou <em>incrémentation</em>  est réalisée après chaque tour de boucle.</li>\n</ul>\n<p><em>Remarques</em></p>\n<ul>\n<li>la variable compteur est souvent notée <code class=\"language-text\">i</code>;</li>\n<li>faire attention à ne pas programmer une <strong>boucle infinie</strong> qui bloquerait votre programme en lui faisant répéter l'instruction une infinité de fois et saturerait ainsi votre processeur et/ou votre mémoire.</li>\n</ul>\n<hr>\n<div class=\"card text-white bg-gradient-dark\">\n<div class=\"card-header\"><small class=\"text-muted\">Entrée</small></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># BOUCLE INFINIE NE PAS EXECUTER</span>\n<span class=\"token comment\">#i = 0</span>\n<span class=\"token comment\">#while i >= 0:</span>\n<span class=\"token comment\">#    print(i)</span>\n<span class=\"token comment\">#    i += 1</span></code></pre></div>\n</div>\n</div>\n<h2 id=\"exercices\"><a href=\"#exercices\" aria-label=\"exercices permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Exercices</h2>\n<p>Ces exercices sont adaptés du cours sur la javascript de <a href=\"https://openclassrooms.com/en/courses/2984401-apprenez-a-coder-avec-javascript/3074396-repetez-des-instructions#/id/r-3075177\">openclassrooms</a></p>\n<p>Je vous conseille de réaliser chaque exercice avec le while, puis avec le for. Cela vous entraînera et vous permettra de mieux juger par la suite du meilleur type de boucle à utiliser.</p>\n<h3 id=\"tournez-manège\"><a href=\"#tournez-man%C3%A8ge\" aria-label=\"tournez manège permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tournez manège</h3>\n<p>Ecrivez un programme qui fait faire 10 tours de manège en affichant un message à chaque tour: <code class=\"language-text\">&quot;C&#39;est le tour n°...&quot;</code>.</p>\n<h4 id=\"une-solution-possible¶\"><a href=\"#une-solution-possible%C2%B6\" aria-label=\"une solution possible¶ permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Une solution possible¶</h4>\n<hr>\n<div class=\"card text-white bg-gradient-dark\">\n<div class=\"card-header\"><small class=\"text-muted\">Entrée</small></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"C'est le tour n°\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span></code></pre></div>\n</div>\n</div>\n<div class=\"card text-white bg-gradient-light stream-output\">\n<div class=\"card-header\"><small class=\"text-muted\">Sortie</small></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">C&#39;est le tour n° 1\nC&#39;est le tour n° 2\nC&#39;est le tour n° 3\nC&#39;est le tour n° 4\nC&#39;est le tour n° 5\nC&#39;est le tour n° 6\nC&#39;est le tour n° 7\nC&#39;est le tour n° 8\nC&#39;est le tour n° 9\nC&#39;est le tour n° 10</code></pre></div>\n</div>\n</div>\n<hr>\n<h3 id=\"parité\"><a href=\"#parit%C3%A9\" aria-label=\"parité permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Parité</h3>\n<p>Ecrivez un programme qui affiche tous les nombres entre 1 et 10, et indique pour chacun si celui-ci est pair ou impair:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token string\">\"1 est impair\"</span>\n<span class=\"token string\">\"2 est pair\"</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token string\">\"10 est pair\"</span></code></pre></div>\n<h4 id=\"une-solution-possible¶-1\"><a href=\"#une-solution-possible%C2%B6-1\" aria-label=\"une solution possible¶ 1 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Une solution possible¶</h4>\n<hr>\n<div class=\"card text-white bg-gradient-dark\">\n<div class=\"card-header\"><small class=\"text-muted\">Entrée</small></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> i <span class=\"token operator\">%</span><span class=\"token number\">2</span> <span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token string\">\"est pair\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token string\">\"est impair\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n</div>\n</div>\n<div class=\"card text-white bg-gradient-light stream-output\">\n<div class=\"card-header\"><small class=\"text-muted\">Sortie</small></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1 est impair\n2 est pair\n3 est impair\n4 est pair\n5 est impair\n6 est pair\n7 est impair\n8 est pair\n9 est impair\n10 est pair</code></pre></div>\n</div>\n</div>\n<hr>\n<h3 id=\"contrôle-de-saisie\"><a href=\"#contr%C3%B4le-de-saisie\" aria-label=\"contrôle de saisie permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Contrôle de saisie</h3>\n<p>Ecrivez un programme qui fait saisir un nombre à l'utilisateur jusqu'à ce que ce nombre soit inférieur ou égal à 100.</p>\n<p>Ensuite, améliorez votre programme pour que le nombre saisi soit compris entre 50 et 100.</p>\n<p><strong>Attention</strong> Réfléchissez bien à la condition de votre boucle : quel est l'inverse de \"compris entre 50 et 100\" ?</p>\n<h4 id=\"une-solution-possible¶-2\"><a href=\"#une-solution-possible%C2%B6-2\" aria-label=\"une solution possible¶ 2 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Une solution possible¶</h4>\n<hr>\n<div class=\"card text-white bg-gradient-dark\">\n<div class=\"card-header\"><small class=\"text-muted\">Entrée</small></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">REPEAT <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n<span class=\"token keyword\">while</span> REPEAT<span class=\"token punctuation\">:</span>\n    n <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Entrez un nombre compris entre 50 et 100: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">></span> <span class=\"token number\">49</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Merci pour votre réponse:)\"</span><span class=\"token punctuation\">)</span>\n        REPEAT <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span></code></pre></div>\n</div>\n</div>\n<div class=\"card text-white bg-gradient-light stream-output\">\n<div class=\"card-header\"><small class=\"text-muted\">Sortie</small></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Entrez un nombre compris entre 50 et 100: 12\nEntrez un nombre compris entre 50 et 100: 69\nMerci pour votre réponse:)</code></pre></div>\n</div>\n</div>\n<hr>\n<h3 id=\"table-de-multiplication\"><a href=\"#table-de-multiplication\" aria-label=\"table de multiplication permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Table de multiplication</h3>\n<p>Ecrivez un programme qui fait saisir un chiffre à l'utilisateur puis affiche la table de multiplication de ce chiffre.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">Voici la table de multiplication de <span class=\"token number\">7</span>\n<span class=\"token number\">7</span> x <span class=\"token number\">1</span> <span class=\"token operator\">=</span> <span class=\"token number\">7</span>\n<span class=\"token number\">7</span> x <span class=\"token number\">2</span> <span class=\"token operator\">=</span> <span class=\"token number\">14</span>\n<span class=\"token number\">7</span> x <span class=\"token number\">3</span> <span class=\"token operator\">=</span> <span class=\"token number\">21</span>\n<span class=\"token number\">7</span> x <span class=\"token number\">4</span> <span class=\"token operator\">=</span> <span class=\"token number\">28</span>\n<span class=\"token number\">7</span> x <span class=\"token number\">5</span> <span class=\"token operator\">=</span> <span class=\"token number\">35</span>\n<span class=\"token number\">7</span> x <span class=\"token number\">6</span> <span class=\"token operator\">=</span> <span class=\"token number\">42</span>\n<span class=\"token number\">7</span> x <span class=\"token number\">7</span> <span class=\"token operator\">=</span> <span class=\"token number\">49</span>\n<span class=\"token number\">7</span> x <span class=\"token number\">8</span> <span class=\"token operator\">=</span> <span class=\"token number\">56</span>\n<span class=\"token number\">7</span> x <span class=\"token number\">9</span> <span class=\"token operator\">=</span> <span class=\"token number\">63</span>\n<span class=\"token number\">7</span> x <span class=\"token number\">10</span> <span class=\"token operator\">=</span> <span class=\"token number\">70</span></code></pre></div>\n<p>Ensuite, améliorez votre programme pour vérifier que le nombre saisi soit compris entre 1 et 9, en vous inspirant de l'exercice précédent.</p>\n<h4 id=\"une-solution-possible\"><a href=\"#une-solution-possible\" aria-label=\"une solution possible permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Une solution possible</h4>\n<hr>\n<div class=\"card text-white bg-gradient-dark\">\n<div class=\"card-header\"><small class=\"text-muted\">Entrée</small></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">n <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Vous souhaitez afficher la table de: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> <span class=\"token string\">\"x\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> <span class=\"token string\">\"=\"</span><span class=\"token punctuation\">,</span> n<span class=\"token operator\">*</span>i<span class=\"token punctuation\">)</span></code></pre></div>\n</div>\n</div>\n<div class=\"card text-white bg-gradient-light stream-output\">\n<div class=\"card-header\"><small class=\"text-muted\">Sortie</small></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Vous souhaitez afficher la table de: 7\n7 x 1 = 7\n7 x 2 = 14\n7 x 3 = 21\n7 x 4 = 28\n7 x 5 = 35\n7 x 6 = 42\n7 x 7 = 49\n7 x 8 = 56\n7 x 9 = 63\n7 x 10 = 70</code></pre></div>\n</div>\n</div>\n<hr>\n<h3 id=\"ni-oui-ni-non\"><a href=\"#ni-oui-ni-non\" aria-label=\"ni oui ni non permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Ni oui ni non</h3>\n<p>Ecrivez un programme qui fait jouer l'utilisateur au ni oui, ni non : il entre un texte jusqu'à saisir \"oui\" ou \"non\", ce qui déclenche la fin du jeu.</p>\n<h4 id=\"une-solution-possible¶-3\"><a href=\"#une-solution-possible%C2%B6-3\" aria-label=\"une solution possible¶ 3 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Une solution possible¶</h4>\n<hr>\n<div class=\"card text-white bg-gradient-dark\">\n<div class=\"card-header\"><small class=\"text-muted\">Entrée</small></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token triple-quoted-string string\">\"\"\"\nBienvenue dans le jeu du ni oui ni non\n\"\"\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># On initialise la variable reponse</span>\nreponse <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>reponse <span class=\"token operator\">!=</span> <span class=\"token string\">\"oui\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span>reponse <span class=\"token operator\">!=</span> <span class=\"token string\">\"non\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    reponse <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Que dites-vous? \"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># On convertit la réponse en minuscules pour la comparaison</span>\n    reponse <span class=\"token operator\">=</span> reponse<span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    \n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"PERDU! Vous avez dit\"</span><span class=\"token punctuation\">,</span> reponse<span class=\"token punctuation\">)</span></code></pre></div>\n</div>\n</div>\n<div class=\"card text-white bg-gradient-light stream-output\">\n<div class=\"card-header\"><small class=\"text-muted\">Sortie</small></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Bienvenue dans le jeu du ni oui ni non\n\nQue dites-vous? Patate\nQue dites-vous? Avion\nQue dites-vous? Camion\nQue dites-vous? Oui\nPERDU! Vous avez dit oui</code></pre></div>\n</div>\n</div>\n<hr>\n<h3 id=\"fizzbuzz\"><a href=\"#fizzbuzz\" aria-label=\"fizzbuzz permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>FizzBuzz</h3>\n<p>Ecrivez un programme qui affiche tous les nombres entre 1 et 100 avec les exceptions suivantes :</p>\n<ul>\n<li>Il affiche \"Fizz\" à la place du nombre si celui-ci est divisible par 3.</li>\n<li>Il affiche \"Buzz\" à la place du nombre si celui-ci est divisible par 5 et non par 3.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token number\">1</span>\n<span class=\"token number\">2</span>\nFizz\n<span class=\"token number\">4</span>\nBuzz\nFizz\n<span class=\"token number\">7</span>\n<span class=\"token number\">8</span>\nFizz\nBuzz\n<span class=\"token number\">11</span></code></pre></div>\n<p>Ensuite, améliorez votre programme pour qu'il affiche \"FizzBuzz\" à la place des nombres divisibles à la fois par 3 et par 5.</p>\n<p><strong>Attention:</strong> Cet exercice a de nombreuses solutions possibles et constitue un test d'entretien d'embauche classique qui élimine un nombre significatif de candidats. Accrochez-vous pour le réussir !</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token number\">13</span>\n<span class=\"token number\">14</span>\nFizzBuzz\n<span class=\"token number\">16</span>\n<span class=\"token number\">17</span>\nFizz\n<span class=\"token number\">19</span>\nBuzz</code></pre></div>\n<h4 id=\"une-solution-possible¶-4\"><a href=\"#une-solution-possible%C2%B6-4\" aria-label=\"une solution possible¶ 4 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Une solution possible¶</h4>\n<p>J'attends toujours vos propositions!</p>","tableOfContents":"<ul>\n<li>\n<p><a href=\"/2018-2019/ts/isn/1-Introduction-a-Python/7-Boucles/#la-boucle-for\">La boucle &#x3C;code class=\"language-text\">for&#x3C;/code></a></p>\n<ul>\n<li><a href=\"/2018-2019/ts/isn/1-Introduction-a-Python/7-Boucles/#it%C3%A9rations-sur-des-listes\">Itérations sur des listes</a></li>\n<li><a href=\"/2018-2019/ts/isn/1-Introduction-a-Python/7-Boucles/#utilisation-de-la-fonction-range\">Utilisation de la fonction &#x3C;code class=\"language-text\">range&#x3C;/code></a></li>\n<li><a href=\"/2018-2019/ts/isn/1-Introduction-a-Python/7-Boucles/#boucles-imbriqu%C3%A9es\">Boucles imbriquées</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/2018-2019/ts/isn/1-Introduction-a-Python/7-Boucles/#la-boucle-while\">La boucle &#x3C;code class=\"language-text\">while&#x3C;/code></a></p>\n<ul>\n<li><a href=\"/2018-2019/ts/isn/1-Introduction-a-Python/7-Boucles/#contr%C3%B4le-par-variable-bool%C3%A9enne\">Contrôle par variable booléenne</a></li>\n<li><a href=\"/2018-2019/ts/isn/1-Introduction-a-Python/7-Boucles/#contr%C3%B4le-%C3%A0-laide-dun-compteur\">Contrôle à l'aide d'un compteur</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/2018-2019/ts/isn/1-Introduction-a-Python/7-Boucles/#exercices\">Exercices</a></p>\n<ul>\n<li><a href=\"/2018-2019/ts/isn/1-Introduction-a-Python/7-Boucles/#tournez-man%C3%A8ge\">Tournez manège</a></li>\n<li><a href=\"/2018-2019/ts/isn/1-Introduction-a-Python/7-Boucles/#parit%C3%A9\">Parité</a></li>\n<li><a href=\"/2018-2019/ts/isn/1-Introduction-a-Python/7-Boucles/#contr%C3%B4le-de-saisie\">Contrôle de saisie</a></li>\n<li><a href=\"/2018-2019/ts/isn/1-Introduction-a-Python/7-Boucles/#table-de-multiplication\">Table de multiplication</a></li>\n<li><a href=\"/2018-2019/ts/isn/1-Introduction-a-Python/7-Boucles/#ni-oui-ni-non\">Ni oui ni non</a></li>\n<li><a href=\"/2018-2019/ts/isn/1-Introduction-a-Python/7-Boucles/#fizzbuzz\">FizzBuzz</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"tags":["python","boucles","for","while"]},"fields":{"classe":"ts","chapter":"Boucles","matter":"isn","nChapter":"7","part":"Introduction à Python","nPart":"1"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"ts/isn/1-Introduction-a-Python/7-Boucles","chapter":"Boucles"}}}