{"version":3,"sources":["webpack:///./src/pages/matieres.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","r","__webpack_exports__","Glamor","d","pageQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","n","react_helmet__WEBPACK_IMPORTED_MODULE_2__","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","slugify__WEBPACK_IMPORTED_MODULE_4__","slugify__WEBPACK_IMPORTED_MODULE_4___default","MatterPage","_ref","_ref$data","data","group","allMarkdownRemark","title","site","siteMetadata","createElement","a","map","matter","key","fieldValue","to","slugify","totalCount","propTypes","PropTypes","shape","arrayOf","string","isRequired","number","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","query","render","finalData","Fragment","props","children","Consumer","object","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","pathname"],"mappings":"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","file":"component---src-pages-matieres-js-8c242072bdfa9712b0a4.js","sourcesContent":["// Components\nimport React from 'react'\nimport { graphql } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { Link } from 'gatsby'\nimport slugify from 'slugify'\n\nconst MatterPage = ({\n  data: {\n    allMarkdownRemark: { group },\n    site: {\n      siteMetadata: { title },\n    },\n  },\n}) => (\n  <div>\n    <Helmet title={title + ` | Matières`} />\n    <div>\n      <h1>Matières</h1>\n      <ul>\n        {group.map(matter => (\n          <li key={matter.fieldValue}>\n            <Link to={`/${slugify(matter.fieldValue)}/`}>\n              {matter.fieldValue} ({matter.totalCount})\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  </div>\n)\n\nMatterPage.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      group: PropTypes.arrayOf(\n        PropTypes.shape({\n          fieldValue: PropTypes.string.isRequired,\n          totalCount: PropTypes.number.isRequired,\n        }).isRequired\n      ),\n    }),\n    site: PropTypes.shape({\n      siteMetadata: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n      }),\n    }),\n  }),\n}\n\nexport default MatterPage\n\nexport const pageQuery = graphql`\n  query MatterQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(limit: 2000) {\n      group(field: fields___matter) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}