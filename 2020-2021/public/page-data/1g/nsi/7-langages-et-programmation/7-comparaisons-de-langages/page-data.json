{"componentChunkName":"component---src-templates-cours-md-js","path":"/1g/nsi/7-langages-et-programmation/7-comparaisons-de-langages","result":{"data":{"markdownRemark":{"html":"<details class=\"programme\"><summary>Programme Officiel</summary><div><table class=\"table table-bordered table-hover\"><thead class=\"table-warning\"><tr><th colspan=\"1\" rowspan=\"1\"><p>Contenus</p></th><th colspan=\"1\" rowspan=\"1\"><p>Capacités attendues</p></th><th colspan=\"1\" rowspan=\"1\"><p>Commentaires</p></th></tr></thead><tbody><tr><td colspan=\"1\" rowspan=\"1\"><p>Diversité et unité des\nlangages de\nprogrammation</p></td><td colspan=\"1\" rowspan=\"1\"><p>Repérer, dans un nouveau\nlangage de programmation, les\ntraits communs et les traits\nparticuliers à ce langage.</p></td><td colspan=\"1\" rowspan=\"1\"><p>Les manières dont un même\nprogramme simple s’écrit dans\ndifférents langages sont\ncomparées.</p></td></tr></tbody></table></div><a class=\"lien-programme\" href=\"../programme/\">Lien vers le programme complet</a></details>\n<p>Comme nous l'avons vu précédemment un programme permet d'écrire un algorithme afin qu'il soit\nexécuté par un ordinateur.</p>\n<p>Il existe de très nombreux langages de programmation aujourd'hui, chacun ayant ses forces et ses\nfaiblesses et sera donc adapté à un domaine plutôt qu'à un autre.</p>\n<p>Cette année nous utiliserons deux langages: <a href=\"https://www.python.org/\">Python</a> et <a href=\"https://developer.mozilla.org/fr/docs/Web/JavaScript\">Javascript</a>:</p>\n<ul>\n<li><code class=\"language-text\">Python</code> est très apprécié dans la communauté scientifique</li>\n<li>alors que le <code class=\"language-text\">javascript</code> est le langage implémenté nativement dans tous les navigateurs web.</li>\n</ul>\n<p>Nous allons voir sur l'exemple de ces deux langages qu'il est possible d'écrire les mêmes algorithmes avec des synatxes assez proches.</p>\n<h2 id=\"commentaires\" style=\"position:relative;\"><a href=\"#commentaires\" aria-label=\"commentaires permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Commentaires</h2>\n<p>Les commentaires sont indispensables pour expliquer votre code à ceux qui le lisent(souvent\nvous-même quelques jours, semaines ou mois après). En javascript on utilise le double slash pour le\ncommentaire de ligne <code class=\"language-text\">//</code>.</p>\n<div><table class=\"table table-bordered table-hover\"><thead class=\"table-warning\"><tr><th colspan=\"1\" rowspan=\"1\"><p>python</p></th><th colspan=\"1\" rowspan=\"1\"><p>javascript</p></th></tr></thead><tbody><tr><td colspan=\"1\" rowspan=\"1\"><div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># ceci est un commentaire</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div></td><td colspan=\"1\" rowspan=\"1\"><div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token comment\">// ceci est un commentaire</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div></td></tr></tbody></table></div>\n<h2 id=\"affectation-de-variable\" style=\"position:relative;\"><a href=\"#affectation-de-variable\" aria-label=\"affectation de variable permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Affectation de variable</h2>\n<p>Dans les deux langages on utilise le simple signe égal <code class=\"language-text\">=</code>, on utilise cependant le mot clé var en <code class=\"language-text\">js</code>.</p>\n<div><table class=\"table table-bordered table-hover\"><thead class=\"table-warning\"><tr><th colspan=\"1\" rowspan=\"1\"><p>python</p></th><th colspan=\"1\" rowspan=\"1\"><p>javascript</p></th></tr></thead><tbody><tr><td colspan=\"1\" rowspan=\"1\"><div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">a <span class=\"token operator\">=</span> <span class=\"token number\">3</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div></td><td colspan=\"1\" rowspan=\"1\"><div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token number\">3</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div></td></tr></tbody></table></div>\n<details class=\"plus\" data-titre=\"Autres décalarations en js\"><summary>Autres décalarations en js</summary><p>On peut également trouver l'ancien déclarateur <code class=\"language-text\">var</code>(à éviter).\nSi vous êtes sur que la variable ne sera pas modifiée après création utilisez le mot-cle <code class=\"language-text\">const</code>. </p></details>\n<h2 id=\"entrées-et-sorties\" style=\"position:relative;\"><a href=\"#entr%C3%A9es-et-sorties\" aria-label=\"entrées et sorties permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Entrées et sorties</h2>\n<p>Les entrées permettent de récupérer des données de l'utilisateur pour adapter son fonctionnement aux exigences de ce dernier.</p>\n<p>Les sorties permettent d'afficher les résultats à l'utilisateur.</p>\n<div><table class=\"table table-bordered table-hover\"><thead class=\"table-warning\"><tr><th colspan=\"1\" rowspan=\"1\"><p>python</p></th><th colspan=\"1\" rowspan=\"1\"><p>javascript</p></th></tr></thead><tbody><tr><td colspan=\"1\" rowspan=\"1\"><div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># entrée</span>\nage <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span>\"Quel age avez<span class=\"token operator\">-</span>vous?<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># sortie</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Votre âge est \"</span> <span class=\"token operator\">+</span> age <span class=\"token operator\">+</span> <span class=\"token string\">\" ans\"</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div></td><td colspan=\"1\" rowspan=\"1\"><div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token comment\">// entrée</span>\n<span class=\"token keyword\">var</span> age <span class=\"token operator\">=</span> <span class=\"token function\">prompt</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Quel age avez-vous?\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// sortie</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Votre âge est \"</span> <span class=\"token operator\">+</span> age <span class=\"token operator\">+</span> <span class=\"token string\">\" ans\"</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div></td></tr></tbody></table></div>\n<h2 id=\"instructions-conditionnelles\" style=\"position:relative;\"><a href=\"#instructions-conditionnelles\" aria-label=\"instructions conditionnelles permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Instructions conditionnelles</h2>\n<p>Dans les deux langages on utilise les mots-clef <code class=\"language-text\">if</code> et <code class=\"language-text\">else</code> cependant le <code class=\"language-text\">elif</code> n'existe pas en\n<code class=\"language-text\">js</code>. On utilise <code class=\"language-text\">else if</code>.</p>\n<p>D'autres part, le javascript n'utilise pas l'indentation pour définir les blocs de code, il les place entre accolades <code class=\"language-text\">{}</code></p>\n<table class=\"table table-bordered table-hover\"\">\n  <thead>\n  <tr class=\"table-warning\">\n    <th>python</th>\n    <th>javascript</th>\n  </thead>\n  </tr>\n  <tr>\n    <td><pre><code>\nif age > 18:\n    print(\"Vous êtes majeur\")\nelif age >16:\n    print(\"Bientôt majeur\")\nelse:\n    print(\"Soyez patient\")\n</code></pre</td>\n<td><pre><code>\nif (age > 18) {\n  console.log(`Vous êtes majeur`)\n} else if (age > 16) {\nconsole.log(`Bientôt majeur`)\n} else {\n  console.log(`Soyez patient`)\n}\n</code></pre></td>\n  </tr>\n</table>\n<h2 id=\"boucles\" style=\"position:relative;\"><a href=\"#boucles\" aria-label=\"boucles permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Boucles</h2>\n<p>Les deux langages définissent les boucles <code class=\"language-text\">for</code> et <code class=\"language-text\">while</code>.</p>\n<h3 id=\"boucle-for\" style=\"position:relative;\"><a href=\"#boucle-for\" aria-label=\"boucle for permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Boucle <code class=\"language-text\">for</code></h3>\n<table class=\"table table-bordered table-hover\"\">\n  <thead>\n  <tr class=\"table-warning\">\n    <th>python</th>\n    <th>javascript</th>\n  </thead>\n  </tr>\n  <tr>\n    <td><pre><code>\nfor i in range(10):\n    print(i)\n</code></pre</td>\n<td><pre><code>\nfor (var i = 0; i < 10; i++) {\n  console.log(i)\n}\n</code></pre</td>\n  </tr>\n</table>\n<h3 id=\"boucle-while\" style=\"position:relative;\"><a href=\"#boucle-while\" aria-label=\"boucle while permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Boucle <code class=\"language-text\">while</code></h3>\n<table class=\"table table-bordered table-hover\"\">\n  <thead>\n  <tr class=\"table-warning\">\n    <th>python</th>\n    <th>javascript</th>\n  </thead>\n  </tr>\n  <tr>\n    <td><pre><code>\ni = 0 # initialisation\nwhile i<10: # condition d'arrêt\n    print(i)\n    i = i + 1 # incrémentation de l'indice\n</code></pre</td>\n<td><pre><code>\nvar i = 0 // initialisation\nwhile (i < 10) { // condition d'arrêt\n  console.log(i)\n  i = i + 1 // incrémentation de l'indice\n}\n</code></pre</td>\n  </tr>\n</table>\n<h2 id=\"fonctions\" style=\"position:relative;\"><a href=\"#fonctions\" aria-label=\"fonctions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Fonctions</h2>\n<p>Les deux langages définissent les boucles <code class=\"language-text\">for</code> et <code class=\"language-text\">while</code>.</p>\n<h3 id=\"définition-de-la-fonction\" style=\"position:relative;\"><a href=\"#d%C3%A9finition-de-la-fonction\" aria-label=\"définition de la fonction permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Définition de la fonction</h3>\n<p>En python le mot clef utilisé est <code class=\"language-text\">def</code> et <code class=\"language-text\">function</code> en javascript, dans les deux cas le retour de\nfonction se fait par le mot-clé <code class=\"language-text\">return</code>.</p>\n<table class=\"table table-bordered table-hover\"\">\n  <thead>\n  <tr class=\"table-warning\">\n    <th>python</th>\n    <th>javascript</th>\n  </thead>\n  </tr>\n  <tr>\n    <td><pre><code>\ndef carré(nb):\n    return nb**2\n</code></pre</td>\n<td><pre><code>\nfunction carré (nb) {\n  return nb**2\n}\n</code></pre</td>\n  </tr>\n</table>\n<h3 id=\"appel-de-la-fonction\" style=\"position:relative;\"><a href=\"#appel-de-la-fonction\" aria-label=\"appel de la fonction permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Appel de la fonction</h3>\n<p>Même syntaxe, on écrit le nom de la fonction avec le ou les arguments de la fonction entre parenthèse.</p>\n<table class=\"table table-bordered table-hover\"\">\n  <thead>\n  <tr class=\"table-warning\">\n    <th>python</th>\n    <th>javascript</th>\n  </thead>\n  </tr>\n  <tr>\n    <td><pre><code>\ncarré(2)\n</code></pre</td>\n<td><pre><code>\ncarré(2)\n</code></pre</td>\n  </tr>\n</table>\n<details class=\"plus\" data-titre=\" Procédure\"><summary> Procédure</summary><p>Une fonction qui n'utilise pas d'argument est parfois qualifiée de procédure. L'appelle des\nprocédures <strong>nécessite</strong> la présence des parenthèses pour être appelée sinon la fonction est\nrenvoyée, mais |son code n'est pas exécuté.</p></details>","tableOfContents":"<ul>\n<li><a href=\"#commentaires\">Commentaires</a></li>\n<li><a href=\"#affectation-de-variable\">Affectation de variable</a></li>\n<li><a href=\"#entr%C3%A9es-et-sorties\">Entrées et sorties</a></li>\n<li><a href=\"#instructions-conditionnelles\">Instructions conditionnelles</a></li>\n<li>\n<p><a href=\"#boucles\">Boucles</a></p>\n<ul>\n<li><a href=\"#boucle-for\">Boucle <code class=\"language-text\">for</code></a></li>\n<li><a href=\"#boucle-while\">Boucle <code class=\"language-text\">while</code></a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#fonctions\">Fonctions</a></p>\n<ul>\n<li><a href=\"#d%C3%A9finition-de-la-fonction\">Définition de la fonction</a></li>\n<li><a href=\"#appel-de-la-fonction\">Appel de la fonction</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"tags":["comparaison","python","javascript"]},"fields":{"classe":"1g","chapter":"Comparaisons de langages","matter":"nsi","nChapter":"7","part":"Langages et programmation","nPart":"7"}}},"pageContext":{"slug":"1g/nsi/7-langages-et-programmation/7-comparaisons-de-langages","chapter":"Comparaisons de langages"}},"staticQueryHashes":["604483588"]}