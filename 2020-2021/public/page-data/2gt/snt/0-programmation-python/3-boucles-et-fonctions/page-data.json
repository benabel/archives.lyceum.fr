{"componentChunkName":"component---src-templates-cours-md-js","path":"/2gt/snt/0-programmation-python/3-boucles-et-fonctions","result":{"data":{"markdownRemark":{"html":"<details class=\"programme\"><summary>Programme Officiel</summary><div><table class=\"table table-bordered table-hover\"><thead class=\"table-warning\"><tr><th colspan=\"1\" rowspan=\"1\"><p><strong>Contenus</strong></p></th><th colspan=\"1\" rowspan=\"1\"><p><strong>Capacités attendues</strong></p></th></tr></thead><tbody><tr><td colspan=\"1\" rowspan=\"1\"><p>Boucles bornées et non bornées</p><p>Définitions et appels de fonctions</p></td><td colspan=\"1\" rowspan=\"1\"><p>Écrire et développer des programmes pour répondre à des\nproblèmes et modéliser des phénomènes physiques,\néconomiques et sociaux.</p></td></tr></tbody></table></div><a class=\"lien-programme\" href=\"../programme/\">Lien vers le programme complet</a></details>\n<div class=\"intro clearfix\"><p><a href=\"https://commons.wikimedia.org/wiki/File:RepeatUntil.svg#/media/File:RepeatUntil.svg\"><img class=\"half right\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/7/7b/RepeatUntil.svg/1200px-RepeatUntil.svg.png\" alt=\"RepeatUntil.svg\"></a><br>Image by Scratch is a project of the Scratch Foundation, in collaboration with the Lifelong Kindergarten Group at the MIT Media Lab. It is available for free at <a rel=\"nofollow\" class=\"external free\" href=\"https://scratch.mit.edu\">https://scratch.mit.edu</a> - <a rel=\"nofollow\" class=\"external free\" href=\"http://scratchblocks.github.io\">http://scratchblocks.github.io</a>, <a href=\"https://creativecommons.org/licenses/by-sa/2.5\" title=\"Creative Commons Attribution-Share Alike 2.5\">CC BY-SA 2.5</a>, <a href=\"https://commons.wikimedia.org/w/index.php?curid=85860811\">Link</a></p><blockquote>\n<p>Dans ce chapitre, nous allons nous intéresser aux boucles qui permettent de <strong>répéter</strong> des\ninstructions dans une programme, ainsi qu'aux fonctions qui permettent d'exécuter des portions de\nprogramme à la demande.</p>\n</blockquote></div>\n<h2 id=\"les-boucles\" style=\"position:relative;\"><a href=\"#les-boucles\" aria-label=\"les boucles permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Les boucles</h2>\n<p>Les boucles permettent de <strong>répéter</strong> des blocs d'instructions.</p>\n<p>Il en existe deux types:</p>\n<ul>\n<li>Les boucles bornées avec le mot-clé <code class=\"language-text\">for</code>.</li>\n<li>Les boucles non-bornées avec le mot-clé <code class=\"language-text\">while</code>.</li>\n</ul>\n<h3 id=\"les-boucles-bornées-for\" style=\"position:relative;\"><a href=\"#les-boucles-born%C3%A9es-for\" aria-label=\"les boucles bornées for permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Les boucles bornées: <code class=\"language-text\">for</code></h3>\n<p>Lorsqu'<em>on connait le nombre de répétitions</em> à effectuer, on utilise la boucle <code class=\"language-text\">for</code> associée à la\nfonction <code class=\"language-text\">range()</code>.</p>\n<div class=\"example\"><p>Pour répéter 7 fois un bloc d'instructions, on utilise:</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div><p>Affichera:</p><div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">0\n1\n2\n3\n4\n5\n6</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div></div>\n<details class=\"plus\"><summary>&nbsp;</summary><p>On peut aussi réaliser des boucles sur des types construits qui seront vus en <a href=\"/2020-2021/1g/nsi/3-representation-des-donnees-types-construits\">première</a>.</p><ul>\n<li>\n<p>Sur des chaînes de caractères:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">for</span> lettre <span class=\"token keyword\">in</span> <span class=\"token string\">\"Bonjour!\"</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>Affichera:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">B\no\nn\nj\no\nu\nr\n!</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n</li>\n<li>\n<p>Sur des listes:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">for</span> premier <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>premier<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>Affichera:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">2\n3\n5\n7\n11\n13</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n</li>\n</ul></details>\n<h3 id=\"les-boucles-non-bornées-while\" style=\"position:relative;\"><a href=\"#les-boucles-non-born%C3%A9es-while\" aria-label=\"les boucles non bornées while permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Les boucles non bornées: <code class=\"language-text\">while</code></h3>\n<p>Lorsqu'<em>on ne connait pas le nombre de répétitions</em> à effectuer, on utilise la boucle <code class=\"language-text\">while</code>\nassociée à une <em>variable de contrôle</em>.</p>\n<div class=\"example\"><p>Voici un programme qui permet de vérifier que votre compte n'est pas à découvert. Pour cela on\nutilise la variable de contrôle <code class=\"language-text\">solde</code>.</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">solde <span class=\"token operator\">=</span> <span class=\"token number\">1000</span>                <span class=\"token comment\"># initialisation</span>\n<span class=\"token keyword\">while</span> solde <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>            <span class=\"token comment\"># condition d'arrêt de la boucle</span>\n    débit <span class=\"token operator\">=</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Entrez la somme à débiter: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    solde <span class=\"token operator\">=</span> solde <span class=\"token operator\">-</span> débit   <span class=\"token comment\"># mise à jour de la variable de contrôle</span>\n\n<span class=\"token comment\"># On sort de la boucle</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Vous êtes à découvert\"</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div></div>\n<p><strong>Attention à bien vérifier que votre boucle finira par se terminer sinon votre programme rentrera\ndans une boucle infinie, et il faudra obligatoirement le stopper.</strong></p>\n<h2 id=\"les-fonctions\" style=\"position:relative;\"><a href=\"#les-fonctions\" aria-label=\"les fonctions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Les fonctions</h2>\n<p>Il s'agit de blocs d'instructions exécutés à la demande, on les définit par le mot-clef <code class=\"language-text\">def</code>.</p>\n<div class=\"example\"><div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">dit_bonjour</span><span class=\"token punctuation\">(</span>prenom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Bonjour \"</span> <span class=\"token operator\">+</span> prenom<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div><p>Nous venons de définir la fonction, mais pour l'instant, il ne se passe rien.</p><p>Pour exécuter le code de la fonction, il faut maintenant appeler la fonction avec un paramètre pour que l'exécuter.</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># on appelle la fonction avec l'argument Ada</span>\ndit_bonjour<span class=\"token punctuation\">(</span><span class=\"token string\">\"Ada\"</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div><p>Affichera <code class=\"language-text\">&quot;Bonjour Ada&quot;</code>.</p></div>\n<p>Les fonctions peuvent renvoyer une valeur grâce au mot-clé <code class=\"language-text\">return</code>.</p>\n<div class=\"example\"><div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">def</span> périmétre<span class=\"token punctuation\">(</span>rayon<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    p <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token operator\">*</span><span class=\"token number\">3.14</span><span class=\"token operator\">*</span>rayon\n    <span class=\"token keyword\">return</span> p</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div><p>Cette fois-ci l'appel renverra la valeur du périmètre, on peut alors le stocker dans une variable.</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># on appelle la fonction avec l'argument 0.5</span>\nperi_05 <span class=\"token operator\">=</span> périmètre<span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div><p>La variable <code class=\"language-text\">peri_05</code> contient la valeur renvoyée par l'appel de la fonction <code class=\"language-text\">3.14</code>.</p></div>\n<p>Une fonction peut accepter un nombre quelconque de paramètres, il suffit de les séparer par des\nvirgules.</p>\n<div class=\"examples\"><p>Avec deux paramètres. </p><div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">surface_rectangle</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">,</span> L<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> l<span class=\"token operator\">*</span>L\n<span class=\"token comment\"># appel</span>\nsurface_rectangle<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># renvoie 6</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div><p>Avec aucun paramètre:</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">import</span> time\n<span class=\"token keyword\">def</span> <span class=\"token function\">affiche_heure</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>asctime<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># Pour l'appel on met les parénthèses même s'il n'y a pas d'arguments</span>\naffiche_heure<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># affiche: Mon Jan 18 10:16:43 2021 par exemple</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div></div>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#les-boucles\">Les boucles</a></p>\n<ul>\n<li><a href=\"#les-boucles-born%C3%A9es-for\">Les boucles bornées: <code class=\"language-text\">for</code></a></li>\n<li><a href=\"#les-boucles-non-born%C3%A9es-while\">Les boucles non bornées: <code class=\"language-text\">while</code></a></li>\n</ul>\n</li>\n<li><a href=\"#les-fonctions\">Les fonctions</a></li>\n</ul>","frontmatter":{"tags":["cours","seconde","lycée","snt","seconde générale et technologique","sciences numériques et technologie"]},"fields":{"classe":"2gt","chapter":"Boucles et fonctions","matter":"snt","nChapter":"3","part":"Programmation Python","nPart":"0"}}},"pageContext":{"slug":"2gt/snt/0-programmation-python/3-boucles-et-fonctions","chapter":"Boucles et fonctions"}},"staticQueryHashes":["604483588"]}