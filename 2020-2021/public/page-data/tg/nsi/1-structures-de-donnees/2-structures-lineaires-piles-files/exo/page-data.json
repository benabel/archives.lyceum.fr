{"componentChunkName":"component---src-templates-exo-md-js","path":"/tg/nsi/1-structures-de-donnees/2-structures-lineaires-piles-files/exo","result":{"data":{"markdownRemark":{"html":"<h2 id=\"qcu\" style=\"position:relative;\"><a href=\"#qcu\" aria-label=\"qcu permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>QCU</h2>\n<ol>\n<li>\n<p>Une pile est qualifiée de:</p>\n<ul>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> <em>last in, first out</em> ou <em>LIFO</em> en anglais.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> <em>first in, first out</em> ou <em>FIFO</em> en anglais.</li>\n</ul>\n</li>\n<li>\n<p>Une file est qualifiée de:</p>\n<ul>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> <em>last in, first out</em> ou <em>LIFO</em> en anglais.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> <em>first in, first out</em> ou <em>FIFO</em> en anglais.</li>\n</ul>\n</li>\n<li>\n<p>L'opération <code class=\"language-text\">enfiler</code> d'un <strong>file</strong> ajoute l'élément:</p>\n<ul>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> en tête de file.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> en milieu de file.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> en queue de file.</li>\n</ul>\n</li>\n<li>\n<p>L'opération <code class=\"language-text\">défiler</code> d'un <strong>file</strong> supprime et renvoie l'élément:</p>\n<ul>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> en tête de file.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> en milieu de file.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> en queue de file.</li>\n</ul>\n</li>\n<li>\n<p>L'opération <code class=\"language-text\">empiler</code> d'une <strong>pile</strong> ajoute l'élément:</p>\n<ul>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> en sommet de pile.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> en milieu de pile.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> en bas de pile.</li>\n</ul>\n</li>\n<li>\n<p>L'opération <code class=\"language-text\">dépiler</code> d'un <strong>pile</strong> retire et renvoie l'élément:</p>\n<ul>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> en sommet de pile.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> en milieu de pile.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> en bas de pile.</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"implémentation-de-la-classe-pile\" style=\"position:relative;\"><a href=\"#impl%C3%A9mentation-de-la-classe-pile\" aria-label=\"implémentation de la classe pile permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Implémentation de la classe <code class=\"language-text\">Pile</code></h2>\n<p>Créer une classe <code class=\"language-text\">Pile</code> qui implémente le type abstrait pile en stockant les données de la pile\ndans un attribut privé <code class=\"language-text\">_data</code> de type <code class=\"language-text\">list</code>.</p>\n<ul>\n<li>L'initialisation s'effectue sans argument et affecte une liste vide à l'attribut <code class=\"language-text\">_data</code>.</li>\n<li>La méthode <code class=\"language-text\">empiler(élément)</code> ajoute l'élément à la fin de l'attribut <code class=\"language-text\">_data</code>.</li>\n<li>La méthode <code class=\"language-text\">dépiler()</code> retire l'élément à la fin de l'attribut <code class=\"language-text\">_data</code> et le renvoie.</li>\n<li>La méthode <code class=\"language-text\">est_vide()</code> renvoie <code class=\"language-text\">True</code> si la pile est vide et <code class=\"language-text\">False</code> sinon.</li>\n<li>La méthode <code class=\"language-text\">sommet()</code> renvoie l'élément présent au sommet de la pile, et <code class=\"language-text\">None</code> si la pile est\nvide.</li>\n</ul>\n<p>Voici une série de tests à passer.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">pile <span class=\"token operator\">=</span> Pile<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">assert</span> pile<span class=\"token punctuation\">.</span>est_vide<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\npile<span class=\"token punctuation\">.</span>empiler<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">assert</span> <span class=\"token keyword\">not</span> pile<span class=\"token punctuation\">.</span>est_vide<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">assert</span> pile<span class=\"token punctuation\">.</span>sommet<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span>\n\npile<span class=\"token punctuation\">.</span>empiler<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">assert</span> <span class=\"token keyword\">not</span> pile<span class=\"token punctuation\">.</span>est_vide<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">assert</span> pile<span class=\"token punctuation\">.</span>sommet<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">2</span>\n<span class=\"token keyword\">assert</span> <span class=\"token keyword\">not</span> pile<span class=\"token punctuation\">.</span>est_vide<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\npile<span class=\"token punctuation\">.</span>empiler<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">assert</span> pile<span class=\"token punctuation\">.</span>sommet<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">3</span>\n\n<span class=\"token keyword\">while</span> <span class=\"token keyword\">not</span> pile<span class=\"token punctuation\">.</span>est_vide<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    pile<span class=\"token punctuation\">.</span>dépiler<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">assert</span> pile<span class=\"token punctuation\">.</span>est_vide<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p><strong>Pour aller plus loin</strong>, modifier la classe <code class=\"language-text\">Pile</code> afin que <code class=\"language-text\">sommet()</code> ne soit plus une méthode\nmais un attribut <code class=\"language-text\">sommet</code>. La série de tests précédents devra être modifié en supprimant les\nparenthèses des appels des méthodes <code class=\"language-text\">pile.sommet()</code> en <code class=\"language-text\">pile.sommet</code>.</p>\n<h2 id=\"implémentation-de-la-classe-file\" style=\"position:relative;\"><a href=\"#impl%C3%A9mentation-de-la-classe-file\" aria-label=\"implémentation de la classe file permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Implémentation de la classe <code class=\"language-text\">File</code></h2>\n<p>Créer une classe <code class=\"language-text\">File</code> qui implémente le type abstrait file en stockant les données de la file\ndans un attribut privé <code class=\"language-text\">_data</code> de type <code class=\"language-text\">collections.deque</code> présentée dans le cours et dont vous\npouvez consulter la documentation grâce à la fonction <code class=\"language-text\">help()</code>.</p>\n<ul>\n<li>L'initialisation s'effectue sans argument et affecte une liste chaînée double vide à l'attribut\n<code class=\"language-text\">_data</code>.</li>\n<li>La méthode <code class=\"language-text\">enfiler(élément)</code> ajoute l'élément à la fin l'attribut <code class=\"language-text\">_data</code>.</li>\n<li>La méthode <code class=\"language-text\">défiler()</code> retire l'élément à la tête de l'attribut <code class=\"language-text\">_data</code> et le renvoie.</li>\n<li>La méthode <code class=\"language-text\">est_vide()</code> renvoie <code class=\"language-text\">True</code> si la file est vide et <code class=\"language-text\">False</code> sinon.</li>\n<li>La méthode <code class=\"language-text\">tête()</code> renvoie l'élément présent à la tête de la file, et <code class=\"language-text\">None</code> si la file est\nvide.</li>\n</ul>\n<p>Voici une série de tests à passer.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">from</span> collections <span class=\"token keyword\">import</span> deque\n<span class=\"token builtin\">file</span> <span class=\"token operator\">=</span> File<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">assert</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>est_vide<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>enfiler<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">assert</span> <span class=\"token keyword\">not</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>est_vide<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">assert</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>tête<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span>\n\n<span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>enfiler<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">assert</span> <span class=\"token keyword\">not</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>est_vide<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">assert</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>tête<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">assert</span> <span class=\"token keyword\">not</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>est_vide<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>enfiler<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">assert</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>tête<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">assert</span> <span class=\"token keyword\">not</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>est_vide<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">assert</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>défiler<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">assert</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>défiler<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">2</span>\n<span class=\"token keyword\">assert</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>défiler<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">3</span>\n\n<span class=\"token keyword\">assert</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>est_vide<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p><strong>Pour aller plus loin</strong>, modifier la classe <code class=\"language-text\">File</code> afin que <code class=\"language-text\">tête()</code> ne soit plus une méthode\nmais un attribut <code class=\"language-text\">tête</code>. La série de tests précédents devra être modifié en supprimant les\nparenthèses des appels des méthodes <code class=\"language-text\">file.tête()</code> en <code class=\"language-text\">file.tête</code>.</p>","fields":{"classe":"tg","chapter":"Structures linéaires: piles, files","matter":"nsi","nChapter":"2","part":"Structures de données","nPart":"1","type":"exo"}}},"pageContext":{"slug":"tg/nsi/1-structures-de-donnees/2-structures-lineaires-piles-files/exo"}},"staticQueryHashes":["604483588"]}