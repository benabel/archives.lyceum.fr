{"componentChunkName":"component---src-templates-cours-md-js","path":"/tg/nsi/4-langages-et-programmation/1-notion-de-programme","result":{"data":{"markdownRemark":{"html":"<details class=\"programme\"><summary>Programme Officiel</summary><div><table class=\"table table-bordered table-hover\"><thead class=\"table-warning\"><tr><th colspan=\"1\" rowspan=\"1\"><p>Contenus</p></th><th colspan=\"1\" rowspan=\"1\"><p>Capacités attendues</p></th><th colspan=\"1\" rowspan=\"1\"><p>Commentaires</p></th></tr></thead><tbody><tr><td colspan=\"1\" rowspan=\"1\"><p>Notion de programme\nen tant que donnée.</p><p>Calculabilité,\ndécidabilité.</p></td><td colspan=\"1\" rowspan=\"1\"><p>Comprendre que tout\nprogramme est aussi une\ndonnée.</p><p>Comprendre que la calculabilité\nne dépend pas du langage de\nprogrammation utilisé.</p><p>Montrer, sans formalisme\nthéorique, que le problème de\nl’arrêt est indécidable.</p></td><td colspan=\"1\" rowspan=\"1\"><p>L’utilisation d’un interpréteur ou\nd’un compilateur, le\ntéléchargement de logiciel, le\nfonctionnement des systèmes\nd’exploitation permettent de\ncomprendre un programme\ncomme donnée d’un autre\nprogramme.</p></td></tr></tbody></table></div><a class=\"lien-programme\" href=\"../programme/\">Lien vers le programme complet</a></details>\n<blockquote>\n<p>Comme nous l'avons vu en première, un programme est la traduction électronique d'un algorithme\nafin qu'il puisse être compris par une machine. Dans ce chapitre, nous allons montrer qu'un\nprogramme ne peut pas tout calculer ou décider.</p>\n</blockquote>\n<h2 id=\"notion-de-programme-en-tant-que-donnée\" style=\"position:relative;\"><a href=\"#notion-de-programme-en-tant-que-donn%C3%A9e\" aria-label=\"notion de programme en tant que donnée permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Notion de programme en tant que donnée</h2>\n<p>Certains programmes utilisent comme données le code source d'autres programmes.</p>\n<div class=\"examples\"><ul>\n<li>un système d'exploitation(linux p.ex) est un programme qui éxecute d'autres programmes(traitement\nde textes p.ex).</li>\n<li>l'interpréteur Python, est un programme qui traduit le code source de votre programme Python en\ninstructions exécutables par machine: du <a href=\"/2020-2021/1g/nsi/6-architectures-materielles-et-systemes-dexploitation/2-jeu-dinstructions-du-processeur\">langage machine</a>.</li>\n</ul></div>\n<h2 id=\"calculabilité\" style=\"position:relative;\"><a href=\"#calculabilit%C3%A9\" aria-label=\"calculabilité permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Calculabilité</h2>\n<p>La notion de calculabilité date de 1936, il s'agit de savoir ce qui peut être calculé par un\nordinateur, et donc permet de voir les <strong>limites des problèmes</strong> que peuvent résoudre les\nordinateurs.</p>\n<div class=\"prop\"><p>On dira qu’une fonction est <strong>calculable</strong> si elle peut être programmée dans l’un ou l’autre des\nlangages de programmation usuels. Cette année, nous utiliserons le langage Python comme témoin :\nune fonction est calculable si on peut la programmer en Python.</p></div>\n<details class=\"plus\"><summary>&nbsp;</summary><p>Il existe d’autres modèles de calcul, comme le λ-calcul, les fonctions récursives, les machines de\nTuring, que nous ne développerons pas ici, et qui ne font pas partie des attendus du programme. </p><p>La thèse de Church postule que tous ces modèles de calcul sont équivalents : une fonction\ncalculable pour un modèle l’est pour un autre. Cela nous permet d’utiliser le modèle des fonctions\nprogrammables en Python sans perdre de généralité.</p></details>\n<p><em class=\"cite-source\"><a href=\"https://cache.media.eduscol.education.fr/file/NSI/63/6/RA20_NSI_G_T_calculabilite_1298636.pdf\">Calculabilité et décidabilité sur eduscol</a></em></p>\n<p>On peut calculer beaucoup de choses avec un ordinateur comme le nombre <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>π</mi></mrow><annotation encoding=\"application/x-tex\">\\pi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span></span></span></span>, les nombres\nrationnels <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msqrt><mn>2</mn></msqrt></mrow><annotation encoding=\"application/x-tex\">\\sqrt{2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.04em;vertical-align:-0.13278em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.90722em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\">2</span></span></span><span style=\"top:-2.86722em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.13278em;\"><span></span></span></span></span></span></span></span></span>, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msqrt><mn>3</mn></msqrt></mrow><annotation encoding=\"application/x-tex\">\\sqrt{3}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.04em;vertical-align:-0.13278em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.90722em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\">3</span></span></span><span style=\"top:-2.86722em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.13278em;\"><span></span></span></span></span></span></span></span></span>...</p>\n<p>Par contre, il a été prouvé que certains problèmes n'étaient pas calculables comme par exemple :</p>\n<ul>\n<li>Savoir si un énoncé mathématique est un théorème ou pas<em>(s'il peut être démontré)</em>.</li>\n<li>Créer un programme qui prend un programme en entrée, et qui indiquera si le programme s'arrête ou\npas : le problème de l'arrêt.</li>\n</ul>\n<p>Il s'agit de problèmes de <strong>décidabilité</strong>.</p>\n<h2 id=\"décidabilité\" style=\"position:relative;\"><a href=\"#d%C3%A9cidabilit%C3%A9\" aria-label=\"décidabilité permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Décidabilité</h2>\n<dl class=\"def\" data-terme=\"décidabilité\"><dt>décidabilité</dt><p>Un problème de décision est dit décidable s'il existe un algorithme, une procédure mécanique qui se\ntermine en un nombre fini d'étapes, qui le décide, c'est-à-dire qui réponde par oui ou par non à la\nquestion posée par le problème. S'il n'existe pas de tels algorithmes, le problème est dit\nindécidable. Par exemple, le problème de l'arrêt est indécidable. </p></dl>\n<p><em class=\"cite-source\"><a href=\"https://fr.wikipedia.org/wiki/D%C3%A9cidabilit%C3%A9#D%C3%A9finition\">Article Wikipédia sur la décidabilité</a></em></p>\n<h3 id=\"exemples-de-problèmes-décidables\" style=\"position:relative;\"><a href=\"#exemples-de-probl%C3%A8mes-d%C3%A9cidables\" aria-label=\"exemples de problèmes décidables permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Exemples de problèmes décidables</h3>\n<p>Tous les sous-ensembles finis des entiers sont décidables, par exemple:</p>\n<ul>\n<li>Décider si un entier naturel est pair ou non;</li>\n<li>décider si un entier naturel est premier ou non.</li>\n</ul>\n<details class=\"plus\" data-titre=\"Décidable ne signifie pas résolvable\"><summary>Décidable ne signifie pas résolvable</summary><p>Notons qu'un ensemble peut être théoriquement décidable sans qu'en pratique la décision puisse être\nfaite, parce que celle-ci nécessiterait trop de temps (plus que l'âge de l'univers) ou trop de\nressources (plus que le nombre d'atomes de l'univers). L'objet de la théorie de la complexité des\nalgorithmes est d'étudier les problèmes de décision en prenant en compte ressources et temps de\ncalcul. </p><p><em class=\"cite-source\"><a href=\"https://fr.wikipedia.org/wiki/D%C3%A9cidabilit%C3%A9#Exemples_d&#x27;ensembles_et_de_probl%C3%A8mes_d%C3%A9cidables\">Article Wikipédia sur la décidabilité</a></em></p></details>\n<h3 id=\"exemple-de-problème-indécidable--le-problème-de-larrêt\" style=\"position:relative;\"><a href=\"#exemple-de-probl%C3%A8me-ind%C3%A9cidable--le-probl%C3%A8me-de-larr%C3%AAt\" aria-label=\"exemple de problème indécidable  le problème de larrêt permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Exemple de problème indécidable : le problème de l'arrêt</h3>\n<p>L'indécidabilité du problème de l'arrêt a été démontrée par Alan Turing en 1936.</p>\n<p>On peut l'interpréter ainsi : il n'existe pas de programme permettant de tester n'importe quel\nprogramme informatique afin de conclure dans tous les cas s'il s'arrêtera en un temps fini ou\nbouclera à jamais.</p>\n<p><strong>Preuve par l'absurde de non-décidabilité de l'arrêt</strong></p>\n<p>Supposons qu'il existe une fonction calculable <code class=\"language-text\">termine(programme, données)</code> qui prend 2 arguments :</p>\n<ul>\n<li>un programme</li>\n<li>des données d'entrée pour ce programme</li>\n</ul>\n<p>et qui renverra <code class=\"language-text\">True</code> si le programme termine et <code class=\"language-text\">False</code> s'il entre dans une boucle infinie.</p>\n<div class=\"examples\"><ul>\n<li>en utilisant la fonction <code class=\"language-text\">est_pair()</code> définie dans la partie <a href=\"./exo\">exercice</a></li>\n</ul><p><code class=\"language-text\">termine(est_pair, 128)</code> ou <code class=\"language-text\">termine(est_pair, 127)</code> renverraient <code class=\"language-text\">True</code>.</p><ul>\n<li>une fonction définie ainsi :</li>\n</ul><div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">est_positif</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> n <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">while</span> n <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            n <span class=\"token operator\">=</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token comment\"># boucle infinie</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div><p>entrainerait une boucle infinie pour les nombres négatifs, et on aurait :</p><p><code class=\"language-text\">termine(est_positif, 128)</code> renvoie <code class=\"language-text\">True</code> alors que <code class=\"language-text\">termine(est_positif, -2)</code> renverrait <code class=\"language-text\">False</code>\nnon pas car -2 n'est pas positif mais parce que l'appel <code class=\"language-text\">positif(-2)</code> ne se terminerait jamais.</p></div>\n<p>Définissons une fonction <code class=\"language-text\">test_sur_soi</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">test_sur_soi</span><span class=\"token punctuation\">(</span>programme<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> termine<span class=\"token punctuation\">(</span>programme<span class=\"token punctuation\">,</span> programme<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">pass</span> <span class=\"token comment\"># boucle infinie</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>On obtient alors une contradiction si on appelle <code class=\"language-text\">test_sur_soi</code> sur elle-même :</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">test_sur_soi<span class=\"token punctuation\">(</span>test_sur_soi<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># l'appel éxecutera l'algorithme suivant</span>\n<span class=\"token keyword\">if</span> termine<span class=\"token punctuation\">(</span>test_sur_soi<span class=\"token punctuation\">,</span> test_sur_soi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">pass</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>On arrive au paradoxe suivant :</p>\n<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow><mi>t</mi><mi>e</mi><mi>s</mi><mi>t</mi><mi>_</mi><mi>s</mi><mi>u</mi><mi>r</mi><mi>_</mi><mi>s</mi><mi>o</mi><mi>i</mi></mrow><mo stretchy=\"false\">(</mo><mrow><mrow><mi>t</mi><mi>e</mi><mi>s</mi><mi>t</mi><mi>_</mi><mi>s</mi><mi>u</mi><mi>r</mi><mi>_</mi><mi>s</mi><mi>o</mi><mi>i</mi></mrow><mo stretchy=\"false\">)</mo><mtext> termine</mtext><mtext>  </mtext><mo>⟺</mo><mtext>  </mtext><mrow><mrow><mi>t</mi><mi>e</mi><mi>s</mi><mi>t</mi><mi>_</mi><mi>s</mi><mi>u</mi><mi>r</mi><mi>_</mi><mi>s</mi><mi>o</mi><mi>i</mi></mrow><mo stretchy=\"false\">(</mo><mrow><mrow><mi>t</mi><mi>e</mi><mi>s</mi><mi>t</mi><mi>_</mi><mi>s</mi><mi>u</mi><mi>r</mi><mi>_</mi><mi>s</mi><mi>o</mi><mi>i</mi></mrow><mo stretchy=\"false\">)</mo><mrow><mtext> boucle ind</mtext><mover accent=\"true\"><mtext>e</mtext><mo>ˊ</mo></mover><mtext>finiment</mtext></mrow></mrow></mrow></mrow></mrow></mstyle></mrow><annotation encoding=\"application/x-tex\">{\\displaystyle {\\it {{test\\_sur\\_soi}({\\it {{test\\_sur\\_soi}){\\text{ termine}}\\iff {\\it {{test\\_sur\\_soi}({\\it {{test\\_sur\\_soi}){\\text{ boucle indéfiniment}}}}}}}}}}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.06em;vertical-align:-0.31em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">test_sur_soi</span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">test_sur_soi</span></span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\"> termine</span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⟺</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">test_sur_soi</span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">test_sur_soi</span></span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\"> boucle ind</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.69444em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\">e</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\"><span class=\"mord\">ˊ</span></span></span></span></span></span></span><span class=\"mord\">finiment</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>","tableOfContents":"<ul>\n<li><a href=\"#notion-de-programme-en-tant-que-donn%C3%A9e\">Notion de programme en tant que donnée</a></li>\n<li><a href=\"#calculabilit%C3%A9\">Calculabilité</a></li>\n<li>\n<p><a href=\"#d%C3%A9cidabilit%C3%A9\">Décidabilité</a></p>\n<ul>\n<li><a href=\"#exemples-de-probl%C3%A8mes-d%C3%A9cidables\">Exemples de problèmes décidables</a></li>\n<li><a href=\"#exemple-de-probl%C3%A8me-ind%C3%A9cidable--le-probl%C3%A8me-de-larr%C3%AAt\">Exemple de problème indécidable : le problème de l'arrêt</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"tags":["calculabilité","décidabilité","problème de l'arrêt"]},"fields":{"classe":"tg","chapter":"Notion de programme","matter":"nsi","nChapter":"1","part":"Langages et programmation","nPart":"4"}}},"pageContext":{"slug":"tg/nsi/4-langages-et-programmation/1-notion-de-programme","chapter":"Notion de programme"}},"staticQueryHashes":["604483588"]}