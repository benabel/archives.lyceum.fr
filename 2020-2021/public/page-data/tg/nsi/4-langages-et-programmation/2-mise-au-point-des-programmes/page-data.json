{"componentChunkName":"component---src-templates-cours-md-js","path":"/tg/nsi/4-langages-et-programmation/2-mise-au-point-des-programmes","result":{"data":{"markdownRemark":{"html":"<details class=\"programme\"><summary>Programme Officiel</summary><div><table class=\"table table-bordered table-hover\"><thead class=\"table-warning\"><tr><th colspan=\"1\" rowspan=\"1\"><p>Contenus</p></th><th colspan=\"1\" rowspan=\"1\"><p>Capacités attendues</p></th><th colspan=\"1\" rowspan=\"1\"><p>Commentaires</p></th></tr></thead><tbody><tr><td colspan=\"1\" rowspan=\"1\"><p>Mise au point des\nprogrammes.</p><p>Gestion des bugs.</p></td><td colspan=\"1\" rowspan=\"1\"><p>Dans la pratique de la\nprogrammation, savoir répondre\naux causes typiques de bugs :\nproblèmes liés au typage, effets\nde bord non désirés,\ndébordements dans les\ntableaux, instruction\nconditionnelle non exhaustive,\nchoix des inégalités,\ncomparaisons et calculs entre\nflottants, mauvais nommage des\nvariables, etc.</p></td><td colspan=\"1\" rowspan=\"1\"><p>On prolonge le travail entrepris en\nclasse de première sur l’utilisation\nde la spécification, des assertions,\nde la documentation des\nprogrammes et de la construction\nde jeux de tests.</p><p>Les élèves apprennent\nprogressivement à anticiper leurs\nerreurs.</p></td></tr></tbody></table></div><a class=\"lien-programme\" href=\"../programme/\">Lien vers le programme complet</a></details>\n<blockquote>\n<p>La mise au point du programme doit permettre au programme de répondre à une spécification, durant\ncette phase, le programmeur se doit de savoir répondre aux causes typiques de bugs.</p>\n</blockquote>\n<h2 id=\"spécification-et-tests\" style=\"position:relative;\"><a href=\"#sp%C3%A9cification-et-tests\" aria-label=\"spécification et tests permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Spécification et tests</h2>\n<p>Durant la phase de conception d'un programme, on commence par écrire la spécification du programme,\net écrire des jeux de tests pour valider le fonctionnement du programme.</p>\n<p>La spécification décrit les entrées et sorties du programme, ainsi que leurs types, ce que l'on\nappelle en anglais l'API<em>(Application Programming Interface)</em> ou interface de programmation\napplicative en francais(peu courant).</p>\n<p>Les tests vérifient que les sorties du programme sont conformes à ce que l'on attend.</p>\n<div class=\"example\"><p>Voici une fonction avec sa spécification.</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">est_pair</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"Indique si un nombre est pair ou non\n\n    Paramètres\n    ----------\n    n: int\n\n    Returns\n    -------\n    bool\n        True si n est pair, False sinon\n    \"\"\"</span>\n    <span class=\"token keyword\">if</span> n <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div><p>Maintenant un ensemble de tests:</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">assert</span> est_pair<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token boolean\">True</span>\n<span class=\"token keyword\">assert</span> est_pair<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token boolean\">False</span>\n<span class=\"token keyword\">assert</span> est_pair<span class=\"token punctuation\">(</span><span class=\"token number\">1381635162</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token boolean\">True</span>\n<span class=\"token keyword\">assert</span> est_pair<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">3565454165461</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token boolean\">False</span>\n<span class=\"token comment\"># le == True est redondant</span>\n<span class=\"token keyword\">assert</span> est_pair<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># le == False peut être écrit</span>\n<span class=\"token keyword\">assert</span> <span class=\"token keyword\">not</span><span class=\"token punctuation\">(</span>est_pair<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div></div>\n<h2 id=\"documentation\" style=\"position:relative;\"><a href=\"#documentation\" aria-label=\"documentation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Documentation</h2>\n<p>Il est important de bien distinguer commenter et documenter.</p>\n<ul>\n<li>les <em>commentaires</em> sont destinés au programmeur, pour expliquer ce que l'on a fait, pourquoi on\nl'a fait.</li>\n</ul>\n<div class=\"example\"><p>Dans un tri, on pourrait trouver le code suivant.</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># on part du deuxième élément car il est déjà trié</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>tab<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div><p>Le commentaire explique ce que l'on a fait, et évite de revenir en arrière si quelqu'un ne comprend\npas pourquoi on est parti de l'indice 1.</p></div>\n<ul>\n<li>la <em>documentation</em> est destinée aux utilisateurs, elle leur permet d'expliquer comment on utilise\nle programme du point de vue de l'utilisateur et non du programmeur.</li>\n</ul>\n<p>En Python, la documentation se fait par l'écriture de\n<a href=\"https://www.python.org/dev/peps/pep-0257/\">Docstring</a>s.</p>\n<dl class=\"def\" data-terme=\"Docstring\"><dt>Docstring</dt><p>Une docstring est une chaîne de caractère écrite en tant que première instruction dans une\ndéfinition de module, fonction, classe ou méthode. Une telle docstring devient l'attribut spécial\n<code class=\"language-text\">__doc__</code> de cet objet, et pourra être affichée grâce à la fonction <code class=\"language-text\">help()</code>.</p></dl>\n<div class=\"example\"><p>On peut accéder à la Docstring de la fonction <code class=\"language-text\">est_pair</code> écrite précédemment comme ceci.</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token builtin\">help</span><span class=\"token punctuation\">(</span>est_pair<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div><p>Affiche :</p><div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">Help on function est_pair in module __main__:\n\nest_pair(n)\n    Indique si un nombre est pair ou non\n    \n    Paramètres\n    ----------\n    n: int\n    \n    Returns\n    -------\n    bool\n        True si n est pair, False sinon</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div></div>\n<h2 id=\"gestion-des-bugs\" style=\"position:relative;\"><a href=\"#gestion-des-bugs\" aria-label=\"gestion des bugs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gestion des bugs</h2>\n<p>Lors de l'écriture de code Python, vous ferez fréquemment des erreurs, qui vous serons \"gentiment\"\nrappelées par l'interpréteur Python à l'exécution du code.</p>\n<p>Voici les erreurs les plus courantes :</p>\n<ul>\n<li><strong>Erreurs de syntaxe</strong>: <code class=\"language-text\">SyntaxError</code> erreur de parenthèse, <code class=\"language-text\">:</code> manquant avant un bloc\nd'instruction.... ex: <code class=\"language-text\">len([1,2,3))</code></li>\n<li><strong>Erreurs d'indexation</strong>: <code class=\"language-text\">IndexError</code> accés à un index non présent dans une liste. ex:\n<code class=\"language-text\">[12,15,14][14],;</code></li>\n<li><strong>Erreurs de nom</strong>: <code class=\"language-text\">NameError</code> nom de fonction ou de variable mal orthographié. ex:\n<code class=\"language-text\">helpe(est_pair)</code></li>\n<li><strong>Erreurs d'indentation</strong>: <code class=\"language-text\">IndentationError</code> indentation oubliée, ou trop grande.</li>\n<li><strong>Erreurs de type</strong> <code class=\"language-text\">TypeError</code> Opération impossible entre deux types. ex: <code class=\"language-text\">&quot;3&quot; * &quot;5&quot;</code></li>\n</ul>","tableOfContents":"<ul>\n<li><a href=\"#sp%C3%A9cification-et-tests\">Spécification et tests</a></li>\n<li><a href=\"#documentation\">Documentation</a></li>\n<li><a href=\"#gestion-des-bugs\">Gestion des bugs</a></li>\n</ul>","frontmatter":{"tags":["bug","débugage"]},"fields":{"classe":"tg","chapter":"Mise au point des programmes","matter":"nsi","nChapter":"2","part":"Langages et programmation","nPart":"4"}}},"pageContext":{"slug":"tg/nsi/4-langages-et-programmation/2-mise-au-point-des-programmes","chapter":"Mise au point des programmes"}},"staticQueryHashes":["604483588"]}